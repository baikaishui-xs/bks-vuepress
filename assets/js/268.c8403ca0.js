(window.webpackJsonp=window.webpackJsonp||[]).push([[268],{831:function(n,t,e){"use strict";e.r(t);var s=e(15),a=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("作用：解决回调地狱")]),n._v(" "),e("p",[n._v("原理：将基于 回调函数 的 API 改造成基于 Promise 的APi")]),n._v(" "),e("p",[n._v("方案一：手动封装\n使用步骤：\n（1）封装请求方法（-- request/新建 index.js）\nexport const request = (params) => {\nreturn new Promise((resolve, reject) => {\nwx.request({\n...params,\nsuccess: (result) => {\nresolve(result);\n},\nfail: (err) => {\nreject(err);\n}\n})\n})\n}")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("（2）引入封装的请求方法（-- 页面.js）\n  import { request } from \"../../request/index.js\";\n\n（3）定义 data 数据\n  swiperList: []\n\n（4）定义请求方法（-- 页面.js）\n  // 获取轮播图数据\n  getSwiperList() {\n    request({\n      url: 'https://api.it120.cc/zcr/banner/list',\n    }).then(res => {\n      this.setData({\n        swiperList: res.data.data.slice(3, 6),\n      })\n    })\n  }\n\n（5）调用请求方法\n  onLoad: function () {\n    this.getSwiperList()\n  }\n")])])]),e("p",[n._v("场景：第一次请求回来时，再发送第二次请求，第二次请求回来时，再发送第三次请求")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("封装前：\n  // 第一次请求\n  wx.request({\n      url: '',\n      success: (res) => {\n        this.setData({\n          swiperList: res.data.message\n        })\n\n        // 第二次请求\n        wx.request({\n          url: '',\n          success: (res) => {\n            this.setData({\n              swiperList: res.data.message\n            })\n\n            // 第三次请求\n            wx.request({\n              url: '',\n              success: (res) => {\n                this.setData({\n                  swiperList: res.data.message\n                })\n              }\n            })\n          }\n        })\n      }\n    })\n\n封装后：\n  onLoad: function () {\n    request({\n      url: 'https://api.it120.cc/zcr/banner/list',\n    }).then(res => {\n      this.setData({\n        swiperList: res.data.data.slice(3, 6),\n      })\n    })\n  }\n\n  说明：如果要等请求回来时，再去调用请求，在后面加 .then 即可\n")])])]),e("p",[n._v("方案二：@escook/request-miniprogram（第三方包)（推荐）\n文档：https://www.npmjs.com/package/@escook/request-miniprogram")]),n._v(" "),e("p",[n._v("下载：npm i @escook/request-miniprogram")]),n._v(" "),e("p",[n._v("使用步骤（-- main.js）：\n（1）导入\n// 封装请求\nimport { $http } from '@escook/request-miniprogram'")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("（2）挂载\n  原生微信小程序 的顶级对象是 wx\n    wx.$http = $http\n\n  uni-app 的顶级对象是 uni\n    uni.$http = $http\n\n（3）配置请求根路径\n  $http.baseUrl = 'https://www.example.com'\n\n（4）发送请求\n  data：参数对象\n\n  // 发起 GET 请求\n  $http.get(url, 【data】)\n  \n  // 发起 POST 请求\n  $http.post(url, 【data】)\n  \n  // 发起 PUT 请求\n  $http.put(url, 【data】)\n  \n  // 发起 DELETE 请求\n  $http.delete(url, 【data】)\n\n  例：\n    async getSwiperList () {\n      // 发送请求\n      const { data: res } = await uni.$http.get('/api/public/v1/home/swiperdata')\n\n      // 请求失败\n      if (res.meta.status !== 200) {\n        return uni.showToast({\n          title: '数据请求失败！',\n          duration: 1500,\n          icon: 'none'\n        })\n      }\n\n      // 请求成功\n      this.swiperList = res.message\n    }\n\n（5）设置 请求拦截器（请求开始之前做一些事情）\n  // 请求拦截器      \n  $http.beforeRequest = function (options) {\n    // 展示 loading 效果\n    uni.showLoading({\n      title: '数据加载中...'\n    })\n  }\n\n（6）设置 响应拦截器（请求完成之后做一些事情）\n  // 响应拦截器\n  $http.afterRequest = function () {\n    // 隐藏 loading 效果\n    uni.hideLoading()\n  }\n")])])]),e("p",[n._v("封装 uni.showToast\n作用：简化请求失败处理逻辑")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("（1）封装（-- main.js）\n  // 封装 uni.showToast。作用：简化请求失败处理逻辑\n  uni.$showMsg = function(title = '数据请求失败！', duration = 1500) {\n    uni.showToast({\n      title,\n      duration,\n      icon:'none'\n    })\n  }\n\n（2）使用\n  // 请求失败\n  if (res.meta.status !== 200) return uni.$showMsg()\n\n  // 请求成功\n  uni.$showMsg('数据请求成功！')\n")])])]),e("p",[n._v("其它：\n// 自定义 header 请求头\n$http.beforeRequest = function (options) {\nif (options.url.indexOf('/home/catitems) !== -1) {\noptions.header = {\n'X-Test': 'AAA'\n}\n}\n}")])])}),[],!1,null,null,null);t.default=a.exports}}]);