(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var a,o,s=e[0],l=e[1],c=e[2],u=0,p=[];u<s.length;u++)o=s[u],Object.prototype.hasOwnProperty.call(r,o)&&r[o]&&p.push(r[o][0]),r[o]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(n[a]=l[a]);for(d&&d(e);p.length;)p.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],a=!0,s=1;s<t.length;s++){var l=t[s];0!==r[l]&&(a=!1)}a&&(i.splice(e--,1),n=o(o.s=t[0]))}return n}var a={},r={1:0},i=[];function o(e){if(a[e])return a[e].exports;var t=a[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(n){var e=[],t=r[n];if(0!==t)if(t)e.push(t[2]);else{var a=new Promise((function(e,a){t=r[n]=[e,a]}));e.push(t[2]=a);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(n){return o.p+"assets/js/"+({}[n]||n)+"."+{2:"d3972719",3:"c2fecf68",4:"d4da6dc4",5:"3097d31b",6:"315e98e4",7:"2c6db421",8:"d9d33576",9:"74b2369e",10:"d287b728",11:"79c729a9",12:"9ba8acfb",13:"02c595bd",14:"c3985615",15:"8db5c1d8",16:"019f4875",17:"fbd2198a",18:"9db7a263",19:"f694d8ed",20:"058deea4",21:"09611795",22:"902356a4",23:"8921f211",24:"c0d51fac",25:"055e5cf5",26:"cf5b1ef4",27:"d544d0ee",28:"a26f8a47",29:"3cffaf1f",30:"e1188d67",31:"5872c31a",32:"d7119f84",33:"6a386f82",34:"af2225ba",35:"438d7033",36:"abffc588",37:"e6852ad1",38:"f91154cf",39:"16d3de94",40:"1e43a36f",41:"acf1aff2",42:"90f69274",43:"87675fae",44:"4b6b32b6",45:"fdf07b49",46:"b929cd73",47:"4d12dc07",48:"f19f26ac",49:"edeaeca8",50:"180781a5",51:"dce405a3",52:"e65a0d0e",53:"0f6a7e1f",54:"c017550e",55:"b47c108c",56:"dde7b6da",57:"ef199d02",58:"b6df5024",59:"67759256",60:"b1ed07ac",61:"b86605b8",62:"bf6134d5",63:"52a3604a",64:"f9bfc447",65:"513e42a7",66:"1743b3dc",67:"f7ba0077",68:"fa415aec",69:"6c84a959",70:"46ec30a6",71:"65609f06",72:"a2569c11",73:"611e7f3b",74:"1841ff93",75:"42715f29",76:"f25506a4",77:"d4634c12",78:"bd5163d9",79:"ca756487",80:"fb6efcd9",81:"64542382",82:"d6ed4c87",83:"5d03bcd1",84:"889c1550",85:"7872a1d8",86:"d3dc8a50",87:"3a4305db",88:"21f495ef",89:"b1605b0c",90:"48907c9d",91:"fa975130",92:"ded1c733",93:"37081eca",94:"faf372c8",95:"b43be458",96:"60583b04",97:"70e67945",98:"3c5bb8b5",99:"e6bf332b",100:"1ef3c0e4",101:"995c7f72",102:"30b812f5",103:"b7f2f369",104:"ecfcce01",105:"2ece17ea",106:"57c91f03",107:"5a14bd12",108:"71c04631",109:"699d2f80",110:"428c4808",111:"43f2fe2b",112:"1901032c",113:"879284dd",114:"e8d96a1a",115:"70ce9cce",116:"a9cc1afd",117:"8387b06f",118:"0cfe4778",119:"b694b9e9",120:"2b51d233",121:"073c4a28",122:"e9bc029c",123:"e1a70765",124:"7354761c",125:"99125fec",126:"393efd90",127:"0d9ec7f1",128:"98882459",129:"72a2c8de",130:"c3df3b5f",131:"4954926a",132:"1457ea15",133:"31543b71",134:"522a8040",135:"c52d0248",136:"e6738344",137:"01ef5817",138:"fddb9981",139:"3c98ae67",140:"2da2f8fd",141:"a88a1a38",142:"b93cb547",143:"8b687c56",144:"4872fa16",145:"2dd41b59",146:"93b97fdd",147:"c28b8f08",148:"4d19ad37",149:"58cb00fe",150:"cad8f14e",151:"1f207a40",152:"95ab0237",153:"e78defb3",154:"25b190e7",155:"eae06e8b",156:"e41a26aa",157:"85830ae6",158:"5eff73f2",159:"085ed0a9",160:"fb17bd11",161:"7216b59a",162:"a3096f7e",163:"f0acffb4",164:"60847420",165:"c260a5c0",166:"8660ca21",167:"3979acef",168:"46875a8f",169:"d4c18a73",170:"2fab3d49",171:"6b1e4e8a",172:"cdbcfc11",173:"29eec93a",174:"d4e4e75a",175:"7834ccce",176:"7c9c30ee",177:"4396f20b",178:"d670a49c",179:"a86a0d08",180:"022cab7b",181:"418a66cf",182:"f4db2879",183:"eecd6d1f",184:"bfc86043",185:"89abbac1",186:"e4407f9f",187:"a39496da",188:"57a597bb",189:"68f333ff",190:"4a856f73",191:"18e95f9b",192:"b41c86bd",193:"da3228dd",194:"8dfad49f",195:"32d0694c",196:"a63a5c8c",197:"e2e8659f",198:"dab7cb1a",199:"64de7d9c",200:"8e492cd9",201:"5cfa900b",202:"64ad020e",203:"5be980a1",204:"16df4802",205:"c7cfd99f",206:"90d10ab4",207:"c4857867",208:"9ea11687",209:"22b11736",210:"1e3905f9",211:"c3b263f6",212:"c91e9ae8",213:"97a90858",214:"21dfe278",215:"a733bf10",216:"10680dc8",217:"20fbaf28",218:"36376286",219:"93b462c7",220:"a5b27e24",221:"fa11730e",222:"2f6ce2af",223:"cf43bb84",224:"7f1c60aa",225:"9815f954",226:"09ea59ab",227:"35ab287b",228:"eb98a501",229:"c9fb912a",230:"c9a61dec",231:"266f7336",232:"df1cdc92",233:"a83a7c86",234:"a70ff981",235:"e11af191",236:"7ac93395",237:"ac31dfee",238:"5e4fb069",239:"96f9c03f",240:"592e9b34",241:"cda23459",242:"2de3e141",243:"867a845f",244:"ddb37122",245:"275ee07a",246:"7c7a758e",247:"f26f9315",248:"583e573f",249:"22d4b939",250:"ce61c38c",251:"a3119346",252:"85cedad6",253:"4e3eff12",254:"11f4e3f1",255:"cf9ed48f",256:"53f2d2ce",257:"37aeadfe",258:"021e03b8",259:"96fb882b",260:"1c0a8e22",261:"4a6be50e",262:"41553746",263:"99559e5f",264:"4d961a9e",265:"bbd56b6d",266:"79a6de63",267:"e163f819",268:"c8403ca0",269:"e3b1bbb1",270:"37b0c880",271:"25dbf8ee",272:"fd3f417d",273:"477ab814",274:"5a9cb76c",275:"f812b253",276:"8cd1083f",277:"49aa6ff5",278:"b5ae0aa5",279:"3412f739",280:"2318a7ee",281:"eea65530",282:"b2491c20",283:"a98681f8",284:"08811fec",285:"f4f2a2e1",286:"95db1eac",287:"c03031a5",288:"e78ce82e",289:"b99d2001",290:"60757deb",291:"c6342c54",292:"a5e8f048",293:"621d6c78",294:"d452c7ec",295:"79dbf54e",296:"6bd5f58b",297:"c3efde12",298:"f512b1d2",299:"701850f6",300:"d8d7d10a",301:"397982e4",302:"a649a223",303:"bb814881",304:"4b186eec",305:"d88d1367",306:"93b452bc",307:"8d837b64",308:"3c87db11",309:"871d28a0",310:"80e1468f",311:"82acd3cc",312:"766d95d0",313:"98baf80c",314:"056e4493",315:"2f8ee34c",316:"716424ad",317:"35a60c1b",318:"2f684941",319:"552f4832",320:"2b722f7f",321:"e0bce704",322:"998e02a9",323:"e5dcd2da",324:"92a1c69f",325:"a5e02579",326:"ee556cf5",327:"02f04f60",328:"d4dae1cc",329:"3ceaefd6",330:"d0885c63",331:"3d271b57",332:"2e9349fd",333:"3b551e91",334:"5f7e7058",335:"ef12bad6",336:"f2fdaa48",337:"73110ee8",338:"fcffeb96",339:"94790d5d",340:"ccec686f",341:"7ee71db6",342:"bf585926",343:"24da5831",344:"49c3618b",345:"ee53cf93",346:"4d8c3aba",347:"93541eaa",348:"75fbc7b3",349:"7780f76d",350:"24d56c7e",351:"99926015",352:"31487a56",353:"3b969ec6",354:"059a1388",355:"9ed83409",356:"cd96fc4c",357:"0bd960c0",358:"c0a27959",359:"631ec32f",360:"cd1633ab",361:"6c845304",362:"3130fbe1",363:"697c184b",364:"b6b96c22",365:"6c4103ef",366:"02012c9a",367:"cddf2949",368:"86ae7917",369:"4ccca47b",370:"bf320489",371:"1b466e7e",372:"f3419aba",373:"fdc19c7b",374:"c4c29f2e",375:"829ce23f",376:"e13afd1d",377:"a018c617",378:"21a04910",379:"95998c4a",380:"b515ae6b",381:"feb5c48d",382:"fa3236b3",383:"91903397",384:"e9c9f1f7",385:"21b15ceb",386:"094f8ad8",387:"ab0cc9f7",388:"f5e01ca8",389:"9021f995",390:"7ac82243"}[n]+".js"}(n);var l=new Error;i=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=r[n];if(0!==t){if(t){var a=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+a+": "+i+")",l.name="ChunkLoadError",l.type=a,l.request=i,t[1](l)}r[n]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(e)},o.m=n,o.c=a,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)o.d(t,a,function(e){return n[e]}.bind(null,a));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/bks-vuepress/",o.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var d=l;i.push([254,0]),t()}([function(n,e,t){var a=t(3),r=t(40).f,i=t(34),o=t(16),s=t(122),l=t(126),c=t(113);n.exports=function(n,e){var t,d,u,p,h,m=n.target,g=n.global,f=n.stat;if(t=g?a:f?a[m]||s(m,{}):(a[m]||{}).prototype)for(d in e){if(p=e[d],u=n.dontCallGetSet?(h=r(t,d))&&h.value:t[d],!c(g?d:m+(f?".":"#")+d,n.forced)&&void 0!==u){if(typeof p==typeof u)continue;l(p,u)}(n.sham||u&&u.sham)&&i(p,"sham",!0),o(t,d,p,n)}}},function(n,e,t){var a=t(70),r=Function.prototype,i=r.bind,o=r.call,s=a&&i.bind(o,o);n.exports=a?function(n){return n&&s(n)}:function(n){return n&&function(){return o.apply(n,arguments)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){n.exports=function(n){return"function"==typeof n}},function(n,e,t){var a=t(3),r=t(53),i=t(9),o=t(89),s=t(54),l=t(160),c=r("wks"),d=a.Symbol,u=d&&d.for,p=l?d:d&&d.withoutSetter||o;n.exports=function(n){if(!i(c,n)||!s&&"string"!=typeof c[n]){var e="Symbol."+n;s&&i(d,n)?c[n]=d[n]:c[n]=l&&u?u(e):p(e)}return c[n]}},function(n,e,t){var a=t(129),r=t(16),i=t(282);a||r(Object.prototype,"toString",i,{unsafe:!0})},function(n,e,t){var a=t(70),r=Function.prototype.call;n.exports=a?r.bind(r):function(){return r.apply(r,arguments)}},function(n,e,t){var a=t(2);n.exports=!a((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){var a=t(1),r=t(17),i=a({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return i(r(n),e)}},function(n,e,t){var a=t(11),r=String,i=TypeError;n.exports=function(n){if(a(n))return n;throw i(r(n)+" is not an object")}},function(n,e,t){var a=t(4);n.exports=function(n){return"object"==typeof n?null!==n:a(n)}},function(n,e,t){var a=t(8),r=t(162),i=t(161),o=t(10),s=t(91),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;e.f=a?i?function(n,e,t){if(o(n),e=s(e),o(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var a=d(n,e);a&&a.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:a.configurable,enumerable:"enumerable"in t?t.enumerable:a.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(o(n),e=s(e),o(t),r)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var a=t(87),r=String;n.exports=function(n){if("Symbol"===a(n))throw TypeError("Cannot convert a Symbol value to a string");return r(n)}},function(n,e,t){var a=t(3),r=t(4),i=function(n){return r(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?i(a[n]):a[n]&&a[n][e]}},function(n,e,t){"use strict";function a(n,e,t,a,r,i,o,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),a&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),r&&r.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},c._ssrRegister=l):r&&(l=s?function(){r.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:r),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(n,e){return l.call(e),d(n,e)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return a}))},function(n,e,t){var a=t(4),r=t(12),i=t(167),o=t(122);n.exports=function(n,e,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:e;if(a(t)&&i(t,c,s),s.global)l?n[e]=t:o(e,t);else{try{s.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:r.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e,t){var a=t(20),r=Object;n.exports=function(n){return r(a(n))}},function(n,e){n.exports=!1},function(n,e,t){"use strict";var a=t(0),r=t(101);a({target:"RegExp",proto:!0,forced:/./.exec!==r},{exec:r})},function(n,e){var t=TypeError;n.exports=function(n){if(null==n)throw t("Can't call method on "+n);return n}},function(n,e,t){"use strict";var a=t(183).charAt,r=t(13),i=t(39),o=t(166),s=i.set,l=i.getterFor("String Iterator");o(String,"String",(function(n){s(this,{type:"String Iterator",string:r(n),index:0})}),(function(){var n,e=l(this),t=e.string,r=e.index;return r>=t.length?{value:void 0,done:!0}:(n=a(t,r),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){var a=t(16),r=t(287),i=Error.prototype;i.toString!==r&&a(i,"toString",r)},function(n,e,t){var a=t(67),r=t(20);n.exports=function(n){return a(r(n))}},function(n,e,t){var a=t(4),r=t(56),i=TypeError;n.exports=function(n){if(a(n))return n;throw i(r(n)+" is not a function")}},function(n,e,t){var a=t(57);n.exports=function(n){return a(n.length)}},function(n,e,t){"use strict";var a=t(0),r=t(50).filter;a({target:"Array",proto:!0,forced:!t(99)("filter")},{filter:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var a=t(3),r=t(184),i=t(185),o=t(148),s=t(34),l=t(5),c=l("iterator"),d=l("toStringTag"),u=o.values,p=function(n,e){if(n){if(n[c]!==u)try{s(n,c,u)}catch(e){n[c]=u}if(n[d]||s(n,d,e),r[e])for(var t in o)if(n[t]!==o[t])try{s(n,t,o[t])}catch(e){n[t]=o[t]}}};for(var h in r)p(a[h]&&a[h].prototype,h);p(i,"DOMTokenList")},function(n,e,t){var a=t(1),r=a({}.toString),i=a("".slice);n.exports=function(n){return i(r(n),8,-1)}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var a=t(14);n.exports=a("navigator","userAgent")||""},function(n,e,t){var a=t(193),r="object"==typeof self&&self&&self.Object===Object&&self,i=a||r||Function("return this")();n.exports=i},function(n,e,t){var a,r=t(10),i=t(149),o=t(124),s=t(72),l=t(165),c=t(90),d=t(93),u=d("IE_PROTO"),p=function(){},h=function(n){return"<script>"+n+"<\/script>"},m=function(n){n.write(h("")),n.close();var e=n.parentWindow.Object;return n=null,e},g=function(){try{a=new ActiveXObject("htmlfile")}catch(n){}var n,e;g="undefined"!=typeof document?document.domain&&a?m(a):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(h("document.F=Object")),n.close(),n.F):m(a);for(var t=o.length;t--;)delete g.prototype[o[t]];return g()};s[u]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(p.prototype=r(n),t=new p,p.prototype=null,t[u]=n):t=g(),void 0===e?t:i.f(t,e)}},function(n,e,t){var a=t(1);n.exports=a({}.isPrototypeOf)},function(n,e,t){var a=t(8),r=t(12),i=t(49);n.exports=a?function(n,e,t){return r.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var a=t(12).f,r=t(9),i=t(5)("toStringTag");n.exports=function(n,e,t){n&&!t&&(n=n.prototype),n&&!r(n,i)&&a(n,i,{configurable:!0,value:e})}},function(n,e,t){var a=t(0),r=t(3),i=t(41),o=t(283),s=r.WebAssembly,l=7!==Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=o(n,e,l),a({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(n,e){if(s&&s[n]){var t={};t[n]=o("WebAssembly."+n,e,l),a({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return i(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return i(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return i(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return i(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return i(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return i(n,this,arguments)}})),c("URIError",(function(n){return function(e){return i(n,this,arguments)}})),d("CompileError",(function(n){return function(e){return i(n,this,arguments)}})),d("LinkError",(function(n){return function(e){return i(n,this,arguments)}})),d("RuntimeError",(function(n){return function(e){return i(n,this,arguments)}}))},function(n,e,t){"use strict";var a=t(0),r=t(187);a({target:"Array",proto:!0,forced:[].forEach!=r},{forEach:r})},function(n,e,t){var a=t(3),r=t(184),i=t(185),o=t(187),s=t(34),l=function(n){if(n&&n.forEach!==o)try{s(n,"forEach",o)}catch(e){n.forEach=o}};for(var c in r)r[c]&&l(a[c]&&a[c].prototype);l(i)},function(n,e,t){var a,r,i,o=t(257),s=t(3),l=t(1),c=t(11),d=t(34),u=t(9),p=t(121),h=t(93),m=t(72),g=s.TypeError,f=s.WeakMap;if(o||p.state){var v=p.state||(p.state=new f),b=l(v.get),E=l(v.has),x=l(v.set);a=function(n,e){if(E(v,n))throw new g("Object already initialized");return e.facade=n,x(v,n,e),e},r=function(n){return b(v,n)||{}},i=function(n){return E(v,n)}}else{var y=h("state");m[y]=!0,a=function(n,e){if(u(n,y))throw new g("Object already initialized");return e.facade=n,d(n,y,e),e},r=function(n){return u(n,y)?n[y]:{}},i=function(n){return u(n,y)}}n.exports={set:a,get:r,has:i,enforce:function(n){return i(n)?r(n):a(n,{})},getterFor:function(n){return function(e){var t;if(!c(e)||(t=r(e)).type!==n)throw g("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var a=t(8),r=t(7),i=t(125),o=t(49),s=t(23),l=t(91),c=t(9),d=t(162),u=Object.getOwnPropertyDescriptor;e.f=a?u:function(n,e){if(n=s(n),e=l(e),d)try{return u(n,e)}catch(n){}if(c(n,e))return o(!r(i.f,n,e),n[e])}},function(n,e,t){var a=t(70),r=Function.prototype,i=r.apply,o=r.call;n.exports="object"==typeof Reflect&&Reflect.apply||(a?o.bind(i):function(){return o.apply(i,arguments)})},function(n,e,t){var a=t(316),r=t(319);n.exports=function(n,e){var t=r(n,e);return a(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return a})),t.d(e,"b",(function(){return i})),t.d(e,"j",(function(){return o})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return d})),t.d(e,"c",(function(){return u})),t.d(e,"f",(function(){return p})),t.d(e,"l",(function(){return h})),t.d(e,"m",(function(){return m})),t.d(e,"d",(function(){return f})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return x}));t(19),t(45),t(231),t(84),t(109),t(156),t(44),t(37),t(6),t(38),t(26),t(88),t(145),t(83),t(82),t(159),t(22),t(147);var a=/#.*$/,r=/\.(md|html)$/,i=/\/$/,o=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(a,"").replace(r,"")}function l(n){return o.test(n)}function c(n){return/^mailto:/.test(n)}function d(n){return/^tel:/.test(n)}function u(n){if(l(n))return n;if(!n)return"404";var e=n.match(a),t=e?e[0]:"",r=s(n);return i.test(r)?n:r+".html"+t}function p(n,e){var t=n.hash,r=function(n){var e=n&&n.match(a);if(e)return e[0]}(e);return(!r||t===r)&&s(n.path)===s(e)}function h(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){var a=n.charAt(0);if("/"===a)return n;if("?"===a||"#"===a)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var i=n.replace(/^\//,"").split("/"),o=0;o<i.length;o++){var s=i[o];".."===s?r.pop():"."!==s&&r.push(s)}""!==r[0]&&r.unshift("");return r.join("/")}(e,t));for(var a=s(e),r=0;r<n.length;r++)if(s(n[r].regularPath)===a)return Object.assign({},n[r],{type:"page",path:u(n[r].path)});return console.error('[vuepress] No matching page found for sidebar item "'.concat(e,'"')),{}}function m(n,e,t,a){var r=t.pages,i=t.themeConfig,o=a&&i.locales&&i.locales[a]||i;if("auto"===(n.frontmatter.sidebar||o.sidebar||i.sidebar))return g(n);var s=o.sidebar||i.sidebar;if(s){var l=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(var t in e)if(0===(a=n,/(\.html|\/)$/.test(a)?a:a+"/").indexOf(encodeURI(t)))return{base:t,config:e[t]};var a;return{}}(e,s),c=l.base,d=l.config;return"auto"===d?g(n):d?d.map((function(n){return function n(e,t,a){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if("string"==typeof e)return h(t,e,a);if(Array.isArray(e))return Object.assign(h(t,e[0],a),{title:e[1]});r>3&&console.error("[vuepress] detected a too deep nested sidebar group.");var i=e.children||[];return 0===i.length&&e.path?Object.assign(h(t,e.path,a),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:i.map((function(e){return n(e,t,a,r+1)})),collapsable:!1!==e.collapsable}}(n,r,c)})):[]}return[]}function g(n){var e=f(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map((function(e){return{type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}}))}]}function f(n){var e;return(n=n.map((function(n){return Object.assign({},n)}))).forEach((function(n){2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)})),n.filter((function(n){return 2===n.level}))}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function E(n){var e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function x(n,e){return E(e)-E(n)}},function(n,e,t){"use strict";var a=t(0),r=t(50).map;a({target:"Array",proto:!0,forced:!t(99)("map")},{map:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var a=t(41),r=t(7),i=t(1),o=t(119),s=t(2),l=t(10),c=t(4),d=t(65),u=t(57),p=t(13),h=t(20),m=t(133),g=t(48),f=t(297),v=t(120),b=t(5)("replace"),E=Math.max,x=Math.min,y=i([].concat),w=i([].push),k=i("".indexOf),A=i("".slice),S="$0"==="a".replace(/./,"$0"),B=!!/./[b]&&""===/./[b]("a","$0");o("replace",(function(n,e,t){var i=B?"$":"$0";return[function(n,t){var a=h(this),i=null==n?void 0:g(n,b);return i?r(i,n,a,t):r(e,p(a),n,t)},function(n,r){var o=l(this),s=p(n);if("string"==typeof r&&-1===k(r,i)&&-1===k(r,"$<")){var h=t(e,o,s,r);if(h.done)return h.value}var g=c(r);g||(r=p(r));var b=o.global;if(b){var S=o.unicode;o.lastIndex=0}for(var B=[];;){var T=v(o,s);if(null===T)break;if(w(B,T),!b)break;""===p(T[0])&&(o.lastIndex=m(s,u(o.lastIndex),S))}for(var C,j="",z=0,P=0;P<B.length;P++){for(var I=p((T=B[P])[0]),F=E(x(d(T.index),s.length),0),D=[],_=1;_<T.length;_++)w(D,void 0===(C=T[_])?C:String(C));var $=T.groups;if(g){var L=y([I],D,F,s);void 0!==$&&w(L,$);var U=p(a(r,void 0,L))}else U=f(I,s,F,D,$,r);F>=z&&(j+=A(s,z,F)+U,z=F+I.length)}return j+A(s,z)}]}),!!s((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")}))||!S||B)},function(n,e,t){"use strict";var a=t(2);n.exports=function(n,e){var t=[][n];return!!t&&a((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){var a=t(8),r=t(86).EXISTS,i=t(1),o=t(12).f,s=Function.prototype,l=i(s.toString),c=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,d=i(c.exec);a&&!r&&o(s,"name",{configurable:!0,get:function(){try{return d(c,l(this))[1]}catch(n){return""}}})},function(n,e,t){var a=t(24);n.exports=function(n,e){var t=n[e];return null==t?void 0:a(t)}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var a=t(63),r=t(1),i=t(67),o=t(17),s=t(25),l=t(152),c=r([].push),d=function(n){var e=1==n,t=2==n,r=3==n,d=4==n,u=6==n,p=7==n,h=5==n||u;return function(m,g,f,v){for(var b,E,x=o(m),y=i(x),w=a(g,f),k=s(y),A=0,S=v||l,B=e?S(m,k):t||p?S(m,0):void 0;k>A;A++)if((h||A in y)&&(E=w(b=y[A],A,x),n))if(e)B[A]=E;else if(E)switch(n){case 3:return!0;case 5:return b;case 6:return A;case 2:c(B,b)}else switch(n){case 4:return!1;case 7:c(B,b)}return u?-1:r||d?d:B}};n.exports={forEach:d(0),map:d(1),filter:d(2),some:d(3),every:d(4),find:d(5),findIndex:d(6),filterReject:d(7)}},function(n,e,t){var a=t(28);n.exports=Array.isArray||function(n){return"Array"==a(n)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){var a=t(18),r=t(121);(n.exports=function(n,e){return r[n]||(r[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.23.3",mode:a?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.23.3/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){var a=t(55),r=t(2);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&a&&a<41}))},function(n,e,t){var a,r,i=t(3),o=t(30),s=i.process,l=i.Deno,c=s&&s.versions||l&&l.version,d=c&&c.v8;d&&(r=(a=d.split("."))[0]>0&&a[0]<4?1:+(a[0]+a[1])),!r&&o&&(!(a=o.match(/Edge\/(\d+)/))||a[1]>=74)&&(a=o.match(/Chrome\/(\d+)/))&&(r=+a[1]),n.exports=r},function(n,e){var t=String;n.exports=function(n){try{return t(n)}catch(n){return"Object"}}},function(n,e,t){var a=t(65),r=Math.min;n.exports=function(n){return n>0?r(a(n),9007199254740991):0}},function(n,e,t){var a=t(3);n.exports=a.Promise},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(64),t(66),t(6),t(85),t(21),t(27),t(238),t(239),t(240),t(241),t(111),t(115),t(36),t(22),t(116),t(37),t(38),t(47),t(117),t(232),t(62);var a=t(60);function r(){
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
r=function(){return n};var n={},e=Object.prototype,t=e.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function c(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{c({},"")}catch(n){c=function(n,e,t){return n[e]=t}}function d(n,e,t,a){var r=e&&e.prototype instanceof h?e:h,i=Object.create(r.prototype),o=new S(a||[]);return i._invoke=function(n,e,t){var a="suspendedStart";return function(r,i){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===r)throw i;return T()}for(t.method=r,t.arg=i;;){var o=t.delegate;if(o){var s=w(o,t);if(s){if(s===p)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===a)throw a="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);a="executing";var l=u(n,e,t);if("normal"===l.type){if(a=t.done?"completed":"suspendedYield",l.arg===p)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(a="completed",t.method="throw",t.arg=l.arg)}}}(n,t,o),i}function u(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=d;var p={};function h(){}function m(){}function g(){}var f={};c(f,o,(function(){return this}));var v=Object.getPrototypeOf,b=v&&v(v(B([])));b&&b!==e&&t.call(b,o)&&(f=b);var E=g.prototype=h.prototype=Object.create(f);function x(n){["next","throw","return"].forEach((function(e){c(n,e,(function(n){return this._invoke(e,n)}))}))}function y(n,e){var r;this._invoke=function(i,o){function s(){return new e((function(r,s){!function r(i,o,s,l){var c=u(n[i],n,o);if("throw"!==c.type){var d=c.arg,p=d.value;return p&&"object"==Object(a.a)(p)&&t.call(p,"__await")?e.resolve(p.__await).then((function(n){r("next",n,s,l)}),(function(n){r("throw",n,s,l)})):e.resolve(p).then((function(n){d.value=n,s(d)}),(function(n){return r("throw",n,s,l)}))}l(c.arg)}(i,o,r,s)}))}return r=r?r.then(s,s):s()}}function w(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,w(n,e),"throw"===e.method))return p;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var a=u(t,n.iterator,e.arg);if("throw"===a.type)return e.method="throw",e.arg=a.arg,e.delegate=null,p;var r=a.arg;return r?r.done?(e[n.resultName]=r.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,p):r:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,p)}function k(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function A(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function S(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(k,this),this.reset(!0)}function B(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var a=-1,r=function e(){for(;++a<n.length;)if(t.call(n,a))return e.value=n[a],e.done=!1,e;return e.value=void 0,e.done=!0,e};return r.next=r}}return{next:T}}function T(){return{value:void 0,done:!0}}return m.prototype=g,c(E,"constructor",g),c(g,"constructor",m),m.displayName=c(g,l,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===m||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,g):(n.__proto__=g,c(n,l,"GeneratorFunction")),n.prototype=Object.create(E),n},n.awrap=function(n){return{__await:n}},x(y.prototype),c(y.prototype,s,(function(){return this})),n.AsyncIterator=y,n.async=function(e,t,a,r,i){void 0===i&&(i=Promise);var o=new y(d(e,t,a,r),i);return n.isGeneratorFunction(t)?o:o.next().then((function(n){return n.done?n.value:o.next()}))},x(E),c(E,l,"Generator"),c(E,o,(function(){return this})),c(E,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var a=e.pop();if(a in n)return t.value=a,t.done=!1,t}return t.done=!0,t}},n.values=B,S.prototype={constructor:S,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(A),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function a(t,a){return o.type="throw",o.arg=n,e.next=t,a&&(e.method="next",e.arg=void 0),!!a}for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],o=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var s=t.call(i,"catchLoc"),l=t.call(i,"finallyLoc");if(s&&l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(n,e){for(var a=this.tryEntries.length-1;a>=0;--a){var r=this.tryEntries[a];if(r.tryLoc<=this.prev&&t.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=n,o.arg=e,i?(this.method="next",this.next=i.finallyLoc,p):this.complete(o)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),p},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),A(t),p}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var a=t.completion;if("throw"===a.type){var r=a.arg;A(t)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:B(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),p}},n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(64),t(66),t(6),t(85),t(21),t(27);function a(n){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}},function(n,e,t){t(392),t(393)},function(n,e,t){"use strict";var a=t(0),r=t(51),i=t(97),o=t(11),s=t(112),l=t(25),c=t(23),d=t(78),u=t(5),p=t(99),h=t(75),m=p("slice"),g=u("species"),f=Array,v=Math.max;a({target:"Array",proto:!0,forced:!m},{slice:function(n,e){var t,a,u,p=c(this),m=l(p),b=s(n,m),E=s(void 0===e?m:e,m);if(r(p)&&(t=p.constructor,(i(t)&&(t===f||r(t.prototype))||o(t)&&null===(t=t[g]))&&(t=void 0),t===f||void 0===t))return h(p,b,E);for(a=new(void 0===t?f:t)(v(E-b,0)),u=0;b<E;b++,u++)b in p&&d(a,u,p[b]);return a.length=u,a}})},function(n,e,t){var a=t(1),r=t(24),i=t(70),o=a(a.bind);n.exports=function(n,e){return r(n),void 0===e?n:i?o(n,e):function(){return n.apply(e,arguments)}}},function(n,e,t){t(275),t(279),t(280),t(132),t(281)},function(n,e,t){var a=t(256);n.exports=function(n){var e=+n;return e!=e||0===e?0:a(e)}},function(n,e,t){"use strict";var a=t(0),r=t(8),i=t(3),o=t(1),s=t(9),l=t(4),c=t(33),d=t(13),u=t(12).f,p=t(126),h=i.Symbol,m=h&&h.prototype;if(r&&l(h)&&(!("description"in m)||void 0!==h().description)){var g={},f=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:d(arguments[0]),e=c(m,this)?new h(n):void 0===n?h():h(n);return""===n&&(g[e]=!0),e};p(f,h),f.prototype=m,m.constructor=f;var v="Symbol(test)"==String(h("test")),b=o(m.toString),E=o(m.valueOf),x=/^Symbol\((.*)\)[^)]+$/,y=o("".replace),w=o("".slice);u(m,"description",{configurable:!0,get:function(){var n=E(this),e=b(n);if(s(g,n))return"";var t=v?w(e,7,-1):y(e,x,"$1");return""===t?void 0:t}}),a({global:!0,constructor:!0,forced:!0},{Symbol:f})}},function(n,e,t){var a=t(1),r=t(2),i=t(28),o=Object,s=a("".split);n.exports=r((function(){return!o("z").propertyIsEnumerable(0)}))?function(n){return"String"==i(n)?s(n,""):o(n)}:o},function(n,e,t){var a=t(164),r=t(124).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return a(n,r)}},function(n,e,t){var a=t(79),r=t(301),i=t(302),o=a?a.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":o&&o in Object(n)?r(n):i(n)}},function(n,e,t){var a=t(2);n.exports=!a((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){var a=t(14),r=t(4),i=t(33),o=t(160),s=Object;n.exports=o?function(n){return"symbol"==typeof n}:function(n){var e=a("Symbol");return r(e)&&i(e.prototype,s(n))}},function(n,e){n.exports={}},function(n,e){n.exports={}},function(n,e,t){var a=t(1),r=t(10),i=t(258);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=a(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return r(t),i(a),e?n(t,a):t.__proto__=a,t}}():void 0)},function(n,e,t){var a=t(1);n.exports=a([].slice)},function(n,e,t){var a=t(3),r=t(58),i=t(4),o=t(113),s=t(94),l=t(5),c=t(266),d=t(18),u=t(55),p=r&&r.prototype,h=l("species"),m=!1,g=i(a.PromiseRejectionEvent),f=o("Promise",(function(){var n=s(r),e=n!==String(r);if(!e&&66===u)return!0;if(d&&(!p.catch||!p.finally))return!0;if(u>=51&&/native code/.test(n))return!1;var t=new r((function(n){n(1)})),a=function(n){n((function(){}),(function(){}))};return(t.constructor={})[h]=a,!(m=t.then((function(){}))instanceof a)||!e&&c&&!g}));n.exports={CONSTRUCTOR:f,REJECTION_EVENT:g,SUBCLASSING:m}},function(n,e,t){"use strict";var a=t(24),r=function(n){var e,t;this.promise=new n((function(n,a){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=a})),this.resolve=a(e),this.reject=a(t)};n.exports.f=function(n){return new r(n)}},function(n,e,t){"use strict";var a=t(91),r=t(12),i=t(49);n.exports=function(n,e,t){var o=a(e);o in n?r.f(n,o,i(0,t)):n[o]=t}},function(n,e,t){var a=t(31).Symbol;n.exports=a},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(88);var a=t(81);t(64),t(66),t(6),t(85),t(21),t(27),t(155);var r=t(107);t(36),t(22);function i(n){return function(n){if(Array.isArray(n))return Object(a.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Object(r.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function a(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}t.d(e,"a",(function(){return a}))},function(n,e,t){"use strict";var a=t(0),r=t(2),i=t(51),o=t(11),s=t(17),l=t(25),c=t(247),d=t(78),u=t(152),p=t(99),h=t(5),m=t(55),g=h("isConcatSpreadable"),f=m>=51||!r((function(){var n=[];return n[g]=!1,n.concat()[0]!==n})),v=p("concat"),b=function(n){if(!o(n))return!1;var e=n[g];return void 0!==e?!!e:i(n)};a({target:"Array",proto:!0,arity:1,forced:!f||!v},{concat:function(n){var e,t,a,r,i,o=s(this),p=u(o,0),h=0;for(e=-1,a=arguments.length;e<a;e++)if(b(i=-1===e?o:arguments[e]))for(r=l(i),c(h+r),t=0;t<r;t++,h++)t in i&&d(p,h,i[t]);else c(h+1),d(p,h++,i);return p.length=h,p}})},function(n,e,t){var a=t(1),r=t(16),i=Date.prototype,o=a(i.toString),s=a(i.getTime);"Invalid Date"!=String(new Date(NaN))&&r(i,"toString",(function(){var n=s(this);return n==n?o(this):"Invalid Date"}))},function(n,e,t){"use strict";t(19);var a,r,i=t(0),o=t(7),s=t(1),l=t(4),c=t(11),d=(a=!1,(r=/[ac]/).exec=function(){return a=!0,/./.exec.apply(this,arguments)},!0===r.test("abc")&&a),u=TypeError,p=s(/./.test);i({target:"RegExp",proto:!0,forced:!d},{test:function(n){var e=this.exec;if(!l(e))return p(this,n);var t=o(e,this,n);if(null!==t&&!c(t))throw new u("RegExp exec method returned something other than an Object or null");return!!t}})},function(n,e,t){t(98)("iterator")},function(n,e,t){var a=t(8),r=t(9),i=Function.prototype,o=a&&Object.getOwnPropertyDescriptor,s=r(i,"name"),l=s&&"something"===function(){}.name,c=s&&(!a||a&&o(i,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){var a=t(129),r=t(4),i=t(28),o=t(5)("toStringTag"),s=Object,l="Arguments"==i(function(){return arguments}());n.exports=a?i:function(n){var e,t,a;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),o))?t:l?i(e):"Object"==(a=i(e))&&r(e.callee)?"Arguments":a}},function(n,e,t){t(0)({target:"Array",stat:!0},{isArray:t(51)})},function(n,e,t){var a=t(1),r=0,i=Math.random(),o=a(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+o(++r+i,36)}},function(n,e,t){var a=t(3),r=t(11),i=a.document,o=r(i)&&r(i.createElement);n.exports=function(n){return o?i.createElement(n):{}}},function(n,e,t){var a=t(163),r=t(71);n.exports=function(n){var e=a(n,"string");return r(e)?e:e+""}},function(n,e,t){var a=t(164),r=t(124);n.exports=Object.keys||function(n){return a(n,r)}},function(n,e,t){var a=t(53),r=t(89),i=a("keys");n.exports=function(n){return i[n]||(i[n]=r(n))}},function(n,e,t){var a=t(1),r=t(4),i=t(121),o=a(Function.toString);r(i.inspectSource)||(i.inspectSource=function(n){return o(n)}),n.exports=i.inspectSource},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var a=t(28),r=t(3);n.exports="process"==a(r.process)},function(n,e,t){var a=t(1),r=t(2),i=t(4),o=t(87),s=t(14),l=t(94),c=function(){},d=[],u=s("Reflect","construct"),p=/^\s*(?:class|function)\b/,h=a(p.exec),m=!p.exec(c),g=function(n){if(!i(n))return!1;try{return u(c,d,n),!0}catch(n){return!1}},f=function(n){if(!i(n))return!1;switch(o(n)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return m||!!h(p,l(n))}catch(n){return!0}};f.sham=!0,n.exports=!u||r((function(){var n;return g(g.call)||!g(Object)||!g((function(){n=!0}))||n}))?f:g},function(n,e,t){var a=t(276),r=t(9),i=t(181),o=t(12).f;n.exports=function(n){var e=a.Symbol||(a.Symbol={});r(e,n)||o(e,n,{value:i.f(n)})}},function(n,e,t){var a=t(2),r=t(5),i=t(55),o=r("species");n.exports=function(n){return i>=51||!a((function(){var e=[];return(e.constructor={})[o]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(6);function a(n,e,t,a,r,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(a,r)}function r(n){return function(){var e=this,t=arguments;return new Promise((function(r,i){var o=n.apply(e,t);function s(n){a(o,r,i,s,l,"next",n)}function l(n){a(o,r,i,s,l,"throw",n)}s(void 0)}))}}},function(n,e,t){"use strict";var a,r,i=t(7),o=t(1),s=t(13),l=t(191),c=t(118),d=t(53),u=t(32),p=t(39).get,h=t(233),m=t(244),g=d("native-string-replace",String.prototype.replace),f=RegExp.prototype.exec,v=f,b=o("".charAt),E=o("".indexOf),x=o("".replace),y=o("".slice),w=(r=/b*/g,i(f,a=/a/,"a"),i(f,r,"a"),0!==a.lastIndex||0!==r.lastIndex),k=c.BROKEN_CARET,A=void 0!==/()??/.exec("")[1];(w||A||k||h||m)&&(v=function(n){var e,t,a,r,o,c,d,h=this,m=p(h),S=s(n),B=m.raw;if(B)return B.lastIndex=h.lastIndex,e=i(v,B,S),h.lastIndex=B.lastIndex,e;var T=m.groups,C=k&&h.sticky,j=i(l,h),z=h.source,P=0,I=S;if(C&&(j=x(j,"y",""),-1===E(j,"g")&&(j+="g"),I=y(S,h.lastIndex),h.lastIndex>0&&(!h.multiline||h.multiline&&"\n"!==b(S,h.lastIndex-1))&&(z="(?: "+z+")",I=" "+I,P++),t=new RegExp("^(?:"+z+")",j)),A&&(t=new RegExp("^"+z+"$(?!\\s)",j)),w&&(a=h.lastIndex),r=i(f,C?t:h,I),C?r?(r.input=y(r.input,P),r[0]=y(r[0],P),r.index=h.lastIndex,h.lastIndex+=r[0].length):h.lastIndex=0:w&&r&&(h.lastIndex=h.global?r.index+r[0].length:a),A&&r&&r.length>1&&i(g,r[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r&&T)for(r.groups=c=u(null),o=0;o<T.length;o++)c[(d=T[o])[0]]=r[d[1]];return r}),n.exports=v},function(n,e,t){var a=t(306),r=t(307),i=t(308),o=t(309),s=t(310);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=r,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var a=t(195);n.exports=function(n,e){for(var t=n.length;t--;)if(a(n[t][0],e))return t;return-1}},function(n,e,t){var a=t(42)(Object,"create");n.exports=a},function(n,e,t){var a=t(328);n.exports=function(n,e){var t=n.__data__;return a(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var a=t(141);n.exports=function(n){if("string"==typeof n||a(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(62),t(6),t(47),t(155),t(21),t(19),t(84);var a=t(81);function r(n,e){if(n){if("string"==typeof n)return Object(a.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(a.a)(n,e):void 0}}},function(n,e,t){var a,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(a=function(){var n,e,t={version:"0.2.0"},a=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(a[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=r(n,a.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(a.barSelector),d=a.speed,u=a.easing;return l.offsetWidth,o((function(e){""===a.positionUsing&&(a.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var r;return(r="translate3d"===a.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,r}(n,d,u)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),d)}),d)):setTimeout(e,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),a.trickleSpeed)};return a.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*r(Math.random()*e,.1,.95)),e=r(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*a.trickleRate)},n=0,e=0,t.promise=function(a){return a&&"resolved"!==a.state()?(0===e&&t.start(),n++,e++,a.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=a.template;var r,o=e.querySelector(a.barSelector),l=n?"-100":i(t.status||0),d=document.querySelector(a.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),a.showSpinner||(r=e.querySelector(a.spinnerSelector))&&p(r),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(e),e},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(a.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var a,r=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);r--;)if((a=n[r]+i)in t)return a;return e}(t))}function a(n,e,a){e=t(e),n.style[e]=a}return function(n,e){var t,r,i=arguments;if(2==i.length)for(t in e)void 0!==(r=e[t])&&e.hasOwnProperty(t)&&a(n,t,r);else a(n,i[1],i[2])}}();function l(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=u(n),a=t+e;l(t,e)||(n.className=a.substring(1))}function d(n,e){var t,a=u(n);l(n,e)&&(t=a.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?a.call(e,t,e,n):a)||(n.exports=r)},function(n,e,t){"use strict";var a=t(41),r=t(7),i=t(1),o=t(119),s=t(154),l=t(10),c=t(20),d=t(128),u=t(133),p=t(57),h=t(13),m=t(48),g=t(131),f=t(120),v=t(101),b=t(118),E=t(2),x=b.UNSUPPORTED_Y,y=Math.min,w=[].push,k=i(/./.exec),A=i(w),S=i("".slice);o("split",(function(n,e,t){var i;return i="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,t){var i=h(c(this)),o=void 0===t?4294967295:t>>>0;if(0===o)return[];if(void 0===n)return[i];if(!s(n))return r(e,i,n,o);for(var l,d,u,p=[],m=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),f=0,b=new RegExp(n.source,m+"g");(l=r(v,b,i))&&!((d=b.lastIndex)>f&&(A(p,S(i,f,l.index)),l.length>1&&l.index<i.length&&a(w,p,g(l,1)),u=l[0].length,f=d,p.length>=o));)b.lastIndex===l.index&&b.lastIndex++;return f===i.length?!u&&k(b,"")||A(p,""):A(p,S(i,f)),p.length>o?g(p,0,o):p}:"0".split(void 0,0).length?function(n,t){return void 0===n&&0===t?[]:r(e,this,n,t)}:e,[function(e,t){var a=c(this),o=null==e?void 0:m(e,n);return o?r(o,e,a,t):r(i,h(a),e,t)},function(n,a){var r=l(this),o=h(n),s=t(i,r,o,a,i!==e);if(s.done)return s.value;var c=d(r,RegExp),m=r.unicode,g=(r.ignoreCase?"i":"")+(r.multiline?"m":"")+(r.unicode?"u":"")+(x?"g":"y"),v=new c(x?"^(?:"+r.source+")":r,g),b=void 0===a?4294967295:a>>>0;if(0===b)return[];if(0===o.length)return null===f(v,o)?[o]:[];for(var E=0,w=0,k=[];w<o.length;){v.lastIndex=x?0:w;var B,T=f(v,x?S(o,w):o);if(null===T||(B=y(p(v.lastIndex+(x?w:0)),o.length))===E)w=u(o,w,m);else{if(A(k,S(o,E,w)),k.length===b)return k;for(var C=1;C<=T.length-1;C++)if(A(k,T[C]),k.length===b)return k;w=E=B}}return A(k,S(o,E)),k}]}),!!E((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]})),x)},function(n,e,t){var a=t(5),r=t(32),i=t(12).f,o=a("unscopables"),s=Array.prototype;null==s[o]&&i(s,o,{configurable:!0,value:r(null)}),n.exports=function(n){s[o][n]=!0}},function(n,e,t){var a=t(0),r=t(8),i=t(12).f;a({target:"Object",stat:!0,forced:Object.defineProperty!==i,sham:!r},{defineProperty:i})},function(n,e,t){var a=t(65),r=Math.max,i=Math.min;n.exports=function(n,e){var t=a(n);return t<0?r(t+e,0):i(t,e)}},function(n,e,t){var a=t(2),r=t(4),i=/#|\.prototype\./,o=function(n,e){var t=l[s(n)];return t==d||t!=c&&(r(e)?a(e):!!e)},s=o.normalize=function(n){return String(n).replace(i,".").toLowerCase()},l=o.data={},c=o.NATIVE="N",d=o.POLYFILL="P";n.exports=o},function(n,e,t){var a=t(87),r=t(48),i=t(73),o=t(5)("iterator");n.exports=function(n){if(null!=n)return r(n,o)||r(n,"@@iterator")||i[a(n)]}},function(n,e,t){t(0)({target:"Object",stat:!0,sham:!t(8)},{create:t(32)})},function(n,e,t){var a=t(0),r=t(2),i=t(17),o=t(127),s=t(170);a({target:"Object",stat:!0,forced:r((function(){o(1)})),sham:!s},{getPrototypeOf:function(n){return o(i(n))}})},function(n,e,t){t(0)({target:"Object",stat:!0},{setPrototypeOf:t(74)})},function(n,e,t){var a=t(2),r=t(3).RegExp,i=a((function(){var n=r("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),o=i||a((function(){return!r("a","y").sticky})),s=i||a((function(){var n=r("^r","gy");return n.lastIndex=2,null!=n.exec("str")}));n.exports={BROKEN_CARET:s,MISSED_STICKY:o,UNSUPPORTED_Y:i}},function(n,e,t){"use strict";t(19);var a=t(1),r=t(16),i=t(101),o=t(2),s=t(5),l=t(34),c=s("species"),d=RegExp.prototype;n.exports=function(n,e,t,u){var p=s(n),h=!o((function(){var e={};return e[p]=function(){return 7},7!=""[n](e)})),m=h&&!o((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[c]=function(){return t},t.flags="",t[p]=/./[p]),t.exec=function(){return e=!0,null},t[p](""),!e}));if(!h||!m||t){var g=a(/./[p]),f=e(p,""[n],(function(n,e,t,r,o){var s=a(n),l=e.exec;return l===i||l===d.exec?h&&!o?{done:!0,value:g(e,t,r)}:{done:!0,value:s(t,e,r)}:{done:!1}}));r(String.prototype,n,f[0]),r(d,p,f[1])}u&&l(d[p],"sham",!0)}},function(n,e,t){var a=t(7),r=t(10),i=t(4),o=t(28),s=t(101),l=TypeError;n.exports=function(n,e){var t=n.exec;if(i(t)){var c=a(t,n,e);return null!==c&&r(c),c}if("RegExp"===o(n))return a(s,n,e);throw l("RegExp#exec called on incompatible receiver")}},function(n,e,t){var a=t(3),r=t(122),i=a["__core-js_shared__"]||r("__core-js_shared__",{});n.exports=i},function(n,e,t){var a=t(3),r=Object.defineProperty;n.exports=function(n,e){try{r(a,n,{value:e,configurable:!0,writable:!0})}catch(t){a[n]=e}return e}},function(n,e,t){var a=t(23),r=t(112),i=t(25),o=function(n){return function(e,t,o){var s,l=a(e),c=i(l),d=r(o,c);if(n&&t!=t){for(;c>d;)if((s=l[d++])!=s)return!0}else for(;c>d;d++)if((n||d in l)&&l[d]===t)return n||d||0;return!n&&-1}};n.exports={includes:o(!0),indexOf:o(!1)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var a={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,i=r&&!a.call({1:2},1);e.f=i?function(n){var e=r(this,n);return!!e&&e.enumerable}:a},function(n,e,t){var a=t(9),r=t(168),i=t(40),o=t(12);n.exports=function(n,e,t){for(var s=r(e),l=o.f,c=i.f,d=0;d<s.length;d++){var u=s[d];a(n,u)||t&&a(t,u)||l(n,u,c(e,u))}}},function(n,e,t){var a=t(9),r=t(4),i=t(17),o=t(93),s=t(170),l=o("IE_PROTO"),c=Object,d=c.prototype;n.exports=s?c.getPrototypeOf:function(n){var e=i(n);if(a(e,l))return e[l];var t=e.constructor;return r(t)&&e instanceof t?t.prototype:e instanceof c?d:null}},function(n,e,t){var a=t(10),r=t(171),i=t(5)("species");n.exports=function(n,e){var t,o=a(n).constructor;return void 0===o||null==(t=a(o)[i])?e:r(t)}},function(n,e,t){var a={};a[t(5)("toStringTag")]="z",n.exports="[object z]"===String(a)},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e,t){var a=t(112),r=t(25),i=t(78),o=Array,s=Math.max;n.exports=function(n,e,t){for(var l=r(n),c=a(e,l),d=a(void 0===t?l:t,l),u=o(s(d-c,0)),p=0;c<d;c++,p++)i(u,p,n[c]);return u.length=p,u}},function(n,e,t){var a=t(0),r=t(14),i=t(41),o=t(7),s=t(1),l=t(2),c=t(51),d=t(4),u=t(11),p=t(71),h=t(75),m=t(54),g=r("JSON","stringify"),f=s(/./.exec),v=s("".charAt),b=s("".charCodeAt),E=s("".replace),x=s(1..toString),y=/[\uD800-\uDFFF]/g,w=/^[\uD800-\uDBFF]$/,k=/^[\uDC00-\uDFFF]$/,A=!m||l((function(){var n=r("Symbol")();return"[null]"!=g([n])||"{}"!=g({a:n})||"{}"!=g(Object(n))})),S=l((function(){return'"\\udf06\\ud834"'!==g("\udf06\ud834")||'"\\udead"'!==g("\udead")})),B=function(n,e){var t=h(arguments),a=e;if((u(e)||void 0!==n)&&!p(n))return c(e)||(e=function(n,e){if(d(a)&&(e=o(a,this,n,e)),!p(e))return e}),t[1]=e,i(g,null,t)},T=function(n,e,t){var a=v(t,e-1),r=v(t,e+1);return f(w,n)&&!f(k,r)||f(k,n)&&!f(w,a)?"\\u"+x(b(n,0),16):n};g&&a({target:"JSON",stat:!0,arity:3,forced:A||S},{stringify:function(n,e,t){var a=h(arguments),r=i(A?B:g,null,a);return S&&"string"==typeof r?E(r,y,T):r}})},function(n,e,t){"use strict";var a=t(183).charAt;n.exports=function(n,e,t){return e+(t?a(n,e).length:1)}},function(n,e,t){var a=t(300),r=t(52),i=Object.prototype,o=i.hasOwnProperty,s=i.propertyIsEnumerable,l=a(function(){return arguments}())?a:function(n){return r(n)&&o.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var a=t(42)(t(31),"Map");n.exports=a},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var a=t(320),r=t(327),i=t(329),o=t(330),s=t(331);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=r,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var a=t(29),r=t(141),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;n.exports=function(n,e){if(a(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!r(n))||(o.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var a=t(69),r=t(52);n.exports=function(n){return"symbol"==typeof n||r(n)&&"[object Symbol]"==a(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(88);t(64),t(66),t(6),t(85),t(21),t(27);var a=t(107);t(36),t(22);function r(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,r,i=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(i.push(a.value),!e||i.length!==e);o=!0);}catch(n){s=!0,r=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw r}}return i}}(n,e)||Object(a.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";t.r(e);t(19),t(109),t(61),t(45);var a={name:"LastReadingPopup",data:function(){return{lastReading:null,show:!1}},computed:{popupConfig:function(){var n={"/":{message:"检测到您上一次阅读的位置，是否移至该位置？",sureButtonText:"确定",cancelButtonText:"取消"},"/zh/":{message:"检测到您上一次阅读的位置，是否移至该位置？",sureButtonText:"前往",cancelButtonText:"取消"}},e=this.$lang.split("-")[0];return n["/".concat(e,"/")]||n[this.$localePath]||n},message:function(){var n=this.popupConfig;return n&&n.message||n["/"].message},sureButtonText:function(){var n=this.popupConfig;return n&&n.sureButtonText||n["/"].sureButtonText},cancelButtonText:function(){var n=this.popupConfig;return n&&n.cancelButtonText||n["/"].cancelButtonText}},mounted:function(){var n=this;window.ActiveXObject||"ActiveXObject"in window?setTimeout((function(){window.addEventListener("load",n.init())}),1e3):setTimeout((function(){window.addEventListener("load",n.init)}),1e3)},methods:{init:function(){this.lastReading=JSON.parse(localStorage.getItem("lastReading")),this.lastReading&&(this.$route.path===this.lastReading.path?this.goto():(this.show=!0,setTimeout(this.clean,1e4)))},goto:function(){var n=this;this.$route.path!==this.lastReading.path?this.$router.replace(this.lastReading.path).then((function(){document.documentElement.scrollTop=n.lastReading.scrollTop,n.clean()})):this.$nextTick((function(){document.documentElement.scrollTop=n.lastReading.scrollTop}))},dontgoto:function(){this.clean()},clean:function(){this.show=!1,localStorage.removeItem("lastReading")}}},r=(t(397),t(15)),i=Object(r.a)(a,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"sw-update-popup"}},[n.show?t("div",{staticClass:"sw-update-popup"},[n._v("\n    "+n._s(n.message)+"\n\n    "),t("br"),n._v(" "),t("button",{on:{click:n.goto}},[n._v("\n      "+n._s(n.sureButtonText)+"\n    ")]),n._v(" "),t("button",{on:{click:n.dontgoto}},[n._v("\n      "+n._s(n.cancelButtonText)+"\n    ")])]):n._e()])}),[],!1,null,"181714f2",null);e.default=i.exports},function(n,e,t){"use strict";var a=t(0),r=t(1),i=t(123).indexOf,o=t(46),s=r([].indexOf),l=!!s&&1/s([1],1,-0)<0,c=o("indexOf");a({target:"Array",proto:!0,forced:l||!c},{indexOf:function(n){var e=arguments.length>1?arguments[1]:void 0;return l?s(this,n,e)||0:i(this,n,e)}})},function(n,e,t){var a=t(0),r=t(17),i=t(92);a({target:"Object",stat:!0,forced:t(2)((function(){i(1)}))},{keys:function(n){return i(r(n))}})},function(n,e,t){"use strict";var a=t(86).PROPER,r=t(16),i=t(10),o=t(13),s=t(2),l=t(249),c=RegExp.prototype.toString,d=s((function(){return"/a/b"!=c.call({source:"a",flags:"b"})})),u=a&&"toString"!=c.name;(d||u)&&r(RegExp.prototype,"toString",(function(){var n=i(this);return"/"+o(n.source)+"/"+o(l(n))}),{unsafe:!0})},function(n,e,t){"use strict";var a=t(23),r=t(110),i=t(73),o=t(39),s=t(12).f,l=t(166),c=t(18),d=t(8),u=o.set,p=o.getterFor("Array Iterator");n.exports=l(Array,"Array",(function(n,e){u(this,{type:"Array Iterator",target:a(n),index:0,kind:e})}),(function(){var n=p(this),e=n.target,t=n.kind,a=n.index++;return!e||a>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:a,done:!1}:"values"==t?{value:e[a],done:!1}:{value:[a,e[a]],done:!1}}),"values");var h=i.Arguments=i.Array;if(r("keys"),r("values"),r("entries"),!c&&d&&"values"!==h.name)try{s(h,"name",{value:"values"})}catch(n){}},function(n,e,t){var a=t(8),r=t(161),i=t(12),o=t(10),s=t(23),l=t(92);e.f=a&&!r?Object.defineProperties:function(n,e){o(n);for(var t,a=s(e),r=l(e),c=r.length,d=0;c>d;)i.f(n,t=r[d++],a[t]);return n}},function(n,e){var t=TypeError;n.exports=function(n,e){if(n<e)throw t("Not enough arguments");return n}},function(n,e,t){var a=t(7),r=t(24),i=t(10),o=t(56),s=t(114),l=TypeError;n.exports=function(n,e){var t=arguments.length<2?s(n):e;if(r(t))return i(a(t,n));throw l(o(n)+" is not iterable")}},function(n,e,t){var a=t(278);n.exports=function(n,e){return new(a(n))(0===e?0:e)}},function(n,e,t){var a=t(4),r=t(11),i=t(74);n.exports=function(n,e,t){var o,s;return i&&a(o=e.constructor)&&o!==t&&r(s=o.prototype)&&s!==t.prototype&&i(n,s),n}},function(n,e,t){var a=t(11),r=t(28),i=t(5)("match");n.exports=function(n){var e;return a(n)&&(void 0!==(e=n[i])?!!e:"RegExp"==r(n))}},function(n,e,t){var a=t(0),r=t(295);a({target:"Array",stat:!0,forced:!t(178)((function(n){Array.from(n)}))},{from:r})},function(n,e,t){"use strict";var a=t(0),r=t(1),i=t(67),o=t(23),s=t(46),l=r([].join),c=i!=Object,d=s("join",",");a({target:"Array",proto:!0,forced:c||!d},{join:function(n){return l(o(this),void 0===n?",":n)}})},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,i=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),d=Object.prototype.toString,u=Math.max,p=Math.min,h=function(){return c.Date.now()};function m(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==d.call(n)}(n))return NaN;if(m(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=m(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=r.test(n);return s||i.test(n)?o(n.slice(2),s?2:8):a.test(n)?NaN:+n}n.exports=function(n,e,t){var a,r,i,o,s,l,c=0,d=!1,f=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=a,i=r;return a=r=void 0,c=e,o=n.apply(i,t)}function E(n){return c=n,s=setTimeout(y,e),d?b(n):o}function x(n){var t=n-l;return void 0===l||t>=e||t<0||f&&n-c>=i}function y(){var n=h();if(x(n))return w(n);s=setTimeout(y,function(n){var t=e-(n-l);return f?p(t,i-(n-c)):t}(n))}function w(n){return s=void 0,v&&a?b(n):(a=r=void 0,o)}function k(){var n=h(),t=x(n);if(a=arguments,r=this,l=n,t){if(void 0===s)return E(l);if(f)return s=setTimeout(y,e),b(l)}return void 0===s&&(s=setTimeout(y,e)),o}return e=g(e)||0,m(t)&&(d=!!t.leading,i=(f="maxWait"in t)?u(g(t.maxWait)||0,e):i,v="trailing"in t?!!t.trailing:v),k.cancel=function(){void 0!==s&&clearTimeout(s),c=0,a=l=r=s=void 0},k.flush=function(){return void 0===s?o:w(h())},k}},function(n,e,t){"use strict";var a=t(0),r=t(399).start;a({target:"String",proto:!0,forced:t(401)},{padStart:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var a=t(54);n.exports=a&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var a=t(8),r=t(2);n.exports=a&&r((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){var a=t(8),r=t(2),i=t(90);n.exports=!a&&!r((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var a=t(7),r=t(11),i=t(71),o=t(48),s=t(255),l=t(5),c=TypeError,d=l("toPrimitive");n.exports=function(n,e){if(!r(n)||i(n))return n;var t,l=o(n,d);if(l){if(void 0===e&&(e="default"),t=a(l,n,e),!r(t)||i(t))return t;throw c("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){var a=t(1),r=t(9),i=t(23),o=t(123).indexOf,s=t(72),l=a([].push);n.exports=function(n,e){var t,a=i(n),c=0,d=[];for(t in a)!r(s,t)&&r(a,t)&&l(d,t);for(;e.length>c;)r(a,t=e[c++])&&(~o(d,t)||l(d,t));return d}},function(n,e,t){var a=t(14);n.exports=a("document","documentElement")},function(n,e,t){"use strict";var a=t(0),r=t(7),i=t(18),o=t(86),s=t(4),l=t(235),c=t(127),d=t(74),u=t(35),p=t(34),h=t(16),m=t(5),g=t(73),f=t(169),v=o.PROPER,b=o.CONFIGURABLE,E=f.IteratorPrototype,x=f.BUGGY_SAFARI_ITERATORS,y=m("iterator"),w=function(){return this};n.exports=function(n,e,t,o,m,f,k){l(t,e,o);var A,S,B,T=function(n){if(n===m&&I)return I;if(!x&&n in z)return z[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},C=e+" Iterator",j=!1,z=n.prototype,P=z[y]||z["@@iterator"]||m&&z[m],I=!x&&P||T(m),F="Array"==e&&z.entries||P;if(F&&(A=c(F.call(new n)))!==Object.prototype&&A.next&&(i||c(A)===E||(d?d(A,E):s(A[y])||h(A,y,w)),u(A,C,!0,!0),i&&(g[C]=w)),v&&"values"==m&&P&&"values"!==P.name&&(!i&&b?p(z,"name","values"):(j=!0,I=function(){return r(P,this)})),m)if(S={values:T("values"),keys:f?I:T("keys"),entries:T("entries")},k)for(B in S)(x||j||!(B in z))&&h(z,B,S[B]);else a({target:e,proto:!0,forced:x||j},S);return i&&!k||z[y]===I||h(z,y,I,{name:m}),g[e]=I,S}},function(n,e,t){var a=t(2),r=t(4),i=t(9),o=t(8),s=t(86).CONFIGURABLE,l=t(94),c=t(39),d=c.enforce,u=c.get,p=Object.defineProperty,h=o&&!a((function(){return 8!==p((function(){}),"length",{value:8}).length})),m=String(String).split("String"),g=n.exports=function(n,e,t){"Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!i(n,"name")||s&&n.name!==e)&&(o?p(n,"name",{value:e,configurable:!0}):n.name=e),h&&t&&i(t,"arity")&&n.length!==t.arity&&p(n,"length",{value:t.arity});try{t&&i(t,"constructor")&&t.constructor?o&&p(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var a=d(n);return i(a,"source")||(a.source=m.join("string"==typeof e?e:"")),n};Function.prototype.toString=g((function(){return r(this)&&u(this).source||l(this)}),"toString")},function(n,e,t){var a=t(14),r=t(1),i=t(68),o=t(95),s=t(10),l=r([].concat);n.exports=a("Reflect","ownKeys")||function(n){var e=i.f(s(n)),t=o.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var a,r,i,o=t(2),s=t(4),l=t(32),c=t(127),d=t(16),u=t(5),p=t(18),h=u("iterator"),m=!1;[].keys&&("next"in(i=[].keys())?(r=c(c(i)))!==Object.prototype&&(a=r):m=!0),null==a||o((function(){var n={};return a[h].call(n)!==n}))?a={}:p&&(a=l(a)),s(a[h])||d(a,h,(function(){return this})),n.exports={IteratorPrototype:a,BUGGY_SAFARI_ITERATORS:m}},function(n,e,t){var a=t(2);n.exports=!a((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var a=t(97),r=t(56),i=TypeError;n.exports=function(n){if(a(n))return n;throw i(r(n)+" is not a constructor")}},function(n,e,t){var a,r,i,o,s=t(3),l=t(41),c=t(63),d=t(4),u=t(9),p=t(2),h=t(165),m=t(75),g=t(90),f=t(150),v=t(173),b=t(96),E=s.setImmediate,x=s.clearImmediate,y=s.process,w=s.Dispatch,k=s.Function,A=s.MessageChannel,S=s.String,B=0,T={};try{a=s.location}catch(n){}var C=function(n){if(u(T,n)){var e=T[n];delete T[n],e()}},j=function(n){return function(){C(n)}},z=function(n){C(n.data)},P=function(n){s.postMessage(S(n),a.protocol+"//"+a.host)};E&&x||(E=function(n){f(arguments.length,1);var e=d(n)?n:k(n),t=m(arguments,1);return T[++B]=function(){l(e,void 0,t)},r(B),B},x=function(n){delete T[n]},b?r=function(n){y.nextTick(j(n))}:w&&w.now?r=function(n){w.now(j(n))}:A&&!v?(o=(i=new A).port2,i.port1.onmessage=z,r=c(o.postMessage,o)):s.addEventListener&&d(s.postMessage)&&!s.importScripts&&a&&"file:"!==a.protocol&&!p(P)?(r=P,s.addEventListener("message",z,!1)):r="onreadystatechange"in g("script")?function(n){h.appendChild(g("script")).onreadystatechange=function(){h.removeChild(this),C(n)}}:function(n){setTimeout(j(n),0)}),n.exports={set:E,clear:x}},function(n,e,t){var a=t(30);n.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(a)},function(n,e,t){var a=t(63),r=t(7),i=t(10),o=t(56),s=t(175),l=t(25),c=t(33),d=t(151),u=t(114),p=t(176),h=TypeError,m=function(n,e){this.stopped=n,this.result=e},g=m.prototype;n.exports=function(n,e,t){var f,v,b,E,x,y,w,k=t&&t.that,A=!(!t||!t.AS_ENTRIES),S=!(!t||!t.IS_ITERATOR),B=!(!t||!t.INTERRUPTED),T=a(e,k),C=function(n){return f&&p(f,"normal",n),new m(!0,n)},j=function(n){return A?(i(n),B?T(n[0],n[1],C):T(n[0],n[1])):B?T(n,C):T(n)};if(S)f=n;else{if(!(v=u(n)))throw h(o(n)+" is not iterable");if(s(v)){for(b=0,E=l(n);E>b;b++)if((x=j(n[b]))&&c(g,x))return x;return new m(!1)}f=d(n,v)}for(y=f.next;!(w=r(y,f)).done;){try{x=j(w.value)}catch(n){p(f,"throw",n)}if("object"==typeof x&&x&&c(g,x))return x}return new m(!1)}},function(n,e,t){var a=t(5),r=t(73),i=a("iterator"),o=Array.prototype;n.exports=function(n){return void 0!==n&&(r.Array===n||o[i]===n)}},function(n,e,t){var a=t(7),r=t(10),i=t(48);n.exports=function(n,e,t){var o,s;r(n);try{if(!(o=i(n,"return"))){if("throw"===e)throw t;return t}o=a(o,n)}catch(n){s=!0,o=n}if("throw"===e)throw t;if(s)throw o;return r(o),t}},function(n,e,t){var a=t(58),r=t(178),i=t(76).CONSTRUCTOR;n.exports=i||!r((function(n){a.all(n).then(void 0,(function(){}))}))},function(n,e,t){var a=t(5)("iterator"),r=!1;try{var i=0,o={next:function(){return{done:!!i++}},return:function(){r=!0}};o[a]=function(){return this},Array.from(o,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!r)return!1;var t=!1;try{var i={};i[a]=function(){return{next:function(){return{done:t=!0}}}},n(i)}catch(n){}return t}},function(n,e,t){var a=t(10),r=t(11),i=t(77);n.exports=function(n,e){if(a(n),r(e)&&e.constructor===n)return e;var t=i.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){var a=t(28),r=t(23),i=t(68).f,o=t(131),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return s&&"Window"==a(n)?function(n){try{return i(n)}catch(n){return o(s)}}(n):i(r(n))}},function(n,e,t){var a=t(5);e.f=a},function(n,e,t){var a=t(54);n.exports=a&&!!Symbol.for&&!!Symbol.keyFor},function(n,e,t){var a=t(1),r=t(65),i=t(13),o=t(20),s=a("".charAt),l=a("".charCodeAt),c=a("".slice),d=function(n){return function(e,t){var a,d,u=i(o(e)),p=r(t),h=u.length;return p<0||p>=h?n?"":void 0:(a=l(u,p))<55296||a>56319||p+1===h||(d=l(u,p+1))<56320||d>57343?n?s(u,p):a:n?c(u,p,p+2):d-56320+(a-55296<<10)+65536}};n.exports={codeAt:d(!1),charAt:d(!0)}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){var a=t(90)("span").classList,r=a&&a.constructor&&a.constructor.prototype;n.exports=r===Object.prototype?void 0:r},function(n,e,t){var a=t(13);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:a(n)}},function(n,e,t){"use strict";var a=t(50).forEach,r=t(46)("forEach");n.exports=r?[].forEach:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var a=t(154),r=TypeError;n.exports=function(n){if(a(n))throw r("The method doesn't accept regular expressions");return n}},function(n,e,t){var a=t(5)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[a]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){var a=t(2);n.exports=!a((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){"use strict";var a=t(10);n.exports=function(){var n=a(this),e="";return n.hasIndices&&(e+="d"),n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.unicodeSets&&(e+="v"),n.sticky&&(e+="y"),e}},function(n,e){n.exports=function(n,e){for(var t=-1,a=e.length,r=n.length;++t<a;)n[r+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var a=t(102),r=t(311),i=t(312),o=t(313),s=t(314),l=t(315);function c(n){var e=this.__data__=new a(n);this.size=e.size}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var a=t(69),r=t(136);n.exports=function(n){if(!r(n))return!1;var e=a(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var a=t(332),r=t(52);n.exports=function n(e,t,i,o,s){return e===t||(null==e||null==t||!r(e)&&!r(t)?e!=e&&t!=t:a(e,t,i,o,n,s))}},function(n,e,t){var a=t(200),r=t(335),i=t(201);n.exports=function(n,e,t,o,s,l){var c=1&t,d=n.length,u=e.length;if(d!=u&&!(c&&u>d))return!1;var p=l.get(n),h=l.get(e);if(p&&h)return p==e&&h==n;var m=-1,g=!0,f=2&t?new a:void 0;for(l.set(n,e),l.set(e,n);++m<d;){var v=n[m],b=e[m];if(o)var E=c?o(b,v,m,e,n,l):o(v,b,m,n,e,l);if(void 0!==E){if(E)continue;g=!1;break}if(f){if(!r(e,(function(n,e){if(!i(f,e)&&(v===n||s(v,n,t,o,l)))return f.push(e)}))){g=!1;break}}else if(v!==b&&!s(v,b,t,o,l)){g=!1;break}}return l.delete(n),l.delete(e),g}},function(n,e,t){var a=t(137),r=t(333),i=t(334);function o(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new a;++e<t;)this.add(n[e])}o.prototype.add=o.prototype.push=r,o.prototype.has=i,n.exports=o},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var a=t(345),r=t(351),i=t(206);n.exports=function(n){return i(n)?a(n):r(n)}},function(n,e,t){(function(n){var a=t(31),r=t(347),i=e&&!e.nodeType&&e,o=i&&"object"==typeof n&&n&&!n.nodeType&&n,s=o&&o.exports===i?a.Buffer:void 0,l=(s?s.isBuffer:void 0)||r;n.exports=l}).call(this,t(157)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var a=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==a||"symbol"!=a&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var a=t(348),r=t(349),i=t(350),o=i&&i.isTypedArray,s=o?r(o):a;n.exports=s},function(n,e,t){var a=t(196),r=t(139);n.exports=function(n){return null!=n&&r(n.length)&&!a(n)}},function(n,e,t){var a=t(42)(t(31),"Set");n.exports=a},function(n,e,t){var a=t(136);n.exports=function(n){return n==n&&!a(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var a=t(211),r=t(106);n.exports=function(n,e){for(var t=0,i=(e=a(e,n)).length;null!=n&&t<i;)n=n[r(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var a=t(29),r=t(140),i=t(362),o=t(365);n.exports=function(n,e){return a(n)?n:r(n,e)?[n]:i(o(n))}},function(n,e,t){var a=t(3),r=t(41),i=t(4),o=t(30),s=t(75),l=t(150),c=/MSIE .\./.test(o),d=a.Function,u=function(n){return c?function(e,t){var a=l(arguments.length,1)>2,o=i(e)?e:d(e),c=a?s(arguments,2):void 0;return n(a?function(){r(o,this,c)}:o,t)}:n};n.exports={setTimeout:u(a.setTimeout),setInterval:u(a.setInterval)}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var a=t(0),r=t(218);a({target:"Function",proto:!0,forced:Function.bind!==r},{bind:r})},function(n,e,t){"use strict";var a=t(1),r=t(24),i=t(11),o=t(9),s=t(75),l=t(70),c=Function,d=a([].concat),u=a([].join),p={},h=function(n,e,t){if(!o(p,e)){for(var a=[],r=0;r<e;r++)a[r]="a["+r+"]";p[e]=c("C,a","return new C("+u(a,",")+")")}return p[e](n,t)};n.exports=l?c.bind:function(n){var e=r(this),t=e.prototype,a=s(arguments,1),o=function(){var t=d(a,s(arguments));return this instanceof o?h(e,t.length,t):e.apply(n,t)};return i(t)&&(o.prototype=t),o}},function(n,e,t){var a=t(0),r=t(14),i=t(41),o=t(218),s=t(171),l=t(10),c=t(11),d=t(32),u=t(2),p=r("Reflect","construct"),h=Object.prototype,m=[].push,g=u((function(){function n(){}return!(p((function(){}),[],n)instanceof n)})),f=!u((function(){p((function(){}))})),v=g||f;a({target:"Reflect",stat:!0,forced:v,sham:v},{construct:function(n,e){s(n),l(e);var t=arguments.length<3?n:s(arguments[2]);if(f&&!g)return p(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var a=[null];return i(m,a,e),new(i(o,n,a))}var r=t.prototype,u=d(c(r)?r:h),v=i(n,u,e);return c(v)?v:u}})},function(n,e,t){var a=t(0),r=t(3),i=t(35);a({global:!0},{Reflect:{}}),i(r.Reflect,"Reflect",!0)},function(n,e,t){},function(n,e,t){},function(n,e,t){var a=t(298),r=t(303),i=t(374),o=t(382),s=t(391),l=t(248),c=i((function(n){var e=l(n);return s(e)&&(e=void 0),o(a(n,1,s,!0),r(e,2))}));n.exports=c},function(n,e,t){var a;"undefined"!=typeof self&&self,a=function(){return function(n){var e={};function t(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return n[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:a})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=7)}([function(n,e,t){n.exports=!t(6)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e){n.exports=function(n,e,t,a,r){var i,o=n=n||{},s=typeof n.default;"object"!==s&&"function"!==s||(i=n,o=n.default);var l,c="function"==typeof o?o.options:o;if(e&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns),a&&(c._scopeId=a),r?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),t&&t.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(r)},c._ssrRegister=l):t&&(l=t),l){var d=c.functional,u=d?c.render:c.beforeCreate;d?c.render=function(n,e){return l.call(e),u(n,e)}:c.beforeCreate=u?[].concat(u,l):[l]}return{esModule:i,exports:o,options:c}}},function(n,e){var t=n.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(n,e){var t=n.exports={version:"2.5.7"};"number"==typeof __e&&(__e=t)},function(n,e,t){var a=t(23),r=t(24),i=t(26),o=Object.defineProperty;e.f=t(0)?Object.defineProperty:function(n,e,t){if(a(n),e=i(e,!0),a(t),r)try{return o(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(n[e]=t.value),n}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var a,r,i;r=[e,t(8),t(11)],void 0===(i="function"==typeof(a=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Tabs=n.Tab=void 0;var a=i(e),r=i(t);function i(n){return n&&n.__esModule?n:{default:n}}n.default={install:function(n){n.component("tab",a.default),n.component("tabs",r.default)}},n.Tab=a.default,n.Tabs=r.default})?a.apply(e,r):a)||(n.exports=i)},function(n,e,t){var a=t(2)(t(9),t(10),null,null,null);n.exports=a.exports},function(n,e,t){var a,r,i;r=[e],void 0===(i="function"==typeof(a=function(n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{id:{default:null},name:{required:!0},prefix:{default:""},suffix:{default:""},isDisabled:{default:!1}},data:function(){return{isActive:!1,isVisible:!0}},computed:{header:function(){return this.prefix+this.name+this.suffix},computedId:function(){return this.id?this.id:this.name.toLowerCase().replace(/ /g,"-")},hash:function(){return this.isDisabled?"#":"#"+this.computedId}}}})?a.apply(e,r):a)||(n.exports=i)},function(n,e){n.exports={render:function(){var n=this.$createElement;return(this._self._c||n)("section",{directives:[{name:"show",rawName:"v-show",value:this.isActive,expression:"isActive"}],staticClass:"tabs-component-panel",attrs:{"aria-hidden":!this.isActive,id:this.computedId,role:"tabpanel"}},[this._t("default")],2)},staticRenderFns:[]}},function(n,e,t){var a=t(2)(t(12),t(29),null,null,null);n.exports=a.exports},function(n,e,t){var a,r,i;r=[e,t(13)],void 0===(i="function"==typeof(a=function(n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t,a=(t=e)&&t.__esModule?t:{default:t};n.default={props:{cacheLifetime:{default:5},options:{type:Object,required:!1,default:function(){return{useUrlFragment:!0,defaultTabHash:null}}}},data:function(){return{tabs:[],activeTabHash:"",activeTabIndex:0,lastActiveTabHash:""}},computed:{storageKey:function(){return"vue-tabs-component.cache."+window.location.host+window.location.pathname}},created:function(){this.tabs=this.$children},mounted:function(){var n=this;if(window.addEventListener("hashchange",(function(){return n.selectTab(window.location.hash)})),this.findTab(window.location.hash))this.selectTab(window.location.hash);else{var e=a.default.get(this.storageKey);this.findTab(e)?this.selectTab(e):null!==this.options.defaultTabHash&&this.findTab("#"+this.options.defaultTabHash)?this.selectTab("#"+this.options.defaultTabHash):this.tabs.length&&this.selectTab(this.tabs[0].hash)}},methods:{findTab:function(n){return this.tabs.find((function(e){return e.hash===n}))},selectTab:function(n,e){e&&!this.options.useUrlFragment&&e.preventDefault();var t=this.findTab(n);t&&(t.isDisabled?e.preventDefault():this.lastActiveTabHash!==t.hash?(this.tabs.forEach((function(n){n.isActive=n.hash===t.hash})),this.$emit("changed",{tab:t}),this.activeTabHash=t.hash,this.activeTabIndex=this.getTabIndex(n),this.lastActiveTabHash=this.activeTabHash=t.hash,a.default.set(this.storageKey,t.hash,this.cacheLifetime)):this.$emit("clicked",{tab:t}))},setTabVisible:function(n,e){var t=this.findTab(n);t&&(t.isVisible=e,t.isActive&&(t.isActive=e,this.tabs.every((function(n,e,t){return!n.isVisible||(n.isActive=!0,!1)}))))},getTabIndex:function(n){var e=this.findTab(n);return this.tabs.indexOf(e)},getTabHash:function(n){var e=this,t=this.tabs.find((function(t){return e.tabs.indexOf(t)===n}));if(t)return t.hash},getActiveTab:function(){return this.findTab(this.activeTabHash)},getActiveTabIndex:function(){return this.getTabIndex(this.activeTabHash)}}}})?a.apply(e,r):a)||(n.exports=i)},function(n,e,t){var a,r,i;r=[e,t(14),t(15)],void 0===(i="function"==typeof(a=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=i(e),r=i(t);function i(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(){(0,a.default)(this,n)}return(0,r.default)(n,[{key:"get",value:function(n){var e=JSON.parse(localStorage.getItem(n));return e?new Date(e.expires)<new Date?(localStorage.removeItem(n),null):e.value:null}},{key:"set",value:function(n,e,t){var a=(new Date).getTime(),r=new Date(a+6e4*t);localStorage.setItem(n,JSON.stringify({value:e,expires:r}))}}]),n}();n.default=new o})?a.apply(e,r):a)||(n.exports=i)},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}},function(n,e,t){"use strict";e.__esModule=!0;var a,r=t(16),i=(a=r)&&a.__esModule?a:{default:a};e.default=function(){function n(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),(0,i.default)(n,a.key,a)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}()},function(n,e,t){n.exports={default:t(17),__esModule:!0}},function(n,e,t){t(18);var a=t(4).Object;n.exports=function(n,e,t){return a.defineProperty(n,e,t)}},function(n,e,t){var a=t(19);a(a.S+a.F*!t(0),"Object",{defineProperty:t(5).f})},function(n,e,t){var a=t(3),r=t(4),i=t(20),o=t(22),s=t(28),l=function(n,e,t){var c,d,u,p=n&l.F,h=n&l.G,m=n&l.S,g=n&l.P,f=n&l.B,v=n&l.W,b=h?r:r[e]||(r[e]={}),E=b.prototype,x=h?a:m?a[e]:(a[e]||{}).prototype;for(c in h&&(t=e),t)(d=!p&&x&&void 0!==x[c])&&s(b,c)||(u=d?x[c]:t[c],b[c]=h&&"function"!=typeof x[c]?t[c]:f&&d?i(u,a):v&&x[c]==u?function(n){var e=function(e,t,a){if(this instanceof n){switch(arguments.length){case 0:return new n;case 1:return new n(e);case 2:return new n(e,t)}return new n(e,t,a)}return n.apply(this,arguments)};return e.prototype=n.prototype,e}(u):g&&"function"==typeof u?i(Function.call,u):u,g&&((b.virtual||(b.virtual={}))[c]=u,n&l.R&&E&&!E[c]&&o(E,c,u)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,n.exports=l},function(n,e,t){var a=t(21);n.exports=function(n,e,t){if(a(n),void 0===e)return n;switch(t){case 1:return function(t){return n.call(e,t)};case 2:return function(t,a){return n.call(e,t,a)};case 3:return function(t,a,r){return n.call(e,t,a,r)}}return function(){return n.apply(e,arguments)}}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(n+" is not a function!");return n}},function(n,e,t){var a=t(5),r=t(27);n.exports=t(0)?function(n,e,t){return a.f(n,e,r(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var a=t(1);n.exports=function(n){if(!a(n))throw TypeError(n+" is not an object!");return n}},function(n,e,t){n.exports=!t(0)&&!t(6)((function(){return 7!=Object.defineProperty(t(25)("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var a=t(1),r=t(3).document,i=a(r)&&a(r.createElement);n.exports=function(n){return i?r.createElement(n):{}}},function(n,e,t){var a=t(1);n.exports=function(n,e){if(!a(n))return n;var t,r;if(e&&"function"==typeof(t=n.toString)&&!a(r=t.call(n)))return r;if("function"==typeof(t=n.valueOf)&&!a(r=t.call(n)))return r;if(!e&&"function"==typeof(t=n.toString)&&!a(r=t.call(n)))return r;throw TypeError("Can't convert object to primitive value")}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e){n.exports={render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"tabs-component"},[t("ul",{staticClass:"tabs-component-tabs",attrs:{role:"tablist"}},n._l(n.tabs,(function(e,a){return t("li",{directives:[{name:"show",rawName:"v-show",value:e.isVisible,expression:"tab.isVisible"}],key:a,staticClass:"tabs-component-tab",class:{"is-active":e.isActive,"is-disabled":e.isDisabled},attrs:{role:"presentation"}},[t("a",{staticClass:"tabs-component-tab-a",attrs:{"aria-controls":e.hash,"aria-selected":e.isActive,href:e.hash,role:"tab"},domProps:{innerHTML:n._s(e.header)},on:{click:function(t){n.selectTab(e.hash,t)}}})])}))),n._v(" "),t("div",{staticClass:"tabs-component-panels"},[n._t("default")],2)])},staticRenderFns:[]}}])},n.exports=a()},function(n,e,t){"use strict";t.r(e);var a={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},r=(t(402),t(15)),i=Object(r.a)(a,(function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=i.exports},function(n,e,t){"use strict";t.r(e);t(37),t(6),t(38),t(44),t(26);var a={name:"CodeGroup",data:function(){return{codeTabs:[],activeCodeTabIndex:-1}},watch:{activeCodeTabIndex:function(n){this.codeTabs.forEach((function(n){n.elm.classList.remove("theme-code-block__active")})),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted:function(){var n=this;this.codeTabs=(this.$slots.default||[]).filter((function(n){return Boolean(n.componentOptions)})).map((function(e,t){return""===e.componentOptions.propsData.active&&(n.activeCodeTabIndex=t),{title:e.componentOptions.propsData.title,elm:e.elm}})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab:function(n){this.activeCodeTabIndex=n}}},r=(t(403),t(15)),i=Object(r.a)(a,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"theme-code-group"},[t("div",{staticClass:"theme-code-group__nav"},[t("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(e,a){return t("li",{key:e.title,staticClass:"theme-code-group__li"},[t("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":a===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(a)}}},[n._v("\n            "+n._s(e.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?t("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=i.exports},function(n,e,t){"use strict";var a=t(8),r=t(3),i=t(1),o=t(113),s=t(16),l=t(9),c=t(153),d=t(33),u=t(71),p=t(163),h=t(2),m=t(68).f,g=t(40).f,f=t(12).f,v=t(396),b=t(228).trim,E=r.Number,x=E.prototype,y=r.TypeError,w=i("".slice),k=i("".charCodeAt),A=function(n){var e=p(n,"number");return"bigint"==typeof e?e:S(e)},S=function(n){var e,t,a,r,i,o,s,l,c=p(n,"number");if(u(c))throw y("Cannot convert a Symbol value to a number");if("string"==typeof c&&c.length>2)if(c=b(c),43===(e=k(c,0))||45===e){if(88===(t=k(c,2))||120===t)return NaN}else if(48===e){switch(k(c,1)){case 66:case 98:a=2,r=49;break;case 79:case 111:a=8,r=55;break;default:return+c}for(o=(i=w(c,2)).length,s=0;s<o;s++)if((l=k(i,s))<48||l>r)return NaN;return parseInt(i,a)}return+c};if(o("Number",!E(" 0o1")||!E("0b1")||E("+0x1"))){for(var B,T=function(n){var e=arguments.length<1?0:E(A(n)),t=this;return d(x,t)&&h((function(){v(t)}))?c(Object(e),t,T):e},C=a?m(E):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),j=0;C.length>j;j++)l(E,B=C[j])&&!l(T,B)&&f(T,B,g(E,B));T.prototype=x,x.constructor=T,s(r,"Number",T,{constructor:!0})}},function(n,e,t){var a=t(1),r=t(20),i=t(13),o=t(229),s=a("".replace),l="["+o+"]",c=RegExp("^"+l+l+"*"),d=RegExp(l+l+"*$"),u=function(n){return function(e){var t=i(r(e));return 1&n&&(t=s(t,c,"")),2&n&&(t=s(t,d,"")),t}};n.exports={start:u(1),end:u(2),trim:u(3)}},function(n,e){n.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(n,e,t){"use strict";var a=t(0),r=t(50).some;a({target:"Array",proto:!0,forced:!t(46)("some")},{some:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var a=t(7),r=t(119),i=t(10),o=t(57),s=t(13),l=t(20),c=t(48),d=t(133),u=t(120);r("match",(function(n,e,t){return[function(e){var t=l(this),r=null==e?void 0:c(e,n);return r?a(r,e,t):new RegExp(e)[n](s(t))},function(n){var a=i(this),r=s(n),l=t(e,a,r);if(l.done)return l.value;if(!a.global)return u(a,r);var c=a.unicode;a.lastIndex=0;for(var p,h=[],m=0;null!==(p=u(a,r));){var g=s(p[0]);h[m]=g,""===g&&(a.lastIndex=d(r,o(a.lastIndex),c)),m++}return 0===m?null:h}]}))},function(n,e,t){"use strict";var a=t(0),r=t(1),i=t(51),o=r([].reverse),s=[1,2];a({target:"Array",proto:!0,forced:String(s)===String(s.reverse())},{reverse:function(){return i(this)&&(this.length=this.length),o(this)}})},function(n,e,t){var a=t(2),r=t(3).RegExp;n.exports=a((function(){var n=r(".","s");return!(n.dotAll&&n.exec("\n")&&"s"===n.flags)}))},function(n,e,t){"use strict";var a=t(0),r=t(50).find,i=t(110),o=!0;"find"in[]&&Array(1).find((function(){o=!1})),a({target:"Array",proto:!0,forced:o},{find:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}}),i("find")},function(n,e,t){"use strict";var a=t(169).IteratorPrototype,r=t(32),i=t(49),o=t(35),s=t(73),l=function(){return this};n.exports=function(n,e,t,c){var d=e+" Iterator";return n.prototype=r(a,{next:i(+!c,t)}),o(n,d,!1,!0),s[d]=l,n}},function(n,e,t){"use strict";var a=t(14),r=t(12),i=t(5),o=t(8),s=i("species");n.exports=function(n){var e=a(n),t=r.f;o&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){var a=t(33),r=TypeError;n.exports=function(n,e){if(a(e,n))return n;throw r("Incorrect invocation")}},function(n,e,t){t(98)("asyncIterator")},function(n,e,t){var a=t(14),r=t(98),i=t(35);r("toStringTag"),i(a("Symbol"),"Symbol")},function(n,e,t){var a=t(3);t(35)(a.JSON,"JSON",!0)},function(n,e,t){t(35)(Math,"Math",!0)},function(n,e,t){var a=t(12).f;n.exports=function(n,e,t){t in n||a(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){var a=t(0),r=t(8),i=t(168),o=t(23),s=t(40),l=t(78);a({target:"Object",stat:!0,sham:!r},{getOwnPropertyDescriptors:function(n){for(var e,t,a=o(n),r=s.f,c=i(a),d={},u=0;c.length>u;)void 0!==(t=r(a,e=c[u++]))&&l(d,e,t);return d}})},function(n,e,t){var a=t(2),r=t(3).RegExp;n.exports=a((function(){var n=r("(?<a>b)","g");return"b"!==n.exec("b").groups.a||"bc"!=="b".replace(n,"$<a>c")}))},function(n,e,t){"use strict";var a=t(0),r=t(123).includes,i=t(2),o=t(110);a({target:"Array",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}}),o("includes")},function(n,e,t){"use strict";var a=t(0),r=t(1),i=t(188),o=t(20),s=t(13),l=t(189),c=r("".indexOf);a({target:"String",proto:!0,forced:!l("includes")},{includes:function(n){return!!~c(s(o(this)),s(i(n)),arguments.length>1?arguments[1]:void 0)}})},function(n,e){var t=TypeError;n.exports=function(n){if(n>9007199254740991)throw t("Maximum allowed index exceeded");return n}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){var a=t(7),r=t(9),i=t(33),o=t(191),s=RegExp.prototype;n.exports=function(n){var e=n.flags;return void 0!==e||"flags"in s||r(n,"flags")||!i(s,n)?e:a(o,n)}},function(n,e,t){"use strict";var a=t(0),r=t(1),i=t(24),o=t(17),s=t(25),l=t(404),c=t(13),d=t(2),u=t(251),p=t(46),h=t(405),m=t(406),g=t(55),f=t(407),v=[],b=r(v.sort),E=r(v.push),x=d((function(){v.sort(void 0)})),y=d((function(){v.sort(null)})),w=p("sort"),k=!d((function(){if(g)return g<70;if(!(h&&h>3)){if(m)return!0;if(f)return f<603;var n,e,t,a,r="";for(n=65;n<76;n++){switch(e=String.fromCharCode(n),n){case 66:case 69:case 70:case 72:t=3;break;case 68:case 71:t=4;break;default:t=2}for(a=0;a<47;a++)v.push({k:e+a,v:t})}for(v.sort((function(n,e){return e.v-n.v})),a=0;a<v.length;a++)e=v[a].k.charAt(0),r.charAt(r.length-1)!==e&&(r+=e);return"DGBEFHACIJK"!==r}}));a({target:"Array",proto:!0,forced:x||!y||!w||!k},{sort:function(n){void 0!==n&&i(n);var e=o(this);if(k)return void 0===n?b(e):b(e,n);var t,a,r=[],d=s(e);for(a=0;a<d;a++)a in e&&E(r,e[a]);for(u(r,function(n){return function(e,t){return void 0===t?-1:void 0===e?1:void 0!==n?+n(e,t)||0:c(e)>c(t)?1:-1}}(n)),t=r.length,a=0;a<t;)e[a]=r[a++];for(;a<d;)l(e,a++);return e}})},function(n,e,t){var a=t(131),r=Math.floor,i=function(n,e){var t=n.length,l=r(t/2);return t<8?o(n,e):s(n,i(a(n,0,l),e),i(a(n,l),e),e)},o=function(n,e){for(var t,a,r=n.length,i=1;i<r;){for(a=i,t=n[i];a&&e(n[a-1],t)>0;)n[a]=n[--a];a!==i++&&(n[a]=t)}return n},s=function(n,e,t,a){for(var r=e.length,i=t.length,o=0,s=0;o<r||s<i;)n[o+s]=o<r&&s<i?a(e[o],t[s])<=0?e[o++]:t[s++]:o<r?e[o++]:t[s++];return n};n.exports=i},function(n,e,t){var a=t(8),r=t(118).MISSED_STICKY,i=t(28),o=t(253),s=t(39).get,l=RegExp.prototype,c=TypeError;a&&r&&o(l,"sticky",{configurable:!0,get:function(){if(this!==l){if("RegExp"===i(this))return!!s(this).sticky;throw c("Incompatible receiver, RegExp required")}}})},function(n,e,t){var a=t(167),r=t(12);n.exports=function(n,e,t){return t.get&&a(t.get,e,{getter:!0}),t.set&&a(t.set,e,{setter:!0}),r.f(n,e,t)}},function(n,e,t){n.exports=t(413)},function(n,e,t){var a=t(7),r=t(4),i=t(11),o=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&r(t=n.toString)&&!i(s=a(t,n)))return s;if(r(t=n.valueOf)&&!i(s=a(t,n)))return s;if("string"!==e&&r(t=n.toString)&&!i(s=a(t,n)))return s;throw o("Can't convert object to primitive value")}},function(n,e){var t=Math.ceil,a=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?a:t)(e)}},function(n,e,t){var a=t(3),r=t(4),i=t(94),o=a.WeakMap;n.exports=r(o)&&/native code/.test(i(o))},function(n,e,t){var a=t(4),r=String,i=TypeError;n.exports=function(n){if("object"==typeof n||a(n))return n;throw i("Can't set "+r(n)+" as a prototype")}},function(n,e,t){t(260),t(267),t(268),t(269),t(270),t(271)},function(n,e,t){"use strict";var a,r,i,o=t(0),s=t(18),l=t(96),c=t(3),d=t(7),u=t(16),p=t(74),h=t(35),m=t(236),g=t(24),f=t(4),v=t(11),b=t(237),E=t(128),x=t(172).set,y=t(261),w=t(264),k=t(130),A=t(265),S=t(39),B=t(58),T=t(76),C=t(77),j=T.CONSTRUCTOR,z=T.REJECTION_EVENT,P=T.SUBCLASSING,I=S.getterFor("Promise"),F=S.set,D=B&&B.prototype,_=B,$=D,L=c.TypeError,U=c.document,O=c.process,M=C.f,q=M,J=!!(U&&U.createEvent&&c.dispatchEvent),Z=function(n){var e;return!(!v(n)||!f(e=n.then))&&e},N=function(n,e){var t,a,r,i=e.value,o=1==e.state,s=o?n.ok:n.fail,l=n.resolve,c=n.reject,u=n.domain;try{s?(o||(2===e.rejection&&G(e),e.rejection=1),!0===s?t=i:(u&&u.enter(),t=s(i),u&&(u.exit(),r=!0)),t===n.promise?c(L("Promise-chain cycle")):(a=Z(t))?d(a,t,l,c):l(t)):c(i)}catch(n){u&&!r&&u.exit(),c(n)}},H=function(n,e){n.notified||(n.notified=!0,y((function(){for(var t,a=n.reactions;t=a.get();)N(t,n);n.notified=!1,e&&!n.rejection&&V(n)})))},R=function(n,e,t){var a,r;J?((a=U.createEvent("Event")).promise=e,a.reason=t,a.initEvent(n,!1,!0),c.dispatchEvent(a)):a={promise:e,reason:t},!z&&(r=c["on"+n])?r(a):"unhandledrejection"===n&&w("Unhandled promise rejection",t)},V=function(n){d(x,c,(function(){var e,t=n.facade,a=n.value;if(W(n)&&(e=k((function(){l?O.emit("unhandledRejection",a,t):R("unhandledrejection",t,a)})),n.rejection=l||W(n)?2:1,e.error))throw e.value}))},W=function(n){return 1!==n.rejection&&!n.parent},G=function(n){d(x,c,(function(){var e=n.facade;l?O.emit("rejectionHandled",e):R("rejectionhandled",e,n.value)}))},Q=function(n,e,t){return function(a){n(e,a,t)}},X=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,H(n,!0))},Y=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw L("Promise can't be resolved itself");var a=Z(e);a?y((function(){var t={done:!1};try{d(a,e,Q(Y,t,n),Q(X,t,n))}catch(e){X(t,e,n)}})):(n.value=e,n.state=1,H(n,!1))}catch(e){X({done:!1},e,n)}}};if(j&&($=(_=function(n){b(this,$),g(n),d(a,this);var e=I(this);try{n(Q(Y,e),Q(X,e))}catch(n){X(e,n)}}).prototype,(a=function(n){F(this,{type:"Promise",done:!1,notified:!1,parent:!1,reactions:new A,rejection:!1,state:0,value:void 0})}).prototype=u($,"then",(function(n,e){var t=I(this),a=M(E(this,_));return t.parent=!0,a.ok=!f(n)||n,a.fail=f(e)&&e,a.domain=l?O.domain:void 0,0==t.state?t.reactions.add(a):y((function(){N(a,t)})),a.promise})),r=function(){var n=new a,e=I(n);this.promise=n,this.resolve=Q(Y,e),this.reject=Q(X,e)},C.f=M=function(n){return n===_||void 0===n?new r(n):q(n)},!s&&f(B)&&D!==Object.prototype)){i=D.then,P||u(D,"then",(function(n,e){var t=this;return new _((function(n,e){d(i,t,n,e)})).then(n,e)}),{unsafe:!0});try{delete D.constructor}catch(n){}p&&p(D,$)}o({global:!0,constructor:!0,wrap:!0,forced:j},{Promise:_}),h(_,"Promise",!1,!0),m("Promise")},function(n,e,t){var a,r,i,o,s,l,c,d,u=t(3),p=t(63),h=t(40).f,m=t(172).set,g=t(173),f=t(262),v=t(263),b=t(96),E=u.MutationObserver||u.WebKitMutationObserver,x=u.document,y=u.process,w=u.Promise,k=h(u,"queueMicrotask"),A=k&&k.value;A||(a=function(){var n,e;for(b&&(n=y.domain)&&n.exit();r;){e=r.fn,r=r.next;try{e()}catch(n){throw r?o():i=void 0,n}}i=void 0,n&&n.enter()},g||b||v||!E||!x?!f&&w&&w.resolve?((c=w.resolve(void 0)).constructor=w,d=p(c.then,c),o=function(){d(a)}):b?o=function(){y.nextTick(a)}:(m=p(m,u),o=function(){m(a)}):(s=!0,l=x.createTextNode(""),new E(a).observe(l,{characterData:!0}),o=function(){l.data=s=!s})),n.exports=A||function(n){var e={fn:n,next:void 0};i&&(i.next=e),r||(r=e,o()),i=e}},function(n,e,t){var a=t(30),r=t(3);n.exports=/ipad|iphone|ipod/i.test(a)&&void 0!==r.Pebble},function(n,e,t){var a=t(30);n.exports=/web0s(?!.*chrome)/i.test(a)},function(n,e,t){var a=t(3);n.exports=function(n,e){var t=a.console;t&&t.error&&(1==arguments.length?t.error(n):t.error(n,e))}},function(n,e){var t=function(){this.head=null,this.tail=null};t.prototype={add:function(n){var e={item:n,next:null};this.head?this.tail.next=e:this.head=e,this.tail=e},get:function(){var n=this.head;if(n)return this.head=n.next,this.tail===n&&(this.tail=null),n.item}},n.exports=t},function(n,e){n.exports="object"==typeof window&&"object"!=typeof Deno},function(n,e,t){"use strict";var a=t(0),r=t(7),i=t(24),o=t(77),s=t(130),l=t(174);a({target:"Promise",stat:!0,forced:t(177)},{all:function(n){var e=this,t=o.f(e),a=t.resolve,c=t.reject,d=s((function(){var t=i(e.resolve),o=[],s=0,d=1;l(n,(function(n){var i=s++,l=!1;d++,r(t,e,n).then((function(n){l||(l=!0,o[i]=n,--d||a(o))}),c)})),--d||a(o)}));return d.error&&c(d.value),t.promise}})},function(n,e,t){"use strict";var a=t(0),r=t(18),i=t(76).CONSTRUCTOR,o=t(58),s=t(14),l=t(4),c=t(16),d=o&&o.prototype;if(a({target:"Promise",proto:!0,forced:i,real:!0},{catch:function(n){return this.then(void 0,n)}}),!r&&l(o)){var u=s("Promise").prototype.catch;d.catch!==u&&c(d,"catch",u,{unsafe:!0})}},function(n,e,t){"use strict";var a=t(0),r=t(7),i=t(24),o=t(77),s=t(130),l=t(174);a({target:"Promise",stat:!0,forced:t(177)},{race:function(n){var e=this,t=o.f(e),a=t.reject,c=s((function(){var o=i(e.resolve);l(n,(function(n){r(o,e,n).then(t.resolve,a)}))}));return c.error&&a(c.value),t.promise}})},function(n,e,t){"use strict";var a=t(0),r=t(7),i=t(77);a({target:"Promise",stat:!0,forced:t(76).CONSTRUCTOR},{reject:function(n){var e=i.f(this);return r(e.reject,void 0,n),e.promise}})},function(n,e,t){"use strict";var a=t(0),r=t(14),i=t(18),o=t(58),s=t(76).CONSTRUCTOR,l=t(179),c=r("Promise"),d=i&&!s;a({target:"Promise",stat:!0,forced:i||s},{resolve:function(n){return l(d&&this===c?o:this,n)}})},function(n,e,t){var a=t(0),r=t(273);a({target:"Object",stat:!0,arity:2,forced:Object.assign!==r},{assign:r})},function(n,e,t){"use strict";var a=t(8),r=t(1),i=t(7),o=t(2),s=t(92),l=t(95),c=t(125),d=t(17),u=t(67),p=Object.assign,h=Object.defineProperty,m=r([].concat);n.exports=!p||o((function(){if(a&&1!==p({b:1},p(h({},"a",{enumerable:!0,get:function(){h(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=p({},n)[t]||"abcdefghijklmnopqrst"!=s(p({},e)).join("")}))?function(n,e){for(var t=d(n),r=arguments.length,o=1,p=l.f,h=c.f;r>o;)for(var g,f=u(arguments[o++]),v=p?m(s(f),p(f)):s(f),b=v.length,E=0;b>E;)g=v[E++],a&&!i(h,f,g)||(t[g]=f[g]);return t}:p},function(n,e,t){"use strict";var a=t(0),r=t(18),i=t(58),o=t(2),s=t(14),l=t(4),c=t(128),d=t(179),u=t(16),p=i&&i.prototype;if(a({target:"Promise",proto:!0,real:!0,forced:!!i&&o((function(){p.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=c(this,s("Promise")),t=l(n);return this.then(t?function(t){return d(e,n()).then((function(){return t}))}:n,t?function(t){return d(e,n()).then((function(){throw t}))}:n)}}),!r&&l(i)){var h=s("Promise").prototype.finally;p.finally!==h&&u(p,"finally",h,{unsafe:!0})}},function(n,e,t){"use strict";var a=t(0),r=t(3),i=t(7),o=t(1),s=t(18),l=t(8),c=t(54),d=t(2),u=t(9),p=t(33),h=t(10),m=t(23),g=t(91),f=t(13),v=t(49),b=t(32),E=t(92),x=t(68),y=t(180),w=t(95),k=t(40),A=t(12),S=t(149),B=t(125),T=t(16),C=t(53),j=t(93),z=t(72),P=t(89),I=t(5),F=t(181),D=t(98),_=t(277),$=t(35),L=t(39),U=t(50).forEach,O=j("hidden"),M=L.set,q=L.getterFor("Symbol"),J=Object.prototype,Z=r.Symbol,N=Z&&Z.prototype,H=r.TypeError,R=r.QObject,V=k.f,W=A.f,G=y.f,Q=B.f,X=o([].push),Y=C("symbols"),K=C("op-symbols"),nn=C("wks"),en=!R||!R.prototype||!R.prototype.findChild,tn=l&&d((function(){return 7!=b(W({},"a",{get:function(){return W(this,"a",{value:7}).a}})).a}))?function(n,e,t){var a=V(J,e);a&&delete J[e],W(n,e,t),a&&n!==J&&W(J,e,a)}:W,an=function(n,e){var t=Y[n]=b(N);return M(t,{type:"Symbol",tag:n,description:e}),l||(t.description=e),t},rn=function(n,e,t){n===J&&rn(K,e,t),h(n);var a=g(e);return h(t),u(Y,a)?(t.enumerable?(u(n,O)&&n[O][a]&&(n[O][a]=!1),t=b(t,{enumerable:v(0,!1)})):(u(n,O)||W(n,O,v(1,{})),n[O][a]=!0),tn(n,a,t)):W(n,a,t)},on=function(n,e){h(n);var t=m(e),a=E(t).concat(dn(t));return U(a,(function(e){l&&!i(sn,t,e)||rn(n,e,t[e])})),n},sn=function(n){var e=g(n),t=i(Q,this,e);return!(this===J&&u(Y,e)&&!u(K,e))&&(!(t||!u(this,e)||!u(Y,e)||u(this,O)&&this[O][e])||t)},ln=function(n,e){var t=m(n),a=g(e);if(t!==J||!u(Y,a)||u(K,a)){var r=V(t,a);return!r||!u(Y,a)||u(t,O)&&t[O][a]||(r.enumerable=!0),r}},cn=function(n){var e=G(m(n)),t=[];return U(e,(function(n){u(Y,n)||u(z,n)||X(t,n)})),t},dn=function(n){var e=n===J,t=G(e?K:m(n)),a=[];return U(t,(function(n){!u(Y,n)||e&&!u(J,n)||X(a,Y[n])})),a};c||(T(N=(Z=function(){if(p(N,this))throw H("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?f(arguments[0]):void 0,e=P(n),t=function(n){this===J&&i(t,K,n),u(this,O)&&u(this[O],e)&&(this[O][e]=!1),tn(this,e,v(1,n))};return l&&en&&tn(J,e,{configurable:!0,set:t}),an(e,n)}).prototype,"toString",(function(){return q(this).tag})),T(Z,"withoutSetter",(function(n){return an(P(n),n)})),B.f=sn,A.f=rn,S.f=on,k.f=ln,x.f=y.f=cn,w.f=dn,F.f=function(n){return an(I(n),n)},l&&(W(N,"description",{configurable:!0,get:function(){return q(this).description}}),s||T(J,"propertyIsEnumerable",sn,{unsafe:!0}))),a({global:!0,constructor:!0,wrap:!0,forced:!c,sham:!c},{Symbol:Z}),U(E(nn),(function(n){D(n)})),a({target:"Symbol",stat:!0,forced:!c},{useSetter:function(){en=!0},useSimple:function(){en=!1}}),a({target:"Object",stat:!0,forced:!c,sham:!l},{create:function(n,e){return void 0===e?b(n):on(b(n),e)},defineProperty:rn,defineProperties:on,getOwnPropertyDescriptor:ln}),a({target:"Object",stat:!0,forced:!c},{getOwnPropertyNames:cn}),_(),$(Z,"Symbol"),z[O]=!0},function(n,e,t){var a=t(3);n.exports=a},function(n,e,t){var a=t(7),r=t(14),i=t(5),o=t(16);n.exports=function(){var n=r("Symbol"),e=n&&n.prototype,t=e&&e.valueOf,s=i("toPrimitive");e&&!e[s]&&o(e,s,(function(n){return a(t,this)}),{arity:1})}},function(n,e,t){var a=t(51),r=t(97),i=t(11),o=t(5)("species"),s=Array;n.exports=function(n){var e;return a(n)&&(e=n.constructor,(r(e)&&(e===s||a(e.prototype))||i(e)&&null===(e=e[o]))&&(e=void 0)),void 0===e?s:e}},function(n,e,t){var a=t(0),r=t(14),i=t(9),o=t(13),s=t(53),l=t(182),c=s("string-to-symbol-registry"),d=s("symbol-to-string-registry");a({target:"Symbol",stat:!0,forced:!l},{for:function(n){var e=o(n);if(i(c,e))return c[e];var t=r("Symbol")(e);return c[e]=t,d[t]=e,t}})},function(n,e,t){var a=t(0),r=t(9),i=t(71),o=t(56),s=t(53),l=t(182),c=s("symbol-to-string-registry");a({target:"Symbol",stat:!0,forced:!l},{keyFor:function(n){if(!i(n))throw TypeError(o(n)+" is not a symbol");if(r(c,n))return c[n]}})},function(n,e,t){var a=t(0),r=t(54),i=t(2),o=t(95),s=t(17);a({target:"Object",stat:!0,forced:!r||i((function(){o.f(1)}))},{getOwnPropertySymbols:function(n){var e=o.f;return e?e(s(n)):[]}})},function(n,e,t){"use strict";var a=t(129),r=t(87);n.exports=a?{}.toString:function(){return"[object "+r(this)+"]"}},function(n,e,t){"use strict";var a=t(14),r=t(9),i=t(34),o=t(33),s=t(74),l=t(126),c=t(242),d=t(153),u=t(186),p=t(284),h=t(285),m=t(286),g=t(8),f=t(18);n.exports=function(n,e,t,v){var b=v?2:1,E=n.split("."),x=E[E.length-1],y=a.apply(null,E);if(y){var w=y.prototype;if(!f&&r(w,"cause")&&delete w.cause,!t)return y;var k=a("Error"),A=e((function(n,e){var t=u(v?e:n,void 0),a=v?new y(n):new y;return void 0!==t&&i(a,"message",t),m&&i(a,"stack",h(a.stack,2)),this&&o(w,this)&&d(a,this,A),arguments.length>b&&p(a,arguments[b]),a}));if(A.prototype=w,"Error"!==x?s?s(A,k):l(A,k,{name:!0}):g&&"stackTraceLimit"in y&&(c(A,y,"stackTraceLimit"),c(A,y,"prepareStackTrace")),l(A,y),!f)try{w.name!==x&&i(w,"name",x),w.constructor=A}catch(n){}return A}}},function(n,e,t){var a=t(11),r=t(34);n.exports=function(n,e){a(e)&&"cause"in e&&r(n,"cause",e.cause)}},function(n,e,t){var a=t(1),r=Error,i=a("".replace),o=String(r("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(o);n.exports=function(n,e){if(l&&"string"==typeof n&&!r.prepareStackTrace)for(;e--;)n=i(n,s,"");return n}},function(n,e,t){var a=t(2),r=t(49);n.exports=!a((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",r(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var a=t(8),r=t(2),i=t(10),o=t(32),s=t(186),l=Error.prototype.toString,c=r((function(){if(a){var n=o(Object.defineProperty({},"name",{get:function(){return this===n}}));if("true"!==l.call(n))return!0}return"2: 1"!==l.call({message:1,name:2})||"Error"!==l.call({})}));n.exports=c?function(){var n=i(this),e=s(n.name,"Error"),t=s(n.message);return e?t?e+": "+t:e:t}:l},function(n,e,t){"use strict";var a=t(0),r=t(289).left,i=t(46),o=t(55),s=t(96);a({target:"Array",proto:!0,forced:!i("reduce")||!s&&o>79&&o<83},{reduce:function(n){var e=arguments.length;return r(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){var a=t(24),r=t(17),i=t(67),o=t(25),s=TypeError,l=function(n){return function(e,t,l,c){a(t);var d=r(e),u=i(d),p=o(d),h=n?p-1:0,m=n?-1:1;if(l<2)for(;;){if(h in u){c=u[h],h+=m;break}if(h+=m,n?h<0:p<=h)throw s("Reduce of empty array with no initial value")}for(;n?h>=0:p>h;h+=m)h in u&&(c=t(c,u[h],h,d));return c}};n.exports={left:l(!1),right:l(!0)}},function(n,e,t){"use strict";var a,r=t(0),i=t(1),o=t(40).f,s=t(57),l=t(13),c=t(188),d=t(20),u=t(189),p=t(18),h=i("".startsWith),m=i("".slice),g=Math.min,f=u("startsWith");r({target:"String",proto:!0,forced:!!(p||f||(a=o(String.prototype,"startsWith"),!a||a.writable))&&!f},{startsWith:function(n){var e=l(d(this));c(n);var t=s(g(arguments.length>1?arguments[1]:void 0,e.length)),a=l(n);return h?h(e,a,t):m(e,t,t+a.length)===a}})},function(n,e,t){var a=t(0),r=t(190),i=t(2),o=t(11),s=t(292).onFreeze,l=Object.freeze;a({target:"Object",stat:!0,forced:i((function(){l(1)})),sham:!r},{freeze:function(n){return l&&o(n)?l(s(n)):n}})},function(n,e,t){var a=t(0),r=t(1),i=t(72),o=t(11),s=t(9),l=t(12).f,c=t(68),d=t(180),u=t(293),p=t(89),h=t(190),m=!1,g=p("meta"),f=0,v=function(n){l(n,g,{value:{objectID:"O"+f++,weakData:{}}})},b=n.exports={enable:function(){b.enable=function(){},m=!0;var n=c.f,e=r([].splice),t={};t[g]=1,n(t).length&&(c.f=function(t){for(var a=n(t),r=0,i=a.length;r<i;r++)if(a[r]===g){e(a,r,1);break}return a},a({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:d.f}))},fastKey:function(n,e){if(!o(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!s(n,g)){if(!u(n))return"F";if(!e)return"E";v(n)}return n[g].objectID},getWeakData:function(n,e){if(!s(n,g)){if(!u(n))return!0;if(!e)return!1;v(n)}return n[g].weakData},onFreeze:function(n){return h&&m&&u(n)&&!s(n,g)&&v(n),n}};i[g]=!0},function(n,e,t){var a=t(2),r=t(11),i=t(28),o=t(294),s=Object.isExtensible,l=a((function(){s(1)}));n.exports=l||o?function(n){return!!r(n)&&((!o||"ArrayBuffer"!=i(n))&&(!s||s(n)))}:s},function(n,e,t){var a=t(2);n.exports=a((function(){if("function"==typeof ArrayBuffer){var n=new ArrayBuffer(8);Object.isExtensible(n)&&Object.defineProperty(n,"a",{value:8})}}))},function(n,e,t){"use strict";var a=t(63),r=t(7),i=t(17),o=t(296),s=t(175),l=t(97),c=t(25),d=t(78),u=t(151),p=t(114),h=Array;n.exports=function(n){var e=i(n),t=l(this),m=arguments.length,g=m>1?arguments[1]:void 0,f=void 0!==g;f&&(g=a(g,m>2?arguments[2]:void 0));var v,b,E,x,y,w,k=p(e),A=0;if(!k||this===h&&s(k))for(v=c(e),b=t?new this(v):h(v);v>A;A++)w=f?g(e[A],A):e[A],d(b,A,w);else for(y=(x=u(e,k)).next,b=t?new this:[];!(E=r(y,x)).done;A++)w=f?o(x,g,[E.value,A],!0):E.value,d(b,A,w);return b.length=A,b}},function(n,e,t){var a=t(10),r=t(176);n.exports=function(n,e,t,i){try{return i?e(a(t)[0],t[1]):e(t)}catch(e){r(n,"throw",e)}}},function(n,e,t){var a=t(1),r=t(17),i=Math.floor,o=a("".charAt),s=a("".replace),l=a("".slice),c=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,d=/\$([$&'`]|\d{1,2})/g;n.exports=function(n,e,t,a,u,p){var h=t+n.length,m=a.length,g=d;return void 0!==u&&(u=r(u),g=c),s(p,g,(function(r,s){var c;switch(o(s,0)){case"$":return"$";case"&":return n;case"`":return l(e,0,t);case"'":return l(e,h);case"<":c=u[l(s,1,-1)];break;default:var d=+s;if(0===d)return r;if(d>m){var p=i(d/10);return 0===p?r:p<=m?void 0===a[p-1]?o(s,1):a[p-1]+o(s,1):r}c=a[d-1]}return void 0===c?"":c}))}},function(n,e,t){var a=t(192),r=t(299);n.exports=function n(e,t,i,o,s){var l=-1,c=e.length;for(i||(i=r),s||(s=[]);++l<c;){var d=e[l];t>0&&i(d)?t>1?n(d,t-1,i,o,s):a(s,d):o||(s[s.length]=d)}return s}},function(n,e,t){var a=t(79),r=t(134),i=t(29),o=a?a.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||r(n)||!!(o&&n&&n[o])}},function(n,e,t){var a=t(69),r=t(52);n.exports=function(n){return r(n)&&"[object Arguments]"==a(n)}},function(n,e,t){var a=t(79),r=Object.prototype,i=r.hasOwnProperty,o=r.toString,s=a?a.toStringTag:void 0;n.exports=function(n){var e=i.call(n,s),t=n[s];try{n[s]=void 0;var a=!0}catch(n){}var r=o.call(n);return a&&(e?n[s]=t:delete n[s]),r}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var a=t(304),r=t(360),i=t(142),o=t(29),s=t(371);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?o(n)?r(n[0],n[1]):a(n):s(n)}},function(n,e,t){var a=t(305),r=t(359),i=t(209);n.exports=function(n){var e=r(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||a(t,n,e)}}},function(n,e,t){var a=t(194),r=t(198);n.exports=function(n,e,t,i){var o=t.length,s=o,l=!i;if(null==n)return!s;for(n=Object(n);o--;){var c=t[o];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++o<s;){var d=(c=t[o])[0],u=n[d],p=c[1];if(l&&c[2]){if(void 0===u&&!(d in n))return!1}else{var h=new a;if(i)var m=i(u,p,d,n,e,h);if(!(void 0===m?r(p,u,3,i,h):m))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var a=t(103),r=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=a(e,n);return!(t<0)&&(t==e.length-1?e.pop():r.call(e,t,1),--this.size,!0)}},function(n,e,t){var a=t(103);n.exports=function(n){var e=this.__data__,t=a(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var a=t(103);n.exports=function(n){return a(this.__data__,n)>-1}},function(n,e,t){var a=t(103);n.exports=function(n,e){var t=this.__data__,r=a(t,n);return r<0?(++this.size,t.push([n,e])):t[r][1]=e,this}},function(n,e,t){var a=t(102);n.exports=function(){this.__data__=new a,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var a=t(102),r=t(135),i=t(137);n.exports=function(n,e){var t=this.__data__;if(t instanceof a){var o=t.__data__;if(!r||o.length<199)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(o)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var a=t(196),r=t(317),i=t(136),o=t(197),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,u=c.hasOwnProperty,p=RegExp("^"+d.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||r(n))&&(a(n)?p:s).test(o(n))}},function(n,e,t){var a,r=t(318),i=(a=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var a=t(31)["__core-js_shared__"];n.exports=a},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var a=t(321),r=t(102),i=t(135);n.exports=function(){this.size=0,this.__data__={hash:new a,map:new(i||r),string:new a}}},function(n,e,t){var a=t(322),r=t(323),i=t(324),o=t(325),s=t(326);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=r,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var a=t(104);n.exports=function(){this.__data__=a?a(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var a=t(104),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(a){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(e,n)?e[n]:void 0}},function(n,e,t){var a=t(104),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return a?void 0!==e[n]:r.call(e,n)}},function(n,e,t){var a=t(104);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=a&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var a=t(105);n.exports=function(n){var e=a(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var a=t(105);n.exports=function(n){return a(this,n).get(n)}},function(n,e,t){var a=t(105);n.exports=function(n){return a(this,n).has(n)}},function(n,e,t){var a=t(105);n.exports=function(n,e){var t=a(this,n),r=t.size;return t.set(n,e),this.size+=t.size==r?0:1,this}},function(n,e,t){var a=t(194),r=t(199),i=t(336),o=t(339),s=t(355),l=t(29),c=t(203),d=t(205),u="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,h,m,g){var f=l(n),v=l(e),b=f?"[object Array]":s(n),E=v?"[object Array]":s(e),x=(b="[object Arguments]"==b?u:b)==u,y=(E="[object Arguments]"==E?u:E)==u,w=b==E;if(w&&c(n)){if(!c(e))return!1;f=!0,x=!1}if(w&&!x)return g||(g=new a),f||d(n)?r(n,e,t,h,m,g):i(n,e,b,t,h,m,g);if(!(1&t)){var k=x&&p.call(n,"__wrapped__"),A=y&&p.call(e,"__wrapped__");if(k||A){var S=k?n.value():n,B=A?e.value():e;return g||(g=new a),m(S,B,t,h,g)}}return!!w&&(g||(g=new a),o(n,e,t,h,m,g))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length;++t<a;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var a=t(79),r=t(337),i=t(195),o=t(199),s=t(338),l=t(138),c=a?a.prototype:void 0,d=c?c.valueOf:void 0;n.exports=function(n,e,t,a,c,u,p){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new r(n),new r(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var h=s;case"[object Set]":var m=1&a;if(h||(h=l),n.size!=e.size&&!m)return!1;var g=p.get(n);if(g)return g==e;a|=2,p.set(n,e);var f=o(h(n),h(e),a,c,u,p);return p.delete(n),f;case"[object Symbol]":if(d)return d.call(n)==d.call(e)}return!1}},function(n,e,t){var a=t(31).Uint8Array;n.exports=a},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,a){t[++e]=[a,n]})),t}},function(n,e,t){var a=t(340),r=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,o,s){var l=1&t,c=a(n),d=c.length;if(d!=a(e).length&&!l)return!1;for(var u=d;u--;){var p=c[u];if(!(l?p in e:r.call(e,p)))return!1}var h=s.get(n),m=s.get(e);if(h&&m)return h==e&&m==n;var g=!0;s.set(n,e),s.set(e,n);for(var f=l;++u<d;){var v=n[p=c[u]],b=e[p];if(i)var E=l?i(b,v,p,e,n,s):i(v,b,p,n,e,s);if(!(void 0===E?v===b||o(v,b,t,i,s):E)){g=!1;break}f||(f="constructor"==p)}if(g&&!f){var x=n.constructor,y=e.constructor;x==y||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof y&&y instanceof y||(g=!1)}return s.delete(n),s.delete(e),g}},function(n,e,t){var a=t(341),r=t(342),i=t(202);n.exports=function(n){return a(n,i,r)}},function(n,e,t){var a=t(192),r=t(29);n.exports=function(n,e,t){var i=e(n);return r(n)?i:a(i,t(n))}},function(n,e,t){var a=t(343),r=t(344),i=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(n){return null==n?[]:(n=Object(n),a(o(n),(function(e){return i.call(n,e)})))}:r;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length,r=0,i=[];++t<a;){var o=n[t];e(o,t,n)&&(i[r++]=o)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var a=t(346),r=t(134),i=t(29),o=t(203),s=t(204),l=t(205),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),d=!t&&r(n),u=!t&&!d&&o(n),p=!t&&!d&&!u&&l(n),h=t||d||u||p,m=h?a(n.length,String):[],g=m.length;for(var f in n)!e&&!c.call(n,f)||h&&("length"==f||u&&("offset"==f||"parent"==f)||p&&("buffer"==f||"byteLength"==f||"byteOffset"==f)||s(f,g))||m.push(f);return m}},function(n,e){n.exports=function(n,e){for(var t=-1,a=Array(n);++t<n;)a[t]=e(t);return a}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var a=t(69),r=t(139),i=t(52),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&r(n.length)&&!!o[a(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var a=t(193),r=e&&!e.nodeType&&e,i=r&&"object"==typeof n&&n&&!n.nodeType&&n,o=i&&i.exports===r&&a.process,s=function(){try{var n=i&&i.require&&i.require("util").types;return n||o&&o.binding&&o.binding("util")}catch(n){}}();n.exports=s}).call(this,t(157)(n))},function(n,e,t){var a=t(352),r=t(353),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!a(n))return r(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var a=t(354)(Object.keys,Object);n.exports=a},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var a=t(356),r=t(135),i=t(357),o=t(207),s=t(358),l=t(69),c=t(197),d=c(a),u=c(r),p=c(i),h=c(o),m=c(s),g=l;(a&&"[object DataView]"!=g(new a(new ArrayBuffer(1)))||r&&"[object Map]"!=g(new r)||i&&"[object Promise]"!=g(i.resolve())||o&&"[object Set]"!=g(new o)||s&&"[object WeakMap]"!=g(new s))&&(g=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,a=t?c(t):"";if(a)switch(a){case d:return"[object DataView]";case u:return"[object Map]";case p:return"[object Promise]";case h:return"[object Set]";case m:return"[object WeakMap]"}return e}),n.exports=g},function(n,e,t){var a=t(42)(t(31),"DataView");n.exports=a},function(n,e,t){var a=t(42)(t(31),"Promise");n.exports=a},function(n,e,t){var a=t(42)(t(31),"WeakMap");n.exports=a},function(n,e,t){var a=t(208),r=t(202);n.exports=function(n){for(var e=r(n),t=e.length;t--;){var i=e[t],o=n[i];e[t]=[i,o,a(o)]}return e}},function(n,e,t){var a=t(198),r=t(361),i=t(368),o=t(140),s=t(208),l=t(209),c=t(106);n.exports=function(n,e){return o(n)&&s(e)?l(c(n),e):function(t){var o=r(t,n);return void 0===o&&o===e?i(t,n):a(e,o,3)}}},function(n,e,t){var a=t(210);n.exports=function(n,e,t){var r=null==n?void 0:a(n,e);return void 0===r?t:r}},function(n,e,t){var a=t(363),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,o=a((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(r,(function(n,t,a,r){e.push(a?r.replace(i,"$1"):t||n)})),e}));n.exports=o},function(n,e,t){var a=t(364);n.exports=function(n){var e=a(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var a=t(137);function r(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var a=arguments,r=e?e.apply(this,a):a[0],i=t.cache;if(i.has(r))return i.get(r);var o=n.apply(this,a);return t.cache=i.set(r,o)||i,o};return t.cache=new(r.Cache||a),t}r.Cache=a,n.exports=r},function(n,e,t){var a=t(366);n.exports=function(n){return null==n?"":a(n)}},function(n,e,t){var a=t(79),r=t(367),i=t(29),o=t(141),s=a?a.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return r(e,n)+"";if(o(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length,r=Array(a);++t<a;)r[t]=e(n[t],t,n);return r}},function(n,e,t){var a=t(369),r=t(370);n.exports=function(n,e){return null!=n&&r(n,e,a)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var a=t(211),r=t(134),i=t(29),o=t(204),s=t(139),l=t(106);n.exports=function(n,e,t){for(var c=-1,d=(e=a(e,n)).length,u=!1;++c<d;){var p=l(e[c]);if(!(u=null!=n&&t(n,p)))break;n=n[p]}return u||++c!=d?u:!!(d=null==n?0:n.length)&&s(d)&&o(p,d)&&(i(n)||r(n))}},function(n,e,t){var a=t(372),r=t(373),i=t(140),o=t(106);n.exports=function(n){return i(n)?a(o(n)):r(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var a=t(210);n.exports=function(n){return function(e){return a(e,n)}}},function(n,e,t){var a=t(142),r=t(375),i=t(377);n.exports=function(n,e){return i(r(n,e,a),n+"")}},function(n,e,t){var a=t(376),r=Math.max;n.exports=function(n,e,t){return e=r(void 0===e?n.length-1:e,0),function(){for(var i=arguments,o=-1,s=r(i.length-e,0),l=Array(s);++o<s;)l[o]=i[e+o];o=-1;for(var c=Array(e+1);++o<e;)c[o]=i[o];return c[e]=t(l),a(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var a=t(378),r=t(381)(a);n.exports=r},function(n,e,t){var a=t(379),r=t(380),i=t(142),o=r?function(n,e){return r(n,"toString",{configurable:!0,enumerable:!1,value:a(e),writable:!0})}:i;n.exports=o},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var a=t(42),r=function(){try{var n=a(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=r},function(n,e){var t=Date.now;n.exports=function(n){var e=0,a=0;return function(){var r=t(),i=16-(r-a);if(a=r,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var a=t(200),r=t(383),i=t(388),o=t(201),s=t(389),l=t(138);n.exports=function(n,e,t){var c=-1,d=r,u=n.length,p=!0,h=[],m=h;if(t)p=!1,d=i;else if(u>=200){var g=e?null:s(n);if(g)return l(g);p=!1,d=o,m=new a}else m=e?[]:h;n:for(;++c<u;){var f=n[c],v=e?e(f):f;if(f=t||0!==f?f:0,p&&v==v){for(var b=m.length;b--;)if(m[b]===v)continue n;e&&m.push(v),h.push(f)}else d(m,v,t)||(m!==h&&m.push(v),h.push(f))}return h}},function(n,e,t){var a=t(384);n.exports=function(n,e){return!!(null==n?0:n.length)&&a(n,e,0)>-1}},function(n,e,t){var a=t(385),r=t(386),i=t(387);n.exports=function(n,e,t){return e==e?i(n,e,t):a(n,r,t)}},function(n,e){n.exports=function(n,e,t,a){for(var r=n.length,i=t+(a?1:-1);a?i--:++i<r;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var a=t-1,r=n.length;++a<r;)if(n[a]===e)return a;return-1}},function(n,e){n.exports=function(n,e,t){for(var a=-1,r=null==n?0:n.length;++a<r;)if(t(e,n[a]))return!0;return!1}},function(n,e,t){var a=t(207),r=t(390),i=t(138),o=a&&1/i(new a([,-0]))[1]==1/0?function(n){return new a(n)}:r;n.exports=o},function(n,e){n.exports=function(){}},function(n,e,t){var a=t(206),r=t(52);n.exports=function(n){return r(n)&&a(n)}},function(n,e,t){var a=t(0),r=t(3),i=t(212).setInterval;a({global:!0,bind:!0,forced:r.setInterval!==i},{setInterval:i})},function(n,e,t){var a=t(0),r=t(3),i=t(212).setTimeout;a({global:!0,bind:!0,forced:r.setTimeout!==i},{setTimeout:i})},function(n,e,t){},function(n,e,t){},function(n,e,t){var a=t(1);n.exports=a(1..valueOf)},function(n,e,t){"use strict";t(213)},function(n,e,t){},function(n,e,t){var a=t(1),r=t(57),i=t(13),o=t(400),s=t(20),l=a(o),c=a("".slice),d=Math.ceil,u=function(n){return function(e,t,a){var o,u,p=i(s(e)),h=r(t),m=p.length,g=void 0===a?" ":i(a);return h<=m||""==g?p:((u=l(g,d((o=h-m)/g.length))).length>o&&(u=c(u,0,o)),n?p+u:u+p)}};n.exports={start:u(!1),end:u(!0)}},function(n,e,t){"use strict";var a=t(65),r=t(13),i=t(20),o=RangeError;n.exports=function(n){var e=r(i(this)),t="",s=a(n);if(s<0||s==1/0)throw o("Wrong number of repetitions");for(;s>0;(s>>>=1)&&(e+=e))1&s&&(t+=e);return t}},function(n,e,t){var a=t(30);n.exports=/Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(a)},function(n,e,t){"use strict";t(214)},function(n,e,t){"use strict";t(215)},function(n,e,t){"use strict";var a=t(56),r=TypeError;n.exports=function(n,e){if(!delete n[e])throw r("Cannot delete property "+a(e)+" of "+a(n))}},function(n,e,t){var a=t(30).match(/firefox\/(\d+)/i);n.exports=!!a&&+a[1]},function(n,e,t){var a=t(30);n.exports=/MSIE|Trident/.test(a)},function(n,e,t){var a=t(30).match(/AppleWebKit\/(\d+)\./);n.exports=!!a&&+a[1]},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(216)},function(n,e,t){"use strict";t(221)},function(n,e,t){"use strict";t(222)},function(n,e,t){"use strict";t.r(e);t(148),t(259),t(272),t(274);var a=t(59),r=t(100),i=(t(62),t(6),t(21),t(27),t(44),t(26),Object.freeze({}));function o(n){return null==n}function s(n){return null!=n}function l(n){return!0===n}function c(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function d(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function p(n){return"[object Object]"===u.call(n)}function h(n){return"[object RegExp]"===u.call(n)}function m(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function g(n){return s(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function f(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function v(n){var e=parseFloat(n);return isNaN(e)?n:e}function b(n,e){for(var t=Object.create(null),a=n.split(","),r=0;r<a.length;r++)t[a[r]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}b("slot,component",!0);var E=b("key,ref,slot,slot-scope,is");function x(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var y=Object.prototype.hasOwnProperty;function w(n,e){return y.call(n,e)}function k(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var A=/-(\w)/g,S=k((function(n){return n.replace(A,(function(n,e){return e?e.toUpperCase():""}))})),B=k((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),T=/\B([A-Z])/g,C=k((function(n){return n.replace(T,"-$1").toLowerCase()}));var j=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var a=arguments.length;return a?a>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function z(n,e){e=e||0;for(var t=n.length-e,a=new Array(t);t--;)a[t]=n[t+e];return a}function P(n,e){for(var t in e)n[t]=e[t];return n}function I(n){for(var e={},t=0;t<n.length;t++)n[t]&&P(e,n[t]);return e}function F(n,e,t){}var D=function(n,e,t){return!1},_=function(n){return n};function $(n,e){if(n===e)return!0;var t=d(n),a=d(e);if(!t||!a)return!t&&!a&&String(n)===String(e);try{var r=Array.isArray(n),i=Array.isArray(e);if(r&&i)return n.length===e.length&&n.every((function(n,t){return $(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(r||i)return!1;var o=Object.keys(n),s=Object.keys(e);return o.length===s.length&&o.every((function(t){return $(n[t],e[t])}))}catch(n){return!1}}function L(n,e){for(var t=0;t<n.length;t++)if($(n[t],e))return t;return-1}function U(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var O=["component","directive","filter"],M=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:D,isReservedAttr:D,isUnknownElement:D,getTagNamespace:F,parsePlatformTagName:_,mustUseProp:D,async:!0,_lifecycleHooks:M},J=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function Z(n,e,t,a){Object.defineProperty(n,e,{value:t,enumerable:!!a,writable:!0,configurable:!0})}var N=new RegExp("[^"+J.source+".$_\\d]");var H,R="__proto__"in{},V="undefined"!=typeof window,W="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,G=W&&WXEnvironment.platform.toLowerCase(),Q=V&&window.navigator.userAgent.toLowerCase(),X=Q&&/msie|trident/.test(Q),Y=Q&&Q.indexOf("msie 9.0")>0,K=Q&&Q.indexOf("edge/")>0,nn=(Q&&Q.indexOf("android"),Q&&/iphone|ipad|ipod|ios/.test(Q)||"ios"===G),en=(Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q),Q&&Q.match(/firefox\/(\d+)/)),tn={}.watch,an=!1;if(V)try{var rn={};Object.defineProperty(rn,"passive",{get:function(){an=!0}}),window.addEventListener("test-passive",null,rn)}catch(n){}var on=function(){return void 0===H&&(H=!V&&!W&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),H},sn=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ln(n){return"function"==typeof n&&/native code/.test(n.toString())}var cn,dn="undefined"!=typeof Symbol&&ln(Symbol)&&"undefined"!=typeof Reflect&&ln(Reflect.ownKeys);cn="undefined"!=typeof Set&&ln(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=F,pn=0,hn=function(){this.id=pn++,this.subs=[]};hn.prototype.addSub=function(n){this.subs.push(n)},hn.prototype.removeSub=function(n){x(this.subs,n)},hn.prototype.depend=function(){hn.target&&hn.target.addDep(this)},hn.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},hn.target=null;var mn=[];function gn(n){mn.push(n),hn.target=n}function fn(){mn.pop(),hn.target=mn[mn.length-1]}var vn=function(n,e,t,a,r,i,o,s){this.tag=n,this.data=e,this.children=t,this.text=a,this.elm=r,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},bn={child:{configurable:!0}};bn.child.get=function(){return this.componentInstance},Object.defineProperties(vn.prototype,bn);var En=function(n){void 0===n&&(n="");var e=new vn;return e.text=n,e.isComment=!0,e};function xn(n){return new vn(void 0,void 0,void 0,String(n))}function yn(n){var e=new vn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var wn=Array.prototype,kn=Object.create(wn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=wn[n];Z(kn,n,(function(){for(var t=[],a=arguments.length;a--;)t[a]=arguments[a];var r,i=e.apply(this,t),o=this.__ob__;switch(n){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&o.observeArray(r),o.dep.notify(),i}))}));var An=Object.getOwnPropertyNames(kn),Sn=!0;function Bn(n){Sn=n}var Tn=function(n){this.value=n,this.dep=new hn,this.vmCount=0,Z(n,"__ob__",this),Array.isArray(n)?(R?function(n,e){n.__proto__=e}(n,kn):function(n,e,t){for(var a=0,r=t.length;a<r;a++){var i=t[a];Z(n,i,e[i])}}(n,kn,An),this.observeArray(n)):this.walk(n)};function Cn(n,e){var t;if(d(n)&&!(n instanceof vn))return w(n,"__ob__")&&n.__ob__ instanceof Tn?t=n.__ob__:Sn&&!on()&&(Array.isArray(n)||p(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new Tn(n)),e&&t&&t.vmCount++,t}function jn(n,e,t,a,r){var i=new hn,o=Object.getOwnPropertyDescriptor(n,e);if(!o||!1!==o.configurable){var s=o&&o.get,l=o&&o.set;s&&!l||2!==arguments.length||(t=n[e]);var c=!r&&Cn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return hn.target&&(i.depend(),c&&(c.dep.depend(),Array.isArray(e)&&In(e))),e},set:function(e){var a=s?s.call(n):t;e===a||e!=e&&a!=a||s&&!l||(l?l.call(n,e):t=e,c=!r&&Cn(e),i.notify())}})}}function zn(n,e,t){if(Array.isArray(n)&&m(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var a=n.__ob__;return n._isVue||a&&a.vmCount?t:a?(jn(a.value,e,t),a.dep.notify(),t):(n[e]=t,t)}function Pn(n,e){if(Array.isArray(n)&&m(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||w(n,e)&&(delete n[e],t&&t.dep.notify())}}function In(n){for(var e=void 0,t=0,a=n.length;t<a;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&In(e)}Tn.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)jn(n,e[t])},Tn.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Cn(n[e])};var Fn=q.optionMergeStrategies;function Dn(n,e){if(!e)return n;for(var t,a,r,i=dn?Reflect.ownKeys(e):Object.keys(e),o=0;o<i.length;o++)"__ob__"!==(t=i[o])&&(a=n[t],r=e[t],w(n,t)?a!==r&&p(a)&&p(r)&&Dn(a,r):zn(n,t,r));return n}function _n(n,e,t){return t?function(){var a="function"==typeof e?e.call(t,t):e,r="function"==typeof n?n.call(t,t):n;return a?Dn(a,r):r}:e?n?function(){return Dn("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function $n(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Ln(n,e,t,a){var r=Object.create(n||null);return e?P(r,e):r}Fn.data=function(n,e,t){return t?_n(n,e,t):e&&"function"!=typeof e?n:_n(n,e)},M.forEach((function(n){Fn[n]=$n})),O.forEach((function(n){Fn[n+"s"]=Ln})),Fn.watch=function(n,e,t,a){if(n===tn&&(n=void 0),e===tn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var r={};for(var i in P(r,n),e){var o=r[i],s=e[i];o&&!Array.isArray(o)&&(o=[o]),r[i]=o?o.concat(s):Array.isArray(s)?s:[s]}return r},Fn.props=Fn.methods=Fn.inject=Fn.computed=function(n,e,t,a){if(!n)return e;var r=Object.create(null);return P(r,n),e&&P(r,e),r},Fn.provide=_n;var Un=function(n,e){return void 0===e?n:e};function On(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var a,r,i={};if(Array.isArray(t))for(a=t.length;a--;)"string"==typeof(r=t[a])&&(i[S(r)]={type:null});else if(p(t))for(var o in t)r=t[o],i[S(o)]=p(r)?r:{type:r};else 0;n.props=i}}(e),function(n,e){var t=n.inject;if(t){var a=n.inject={};if(Array.isArray(t))for(var r=0;r<t.length;r++)a[t[r]]={from:t[r]};else if(p(t))for(var i in t){var o=t[i];a[i]=p(o)?P({from:i},o):{from:o}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var a=e[t];"function"==typeof a&&(e[t]={bind:a,update:a})}}(e),!e._base&&(e.extends&&(n=On(n,e.extends,t)),e.mixins))for(var a=0,r=e.mixins.length;a<r;a++)n=On(n,e.mixins[a],t);var i,o={};for(i in n)s(i);for(i in e)w(n,i)||s(i);function s(a){var r=Fn[a]||Un;o[a]=r(n[a],e[a],t,a)}return o}function Mn(n,e,t,a){if("string"==typeof t){var r=n[e];if(w(r,t))return r[t];var i=S(t);if(w(r,i))return r[i];var o=B(i);return w(r,o)?r[o]:r[t]||r[i]||r[o]}}function qn(n,e,t,a){var r=e[n],i=!w(t,n),o=t[n],s=Hn(Boolean,r.type);if(s>-1)if(i&&!w(r,"default"))o=!1;else if(""===o||o===C(n)){var l=Hn(String,r.type);(l<0||s<l)&&(o=!0)}if(void 0===o){o=function(n,e,t){if(!w(e,"default"))return;var a=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof a&&"Function"!==Zn(e.type)?a.call(n):a}(a,r,n);var c=Sn;Bn(!0),Cn(o),Bn(c)}return o}var Jn=/^\s*function (\w+)/;function Zn(n){var e=n&&n.toString().match(Jn);return e?e[1]:""}function Nn(n,e){return Zn(n)===Zn(e)}function Hn(n,e){if(!Array.isArray(e))return Nn(e,n)?0:-1;for(var t=0,a=e.length;t<a;t++)if(Nn(e[t],n))return t;return-1}function Rn(n,e,t){gn();try{if(e)for(var a=e;a=a.$parent;){var r=a.$options.errorCaptured;if(r)for(var i=0;i<r.length;i++)try{if(!1===r[i].call(a,n,e,t))return}catch(n){Wn(n,a,"errorCaptured hook")}}Wn(n,e,t)}finally{fn()}}function Vn(n,e,t,a,r){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&g(i)&&!i._handled&&(i.catch((function(n){return Rn(n,a,r+" (Promise/async)")})),i._handled=!0)}catch(n){Rn(n,a,r)}return i}function Wn(n,e,t){if(q.errorHandler)try{return q.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Gn(e,null,"config.errorHandler")}Gn(n,e,t)}function Gn(n,e,t){if(!V&&!W||"undefined"==typeof console)throw n;console.error(n)}var Qn,Xn=!1,Yn=[],Kn=!1;function ne(){Kn=!1;var n=Yn.slice(0);Yn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&ln(Promise)){var ee=Promise.resolve();Qn=function(){ee.then(ne),nn&&setTimeout(F)},Xn=!0}else if(X||"undefined"==typeof MutationObserver||!ln(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Qn="undefined"!=typeof setImmediate&&ln(setImmediate)?function(){setImmediate(ne)}:function(){setTimeout(ne,0)};else{var te=1,ae=new MutationObserver(ne),re=document.createTextNode(String(te));ae.observe(re,{characterData:!0}),Qn=function(){te=(te+1)%2,re.data=String(te)},Xn=!0}function ie(n,e){var t;if(Yn.push((function(){if(n)try{n.call(e)}catch(n){Rn(n,e,"nextTick")}else t&&t(e)})),Kn||(Kn=!0,Qn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var oe=new cn;function se(n){!function n(e,t){var a,r,i=Array.isArray(e);if(!i&&!d(e)||Object.isFrozen(e)||e instanceof vn)return;if(e.__ob__){var o=e.__ob__.dep.id;if(t.has(o))return;t.add(o)}if(i)for(a=e.length;a--;)n(e[a],t);else for(r=Object.keys(e),a=r.length;a--;)n(e[r[a]],t)}(n,oe),oe.clear()}var le=k((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),a="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=a?n.slice(1):n,once:t,capture:a,passive:e}}));function ce(n,e){function t(){var n=arguments,a=t.fns;if(!Array.isArray(a))return Vn(a,null,arguments,e,"v-on handler");for(var r=a.slice(),i=0;i<r.length;i++)Vn(r[i],null,n,e,"v-on handler")}return t.fns=n,t}function de(n,e,t,a,r,i){var s,c,d,u;for(s in n)c=n[s],d=e[s],u=le(s),o(c)||(o(d)?(o(c.fns)&&(c=n[s]=ce(c,i)),l(u.once)&&(c=n[s]=r(u.name,c,u.capture)),t(u.name,c,u.capture,u.passive,u.params)):c!==d&&(d.fns=c,n[s]=d));for(s in e)o(n[s])&&a((u=le(s)).name,e[s],u.capture)}function ue(n,e,t){var a;n instanceof vn&&(n=n.data.hook||(n.data.hook={}));var r=n[e];function i(){t.apply(this,arguments),x(a.fns,i)}o(r)?a=ce([i]):s(r.fns)&&l(r.merged)?(a=r).fns.push(i):a=ce([r,i]),a.merged=!0,n[e]=a}function pe(n,e,t,a,r){if(s(e)){if(w(e,t))return n[t]=e[t],r||delete e[t],!0;if(w(e,a))return n[t]=e[a],r||delete e[a],!0}return!1}function he(n){return c(n)?[xn(n)]:Array.isArray(n)?function n(e,t){var a,r,i,d,u=[];for(a=0;a<e.length;a++)o(r=e[a])||"boolean"==typeof r||(i=u.length-1,d=u[i],Array.isArray(r)?r.length>0&&(me((r=n(r,(t||"")+"_"+a))[0])&&me(d)&&(u[i]=xn(d.text+r[0].text),r.shift()),u.push.apply(u,r)):c(r)?me(d)?u[i]=xn(d.text+r):""!==r&&u.push(xn(r)):me(r)&&me(d)?u[i]=xn(d.text+r.text):(l(e._isVList)&&s(r.tag)&&o(r.key)&&s(t)&&(r.key="__vlist"+t+"_"+a+"__"),u.push(r)));return u}(n):void 0}function me(n){return s(n)&&s(n.text)&&!1===n.isComment}function ge(n,e){if(n){for(var t=Object.create(null),a=dn?Reflect.ownKeys(n):Object.keys(n),r=0;r<a.length;r++){var i=a[r];if("__ob__"!==i){for(var o=n[i].from,s=e;s;){if(s._provided&&w(s._provided,o)){t[i]=s._provided[o];break}s=s.$parent}if(!s)if("default"in n[i]){var l=n[i].default;t[i]="function"==typeof l?l.call(e):l}else 0}}return t}}function fe(n,e){if(!n||!n.length)return{};for(var t={},a=0,r=n.length;a<r;a++){var i=n[a],o=i.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,i.context!==e&&i.fnContext!==e||!o||null==o.slot)(t.default||(t.default=[])).push(i);else{var s=o.slot,l=t[s]||(t[s]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in t)t[c].every(ve)&&delete t[c];return t}function ve(n){return n.isComment&&!n.asyncFactory||" "===n.text}function be(n){return n.isComment&&n.asyncFactory}function Ee(n,e,t){var a,r=Object.keys(e).length>0,o=n?!!n.$stable:!r,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(o&&t&&t!==i&&s===t.$key&&!r&&!t.$hasNormal)return t;for(var l in a={},n)n[l]&&"$"!==l[0]&&(a[l]=xe(e,l,n[l]))}else a={};for(var c in e)c in a||(a[c]=ye(e,c));return n&&Object.isExtensible(n)&&(n._normalized=a),Z(a,"$stable",o),Z(a,"$key",s),Z(a,"$hasNormal",r),a}function xe(n,e,t){var a=function(){var n=arguments.length?t.apply(null,arguments):t({}),e=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:he(n))&&n[0];return n&&(!e||1===n.length&&e.isComment&&!be(e))?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:a,enumerable:!0,configurable:!0}),a}function ye(n,e){return function(){return n[e]}}function we(n,e){var t,a,r,i,o;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),a=0,r=n.length;a<r;a++)t[a]=e(n[a],a);else if("number"==typeof n)for(t=new Array(n),a=0;a<n;a++)t[a]=e(a+1,a);else if(d(n))if(dn&&n[Symbol.iterator]){t=[];for(var l=n[Symbol.iterator](),c=l.next();!c.done;)t.push(e(c.value,t.length)),c=l.next()}else for(i=Object.keys(n),t=new Array(i.length),a=0,r=i.length;a<r;a++)o=i[a],t[a]=e(n[o],o,a);return s(t)||(t=[]),t._isVList=!0,t}function ke(n,e,t,a){var r,i=this.$scopedSlots[n];i?(t=t||{},a&&(t=P(P({},a),t)),r=i(t)||("function"==typeof e?e():e)):r=this.$slots[n]||("function"==typeof e?e():e);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},r):r}function Ae(n){return Mn(this.$options,"filters",n)||_}function Se(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function Be(n,e,t,a,r){var i=q.keyCodes[e]||t;return r&&a&&!q.keyCodes[e]?Se(r,a):i?Se(i,n):a?C(a)!==e:void 0===n}function Te(n,e,t,a,r){if(t)if(d(t)){var i;Array.isArray(t)&&(t=I(t));var o=function(o){if("class"===o||"style"===o||E(o))i=n;else{var s=n.attrs&&n.attrs.type;i=a||q.mustUseProp(e,s,o)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=S(o),c=C(o);l in i||c in i||(i[o]=t[o],r&&((n.on||(n.on={}))["update:"+o]=function(n){t[o]=n}))};for(var s in t)o(s)}else;return n}function Ce(n,e){var t=this._staticTrees||(this._staticTrees=[]),a=t[n];return a&&!e||ze(a=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),a}function je(n,e,t){return ze(n,"__once__"+e+(t?"_"+t:""),!0),n}function ze(n,e,t){if(Array.isArray(n))for(var a=0;a<n.length;a++)n[a]&&"string"!=typeof n[a]&&Pe(n[a],e+"_"+a,t);else Pe(n,e,t)}function Pe(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function Ie(n,e){if(e)if(p(e)){var t=n.on=n.on?P({},n.on):{};for(var a in e){var r=t[a],i=e[a];t[a]=r?[].concat(r,i):i}}else;return n}function Fe(n,e,t,a){e=e||{$stable:!t};for(var r=0;r<n.length;r++){var i=n[r];Array.isArray(i)?Fe(i,e,t):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return a&&(e.$key=a),e}function De(n,e){for(var t=0;t<e.length;t+=2){var a=e[t];"string"==typeof a&&a&&(n[e[t]]=e[t+1])}return n}function _e(n,e){return"string"==typeof n?e+n:n}function $e(n){n._o=je,n._n=v,n._s=f,n._l=we,n._t=ke,n._q=$,n._i=L,n._m=Ce,n._f=Ae,n._k=Be,n._b=Te,n._v=xn,n._e=En,n._u=Fe,n._g=Ie,n._d=De,n._p=_e}function Le(n,e,t,a,r){var o,s=this,c=r.options;w(a,"_uid")?(o=Object.create(a))._original=a:(o=a,a=a._original);var d=l(c._compiled),u=!d;this.data=n,this.props=e,this.children=t,this.parent=a,this.listeners=n.on||i,this.injections=ge(c.inject,a),this.slots=function(){return s.$slots||Ee(n.scopedSlots,s.$slots=fe(t,a)),s.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return Ee(n.scopedSlots,this.slots())}}),d&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=Ee(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,r){var i=Ne(o,n,e,t,r,u);return i&&!Array.isArray(i)&&(i.fnScopeId=c._scopeId,i.fnContext=a),i}:this._c=function(n,e,t,a){return Ne(o,n,e,t,a,u)}}function Ue(n,e,t,a,r){var i=yn(n);return i.fnContext=t,i.fnOptions=a,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function Oe(n,e){for(var t in e)n[S(t)]=e[t]}$e(Le.prototype);var Me={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;Me.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},a=n.data.inlineTemplate;s(a)&&(t.render=a.render,t.staticRenderFns=a.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ke)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,a,r){0;var o=a.data.scopedSlots,s=n.$scopedSlots,l=!!(o&&!o.$stable||s!==i&&!s.$stable||o&&n.$scopedSlots.$key!==o.$key||!o&&n.$scopedSlots.$key),c=!!(r||n.$options._renderChildren||l);n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a);if(n.$options._renderChildren=r,n.$attrs=a.data.attrs||i,n.$listeners=t||i,e&&n.$options.props){Bn(!1);for(var d=n._props,u=n.$options._propKeys||[],p=0;p<u.length;p++){var h=u[p],m=n.$options.props;d[h]=qn(h,m,e,n)}Bn(!0),n.$options.propsData=e}t=t||i;var g=n.$options._parentListeners;n.$options._parentListeners=t,Ye(n,t,g),c&&(n.$slots=fe(r,a.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,a=n.componentInstance;a._isMounted||(a._isMounted=!0,at(a,"mounted")),n.data.keepAlive&&(t._isMounted?((e=a)._inactive=!1,it.push(e)):tt(a,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,et(e)))return;if(!e._inactive){e._inactive=!0;for(var a=0;a<e.$children.length;a++)n(e.$children[a]);at(e,"deactivated")}}(e,!0):e.$destroy())}},qe=Object.keys(Me);function Je(n,e,t,a,r){if(!o(n)){var c=t.$options._base;if(d(n)&&(n=c.extend(n)),"function"==typeof n){var u;if(o(n.cid)&&void 0===(n=function(n,e){if(l(n.error)&&s(n.errorComp))return n.errorComp;if(s(n.resolved))return n.resolved;var t=Re;t&&s(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(l(n.loading)&&s(n.loadingComp))return n.loadingComp;if(t&&!s(n.owners)){var a=n.owners=[t],r=!0,i=null,c=null;t.$on("hook:destroyed",(function(){return x(a,t)}));var u=function(n){for(var e=0,t=a.length;e<t;e++)a[e].$forceUpdate();n&&(a.length=0,null!==i&&(clearTimeout(i),i=null),null!==c&&(clearTimeout(c),c=null))},p=U((function(t){n.resolved=Ve(t,e),r?a.length=0:u(!0)})),h=U((function(e){s(n.errorComp)&&(n.error=!0,u(!0))})),m=n(p,h);return d(m)&&(g(m)?o(n.resolved)&&m.then(p,h):g(m.component)&&(m.component.then(p,h),s(m.error)&&(n.errorComp=Ve(m.error,e)),s(m.loading)&&(n.loadingComp=Ve(m.loading,e),0===m.delay?n.loading=!0:i=setTimeout((function(){i=null,o(n.resolved)&&o(n.error)&&(n.loading=!0,u(!1))}),m.delay||200)),s(m.timeout)&&(c=setTimeout((function(){c=null,o(n.resolved)&&h(null)}),m.timeout)))),r=!1,n.loading?n.loadingComp:n.resolved}}(u=n,c)))return function(n,e,t,a,r){var i=En();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:a,tag:r},i}(u,e,t,a,r);e=e||{},St(n),s(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",a=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var r=e.on||(e.on={}),i=r[a],o=e.model.callback;s(i)?(Array.isArray(i)?-1===i.indexOf(o):i!==o)&&(r[a]=[o].concat(i)):r[a]=o}(n.options,e);var p=function(n,e,t){var a=e.options.props;if(!o(a)){var r={},i=n.attrs,l=n.props;if(s(i)||s(l))for(var c in a){var d=C(c);pe(r,l,c,d,!0)||pe(r,i,c,d,!1)}return r}}(e,n);if(l(n.options.functional))return function(n,e,t,a,r){var o=n.options,l={},c=o.props;if(s(c))for(var d in c)l[d]=qn(d,c,e||i);else s(t.attrs)&&Oe(l,t.attrs),s(t.props)&&Oe(l,t.props);var u=new Le(t,l,r,a,n),p=o.render.call(null,u._c,u);if(p instanceof vn)return Ue(p,t,u.parent,o,u);if(Array.isArray(p)){for(var h=he(p)||[],m=new Array(h.length),g=0;g<h.length;g++)m[g]=Ue(h[g],t,u.parent,o,u);return m}}(n,p,e,t,a);var h=e.on;if(e.on=e.nativeOn,l(n.options.abstract)){var m=e.slot;e={},m&&(e.slot=m)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<qe.length;t++){var a=qe[t],r=e[a],i=Me[a];r===i||r&&r._merged||(e[a]=r?Ze(i,r):i)}}(e);var f=n.options.name||r;return new vn("vue-component-"+n.cid+(f?"-"+f:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:p,listeners:h,tag:r,children:a},u)}}}function Ze(n,e){var t=function(t,a){n(t,a),e(t,a)};return t._merged=!0,t}function Ne(n,e,t,a,r,i){return(Array.isArray(t)||c(t))&&(r=a,a=t,t=void 0),l(i)&&(r=2),function(n,e,t,a,r){if(s(t)&&s(t.__ob__))return En();s(t)&&s(t.is)&&(e=t.is);if(!e)return En();0;Array.isArray(a)&&"function"==typeof a[0]&&((t=t||{}).scopedSlots={default:a[0]},a.length=0);2===r?a=he(a):1===r&&(a=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(a));var i,c;if("string"==typeof e){var u;c=n.$vnode&&n.$vnode.ns||q.getTagNamespace(e),i=q.isReservedTag(e)?new vn(q.parsePlatformTagName(e),t,a,void 0,void 0,n):t&&t.pre||!s(u=Mn(n.$options,"components",e))?new vn(e,t,a,void 0,void 0,n):Je(u,t,n,a,e)}else i=Je(e,t,n,a);return Array.isArray(i)?i:s(i)?(s(c)&&function n(e,t,a){e.ns=t,"foreignObject"===e.tag&&(t=void 0,a=!0);if(s(e.children))for(var r=0,i=e.children.length;r<i;r++){var c=e.children[r];s(c.tag)&&(o(c.ns)||l(a)&&"svg"!==c.tag)&&n(c,t,a)}}(i,c),s(t)&&function(n){d(n.style)&&se(n.style);d(n.class)&&se(n.class)}(t),i):En()}(n,e,t,a,r)}var He,Re=null;function Ve(n,e){return(n.__esModule||dn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),d(n)?e.extend(n):n}function We(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(s(t)&&(s(t.componentOptions)||be(t)))return t}}function Ge(n,e){He.$on(n,e)}function Qe(n,e){He.$off(n,e)}function Xe(n,e){var t=He;return function a(){var r=e.apply(null,arguments);null!==r&&t.$off(n,a)}}function Ye(n,e,t){He=n,de(e,t||{},Ge,Qe,Xe,n),He=void 0}var Ke=null;function nt(n){var e=Ke;return Ke=n,function(){Ke=e}}function et(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function tt(n,e){if(e){if(n._directInactive=!1,et(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)tt(n.$children[t]);at(n,"activated")}}function at(n,e){gn();var t=n.$options[e],a=e+" hook";if(t)for(var r=0,i=t.length;r<i;r++)Vn(t[r],n,null,n,a);n._hasHookEvent&&n.$emit("hook:"+e),fn()}var rt=[],it=[],ot={},st=!1,lt=!1,ct=0;var dt=0,ut=Date.now;if(V&&!X){var pt=window.performance;pt&&"function"==typeof pt.now&&ut()>document.createEvent("Event").timeStamp&&(ut=function(){return pt.now()})}function ht(){var n,e;for(dt=ut(),lt=!0,rt.sort((function(n,e){return n.id-e.id})),ct=0;ct<rt.length;ct++)(n=rt[ct]).before&&n.before(),e=n.id,ot[e]=null,n.run();var t=it.slice(),a=rt.slice();ct=rt.length=it.length=0,ot={},st=lt=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,tt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],a=t.vm;a._watcher===t&&a._isMounted&&!a._isDestroyed&&at(a,"updated")}}(a),sn&&q.devtools&&sn.emit("flush")}var mt=0,gt=function(n,e,t,a,r){this.vm=n,r&&(n._watcher=this),n._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++mt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new cn,this.newDepIds=new cn,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!N.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=F)),this.value=this.lazy?void 0:this.get()};gt.prototype.get=function(){var n;gn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Rn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&se(n),fn(),this.cleanupDeps()}return n},gt.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},gt.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},gt.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==ot[e]){if(ot[e]=!0,lt){for(var t=rt.length-1;t>ct&&rt[t].id>n.id;)t--;rt.splice(t+1,0,n)}else rt.push(n);st||(st=!0,ie(ht))}}(this)},gt.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||d(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'+this.expression+'"';Vn(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},gt.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},gt.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},gt.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||x(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var ft={enumerable:!0,configurable:!0,get:F,set:F};function vt(n,e,t){ft.get=function(){return this[e][t]},ft.set=function(n){this[e][t]=n},Object.defineProperty(n,t,ft)}function bt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},a=n._props={},r=n.$options._propKeys=[];n.$parent&&Bn(!1);var i=function(i){r.push(i);var o=qn(i,e,t,n);jn(a,i,o),i in n||vt(n,"_props",i)};for(var o in e)i(o);Bn(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?F:j(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;p(e=n._data="function"==typeof e?function(n,e){gn();try{return n.call(e,e)}catch(n){return Rn(n,e,"data()"),{}}finally{fn()}}(e,n):e||{})||(e={});var t=Object.keys(e),a=n.$options.props,r=(n.$options.methods,t.length);for(;r--;){var i=t[r];0,a&&w(a,i)||(o=void 0,36!==(o=(i+"").charCodeAt(0))&&95!==o&&vt(n,"_data",i))}var o;Cn(e,!0)}(n):Cn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),a=on();for(var r in e){var i=e[r],o="function"==typeof i?i:i.get;0,a||(t[r]=new gt(n,o||F,F,Et)),r in n||xt(n,r,i)}}(n,e.computed),e.watch&&e.watch!==tn&&function(n,e){for(var t in e){var a=e[t];if(Array.isArray(a))for(var r=0;r<a.length;r++)kt(n,t,a[r]);else kt(n,t,a)}}(n,e.watch)}var Et={lazy:!0};function xt(n,e,t){var a=!on();"function"==typeof t?(ft.get=a?yt(e):wt(t),ft.set=F):(ft.get=t.get?a&&!1!==t.cache?yt(e):wt(t.get):F,ft.set=t.set||F),Object.defineProperty(n,e,ft)}function yt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),hn.target&&e.depend(),e.value}}function wt(n){return function(){return n.call(this,this)}}function kt(n,e,t,a){return p(t)&&(a=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,a)}var At=0;function St(n){var e=n.options;if(n.super){var t=St(n.super);if(t!==n.superOptions){n.superOptions=t;var a=function(n){var e,t=n.options,a=n.sealedOptions;for(var r in t)t[r]!==a[r]&&(e||(e={}),e[r]=t[r]);return e}(n);a&&P(n.extendOptions,a),(e=n.options=On(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Bt(n){this._init(n)}function Tt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,a=t.cid,r=n._Ctor||(n._Ctor={});if(r[a])return r[a];var i=n.name||t.options.name;var o=function(n){this._init(n)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=e++,o.options=On(t.options,n),o.super=t,o.options.props&&function(n){var e=n.options.props;for(var t in e)vt(n.prototype,"_props",t)}(o),o.options.computed&&function(n){var e=n.options.computed;for(var t in e)xt(n.prototype,t,e[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,O.forEach((function(n){o[n]=t[n]})),i&&(o.options.components[i]=o),o.superOptions=t.options,o.extendOptions=n,o.sealedOptions=P({},o.options),r[a]=o,o}}function Ct(n){return n&&(n.Ctor.options.name||n.tag)}function jt(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!h(n)&&n.test(e)}function zt(n,e){var t=n.cache,a=n.keys,r=n._vnode;for(var i in t){var o=t[i];if(o){var s=o.name;s&&!e(s)&&Pt(t,i,a,r)}}}function Pt(n,e,t,a){var r=n[e];!r||a&&r.tag===a.tag||r.componentInstance.$destroy(),n[e]=null,x(t,e)}Bt.prototype._init=function(n){var e=this;e._uid=At++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),a=e._parentVnode;t.parent=e.parent,t._parentVnode=a;var r=a.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=On(St(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ye(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,a=t&&t.context;n.$slots=fe(e._renderChildren,a),n.$scopedSlots=i,n._c=function(e,t,a,r){return Ne(n,e,t,a,r,!1)},n.$createElement=function(e,t,a,r){return Ne(n,e,t,a,r,!0)};var r=t&&t.data;jn(n,"$attrs",r&&r.attrs||i,null,!0),jn(n,"$listeners",e._parentListeners||i,null,!0)}(e),at(e,"beforeCreate"),function(n){var e=ge(n.$options.inject,n);e&&(Bn(!1),Object.keys(e).forEach((function(t){jn(n,t,e[t])})),Bn(!0))}(e),bt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),at(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=zn,n.prototype.$delete=Pn,n.prototype.$watch=function(n,e,t){if(p(e))return kt(this,n,e,t);(t=t||{}).user=!0;var a=new gt(this,n,e,t);if(t.immediate){var r='callback for immediate watcher "'+a.expression+'"';gn(),Vn(e,this,[a.value],this,r),fn()}return function(){a.teardown()}}}(Bt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var a=this;if(Array.isArray(n))for(var r=0,i=n.length;r<i;r++)a.$on(n[r],t);else(a._events[n]||(a._events[n]=[])).push(t),e.test(n)&&(a._hasHookEvent=!0);return a},n.prototype.$once=function(n,e){var t=this;function a(){t.$off(n,a),e.apply(t,arguments)}return a.fn=e,t.$on(n,a),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var a=0,r=n.length;a<r;a++)t.$off(n[a],e);return t}var i,o=t._events[n];if(!o)return t;if(!e)return t._events[n]=null,t;for(var s=o.length;s--;)if((i=o[s])===e||i.fn===e){o.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?z(t):t;for(var a=z(arguments,1),r='event handler for "'+n+'"',i=0,o=t.length;i<o;i++)Vn(t[i],e,a,e,r)}return e}}(Bt),function(n){n.prototype._update=function(n,e){var t=this,a=t.$el,r=t._vnode,i=nt(t);t._vnode=n,t.$el=r?t.__patch__(r,n):t.__patch__(t.$el,n,e,!1),i(),a&&(a.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){at(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||x(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),at(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Bt),function(n){$e(n.prototype),n.prototype.$nextTick=function(n){return ie(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,a=t.render,r=t._parentVnode;r&&(e.$scopedSlots=Ee(r.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=r;try{Re=e,n=a.call(e._renderProxy,e.$createElement)}catch(t){Rn(t,e,"render"),n=e._vnode}finally{Re=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof vn||(n=En()),n.parent=r,n}}(Bt);var It=[String,RegExp,Array],Ft={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:It,exclude:It,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,a=this.keyToCache;if(t){var r=t.tag,i=t.componentInstance,o=t.componentOptions;n[a]={name:Ct(o),tag:r,componentInstance:i},e.push(a),this.max&&e.length>parseInt(this.max)&&Pt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Pt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){zt(n,(function(n){return jt(e,n)}))})),this.$watch("exclude",(function(e){zt(n,(function(n){return!jt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=We(n),t=e&&e.componentOptions;if(t){var a=Ct(t),r=this.include,i=this.exclude;if(r&&(!a||!jt(r,a))||i&&a&&jt(i,a))return e;var o=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;o[l]?(e.componentInstance=o[l].componentInstance,x(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return q}};Object.defineProperty(n,"config",e),n.util={warn:un,extend:P,mergeOptions:On,defineReactive:jn},n.set=zn,n.delete=Pn,n.nextTick=ie,n.observable=function(n){return Cn(n),n},n.options=Object.create(null),O.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,P(n.options.components,Ft),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=z(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=On(this.options,n),this}}(n),Tt(n),function(n){O.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Bt),Object.defineProperty(Bt.prototype,"$isServer",{get:on}),Object.defineProperty(Bt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Bt,"FunctionalRenderContext",{value:Le}),Bt.version="2.6.14";var Dt=b("style,class"),_t=b("input,textarea,option,select,progress"),$t=b("contenteditable,draggable,spellcheck"),Lt=b("events,caret,typing,plaintext-only"),Ut=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Ot="http://www.w3.org/1999/xlink",Mt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},qt=function(n){return Mt(n)?n.slice(6,n.length):""},Jt=function(n){return null==n||!1===n};function Zt(n){for(var e=n.data,t=n,a=n;s(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(e=Nt(a.data,e));for(;s(t=t.parent);)t&&t.data&&(e=Nt(e,t.data));return function(n,e){if(s(n)||s(e))return Ht(n,Rt(e));return""}(e.staticClass,e.class)}function Nt(n,e){return{staticClass:Ht(n.staticClass,e.staticClass),class:s(n.class)?[n.class,e.class]:e.class}}function Ht(n,e){return n?e?n+" "+e:n:e||""}function Rt(n){return Array.isArray(n)?function(n){for(var e,t="",a=0,r=n.length;a<r;a++)s(e=Rt(n[a]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):d(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Vt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Wt=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Gt=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Qt=function(n){return Wt(n)||Gt(n)};var Xt=Object.create(null);var Yt=b("text,number,password,search,email,tel,url");var Kt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Vt[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),na={create:function(n,e){ea(e)},update:function(n,e){n.data.ref!==e.data.ref&&(ea(n,!0),ea(e))},destroy:function(n){ea(n,!0)}};function ea(n,e){var t=n.data.ref;if(s(t)){var a=n.context,r=n.componentInstance||n.elm,i=a.$refs;e?Array.isArray(i[t])?x(i[t],r):i[t]===r&&(i[t]=void 0):n.data.refInFor?Array.isArray(i[t])?i[t].indexOf(r)<0&&i[t].push(r):i[t]=[r]:i[t]=r}}var ta=new vn("",{},[]),aa=["create","activate","update","remove","destroy"];function ra(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&s(n.data)===s(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,a=s(t=n.data)&&s(t=t.attrs)&&t.type,r=s(t=e.data)&&s(t=t.attrs)&&t.type;return a===r||Yt(a)&&Yt(r)}(n,e)||l(n.isAsyncPlaceholder)&&o(e.asyncFactory.error))}function ia(n,e,t){var a,r,i={};for(a=e;a<=t;++a)s(r=n[a].key)&&(i[r]=a);return i}var oa={create:sa,update:sa,destroy:function(n){sa(n,ta)}};function sa(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,a,r,i=n===ta,o=e===ta,s=ca(n.data.directives,n.context),l=ca(e.data.directives,e.context),c=[],d=[];for(t in l)a=s[t],r=l[t],a?(r.oldValue=a.value,r.oldArg=a.arg,ua(r,"update",e,n),r.def&&r.def.componentUpdated&&d.push(r)):(ua(r,"bind",e,n),r.def&&r.def.inserted&&c.push(r));if(c.length){var u=function(){for(var t=0;t<c.length;t++)ua(c[t],"inserted",e,n)};i?ue(e,"insert",u):u()}d.length&&ue(e,"postpatch",(function(){for(var t=0;t<d.length;t++)ua(d[t],"componentUpdated",e,n)}));if(!i)for(t in s)l[t]||ua(s[t],"unbind",n,n,o)}(n,e)}var la=Object.create(null);function ca(n,e){var t,a,r=Object.create(null);if(!n)return r;for(t=0;t<n.length;t++)(a=n[t]).modifiers||(a.modifiers=la),r[da(a)]=a,a.def=Mn(e.$options,"directives",a.name);return r}function da(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function ua(n,e,t,a,r){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,a,r)}catch(a){Rn(a,t.context,"directive "+n.name+" "+e+" hook")}}var pa=[na,oa];function ha(n,e){var t=e.componentOptions;if(!(s(t)&&!1===t.Ctor.options.inheritAttrs||o(n.data.attrs)&&o(e.data.attrs))){var a,r,i=e.elm,l=n.data.attrs||{},c=e.data.attrs||{};for(a in s(c.__ob__)&&(c=e.data.attrs=P({},c)),c)r=c[a],l[a]!==r&&ma(i,a,r,e.data.pre);for(a in(X||K)&&c.value!==l.value&&ma(i,"value",c.value),l)o(c[a])&&(Mt(a)?i.removeAttributeNS(Ot,qt(a)):$t(a)||i.removeAttribute(a))}}function ma(n,e,t,a){a||n.tagName.indexOf("-")>-1?fa(n,e,t):Ut(e)?Jt(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):$t(e)?n.setAttribute(e,function(n,e){return Jt(e)||"false"===e?"false":"contenteditable"===n&&Lt(e)?e:"true"}(e,t)):Mt(e)?Jt(t)?n.removeAttributeNS(Ot,qt(e)):n.setAttributeNS(Ot,e,t):fa(n,e,t)}function fa(n,e,t){if(Jt(t))n.removeAttribute(e);else{if(X&&!Y&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var a=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",a)};n.addEventListener("input",a),n.__ieph=!0}n.setAttribute(e,t)}}var va={create:ha,update:ha};function ba(n,e){var t=e.elm,a=e.data,r=n.data;if(!(o(a.staticClass)&&o(a.class)&&(o(r)||o(r.staticClass)&&o(r.class)))){var i=Zt(e),l=t._transitionClasses;s(l)&&(i=Ht(i,Rt(l))),i!==t._prevClass&&(t.setAttribute("class",i),t._prevClass=i)}}var Ea,xa={create:ba,update:ba};function ya(n,e,t){var a=Ea;return function r(){var i=e.apply(null,arguments);null!==i&&Aa(n,r,t,a)}}var wa=Xn&&!(en&&Number(en[1])<=53);function ka(n,e,t,a){if(wa){var r=dt,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=r||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}Ea.addEventListener(n,e,an?{capture:t,passive:a}:t)}function Aa(n,e,t,a){(a||Ea).removeEventListener(n,e._wrapper||e,t)}function Sa(n,e){if(!o(n.data.on)||!o(e.data.on)){var t=e.data.on||{},a=n.data.on||{};Ea=e.elm,function(n){if(s(n.__r)){var e=X?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}s(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),de(t,a,ka,Aa,ya,e.context),Ea=void 0}}var Ba,Ta={create:Sa,update:Sa};function Ca(n,e){if(!o(n.data.domProps)||!o(e.data.domProps)){var t,a,r=e.elm,i=n.data.domProps||{},l=e.data.domProps||{};for(t in s(l.__ob__)&&(l=e.data.domProps=P({},l)),i)t in l||(r[t]="");for(t in l){if(a=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),a===i[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=a;var c=o(a)?"":String(a);ja(r,c)&&(r.value=c)}else if("innerHTML"===t&&Gt(r.tagName)&&o(r.innerHTML)){(Ba=Ba||document.createElement("div")).innerHTML="<svg>"+a+"</svg>";for(var d=Ba.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;d.firstChild;)r.appendChild(d.firstChild)}else if(a!==i[t])try{r[t]=a}catch(n){}}}}function ja(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,a=n._vModifiers;if(s(a)){if(a.number)return v(t)!==v(e);if(a.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var za={create:Ca,update:Ca},Pa=k((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var a=n.split(t);a.length>1&&(e[a[0].trim()]=a[1].trim())}})),e}));function Ia(n){var e=Fa(n.style);return n.staticStyle?P(n.staticStyle,e):e}function Fa(n){return Array.isArray(n)?I(n):"string"==typeof n?Pa(n):n}var Da,_a=/^--/,$a=/\s*!important$/,La=function(n,e,t){if(_a.test(e))n.style.setProperty(e,t);else if($a.test(t))n.style.setProperty(C(e),t.replace($a,""),"important");else{var a=Oa(e);if(Array.isArray(t))for(var r=0,i=t.length;r<i;r++)n.style[a]=t[r];else n.style[a]=t}},Ua=["Webkit","Moz","ms"],Oa=k((function(n){if(Da=Da||document.createElement("div").style,"filter"!==(n=S(n))&&n in Da)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Ua.length;t++){var a=Ua[t]+e;if(a in Da)return a}}));function Ma(n,e){var t=e.data,a=n.data;if(!(o(t.staticStyle)&&o(t.style)&&o(a.staticStyle)&&o(a.style))){var r,i,l=e.elm,c=a.staticStyle,d=a.normalizedStyle||a.style||{},u=c||d,p=Fa(e.data.style)||{};e.data.normalizedStyle=s(p.__ob__)?P({},p):p;var h=function(n,e){var t,a={};if(e)for(var r=n;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=Ia(r.data))&&P(a,t);(t=Ia(n.data))&&P(a,t);for(var i=n;i=i.parent;)i.data&&(t=Ia(i.data))&&P(a,t);return a}(e,!0);for(i in u)o(h[i])&&La(l,i,"");for(i in h)(r=h[i])!==u[i]&&La(l,i,null==r?"":r)}}var qa={create:Ma,update:Ma},Ja=/\s+/;function Za(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Ja).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Na(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Ja).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",a=" "+e+" ";t.indexOf(a)>=0;)t=t.replace(a," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Ha(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&P(e,Ra(n.name||"v")),P(e,n),e}return"string"==typeof n?Ra(n):void 0}}var Ra=k((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Va=V&&!Y,Wa="transition",Ga="transitionend",Qa="animation",Xa="animationend";Va&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Wa="WebkitTransition",Ga="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Qa="WebkitAnimation",Xa="webkitAnimationEnd"));var Ya=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Ka(n){Ya((function(){Ya(n)}))}function nr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Za(n,e))}function er(n,e){n._transitionClasses&&x(n._transitionClasses,e),Na(n,e)}function tr(n,e,t){var a=rr(n,e),r=a.type,i=a.timeout,o=a.propCount;if(!r)return t();var s="transition"===r?Ga:Xa,l=0,c=function(){n.removeEventListener(s,d),t()},d=function(e){e.target===n&&++l>=o&&c()};setTimeout((function(){l<o&&c()}),i+1),n.addEventListener(s,d)}var ar=/\b(transform|all)(,|$)/;function rr(n,e){var t,a=window.getComputedStyle(n),r=(a[Wa+"Delay"]||"").split(", "),i=(a[Wa+"Duration"]||"").split(", "),o=ir(r,i),s=(a[Qa+"Delay"]||"").split(", "),l=(a[Qa+"Duration"]||"").split(", "),c=ir(s,l),d=0,u=0;return"transition"===e?o>0&&(t="transition",d=o,u=i.length):"animation"===e?c>0&&(t="animation",d=c,u=l.length):u=(t=(d=Math.max(o,c))>0?o>c?"transition":"animation":null)?"transition"===t?i.length:l.length:0,{type:t,timeout:d,propCount:u,hasTransform:"transition"===t&&ar.test(a[Wa+"Property"])}}function ir(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return or(e)+or(n[t])})))}function or(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function sr(n,e){var t=n.elm;s(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var a=Ha(n.data.transition);if(!o(a)&&!s(t._enterCb)&&1===t.nodeType){for(var r=a.css,i=a.type,l=a.enterClass,c=a.enterToClass,u=a.enterActiveClass,p=a.appearClass,h=a.appearToClass,m=a.appearActiveClass,g=a.beforeEnter,f=a.enter,b=a.afterEnter,E=a.enterCancelled,x=a.beforeAppear,y=a.appear,w=a.afterAppear,k=a.appearCancelled,A=a.duration,S=Ke,B=Ke.$vnode;B&&B.parent;)S=B.context,B=B.parent;var T=!S._isMounted||!n.isRootInsert;if(!T||y||""===y){var C=T&&p?p:l,j=T&&m?m:u,z=T&&h?h:c,P=T&&x||g,I=T&&"function"==typeof y?y:f,F=T&&w||b,D=T&&k||E,_=v(d(A)?A.enter:A);0;var $=!1!==r&&!Y,L=dr(I),O=t._enterCb=U((function(){$&&(er(t,z),er(t,j)),O.cancelled?($&&er(t,C),D&&D(t)):F&&F(t),t._enterCb=null}));n.data.show||ue(n,"insert",(function(){var e=t.parentNode,a=e&&e._pending&&e._pending[n.key];a&&a.tag===n.tag&&a.elm._leaveCb&&a.elm._leaveCb(),I&&I(t,O)})),P&&P(t),$&&(nr(t,C),nr(t,j),Ka((function(){er(t,C),O.cancelled||(nr(t,z),L||(cr(_)?setTimeout(O,_):tr(t,i,O)))}))),n.data.show&&(e&&e(),I&&I(t,O)),$||L||O()}}}function lr(n,e){var t=n.elm;s(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var a=Ha(n.data.transition);if(o(a)||1!==t.nodeType)return e();if(!s(t._leaveCb)){var r=a.css,i=a.type,l=a.leaveClass,c=a.leaveToClass,u=a.leaveActiveClass,p=a.beforeLeave,h=a.leave,m=a.afterLeave,g=a.leaveCancelled,f=a.delayLeave,b=a.duration,E=!1!==r&&!Y,x=dr(h),y=v(d(b)?b.leave:b);0;var w=t._leaveCb=U((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),E&&(er(t,c),er(t,u)),w.cancelled?(E&&er(t,l),g&&g(t)):(e(),m&&m(t)),t._leaveCb=null}));f?f(k):k()}function k(){w.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),p&&p(t),E&&(nr(t,l),nr(t,u),Ka((function(){er(t,l),w.cancelled||(nr(t,c),x||(cr(y)?setTimeout(w,y):tr(t,i,w)))}))),h&&h(t,w),E||x||w())}}function cr(n){return"number"==typeof n&&!isNaN(n)}function dr(n){if(o(n))return!1;var e=n.fns;return s(e)?dr(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function ur(n,e){!0!==e.data.show&&sr(e)}var pr=function(n){var e,t,a={},r=n.modules,i=n.nodeOps;for(e=0;e<aa.length;++e)for(a[aa[e]]=[],t=0;t<r.length;++t)s(r[t][aa[e]])&&a[aa[e]].push(r[t][aa[e]]);function d(n){var e=i.parentNode(n);s(e)&&i.removeChild(e,n)}function u(n,e,t,r,o,c,d){if(s(n.elm)&&s(c)&&(n=c[d]=yn(n)),n.isRootInsert=!o,!function(n,e,t,r){var i=n.data;if(s(i)){var o=s(n.componentInstance)&&i.keepAlive;if(s(i=i.hook)&&s(i=i.init)&&i(n,!1),s(n.componentInstance))return p(n,e),h(t,n.elm,r),l(o)&&function(n,e,t,r){var i,o=n;for(;o.componentInstance;)if(o=o.componentInstance._vnode,s(i=o.data)&&s(i=i.transition)){for(i=0;i<a.activate.length;++i)a.activate[i](ta,o);e.push(o);break}h(t,n.elm,r)}(n,e,t,r),!0}}(n,e,t,r)){var u=n.data,g=n.children,b=n.tag;s(b)?(n.elm=n.ns?i.createElementNS(n.ns,b):i.createElement(b,n),v(n),m(n,g,e),s(u)&&f(n,e),h(t,n.elm,r)):l(n.isComment)?(n.elm=i.createComment(n.text),h(t,n.elm,r)):(n.elm=i.createTextNode(n.text),h(t,n.elm,r))}}function p(n,e){s(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,g(n)?(f(n,e),v(n)):(ea(n),e.push(n))}function h(n,e,t){s(n)&&(s(t)?i.parentNode(t)===n&&i.insertBefore(n,e,t):i.appendChild(n,e))}function m(n,e,t){if(Array.isArray(e)){0;for(var a=0;a<e.length;++a)u(e[a],t,n.elm,null,!0,e,a)}else c(n.text)&&i.appendChild(n.elm,i.createTextNode(String(n.text)))}function g(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return s(n.tag)}function f(n,t){for(var r=0;r<a.create.length;++r)a.create[r](ta,n);s(e=n.data.hook)&&(s(e.create)&&e.create(ta,n),s(e.insert)&&t.push(n))}function v(n){var e;if(s(e=n.fnScopeId))i.setStyleScope(n.elm,e);else for(var t=n;t;)s(e=t.context)&&s(e=e.$options._scopeId)&&i.setStyleScope(n.elm,e),t=t.parent;s(e=Ke)&&e!==n.context&&e!==n.fnContext&&s(e=e.$options._scopeId)&&i.setStyleScope(n.elm,e)}function E(n,e,t,a,r,i){for(;a<=r;++a)u(t[a],i,n,e,!1,t,a)}function x(n){var e,t,r=n.data;if(s(r))for(s(e=r.hook)&&s(e=e.destroy)&&e(n),e=0;e<a.destroy.length;++e)a.destroy[e](n);if(s(e=n.children))for(t=0;t<n.children.length;++t)x(n.children[t])}function y(n,e,t){for(;e<=t;++e){var a=n[e];s(a)&&(s(a.tag)?(w(a),x(a)):d(a.elm))}}function w(n,e){if(s(e)||s(n.data)){var t,r=a.remove.length+1;for(s(e)?e.listeners+=r:e=function(n,e){function t(){0==--t.listeners&&d(n)}return t.listeners=e,t}(n.elm,r),s(t=n.componentInstance)&&s(t=t._vnode)&&s(t.data)&&w(t,e),t=0;t<a.remove.length;++t)a.remove[t](n,e);s(t=n.data.hook)&&s(t=t.remove)?t(n,e):e()}else d(n.elm)}function k(n,e,t,a){for(var r=t;r<a;r++){var i=e[r];if(s(i)&&ra(n,i))return r}}function A(n,e,t,r,c,d){if(n!==e){s(e.elm)&&s(r)&&(e=r[c]=yn(e));var p=e.elm=n.elm;if(l(n.isAsyncPlaceholder))s(e.asyncFactory.resolved)?T(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(l(e.isStatic)&&l(n.isStatic)&&e.key===n.key&&(l(e.isCloned)||l(e.isOnce)))e.componentInstance=n.componentInstance;else{var h,m=e.data;s(m)&&s(h=m.hook)&&s(h=h.prepatch)&&h(n,e);var f=n.children,v=e.children;if(s(m)&&g(e)){for(h=0;h<a.update.length;++h)a.update[h](n,e);s(h=m.hook)&&s(h=h.update)&&h(n,e)}o(e.text)?s(f)&&s(v)?f!==v&&function(n,e,t,a,r){var l,c,d,p=0,h=0,m=e.length-1,g=e[0],f=e[m],v=t.length-1,b=t[0],x=t[v],w=!r;for(0;p<=m&&h<=v;)o(g)?g=e[++p]:o(f)?f=e[--m]:ra(g,b)?(A(g,b,a,t,h),g=e[++p],b=t[++h]):ra(f,x)?(A(f,x,a,t,v),f=e[--m],x=t[--v]):ra(g,x)?(A(g,x,a,t,v),w&&i.insertBefore(n,g.elm,i.nextSibling(f.elm)),g=e[++p],x=t[--v]):ra(f,b)?(A(f,b,a,t,h),w&&i.insertBefore(n,f.elm,g.elm),f=e[--m],b=t[++h]):(o(l)&&(l=ia(e,p,m)),o(c=s(b.key)?l[b.key]:k(b,e,p,m))?u(b,a,n,g.elm,!1,t,h):ra(d=e[c],b)?(A(d,b,a,t,h),e[c]=void 0,w&&i.insertBefore(n,d.elm,g.elm)):u(b,a,n,g.elm,!1,t,h),b=t[++h]);p>m?E(n,o(t[v+1])?null:t[v+1].elm,t,h,v,a):h>v&&y(e,p,m)}(p,f,v,t,d):s(v)?(s(n.text)&&i.setTextContent(p,""),E(p,null,v,0,v.length-1,t)):s(f)?y(f,0,f.length-1):s(n.text)&&i.setTextContent(p,""):n.text!==e.text&&i.setTextContent(p,e.text),s(m)&&s(h=m.hook)&&s(h=h.postpatch)&&h(n,e)}}}function S(n,e,t){if(l(t)&&s(n.parent))n.parent.data.pendingInsert=e;else for(var a=0;a<e.length;++a)e[a].data.hook.insert(e[a])}var B=b("attrs,class,staticClass,staticStyle,key");function T(n,e,t,a){var r,i=e.tag,o=e.data,c=e.children;if(a=a||o&&o.pre,e.elm=n,l(e.isComment)&&s(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(s(o)&&(s(r=o.hook)&&s(r=r.init)&&r(e,!0),s(r=e.componentInstance)))return p(e,t),!0;if(s(i)){if(s(c))if(n.hasChildNodes())if(s(r=o)&&s(r=r.domProps)&&s(r=r.innerHTML)){if(r!==n.innerHTML)return!1}else{for(var d=!0,u=n.firstChild,h=0;h<c.length;h++){if(!u||!T(u,c[h],t,a)){d=!1;break}u=u.nextSibling}if(!d||u)return!1}else m(e,c,t);if(s(o)){var g=!1;for(var v in o)if(!B(v)){g=!0,f(e,t);break}!g&&o.class&&se(o.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,r){if(!o(e)){var c,d=!1,p=[];if(o(n))d=!0,u(e,p);else{var h=s(n.nodeType);if(!h&&ra(n,e))A(n,e,p,null,null,r);else{if(h){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),l(t)&&T(n,e,p))return S(e,p,!0),n;c=n,n=new vn(i.tagName(c).toLowerCase(),{},[],void 0,c)}var m=n.elm,f=i.parentNode(m);if(u(e,p,m._leaveCb?null:f,i.nextSibling(m)),s(e.parent))for(var v=e.parent,b=g(e);v;){for(var E=0;E<a.destroy.length;++E)a.destroy[E](v);if(v.elm=e.elm,b){for(var w=0;w<a.create.length;++w)a.create[w](ta,v);var k=v.data.hook.insert;if(k.merged)for(var B=1;B<k.fns.length;B++)k.fns[B]()}else ea(v);v=v.parent}s(f)?y([n],0,0):s(n.tag)&&x(n)}}return S(e,p,d),e.elm}s(n)&&x(n)}}({nodeOps:Kt,modules:[va,xa,Ta,za,qa,V?{create:ur,activate:ur,remove:function(n,e){!0!==n.data.show?lr(n,e):e()}}:{}].concat(pa)});Y&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&xr(n,"input")}));var hr={inserted:function(n,e,t,a){"select"===t.tag?(a.elm&&!a.elm._vOptions?ue(t,"postpatch",(function(){hr.componentUpdated(n,e,t)})):mr(n,e,t.context),n._vOptions=[].map.call(n.options,vr)):("textarea"===t.tag||Yt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",br),n.addEventListener("compositionend",Er),n.addEventListener("change",Er),Y&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){mr(n,e,t.context);var a=n._vOptions,r=n._vOptions=[].map.call(n.options,vr);if(r.some((function(n,e){return!$(n,a[e])})))(n.multiple?e.value.some((function(n){return fr(n,r)})):e.value!==e.oldValue&&fr(e.value,r))&&xr(n,"change")}}};function mr(n,e,t){gr(n,e,t),(X||K)&&setTimeout((function(){gr(n,e,t)}),0)}function gr(n,e,t){var a=e.value,r=n.multiple;if(!r||Array.isArray(a)){for(var i,o,s=0,l=n.options.length;s<l;s++)if(o=n.options[s],r)i=L(a,vr(o))>-1,o.selected!==i&&(o.selected=i);else if($(vr(o),a))return void(n.selectedIndex!==s&&(n.selectedIndex=s));r||(n.selectedIndex=-1)}}function fr(n,e){return e.every((function(e){return!$(e,n)}))}function vr(n){return"_value"in n?n._value:n.value}function br(n){n.target.composing=!0}function Er(n){n.target.composing&&(n.target.composing=!1,xr(n.target,"input"))}function xr(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function yr(n){return!n.componentInstance||n.data&&n.data.transition?n:yr(n.componentInstance._vnode)}var wr={model:hr,show:{bind:function(n,e,t){var a=e.value,r=(t=yr(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;a&&r?(t.data.show=!0,sr(t,(function(){n.style.display=i}))):n.style.display=a?i:"none"},update:function(n,e,t){var a=e.value;!a!=!e.oldValue&&((t=yr(t)).data&&t.data.transition?(t.data.show=!0,a?sr(t,(function(){n.style.display=n.__vOriginalDisplay})):lr(t,(function(){n.style.display="none"}))):n.style.display=a?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,a,r){r||(n.style.display=n.__vOriginalDisplay)}}},kr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Ar(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Ar(We(e.children)):n}function Sr(n){var e={},t=n.$options;for(var a in t.propsData)e[a]=n[a];var r=t._parentListeners;for(var i in r)e[S(i)]=r[i];return e}function Br(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Tr=function(n){return n.tag||be(n)},Cr=function(n){return"show"===n.name},jr={name:"transition",props:kr,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Tr)).length){0;var a=this.mode;0;var r=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return r;var i=Ar(r);if(!i)return r;if(this._leaving)return Br(n,r);var o="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?o+"comment":o+i.tag:c(i.key)?0===String(i.key).indexOf(o)?i.key:o+i.key:i.key;var s=(i.data||(i.data={})).transition=Sr(this),l=this._vnode,d=Ar(l);if(i.data.directives&&i.data.directives.some(Cr)&&(i.data.show=!0),d&&d.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,d)&&!be(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var u=d.data.transition=P({},s);if("out-in"===a)return this._leaving=!0,ue(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Br(n,r);if("in-out"===a){if(be(i))return l;var p,h=function(){p()};ue(s,"afterEnter",h),ue(s,"enterCancelled",h),ue(u,"delayLeave",(function(n){p=n}))}}return r}}},zr=P({tag:String,moveClass:String},kr);function Pr(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Ir(n){n.data.newPos=n.elm.getBoundingClientRect()}function Fr(n){var e=n.data.pos,t=n.data.newPos,a=e.left-t.left,r=e.top-t.top;if(a||r){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate("+a+"px,"+r+"px)",i.transitionDuration="0s"}}delete zr.mode;var Dr={Transition:jr,TransitionGroup:{props:zr,beforeMount:function(){var n=this,e=this._update;this._update=function(t,a){var r=nt(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,r(),e.call(n,t,a)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),a=this.prevChildren=this.children,r=this.$slots.default||[],i=this.children=[],o=Sr(this),s=0;s<r.length;s++){var l=r[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))i.push(l),t[l.key]=l,(l.data||(l.data={})).transition=o;else;}if(a){for(var c=[],d=[],u=0;u<a.length;u++){var p=a[u];p.data.transition=o,p.data.pos=p.elm.getBoundingClientRect(),t[p.key]?c.push(p):d.push(p)}this.kept=n(e,null,c),this.removed=d}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Pr),n.forEach(Ir),n.forEach(Fr),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,a=t.style;nr(t,e),a.transform=a.WebkitTransform=a.transitionDuration="",t.addEventListener(Ga,t._moveCb=function n(a){a&&a.target!==t||a&&!/transform$/.test(a.propertyName)||(t.removeEventListener(Ga,n),t._moveCb=null,er(t,e))})}})))},methods:{hasMove:function(n,e){if(!Va)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Na(t,n)})),Za(t,e),t.style.display="none",this.$el.appendChild(t);var a=rr(t);return this.$el.removeChild(t),this._hasMove=a.hasTransform}}}};Bt.config.mustUseProp=function(n,e,t){return"value"===t&&_t(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Bt.config.isReservedTag=Qt,Bt.config.isReservedAttr=Dt,Bt.config.getTagNamespace=function(n){return Gt(n)?"svg":"math"===n?"math":void 0},Bt.config.isUnknownElement=function(n){if(!V)return!0;if(Qt(n))return!1;if(n=n.toLowerCase(),null!=Xt[n])return Xt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Xt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Xt[n]=/HTMLUnknownElement/.test(e.toString())},P(Bt.options.directives,wr),P(Bt.options.components,Dr),Bt.prototype.__patch__=V?pr:F,Bt.prototype.$mount=function(n,e){return function(n,e,t){var a;return n.$el=e,n.$options.render||(n.$options.render=En),at(n,"beforeMount"),a=function(){n._update(n._render(),t)},new gt(n,a,F,{before:function(){n._isMounted&&!n._isDestroyed&&at(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,at(n,"mounted")),n}(this,n=n&&V?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},V&&setTimeout((function(){q.devtools&&sn&&sn.emit("init",Bt)}),0);var _r=Bt;
/*!
  * vue-router v3.5.4
  * (c) 2022 Evan You
  * @license MIT
  */function $r(n,e){for(var t in e)n[t]=e[t];return n}var Lr=/[!'()*]/g,Ur=function(n){return"%"+n.charCodeAt(0).toString(16)},Or=/%2C/g,Mr=function(n){return encodeURIComponent(n).replace(Lr,Ur).replace(Or,",")};function qr(n){try{return decodeURIComponent(n)}catch(n){0}return n}var Jr=function(n){return null==n||"object"==typeof n?n:String(n)};function Zr(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),a=qr(t.shift()),r=t.length>0?qr(t.join("=")):null;void 0===e[a]?e[a]=r:Array.isArray(e[a])?e[a].push(r):e[a]=[e[a],r]})),e):e}function Nr(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return Mr(e);if(Array.isArray(t)){var a=[];return t.forEach((function(n){void 0!==n&&(null===n?a.push(Mr(e)):a.push(Mr(e)+"="+Mr(n)))})),a.join("&")}return Mr(e)+"="+Mr(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var Hr=/\/?$/;function Rr(n,e,t,a){var r=a&&a.options.stringifyQuery,i=e.query||{};try{i=Vr(i)}catch(n){}var o={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:Qr(e,r),matched:n?Gr(n):[]};return t&&(o.redirectedFrom=Qr(t,r)),Object.freeze(o)}function Vr(n){if(Array.isArray(n))return n.map(Vr);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=Vr(n[t]);return e}return n}var Wr=Rr(null,{path:"/"});function Gr(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function Qr(n,e){var t=n.path,a=n.query;void 0===a&&(a={});var r=n.hash;return void 0===r&&(r=""),(t||"/")+(e||Nr)(a)+r}function Xr(n,e,t){return e===Wr?n===e:!!e&&(n.path&&e.path?n.path.replace(Hr,"")===e.path.replace(Hr,"")&&(t||n.hash===e.hash&&Yr(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&Yr(n.query,e.query)&&Yr(n.params,e.params))))}function Yr(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),a=Object.keys(e).sort();return t.length===a.length&&t.every((function(t,r){var i=n[t];if(a[r]!==t)return!1;var o=e[t];return null==i||null==o?i===o:"object"==typeof i&&"object"==typeof o?Yr(i,o):String(i)===String(o)}))}function Kr(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var a in t.instances){var r=t.instances[a],i=t.enteredCbs[a];if(r&&i){delete t.enteredCbs[a];for(var o=0;o<i.length;o++)r._isBeingDestroyed||i[o](r)}}}}var ni={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,a=e.children,r=e.parent,i=e.data;i.routerView=!0;for(var o=r.$createElement,s=t.name,l=r.$route,c=r._routerViewCache||(r._routerViewCache={}),d=0,u=!1;r&&r._routerRoot!==r;){var p=r.$vnode?r.$vnode.data:{};p.routerView&&d++,p.keepAlive&&r._directInactive&&r._inactive&&(u=!0),r=r.$parent}if(i.routerViewDepth=d,u){var h=c[s],m=h&&h.component;return m?(h.configProps&&ei(m,i,h.route,h.configProps),o(m,i,a)):o()}var g=l.matched[d],f=g&&g.components[s];if(!g||!f)return c[s]=null,o();c[s]={component:f},i.registerRouteInstance=function(n,e){var t=g.instances[s];(e&&t!==n||!e&&t===n)&&(g.instances[s]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){g.instances[s]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==g.instances[s]&&(g.instances[s]=n.componentInstance),Kr(l)};var v=g.props&&g.props[s];return v&&($r(c[s],{route:l,configProps:v}),ei(f,i,l,v)),o(f,i,a)}};function ei(n,e,t,a){var r=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,a);if(r){r=e.props=$r({},r);var i=e.attrs=e.attrs||{};for(var o in r)n.props&&o in n.props||(i[o]=r[o],delete r[o])}}function ti(n,e,t){var a=n.charAt(0);if("/"===a)return n;if("?"===a||"#"===a)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var i=n.replace(/^\//,"").split("/"),o=0;o<i.length;o++){var s=i[o];".."===s?r.pop():"."!==s&&r.push(s)}return""!==r[0]&&r.unshift(""),r.join("/")}function ai(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var ri=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},ii=Ei,oi=ui,si=function(n,e){return hi(ui(n,e),e)},li=hi,ci=bi,di=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function ui(n,e){for(var t,a=[],r=0,i=0,o="",s=e&&e.delimiter||"/";null!=(t=di.exec(n));){var l=t[0],c=t[1],d=t.index;if(o+=n.slice(i,d),i=d+l.length,c)o+=c[1];else{var u=n[i],p=t[2],h=t[3],m=t[4],g=t[5],f=t[6],v=t[7];o&&(a.push(o),o="");var b=null!=p&&null!=u&&u!==p,E="+"===f||"*"===f,x="?"===f||"*"===f,y=t[2]||s,w=m||g;a.push({name:h||r++,prefix:p||"",delimiter:y,optional:x,repeat:E,partial:b,asterisk:!!v,pattern:w?gi(w):v?".*":"[^"+mi(y)+"]+?"})}}return i<n.length&&(o+=n.substr(i)),o&&a.push(o),a}function pi(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function hi(n,e){for(var t=new Array(n.length),a=0;a<n.length;a++)"object"==typeof n[a]&&(t[a]=new RegExp("^(?:"+n[a].pattern+")$",vi(e)));return function(e,a){for(var r="",i=e||{},o=(a||{}).pretty?pi:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,d=i[l.name];if(null==d){if(l.optional){l.partial&&(r+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(ri(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<d.length;u++){if(c=o(d[u]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");r+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):o(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');r+=l.prefix+c}}else r+=l}return r}}function mi(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function gi(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function fi(n,e){return n.keys=e,n}function vi(n){return n&&n.sensitive?"":"i"}function bi(n,e,t){ri(e)||(t=e||t,e=[]);for(var a=(t=t||{}).strict,r=!1!==t.end,i="",o=0;o<n.length;o++){var s=n[o];if("string"==typeof s)i+=mi(s);else{var l=mi(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),i+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=mi(t.delimiter||"/"),u=i.slice(-d.length)===d;return a||(i=(u?i.slice(0,-d.length):i)+"(?:"+d+"(?=$))?"),i+=r?"$":a&&u?"":"(?="+d+"|$)",fi(new RegExp("^"+i,vi(t)),e)}function Ei(n,e,t){return ri(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var a=0;a<t.length;a++)e.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return fi(n,e)}(n,e):ri(n)?function(n,e,t){for(var a=[],r=0;r<n.length;r++)a.push(Ei(n[r],e,t).source);return fi(new RegExp("(?:"+a.join("|")+")",vi(t)),e)}(n,e,t):function(n,e,t){return bi(ui(n,t),e,t)}(n,e,t)}ii.parse=oi,ii.compile=si,ii.tokensToFunction=li,ii.tokensToRegExp=ci;var xi=Object.create(null);function yi(n,e,t){e=e||{};try{var a=xi[n]||(xi[n]=ii.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),a(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function wi(n,e,t,a){var r="string"==typeof n?{path:n}:n;if(r._normalized)return r;if(r.name){var i=(r=$r({},n)).params;return i&&"object"==typeof i&&(r.params=$r({},i)),r}if(!r.path&&r.params&&e){(r=$r({},r))._normalized=!0;var o=$r($r({},e.params),r.params);if(e.name)r.name=e.name,r.params=o;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;r.path=yi(s,o,e.path)}else 0;return r}var l=function(n){var e="",t="",a=n.indexOf("#");a>=0&&(e=n.slice(a),n=n.slice(0,a));var r=n.indexOf("?");return r>=0&&(t=n.slice(r+1),n=n.slice(0,r)),{path:n,query:t,hash:e}}(r.path||""),c=e&&e.path||"/",d=l.path?ti(l.path,c,t||r.append):c,u=function(n,e,t){void 0===e&&(e={});var a,r=t||Zr;try{a=r(n||"")}catch(n){a={}}for(var i in e){var o=e[i];a[i]=Array.isArray(o)?o.map(Jr):Jr(o)}return a}(l.query,r.query,a&&a.options.parseQuery),p=r.hash||l.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:d,query:u,hash:p}}var ki,Ai=function(){},Si={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,a=this.$route,r=t.resolve(this.to,a,this.append),i=r.location,o=r.route,s=r.href,l={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,u=null==c?"router-link-active":c,p=null==d?"router-link-exact-active":d,h=null==this.activeClass?u:this.activeClass,m=null==this.exactActiveClass?p:this.exactActiveClass,g=o.redirectedFrom?Rr(null,wi(o.redirectedFrom),null,t):o;l[m]=Xr(a,g,this.exactPath),l[h]=this.exact||this.exactPath?l[m]:function(n,e){return 0===n.path.replace(Hr,"/").indexOf(e.path.replace(Hr,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(a,g);var f=l[m]?this.ariaCurrentValue:null,v=function(n){Bi(n)&&(e.replace?t.replace(i,Ai):t.push(i,Ai))},b={click:Bi};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=v})):b[this.event]=v;var E={class:l},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:o,navigate:v,isActive:l[h],isExactActive:l[m]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)E.on=b,E.attrs={href:s,"aria-current":f};else{var y=function n(e){var t;if(e)for(var a=0;a<e.length;a++){if("a"===(t=e[a]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(y){y.isStatic=!1;var w=y.data=$r({},y.data);for(var k in w.on=w.on||{},w.on){var A=w.on[k];k in b&&(w.on[k]=Array.isArray(A)?A:[A])}for(var S in b)S in w.on?w.on[S].push(b[S]):w.on[S]=v;var B=y.data.attrs=$r({},y.data.attrs);B.href=s,B["aria-current"]=f}else E.on=b}return n(this.tag,E,this.$slots.default)}};function Bi(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Ti="undefined"!=typeof window;function Ci(n,e,t,a,r){var i=e||[],o=t||Object.create(null),s=a||Object.create(null);n.forEach((function(n){!function n(e,t,a,r,i,o){var s=r.path,l=r.name;0;var c=r.pathToRegexpOptions||{},d=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return ai(e.path+"/"+n)}(s,i,c.strict);"boolean"==typeof r.caseSensitive&&(c.sensitive=r.caseSensitive);var u={path:d,regex:ji(d,c),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:l,parent:i,matchAs:o,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var i=o?ai(o+"/"+r.path):void 0;n(e,t,a,r,u,i)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==r.alias)for(var p=Array.isArray(r.alias)?r.alias:[r.alias],h=0;h<p.length;++h){0;var m={path:p[h],children:r.children};n(e,t,a,m,i,u.path||"/")}l&&(a[l]||(a[l]=u))}(i,o,s,n,r)}));for(var l=0,c=i.length;l<c;l++)"*"===i[l]&&(i.push(i.splice(l,1)[0]),c--,l--);return{pathList:i,pathMap:o,nameMap:s}}function ji(n,e){return ii(n,[],e)}function zi(n,e){var t=Ci(n),a=t.pathList,r=t.pathMap,i=t.nameMap;function o(n,t,o){var s=wi(n,t,!1,e),c=s.name;if(c){var d=i[c];if(!d)return l(null,s);var u=d.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&u.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=yi(d.path,s.params),l(d,s,o)}if(s.path){s.params={};for(var h=0;h<a.length;h++){var m=a[h],g=r[m];if(Pi(g.regex,s.path,s.params))return l(g,s,o)}}return l(null,s)}function s(n,t){var a=n.redirect,r="function"==typeof a?a(Rr(n,t,null,e)):a;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return l(null,t);var s=r,c=s.name,d=s.path,u=t.query,p=t.hash,h=t.params;if(u=s.hasOwnProperty("query")?s.query:u,p=s.hasOwnProperty("hash")?s.hash:p,h=s.hasOwnProperty("params")?s.params:h,c){i[c];return o({_normalized:!0,name:c,query:u,hash:p,params:h},void 0,t)}if(d){var m=function(n,e){return ti(n,e.parent?e.parent.path:"/",!0)}(d,n);return o({_normalized:!0,path:yi(m,h),query:u,hash:p},void 0,t)}return l(null,t)}function l(n,t,a){return n&&n.redirect?s(n,a||t):n&&n.matchAs?function(n,e,t){var a=o({_normalized:!0,path:yi(t,e.params)});if(a){var r=a.matched,i=r[r.length-1];return e.params=a.params,l(i,e)}return l(null,e)}(0,t,n.matchAs):Rr(n,t,a,e)}return{match:o,addRoute:function(n,e){var t="object"!=typeof n?i[n]:void 0;Ci([e||n],a,r,i,t),t&&t.alias.length&&Ci(t.alias.map((function(n){return{path:n,children:[e]}})),a,r,i,t)},getRoutes:function(){return a.map((function(n){return r[n]}))},addRoutes:function(n){Ci(n,a,r,i)}}}function Pi(n,e,t){var a=e.match(n);if(!a)return!1;if(!t)return!0;for(var r=1,i=a.length;r<i;++r){var o=n.keys[r-1];o&&(t[o.name||"pathMatch"]="string"==typeof a[r]?qr(a[r]):a[r])}return!0}var Ii=Ti&&window.performance&&window.performance.now?window.performance:Date;function Fi(){return Ii.now().toFixed(3)}var Di=Fi();function _i(){return Di}function $i(n){return Di=n}var Li=Object.create(null);function Ui(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=$r({},window.history.state);return t.key=_i(),window.history.replaceState(t,"",e),window.addEventListener("popstate",qi),function(){window.removeEventListener("popstate",qi)}}function Oi(n,e,t,a){if(n.app){var r=n.options.scrollBehavior;r&&n.app.$nextTick((function(){var i=function(){var n=_i();if(n)return Li[n]}(),o=r.call(n,e,t,a?i:null);o&&("function"==typeof o.then?o.then((function(n){Ri(n,i)})).catch((function(n){0})):Ri(o,i))}))}}function Mi(){var n=_i();n&&(Li[n]={x:window.pageXOffset,y:window.pageYOffset})}function qi(n){Mi(),n.state&&n.state.key&&$i(n.state.key)}function Ji(n){return Ni(n.x)||Ni(n.y)}function Zi(n){return{x:Ni(n.x)?n.x:window.pageXOffset,y:Ni(n.y)?n.y:window.pageYOffset}}function Ni(n){return"number"==typeof n}var Hi=/^#\d/;function Ri(n,e){var t,a="object"==typeof n;if(a&&"string"==typeof n.selector){var r=Hi.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(r){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),a=n.getBoundingClientRect();return{x:a.left-t.left-e.x,y:a.top-t.top-e.y}}(r,i={x:Ni((t=i).x)?t.x:0,y:Ni(t.y)?t.y:0})}else Ji(n)&&(e=Zi(n))}else a&&Ji(n)&&(e=Zi(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var Vi,Wi=Ti&&((-1===(Vi=window.navigator.userAgent).indexOf("Android 2.")&&-1===Vi.indexOf("Android 4.0")||-1===Vi.indexOf("Mobile Safari")||-1!==Vi.indexOf("Chrome")||-1!==Vi.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Gi(n,e){Mi();var t=window.history;try{if(e){var a=$r({},t.state);a.key=_i(),t.replaceState(a,"",n)}else t.pushState({key:$i(Fi())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function Qi(n){Gi(n,!0)}function Xi(n,e,t){var a=function(r){r>=n.length?t():n[r]?e(n[r],(function(){a(r+1)})):a(r+1)};a(0)}var Yi={redirected:2,aborted:4,cancelled:8,duplicated:16};function Ki(n,e){return eo(n,e,Yi.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return to.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function no(n,e){return eo(n,e,Yi.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function eo(n,e,t,a){var r=new Error(a);return r._isRouter=!0,r.from=n,r.to=e,r.type=t,r}var to=["params","query","hash"];function ao(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function ro(n,e){return ao(n)&&n._isRouter&&(null==e||n.type===e)}function io(n){return function(e,t,a){var r=!1,i=0,o=null;oo(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){r=!0,i++;var l,c=co((function(e){var r;((r=e).__esModule||lo&&"Module"===r[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:ki.extend(e),t.components[s]=e,--i<=0&&a()})),d=co((function(n){var e="Failed to resolve async component "+s+": "+n;o||(o=ao(n)?n:new Error(e),a(o))}));try{l=n(c,d)}catch(n){d(n)}if(l)if("function"==typeof l.then)l.then(c,d);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,d)}}})),r||a()}}function oo(n,e){return so(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function so(n){return Array.prototype.concat.apply([],n)}var lo="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function co(n){var e=!1;return function(){for(var t=[],a=arguments.length;a--;)t[a]=arguments[a];if(!e)return e=!0,n.apply(this,t)}}var uo=function(n,e){this.router=n,this.base=function(n){if(!n)if(Ti){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=Wr,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function po(n,e,t,a){var r=oo(n,(function(n,a,r,i){var o=function(n,e){"function"!=typeof n&&(n=ki.extend(n));return n.options[e]}(n,e);if(o)return Array.isArray(o)?o.map((function(n){return t(n,a,r,i)})):t(o,a,r,i)}));return so(a?r.reverse():r)}function ho(n,e){if(e)return function(){return n.apply(e,arguments)}}uo.prototype.listen=function(n){this.cb=n},uo.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},uo.prototype.onError=function(n){this.errorCbs.push(n)},uo.prototype.transitionTo=function(n,e,t){var a,r=this;try{a=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var i=this.current;this.confirmTransition(a,(function(){r.updateRoute(a),e&&e(a),r.ensureURL(),r.router.afterHooks.forEach((function(n){n&&n(a,i)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(n){n(a)})))}),(function(n){t&&t(n),n&&!r.ready&&(ro(n,Yi.redirected)&&i===Wr||(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(n)}))))}))},uo.prototype.confirmTransition=function(n,e,t){var a=this,r=this.current;this.pending=n;var i,o,s=function(n){!ro(n)&&ao(n)&&(a.errorCbs.length?a.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=r.matched.length-1;if(Xr(n,r)&&l===c&&n.matched[l]===r.matched[c])return this.ensureURL(),n.hash&&Oi(this.router,r,n,!1),s(((o=eo(i=r,n,Yi.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",o));var d=function(n,e){var t,a=Math.max(n.length,e.length);for(t=0;t<a&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=d.updated,p=d.deactivated,h=d.activated,m=[].concat(function(n){return po(n,"beforeRouteLeave",ho,!0)}(p),this.router.beforeHooks,function(n){return po(n,"beforeRouteUpdate",ho)}(u),h.map((function(n){return n.beforeEnter})),io(h)),g=function(e,t){if(a.pending!==n)return s(no(r,n));try{e(n,r,(function(e){!1===e?(a.ensureURL(!0),s(function(n,e){return eo(n,e,Yi.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(r,n))):ao(e)?(a.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(Ki(r,n)),"object"==typeof e&&e.replace?a.replace(e):a.push(e)):t(e)}))}catch(n){s(n)}};Xi(m,g,(function(){Xi(function(n){return po(n,"beforeRouteEnter",(function(n,e,t,a){return function(n,e,t){return function(a,r,i){return n(a,r,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),i(n)}))}}(n,t,a)}))}(h).concat(a.router.resolveHooks),g,(function(){if(a.pending!==n)return s(no(r,n));a.pending=null,e(n),a.router.app&&a.router.app.$nextTick((function(){Kr(n)}))}))}))},uo.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},uo.prototype.setupListeners=function(){},uo.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=Wr,this.pending=null};var mo=function(n){function e(e,t){n.call(this,e,t),this._startLocation=go(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,a=Wi&&t;a&&this.listeners.push(Ui());var r=function(){var t=n.current,r=go(n.base);n.current===Wr&&r===n._startLocation||n.transitionTo(r,(function(n){a&&Oi(e,n,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){Gi(ai(a.base+n.fullPath)),Oi(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){Qi(ai(a.base+n.fullPath)),Oi(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(go(this.base)!==this.current.fullPath){var e=ai(this.base+this.current.fullPath);n?Gi(e):Qi(e)}},e.prototype.getCurrentLocation=function(){return go(this.base)},e}(uo);function go(n){var e=window.location.pathname,t=e.toLowerCase(),a=n.toLowerCase();return!n||t!==a&&0!==t.indexOf(ai(a+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var fo=function(n){function e(e,t,a){n.call(this,e,t),a&&function(n){var e=go(n);if(!/^\/#/.test(e))return window.location.replace(ai(n+"/#"+e)),!0}(this.base)||vo()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=Wi&&e;t&&this.listeners.push(Ui());var a=function(){var e=n.current;vo()&&n.transitionTo(bo(),(function(a){t&&Oi(n.router,a,e,!0),Wi||yo(a.fullPath)}))},r=Wi?"popstate":"hashchange";window.addEventListener(r,a),this.listeners.push((function(){window.removeEventListener(r,a)}))}},e.prototype.push=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){xo(n.fullPath),Oi(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){yo(n.fullPath),Oi(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;bo()!==e&&(n?xo(e):yo(e))},e.prototype.getCurrentLocation=function(){return bo()},e}(uo);function vo(){var n=bo();return"/"===n.charAt(0)||(yo("/"+n),!1)}function bo(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Eo(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function xo(n){Wi?Gi(Eo(n)):window.location.hash=n}function yo(n){Wi?Qi(Eo(n)):window.location.replace(Eo(n))}var wo=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var a=this;this.transitionTo(n,(function(n){a.stack=a.stack.slice(0,a.index+1).concat(n),a.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this;this.transitionTo(n,(function(n){a.stack=a.stack.slice(0,a.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var a=this.stack[t];this.confirmTransition(a,(function(){var n=e.current;e.index=t,e.updateRoute(a),e.router.afterHooks.forEach((function(e){e&&e(a,n)}))}),(function(n){ro(n,Yi.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(uo),ko=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=zi(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!Wi&&!1!==n.fallback,this.fallback&&(e="hash"),Ti||(e="abstract"),this.mode=e,e){case"history":this.history=new mo(this,n.base);break;case"hash":this.history=new fo(this,n.base,this.fallback);break;case"abstract":this.history=new wo(this,n.base);break;default:0}},Ao={currentRoute:{configurable:!0}};function So(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}ko.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Ao.currentRoute.get=function(){return this.history&&this.history.current},ko.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof mo||t instanceof fo){var a=function(n){t.setupListeners(),function(n){var a=t.current,r=e.options.scrollBehavior;Wi&&r&&"fullPath"in n&&Oi(e,n,a,!1)}(n)};t.transitionTo(t.getCurrentLocation(),a,a)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},ko.prototype.beforeEach=function(n){return So(this.beforeHooks,n)},ko.prototype.beforeResolve=function(n){return So(this.resolveHooks,n)},ko.prototype.afterEach=function(n){return So(this.afterHooks,n)},ko.prototype.onReady=function(n,e){this.history.onReady(n,e)},ko.prototype.onError=function(n){this.history.onError(n)},ko.prototype.push=function(n,e,t){var a=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){a.history.push(n,e,t)}));this.history.push(n,e,t)},ko.prototype.replace=function(n,e,t){var a=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){a.history.replace(n,e,t)}));this.history.replace(n,e,t)},ko.prototype.go=function(n){this.history.go(n)},ko.prototype.back=function(){this.go(-1)},ko.prototype.forward=function(){this.go(1)},ko.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},ko.prototype.resolve=function(n,e,t){var a=wi(n,e=e||this.history.current,t,this),r=this.match(a,e),i=r.redirectedFrom||r.fullPath;return{location:a,route:r,href:function(n,e,t){var a="hash"===t?"#"+e:e;return n?ai(n+"/"+a):a}(this.history.base,i,this.mode),normalizedTo:a,resolved:r}},ko.prototype.getRoutes=function(){return this.matcher.getRoutes()},ko.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==Wr&&this.history.transitionTo(this.history.getCurrentLocation())},ko.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==Wr&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(ko.prototype,Ao),ko.install=function n(e){if(!n.installed||ki!==e){n.installed=!0,ki=e;var t=function(n){return void 0!==n},a=function(n,e){var a=n.$options._parentVnode;t(a)&&t(a=a.data)&&t(a=a.registerRouteInstance)&&a(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",ni),e.component("RouterLink",Si);var r=e.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},ko.version="3.5.4",ko.isNavigationFailure=ro,ko.NavigationFailureType=Yi,ko.START_LOCATION=Wr,Ti&&window.Vue&&window.Vue.use(ko);var Bo=ko;t(243),t(116),t(288),t(146),t(290),t(37),t(38),t(291);function To(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}var Co=t(60),jo=t(80),zo=(t(115),t(19),t(45),t(245),t(246),t(36),t(22),{NotFound:function(){return Promise.all([t.e(0),t.e(22)]).then(t.bind(null,578))},Layout:function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,576))}}),Po={"v-114ebabf":function(){return t.e(25).then(t.bind(null,589))},"v-149b409a":function(){return t.e(26).then(t.bind(null,590))},"v-ee5ba5f2":function(){return t.e(27).then(t.bind(null,591))},"v-06b57d62":function(){return t.e(28).then(t.bind(null,592))},"v-22143aa3":function(){return t.e(29).then(t.bind(null,593))},"v-45cab77c":function(){return t.e(30).then(t.bind(null,594))},"v-77218b72":function(){return t.e(31).then(t.bind(null,595))},"v-82faadf2":function(){return t.e(32).then(t.bind(null,596))},"v-40ef500e":function(){return t.e(33).then(t.bind(null,597))},"v-630cfd39":function(){return t.e(34).then(t.bind(null,598))},"v-d94d81dc":function(){return t.e(35).then(t.bind(null,599))},"v-796a6452":function(){return t.e(36).then(t.bind(null,600))},"v-18e4d532":function(){return t.e(37).then(t.bind(null,601))},"v-e23b3e5a":function(){return t.e(38).then(t.bind(null,602))},"v-87e2adce":function(){return t.e(39).then(t.bind(null,603))},"v-5b3db7c2":function(){return t.e(40).then(t.bind(null,604))},"v-2631246c":function(){return t.e(41).then(t.bind(null,605))},"v-7f548e0b":function(){return t.e(42).then(t.bind(null,606))},"v-8bf89420":function(){return t.e(43).then(t.bind(null,607))},"v-66aecfa0":function(){return t.e(44).then(t.bind(null,608))},"v-130c26d4":function(){return t.e(45).then(t.bind(null,609))},"v-1de594e2":function(){return t.e(46).then(t.bind(null,610))},"v-a6b62df2":function(){return t.e(47).then(t.bind(null,611))},"v-2030046c":function(){return t.e(48).then(t.bind(null,612))},"v-71ef98c3":function(){return t.e(49).then(t.bind(null,613))},"v-727a5c1b":function(){return t.e(50).then(t.bind(null,614))},"v-098f9cf6":function(){return t.e(52).then(t.bind(null,615))},"v-5127404f":function(){return t.e(55).then(t.bind(null,616))},"v-39d35216":function(){return t.e(51).then(t.bind(null,617))},"v-1b4d934a":function(){return t.e(56).then(t.bind(null,618))},"v-3545b6d6":function(){return t.e(57).then(t.bind(null,619))},"v-e01ae0a2":function(){return t.e(58).then(t.bind(null,620))},"v-f2fcc99a":function(){return t.e(59).then(t.bind(null,621))},"v-6cad0266":function(){return t.e(60).then(t.bind(null,622))},"v-740ad10d":function(){return t.e(61).then(t.bind(null,623))},"v-cf3bf926":function(){return t.e(62).then(t.bind(null,624))},"v-3646c5e6":function(){return t.e(63).then(t.bind(null,625))},"v-a62931a6":function(){return t.e(64).then(t.bind(null,626))},"v-630ed0b4":function(){return t.e(65).then(t.bind(null,627))},"v-d9275d64":function(){return t.e(66).then(t.bind(null,628))},"v-55f28ba4":function(){return t.e(67).then(t.bind(null,629))},"v-3a277d54":function(){return t.e(69).then(t.bind(null,630))},"v-5605576e":function(){return t.e(68).then(t.bind(null,631))},"v-1e0296eb":function(){return t.e(70).then(t.bind(null,632))},"v-63aacc5a":function(){return t.e(71).then(t.bind(null,633))},"v-cc14e3b2":function(){return t.e(73).then(t.bind(null,634))},"v-0f3ddd85":function(){return t.e(72).then(t.bind(null,635))},"v-52cf5563":function(){return t.e(74).then(t.bind(null,636))},"v-d469fd66":function(){return t.e(75).then(t.bind(null,637))},"v-4d277b4e":function(){return t.e(76).then(t.bind(null,638))},"v-37bee46b":function(){return t.e(78).then(t.bind(null,639))},"v-6a3e7b32":function(){return t.e(77).then(t.bind(null,640))},"v-30f185a1":function(){return t.e(79).then(t.bind(null,641))},"v-dc7732f2":function(){return t.e(80).then(t.bind(null,642))},"v-5845768c":function(){return t.e(81).then(t.bind(null,643))},"v-1bab4b4f":function(){return t.e(82).then(t.bind(null,644))},"v-76cd19f6":function(){return t.e(83).then(t.bind(null,645))},"v-5aa4bdc0":function(){return t.e(84).then(t.bind(null,646))},"v-17c14e92":function(){return t.e(86).then(t.bind(null,647))},"v-7533111a":function(){return t.e(85).then(t.bind(null,648))},"v-53c0db68":function(){return t.e(87).then(t.bind(null,649))},"v-0ffecd12":function(){return t.e(88).then(t.bind(null,650))},"v-02d4297e":function(){return t.e(89).then(t.bind(null,651))},"v-144cbcfc":function(){return t.e(90).then(t.bind(null,652))},"v-56dc7492":function(){return t.e(91).then(t.bind(null,653))},"v-34e503a2":function(){return t.e(92).then(t.bind(null,654))},"v-b0946f2e":function(){return t.e(93).then(t.bind(null,655))},"v-11e867dc":function(){return t.e(94).then(t.bind(null,656))},"v-5a9aa5c8":function(){return t.e(95).then(t.bind(null,657))},"v-34db8534":function(){return t.e(96).then(t.bind(null,658))},"v-72a20d52":function(){return t.e(97).then(t.bind(null,659))},"v-6b59ecfc":function(){return t.e(98).then(t.bind(null,660))},"v-d9d6ef6c":function(){return t.e(99).then(t.bind(null,661))},"v-2cbc09ae":function(){return t.e(100).then(t.bind(null,662))},"v-710bcb73":function(){return t.e(101).then(t.bind(null,663))},"v-21fe0376":function(){return t.e(102).then(t.bind(null,664))},"v-9dfb5f76":function(){return t.e(103).then(t.bind(null,665))},"v-137192e0":function(){return t.e(104).then(t.bind(null,666))},"v-494c5dee":function(){return t.e(105).then(t.bind(null,667))},"v-35a6c9d4":function(){return t.e(106).then(t.bind(null,668))},"v-100e1a39":function(){return t.e(107).then(t.bind(null,669))},"v-a2f47fd2":function(){return t.e(108).then(t.bind(null,670))},"v-e7560bc2":function(){return t.e(109).then(t.bind(null,671))},"v-026e57d9":function(){return t.e(110).then(t.bind(null,672))},"v-1b950d28":function(){return t.e(111).then(t.bind(null,673))},"v-32eee2a7":function(){return t.e(112).then(t.bind(null,674))},"v-e14c0002":function(){return t.e(113).then(t.bind(null,675))},"v-4bc9bc28":function(){return t.e(114).then(t.bind(null,676))},"v-5e0317de":function(){return t.e(115).then(t.bind(null,677))},"v-6938b212":function(){return t.e(116).then(t.bind(null,678))},"v-6101dcae":function(){return t.e(117).then(t.bind(null,679))},"v-3a5f55aa":function(){return t.e(118).then(t.bind(null,680))},"v-0b9d662c":function(){return t.e(119).then(t.bind(null,681))},"v-2793d441":function(){return t.e(120).then(t.bind(null,682))},"v-27ecc802":function(){return t.e(121).then(t.bind(null,683))},"v-30b1c3f0":function(){return t.e(122).then(t.bind(null,684))},"v-474f49c4":function(){return t.e(123).then(t.bind(null,685))},"v-2d0d071f":function(){return t.e(124).then(t.bind(null,686))},"v-e83702fc":function(){return t.e(125).then(t.bind(null,687))},"v-80a5e584":function(){return t.e(126).then(t.bind(null,688))},"v-c6c119ea":function(){return t.e(127).then(t.bind(null,689))},"v-19a74dac":function(){return t.e(128).then(t.bind(null,690))},"v-2f476fe8":function(){return t.e(129).then(t.bind(null,691))},"v-865baf52":function(){return t.e(130).then(t.bind(null,692))},"v-4bbf1b09":function(){return t.e(131).then(t.bind(null,693))},"v-19470906":function(){return t.e(132).then(t.bind(null,694))},"v-5ccd2f0e":function(){return t.e(133).then(t.bind(null,695))},"v-14a85ffb":function(){return t.e(134).then(t.bind(null,696))},"v-678f65f0":function(){return t.e(136).then(t.bind(null,697))},"v-11de8673":function(){return t.e(135).then(t.bind(null,698))},"v-2dc61188":function(){return t.e(138).then(t.bind(null,699))},"v-4892a16c":function(){return t.e(137).then(t.bind(null,700))},"v-1c57a748":function(){return t.e(139).then(t.bind(null,701))},"v-c3d2be30":function(){return t.e(140).then(t.bind(null,702))},"v-185d5124":function(){return t.e(141).then(t.bind(null,703))},"v-3d69e8c7":function(){return t.e(142).then(t.bind(null,704))},"v-b84a47b4":function(){return t.e(143).then(t.bind(null,705))},"v-69f0e27d":function(){return t.e(145).then(t.bind(null,706))},"v-04aa42cb":function(){return t.e(144).then(t.bind(null,707))},"v-24191ab8":function(){return t.e(146).then(t.bind(null,708))},"v-67f8971c":function(){return t.e(147).then(t.bind(null,709))},"v-9c809024":function(){return t.e(148).then(t.bind(null,710))},"v-032bad36":function(){return t.e(150).then(t.bind(null,711))},"v-117acedb":function(){return t.e(149).then(t.bind(null,712))},"v-1ede3c6e":function(){return t.e(151).then(t.bind(null,713))},"v-573fc67a":function(){return t.e(152).then(t.bind(null,714))},"v-3d3320b8":function(){return t.e(153).then(t.bind(null,715))},"v-22561b66":function(){return t.e(155).then(t.bind(null,716))},"v-55199d82":function(){return t.e(154).then(t.bind(null,717))},"v-8f9513da":function(){return t.e(156).then(t.bind(null,718))},"v-61bdd60c":function(){return t.e(157).then(t.bind(null,719))},"v-793c8bd7":function(){return t.e(158).then(t.bind(null,720))},"v-ea406466":function(){return t.e(159).then(t.bind(null,721))},"v-81ebc028":function(){return t.e(160).then(t.bind(null,722))},"v-5e8004ea":function(){return t.e(161).then(t.bind(null,723))},"v-3d873ab8":function(){return t.e(162).then(t.bind(null,724))},"v-1f938945":function(){return t.e(163).then(t.bind(null,725))},"v-7ee3851e":function(){return t.e(164).then(t.bind(null,726))},"v-d1cc4f68":function(){return t.e(165).then(t.bind(null,727))},"v-541f945e":function(){return t.e(166).then(t.bind(null,728))},"v-57d497d3":function(){return t.e(167).then(t.bind(null,729))},"v-9337bd9c":function(){return t.e(168).then(t.bind(null,730))},"v-8fed28fc":function(){return t.e(169).then(t.bind(null,731))},"v-0ddd240e":function(){return t.e(170).then(t.bind(null,732))},"v-4191bdea":function(){return t.e(171).then(t.bind(null,733))},"v-7eb4aa00":function(){return t.e(172).then(t.bind(null,734))},"v-2846b740":function(){return t.e(173).then(t.bind(null,735))},"v-764d3585":function(){return t.e(174).then(t.bind(null,736))},"v-6e2ea5e0":function(){return t.e(175).then(t.bind(null,737))},"v-63015344":function(){return t.e(176).then(t.bind(null,738))},"v-3500fbae":function(){return t.e(177).then(t.bind(null,739))},"v-0f924778":function(){return t.e(179).then(t.bind(null,740))},"v-5fc7eefb":function(){return t.e(178).then(t.bind(null,741))},"v-5e8d290a":function(){return t.e(180).then(t.bind(null,742))},"v-cde6b3b2":function(){return t.e(181).then(t.bind(null,743))},"v-56b31338":function(){return t.e(182).then(t.bind(null,744))},"v-42973d83":function(){return t.e(183).then(t.bind(null,745))},"v-6c8595c2":function(){return t.e(184).then(t.bind(null,746))},"v-10a0089e":function(){return t.e(185).then(t.bind(null,747))},"v-2e23dfa6":function(){return t.e(186).then(t.bind(null,748))},"v-cc2b9d6e":function(){return t.e(187).then(t.bind(null,749))},"v-9dac741a":function(){return t.e(188).then(t.bind(null,750))},"v-0f1d6620":function(){return t.e(189).then(t.bind(null,751))},"v-254cd896":function(){return t.e(53).then(t.bind(null,752))},"v-0d61cd4d":function(){return t.e(190).then(t.bind(null,753))},"v-186941b8":function(){return t.e(191).then(t.bind(null,754))},"v-ef989612":function(){return t.e(193).then(t.bind(null,755))},"v-dd6b4b16":function(){return t.e(192).then(t.bind(null,756))},"v-4486926a":function(){return t.e(194).then(t.bind(null,757))},"v-b9311d42":function(){return t.e(195).then(t.bind(null,758))},"v-5f385efa":function(){return t.e(196).then(t.bind(null,759))},"v-8acc1b34":function(){return t.e(198).then(t.bind(null,760))},"v-66abb8b2":function(){return t.e(197).then(t.bind(null,579))},"v-10cf7181":function(){return t.e(199).then(t.bind(null,761))},"v-4203fcf5":function(){return t.e(200).then(t.bind(null,762))},"v-1bc2d22f":function(){return t.e(201).then(t.bind(null,763))},"v-5763c854":function(){return t.e(202).then(t.bind(null,764))},"v-2c131d26":function(){return t.e(203).then(t.bind(null,765))},"v-03d6255f":function(){return t.e(204).then(t.bind(null,766))},"v-0dd722f1":function(){return t.e(205).then(t.bind(null,767))},"v-79159600":function(){return t.e(206).then(t.bind(null,768))},"v-b3a63b3a":function(){return t.e(207).then(t.bind(null,769))},"v-47e7f6ea":function(){return t.e(208).then(t.bind(null,770))},"v-fce62fda":function(){return t.e(209).then(t.bind(null,771))},"v-8c868670":function(){return t.e(210).then(t.bind(null,772))},"v-140aeb5c":function(){return t.e(211).then(t.bind(null,773))},"v-5ffb4c4c":function(){return t.e(212).then(t.bind(null,774))},"v-f2e96e48":function(){return t.e(213).then(t.bind(null,775))},"v-64ff720f":function(){return t.e(215).then(t.bind(null,776))},"v-2dd6c762":function(){return t.e(214).then(t.bind(null,777))},"v-c2d08bbc":function(){return t.e(216).then(t.bind(null,778))},"v-927c912e":function(){return t.e(217).then(t.bind(null,779))},"v-ea0f7aa2":function(){return t.e(218).then(t.bind(null,780))},"v-7d86f842":function(){return t.e(219).then(t.bind(null,781))},"v-bafd43e4":function(){return t.e(220).then(t.bind(null,782))},"v-09aa1208":function(){return t.e(221).then(t.bind(null,783))},"v-3f33f23c":function(){return t.e(222).then(t.bind(null,784))},"v-0f300dc0":function(){return t.e(223).then(t.bind(null,785))},"v-5efca30a":function(){return t.e(224).then(t.bind(null,786))},"v-7b5a6bdc":function(){return t.e(225).then(t.bind(null,787))},"v-fc0977e8":function(){return t.e(226).then(t.bind(null,788))},"v-7bc53962":function(){return t.e(227).then(t.bind(null,789))},"v-62b7e06a":function(){return t.e(228).then(t.bind(null,790))},"v-bf061d6c":function(){return t.e(229).then(t.bind(null,791))},"v-4a99c8a2":function(){return t.e(230).then(t.bind(null,792))},"v-33a1c7a3":function(){return t.e(231).then(t.bind(null,793))},"v-29acfcf4":function(){return t.e(232).then(t.bind(null,794))},"v-85594856":function(){return t.e(233).then(t.bind(null,795))},"v-88e5f472":function(){return t.e(234).then(t.bind(null,796))},"v-9e0b35f8":function(){return t.e(235).then(t.bind(null,797))},"v-7e472cf8":function(){return t.e(236).then(t.bind(null,798))},"v-8a70cff8":function(){return t.e(237).then(t.bind(null,799))},"v-c5688e88":function(){return t.e(238).then(t.bind(null,800))},"v-3f38e99e":function(){return t.e(239).then(t.bind(null,801))},"v-2bf8cf0c":function(){return t.e(240).then(t.bind(null,802))},"v-270c7930":function(){return t.e(241).then(t.bind(null,803))},"v-ab095d7a":function(){return t.e(242).then(t.bind(null,804))},"v-28302a7b":function(){return t.e(243).then(t.bind(null,805))},"v-3241ccef":function(){return t.e(54).then(t.bind(null,806))},"v-73d64058":function(){return t.e(244).then(t.bind(null,807))},"v-4a911256":function(){return t.e(245).then(t.bind(null,808))},"v-0a519d84":function(){return t.e(246).then(t.bind(null,809))},"v-7dfe4f8f":function(){return t.e(247).then(t.bind(null,810))},"v-44ef47bb":function(){return t.e(248).then(t.bind(null,811))},"v-8dfbb406":function(){return t.e(249).then(t.bind(null,812))},"v-562b6997":function(){return t.e(250).then(t.bind(null,813))},"v-64ec1ae6":function(){return t.e(251).then(t.bind(null,814))},"v-5b239ac5":function(){return t.e(252).then(t.bind(null,815))},"v-453d7eb9":function(){return t.e(253).then(t.bind(null,816))},"v-b3243102":function(){return t.e(254).then(t.bind(null,817))},"v-1c3ffa58":function(){return t.e(255).then(t.bind(null,818))},"v-0a4c1062":function(){return t.e(256).then(t.bind(null,819))},"v-36efd7c2":function(){return t.e(257).then(t.bind(null,820))},"v-6a0481d6":function(){return t.e(258).then(t.bind(null,821))},"v-3a0fdb6a":function(){return t.e(259).then(t.bind(null,822))},"v-0e4d407c":function(){return t.e(260).then(t.bind(null,823))},"v-4eb30ad6":function(){return t.e(261).then(t.bind(null,824))},"v-5abcae32":function(){return t.e(262).then(t.bind(null,825))},"v-5faac68a":function(){return t.e(263).then(t.bind(null,826))},"v-407ea744":function(){return t.e(264).then(t.bind(null,827))},"v-86cc2f9c":function(){return t.e(265).then(t.bind(null,828))},"v-d6eff936":function(){return t.e(266).then(t.bind(null,829))},"v-83d1c182":function(){return t.e(267).then(t.bind(null,830))},"v-97e9645e":function(){return t.e(268).then(t.bind(null,831))},"v-13167ccf":function(){return t.e(269).then(t.bind(null,832))},"v-2b0e8803":function(){return t.e(270).then(t.bind(null,833))},"v-28f42e20":function(){return t.e(271).then(t.bind(null,834))},"v-8ef74bae":function(){return t.e(272).then(t.bind(null,835))},"v-cbc33bfa":function(){return t.e(273).then(t.bind(null,836))},"v-8c64e7fc":function(){return t.e(274).then(t.bind(null,837))},"v-0e657df8":function(){return t.e(275).then(t.bind(null,838))},"v-6964c0b4":function(){return t.e(276).then(t.bind(null,839))},"v-8c4c5260":function(){return t.e(277).then(t.bind(null,840))},"v-7c4e206c":function(){return t.e(278).then(t.bind(null,841))},"v-d56afaf0":function(){return t.e(279).then(t.bind(null,842))},"v-8d5ee670":function(){return t.e(280).then(t.bind(null,843))},"v-0154a152":function(){return t.e(281).then(t.bind(null,844))},"v-0753c8e0":function(){return t.e(282).then(t.bind(null,845))},"v-1af13004":function(){return t.e(283).then(t.bind(null,846))},"v-9d00f62e":function(){return t.e(284).then(t.bind(null,847))},"v-19bad570":function(){return t.e(285).then(t.bind(null,848))},"v-2c2d74f6":function(){return t.e(286).then(t.bind(null,849))},"v-8944309c":function(){return t.e(287).then(t.bind(null,850))},"v-41617b34":function(){return t.e(288).then(t.bind(null,851))},"v-2207ccde":function(){return t.e(289).then(t.bind(null,852))},"v-9eb35d5e":function(){return t.e(290).then(t.bind(null,853))},"v-3bf18bd2":function(){return t.e(291).then(t.bind(null,854))},"v-41aeddf3":function(){return t.e(292).then(t.bind(null,855))},"v-1c9728b1":function(){return t.e(293).then(t.bind(null,856))},"v-4457ccf9":function(){return t.e(294).then(t.bind(null,857))},"v-6da7ed1e":function(){return t.e(295).then(t.bind(null,858))},"v-516c7555":function(){return t.e(296).then(t.bind(null,859))},"v-0cce9194":function(){return t.e(297).then(t.bind(null,860))},"v-5186b60c":function(){return t.e(298).then(t.bind(null,861))},"v-f7c2d768":function(){return t.e(299).then(t.bind(null,862))},"v-409e8d99":function(){return t.e(300).then(t.bind(null,863))},"v-6aed7fb9":function(){return t.e(301).then(t.bind(null,864))},"v-79227822":function(){return t.e(302).then(t.bind(null,865))},"v-78db4470":function(){return t.e(303).then(t.bind(null,866))},"v-2d97e714":function(){return t.e(304).then(t.bind(null,867))},"v-2431e7cc":function(){return t.e(305).then(t.bind(null,868))},"v-677e8b92":function(){return t.e(306).then(t.bind(null,869))},"v-fd572a12":function(){return t.e(307).then(t.bind(null,870))},"v-585a6335":function(){return t.e(308).then(t.bind(null,871))},"v-1c340074":function(){return t.e(309).then(t.bind(null,872))},"v-5731bc7a":function(){return t.e(310).then(t.bind(null,873))},"v-3413de38":function(){return t.e(10).then(t.bind(null,565))},"v-0be85f30":function(){return t.e(311).then(t.bind(null,874))},"v-58228608":function(){return t.e(312).then(t.bind(null,875))},"v-60a2e194":function(){return t.e(313).then(t.bind(null,876))},"v-2bc4fe24":function(){return t.e(314).then(t.bind(null,877))},"v-50dd6d1f":function(){return t.e(315).then(t.bind(null,878))},"v-52558656":function(){return t.e(316).then(t.bind(null,879))},"v-7dcc7da2":function(){return t.e(317).then(t.bind(null,880))},"v-92e1d46e":function(){return t.e(318).then(t.bind(null,881))},"v-39b8722d":function(){return t.e(319).then(t.bind(null,882))},"v-9605ca52":function(){return t.e(320).then(t.bind(null,883))},"v-8e121888":function(){return t.e(321).then(t.bind(null,884))},"v-56b945d9":function(){return t.e(322).then(t.bind(null,885))},"v-102c6808":function(){return t.e(323).then(t.bind(null,886))},"v-d1ae67ce":function(){return t.e(324).then(t.bind(null,887))},"v-47bf13d4":function(){return t.e(325).then(t.bind(null,888))},"v-98fad160":function(){return t.e(327).then(t.bind(null,889))},"v-20d6151f":function(){return t.e(328).then(t.bind(null,890))},"v-96c274c4":function(){return t.e(326).then(t.bind(null,891))},"v-65ff4861":function(){return t.e(329).then(t.bind(null,892))},"v-fe22f704":function(){return t.e(11).then(t.bind(null,566))},"v-082def39":function(){return t.e(12).then(t.bind(null,567))},"v-472ff7fa":function(){return t.e(13).then(t.bind(null,568))},"v-6fc9318d":function(){return t.e(330).then(t.bind(null,893))},"v-46372f8f":function(){return t.e(5).then(t.bind(null,569))},"v-90fe2772":function(){return t.e(331).then(t.bind(null,894))},"v-dd90940e":function(){return t.e(332).then(t.bind(null,895))},"v-a96d079e":function(){return t.e(333).then(t.bind(null,896))},"v-7e96e1a9":function(){return t.e(334).then(t.bind(null,897))},"v-575ab7b2":function(){return t.e(335).then(t.bind(null,898))},"v-457d36c4":function(){return t.e(336).then(t.bind(null,899))},"v-0f688986":function(){return t.e(337).then(t.bind(null,580))},"v-ff0d159c":function(){return t.e(338).then(t.bind(null,900))},"v-882d8036":function(){return t.e(339).then(t.bind(null,901))},"v-6297b88c":function(){return t.e(340).then(t.bind(null,902))},"v-25fd3951":function(){return t.e(341).then(t.bind(null,903))},"v-35215ac6":function(){return t.e(342).then(t.bind(null,904))},"v-41762806":function(){return t.e(343).then(t.bind(null,905))},"v-b20b9dde":function(){return t.e(344).then(t.bind(null,906))},"v-6748c5ba":function(){return t.e(345).then(t.bind(null,907))},"v-05972e7f":function(){return t.e(347).then(t.bind(null,908))},"v-14b205db":function(){return t.e(346).then(t.bind(null,909))},"v-4c1e89e4":function(){return t.e(348).then(t.bind(null,910))},"v-20c8726d":function(){return t.e(349).then(t.bind(null,911))},"v-0318faaa":function(){return t.e(350).then(t.bind(null,912))},"v-5929862e":function(){return t.e(351).then(t.bind(null,913))},"v-7ce3cace":function(){return t.e(352).then(t.bind(null,914))},"v-e174b762":function(){return t.e(354).then(t.bind(null,915))},"v-27082361":function(){return t.e(353).then(t.bind(null,916))},"v-fb5a06f6":function(){return t.e(355).then(t.bind(null,917))},"v-2f268e20":function(){return t.e(356).then(t.bind(null,918))},"v-13f19377":function(){return t.e(357).then(t.bind(null,919))},"v-b5437a8e":function(){return t.e(358).then(t.bind(null,920))},"v-cf95b010":function(){return t.e(14).then(t.bind(null,570))},"v-495bd5c0":function(){return t.e(15).then(t.bind(null,571))},"v-52b85f76":function(){return t.e(16).then(t.bind(null,572))},"v-38841f26":function(){return t.e(17).then(t.bind(null,573))},"v-294fa810":function(){return t.e(18).then(t.bind(null,574))},"v-0c811db3":function(){return t.e(19).then(t.bind(null,575))},"v-d67c0f5a":function(){return t.e(359).then(t.bind(null,921))},"v-eaa560e4":function(){return t.e(360).then(t.bind(null,922))},"v-a9d48744":function(){return t.e(361).then(t.bind(null,923))},"v-f54e7960":function(){return t.e(362).then(t.bind(null,924))},"v-7c63b153":function(){return t.e(363).then(t.bind(null,925))},"v-1fea8f34":function(){return t.e(364).then(t.bind(null,926))},"v-697f26de":function(){return t.e(366).then(t.bind(null,927))},"v-0b1c7a2c":function(){return t.e(365).then(t.bind(null,928))},"v-0322d3a6":function(){return t.e(368).then(t.bind(null,929))},"v-08599aca":function(){return t.e(367).then(t.bind(null,930))},"v-c6f6e3f6":function(){return t.e(369).then(t.bind(null,931))},"v-2b560c46":function(){return t.e(370).then(t.bind(null,932))},"v-b62f781e":function(){return t.e(371).then(t.bind(null,933))},"v-3e61e2e8":function(){return t.e(372).then(t.bind(null,934))},"v-14e52e21":function(){return t.e(373).then(t.bind(null,935))},"v-725dc806":function(){return t.e(374).then(t.bind(null,936))},"v-94faf56e":function(){return t.e(375).then(t.bind(null,937))},"v-3c2557c5":function(){return t.e(376).then(t.bind(null,938))},"v-fa3c31c8":function(){return t.e(377).then(t.bind(null,939))},"v-66068836":function(){return t.e(378).then(t.bind(null,940))},"v-74d65262":function(){return t.e(379).then(t.bind(null,941))},"v-82317f6a":function(){return t.e(380).then(t.bind(null,942))},"v-cb60c634":function(){return t.e(381).then(t.bind(null,943))},"v-b673deec":function(){return t.e(382).then(t.bind(null,944))},"v-3561ff8f":function(){return t.e(383).then(t.bind(null,945))},"v-1bf32c2a":function(){return t.e(384).then(t.bind(null,946))},"v-e45063dc":function(){return t.e(385).then(t.bind(null,947))},"v-22601e66":function(){return t.e(386).then(t.bind(null,948))},"v-1888f947":function(){return t.e(387).then(t.bind(null,949))},"v-11e4bf49":function(){return t.e(388).then(t.bind(null,950))},"v-b2286a6e":function(){return t.e(389).then(t.bind(null,951))},"v-9869b040":function(){return t.e(390).then(t.bind(null,952))}};function Io(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var Fo=/-(\w)/g,Do=Io((function(n){return n.replace(Fo,(function(n,e){return e?e.toUpperCase():""}))})),_o=/\B([A-Z])/g,$o=Io((function(n){return n.replace(_o,"-$1").toLowerCase()})),Lo=Io((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function Uo(n,e){if(e)return n(e)?n(e):e.includes("-")?n(Lo(Do(e))):n(Lo(e))||n($o(e))}var Oo=Object.assign({},zo,Po),Mo=function(n){return Oo[n]},qo=function(n){return Po[n]},Jo=function(n){return zo[n]},Zo=function(n){return _r.component(n)};function No(n){return Uo(qo,n)}function Ho(n){return Uo(Jo,n)}function Ro(n){return Uo(Mo,n)}function Vo(n){return Uo(Zo,n)}function Wo(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(r.a)(Object(a.a)().mark((function n(e){var t;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(Vo(e)||!Ro(e)){n.next=5;break}return n.next=3,Ro(e)();case 3:t=n.sent,_r.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function Go(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var Qo=t(143),Xo=(t(132),t(156),t(82),t(223)),Yo=t.n(Xo),Ko={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(Qo.a)(n,1)[0]})).map((function(n){var e=Object(Qo.a)(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(n[t],'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=es(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(jo.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=ts(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return Yo()([{name:"description",content:this.$description}],n,this.siteMeta,as)},updateCanonicalLink:function(){ns(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",es(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){ts(null,this.currentMetaTags),ns()}};function ns(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function es(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function ts(n,e){if(e&&Object(jo.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function as(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var a=t[e];if(n.hasOwnProperty(a))return n[a]+a}return JSON.stringify(n)}t(230);var rs=t(158),is={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(rs)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),a=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+a,o=0;o<t.length;o++){var s=t[o],l=t[o+1],c=0===o&&0===a||a>=s.parentElement.offsetTop+10&&(!l||a<l.parentElement.offsetTop-10),d=decodeURIComponent(this.$route.hash);if(c&&d!==decodeURIComponent(s.hash)){var u=s;if(i===r)for(var p=o+1;p<t.length;p++)if(d===decodeURIComponent(t[p].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(u.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},os=(t(47),t(108)),ss=t.n(os),ls={mounted:function(){var n=this;ss.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||_r.component(n.name)||ss.a.start(),t()})),this.$router.afterEach((function(){ss.a.done(),n.isSidebarOpen=!1}))}};t(84),t(61),t(88),t(394);function cs(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(111);function ds(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}function us(n,e,t){return e&&ds(n.prototype,e),t&&ds(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}t(395);var ps=function(){function n(){cs(this,n);this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}return us(n,[{key:"show",value:function(n){var e=this,t=n.text,a=void 0===t?"":t,r=n.duration,i=void 0===r?3e3:r,o=document.createElement("div");o.className="message move-in",o.innerHTML='\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">'.concat(a,"</div>\n    "),this.containerEl.appendChild(o),i>0&&setTimeout((function(){e.close(o)}),i)}},{key:"close",value:function(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",(function(){n.remove()}))}}]),n}(),hs={mounted:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy:function(){var n=this;setTimeout((function(){(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach((function(e){document.querySelectorAll(e).forEach(n.generateCopyButton)}))}),1e3)},generateCopyButton:function(n){var e=this;if(!n.classList.contains("codecopy-enabled")){var t=document.createElement("i");t.className="code-copy",t.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',t.title="Copy to clipboard",t.addEventListener("click",(function(){e.copyToClipboard(n.innerText)})),n.appendChild(t),n.classList.add("codecopy-enabled")}},copyToClipboard:function(n){var e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy"),(new ps).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},ms=(t(227),"auto"),gs="zoom-in",fs="zoom-out",vs="grab",bs="move";function Es(n,e,t){var a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r={passive:!1};a?n.addEventListener(e,t,r):n.removeEventListener(e,t,r)}function xs(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function ys(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function ws(n,e,t){!function(n){var e=ks,t=As;if(n.transition){var a=n.transition;delete n.transition,n[e]=a}if(n.transform){var r=n.transform;delete n.transform,n[t]=r}}(e);var a=n.style,r={};for(var i in e)t&&(r[i]=a[i]||""),a[i]=e[i];return r}var ks="transition",As="transform",Ss="transform",Bs="transitionend";var Ts=function(){},Cs={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Ts,onClose:Ts,onGrab:Ts,onMove:Ts,onRelease:Ts,onBeforeOpen:Ts,onBeforeClose:Ts,onBeforeGrab:Ts,onBeforeRelease:Ts,onImageLoading:Ts,onImageLoaded:Ts},js={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),Ps(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var a=this.lastScrollPosition.x-e,r=this.lastScrollPosition.y-t,i=this.options.scrollThreshold;(Math.abs(r)>=i||Math.abs(a)>=i)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(zs(n)&&!Ps(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){zs(n)&&!Ps(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,a=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,a)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,a=e.clientY;this.move(t,a)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function zs(n){return 0===n.button}function Ps(n){return n.metaKey||n.ctrlKey}var Is={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,ws(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Es(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){ws(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Fs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ds=function(){function n(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}(),_s=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},$s={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=ys(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,a=n.transitionDuration,r=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?vs:fs,transition:Ss+"\n        "+a+"s\n        "+r,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=ws(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,ws(this.el,{transform:"none"})},grab:function(n,e,t){var a=Ls(),r=a.x-n,i=a.y-e;ws(this.el,{cursor:bs,transform:"translate3d(\n        "+(this.translate.x+r)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var a=Ls(),r=a.x-n,i=a.y-e;ws(this.el,{transition:Ss,transform:"translate3d(\n        "+(this.translate.x+r)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){ws(this.el,this.styleClose)},restoreOpenStyle:function(){ws(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Ls(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,a=this.instance.options,r=a.customSize,i=a.scaleBase;if(!r&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(r&&"object"===(void 0===r?"undefined":Fs(r)))return{x:r.width/this.rect.width,y:r.height/this.rect.height};var o=this.rect.width/2,s=this.rect.height/2,l=Ls(),c={x:l.x-o,y:l.y-s},d=c.x/o,u=c.y/s,p=i+Math.min(d,u);if(r&&"string"==typeof r){var h=t||this.el.naturalWidth,m=e||this.el.naturalHeight,g=parseFloat(r)*h/(100*this.rect.width),f=parseFloat(r)*m/(100*this.rect.height);if(p>g||p>f)return{x:g,y:f}}return{x:p,y:p}}};function Ls(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function Us(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(a){Es(n,a,e[a],t)}))}var Os=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create($s),this.overlay=Object.create(Is),this.handler=Object.create(js),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=_s({},Cs,e),this.overlay.init(this),this.handler.init(this)}return Ds(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=gs,Es(n,"click",this.handler.click),this.options.preloadImage&&xs(ys(n)));return this}},{key:"config",value:function(n){return n?(_s(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var a="string"==typeof n?document.querySelector(n):n;if("IMG"===a.tagName){if(this.options.onBeforeOpen(a),this.target.init(a,this),!this.options.preloadImage){var r=this.target.srcOriginal;null!=r&&(this.options.onImageLoading(a),xs(r,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Es(document,"scroll",this.handler.scroll),Es(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Es(window,"resize",this.handler.resizeWindow);var i=function n(){Es(a,Bs,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&Us(document,e.handler,!0),t(a)};return Es(a,Bs,i),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=ms,this.overlay.fadeOut(),this.target.zoomOut(),Es(document,"scroll",this.handler.scroll,!1),Es(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Es(window,"resize",this.handler.resizeWindow,!1);var a=function a(){Es(t,Bs,a,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&Us(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Es(t,Bs,a),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var r=this.target.el;this.options.onBeforeGrab(r),this.released=!1,this.target.grab(n,e,t);var i=function n(){Es(r,Bs,n,!1),a(r)};return Es(r,Bs,i),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=bs,this.target.move(n,e,t);var r=this.target.el,i=function n(){Es(r,Bs,n,!1),a(r)};return Es(r,Bs,i),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=ms,this.target.restoreOpenStyle();var a=function a(){Es(t,Bs,a,!1),n.lock=!1,n.released=!0,e(t)};return Es(t,Bs,a),this}}}]),n}(),Ms=".theme-vdoing-content img:not(.no-zoom)",qs=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),Js=Number("500"),Zs=function(){function n(){cs(this,n),this.instance=new Os(qs)}return us(n,[{key:"update",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ms;"undefined"!=typeof window&&this.instance.listen(n)}},{key:"updateDelay",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ms,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Js;setTimeout((function(){return n.update(e)}),t)}}]),n}(),Ns=[Ko,is,ls,hs,{watch:{"$page.path":function(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted:function(){this.$vuepress.zooming=new Zs,this.$vuepress.zooming.updateDelay()}}],Hs={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return Go("layout",n),_r.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},Rs=t(15),Vs=Object(Rs.a)(Hs,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){var a;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(a=n[e]).push.apply(a,Object(jo.a)(t));break;default:throw new Error("Unknown option name.")}}(Vs,"mixins",Ns);var Ws=[{name:"v-114ebabf",path:"/note/HTML/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-114ebabf").then(t)}},{path:"/note/HTML/index.html",redirect:"/note/HTML/"},{path:"/00.nav/01.前端/01.基础知识/01.HTML.html",redirect:"/note/HTML/"},{name:"v-149b409a",path:"/note/CSS/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-149b409a").then(t)}},{path:"/note/CSS/index.html",redirect:"/note/CSS/"},{path:"/00.nav/01.前端/01.基础知识/02.CSS.html",redirect:"/note/CSS/"},{name:"v-ee5ba5f2",path:"/note/JS/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-ee5ba5f2").then(t)}},{path:"/note/JS/index.html",redirect:"/note/JS/"},{path:"/00.nav/01.前端/01.基础知识/03.JS.html",redirect:"/note/JS/"},{name:"v-06b57d62",path:"/note/WebAPI/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-06b57d62").then(t)}},{path:"/note/WebAPI/index.html",redirect:"/note/WebAPI/"},{path:"/00.nav/01.前端/01.基础知识/04.WebAPI.html",redirect:"/note/WebAPI/"},{name:"v-22143aa3",path:"/note/mobileWeb/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-22143aa3").then(t)}},{path:"/note/mobileWeb/index.html",redirect:"/note/mobileWeb/"},{path:"/00.nav/01.前端/01.基础知识/05.移动 web 开发 copy.html",redirect:"/note/mobileWeb/"},{name:"v-45cab77c",path:"/note/wx/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-45cab77c").then(t)}},{path:"/note/wx/index.html",redirect:"/note/wx/"},{path:"/00.nav/01.前端/01.基础知识/06.原生微信小程序.html",redirect:"/note/wx/"},{name:"v-77218b72",path:"/note/vue2/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-77218b72").then(t)}},{path:"/note/vue2/index.html",redirect:"/note/vue2/"},{path:"/00.nav/01.前端/02.框架/01.vue2.html",redirect:"/note/vue2/"},{name:"v-82faadf2",path:"/note/vue3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-82faadf2").then(t)}},{path:"/note/vue3/index.html",redirect:"/note/vue3/"},{path:"/00.nav/01.前端/02.框架/02.vue3.html",redirect:"/note/vue3/"},{name:"v-40ef500e",path:"/note/vue-element-admin/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-40ef500e").then(t)}},{path:"/note/vue-element-admin/index.html",redirect:"/note/vue-element-admin/"},{path:"/00.nav/01.前端/02.框架/03.vue-element-admin.html",redirect:"/note/vue-element-admin/"},{name:"v-630cfd39",path:"/note/uni-app/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-630cfd39").then(t)}},{path:"/note/uni-app/index.html",redirect:"/note/uni-app/"},{path:"/00.nav/01.前端/02.框架/04.uni-app.html",redirect:"/note/uni-app/"},{name:"v-d94d81dc",path:"/note/JQuery/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d94d81dc").then(t)}},{path:"/note/JQuery/index.html",redirect:"/note/JQuery/"},{path:"/00.nav/01.前端/03.库/01.JQuery.html",redirect:"/note/JQuery/"},{name:"v-796a6452",path:"/note/EChart/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-796a6452").then(t)}},{path:"/note/EChart/index.html",redirect:"/note/EChart/"},{path:"/00.nav/01.前端/03.库/02.EChart.html",redirect:"/note/EChart/"},{name:"v-18e4d532",path:"/note/Element-ui/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-18e4d532").then(t)}},{path:"/note/Element-ui/index.html",redirect:"/note/Element-ui/"},{path:"/00.nav/01.前端/03.库/03.Element-ui.html",redirect:"/note/Element-ui/"},{name:"v-e23b3e5a",path:"/note/other/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-e23b3e5a").then(t)}},{path:"/note/other/index.html",redirect:"/note/other/"},{path:"/00.nav/01.前端/04.其它/01.其它.html",redirect:"/note/other/"},{name:"v-87e2adce",path:"/note/errorAnalysis/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-87e2adce").then(t)}},{path:"/note/errorAnalysis/index.html",redirect:"/note/errorAnalysis/"},{path:"/00.nav/01.前端/04.其它/02.报错分析.html",redirect:"/note/errorAnalysis/"},{name:"v-5b3db7c2",path:"/note/codingSpecification/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5b3db7c2").then(t)}},{path:"/note/codingSpecification/index.html",redirect:"/note/codingSpecification/"},{path:"/00.nav/01.前端/04.其它/03.编码规范.html",redirect:"/note/codingSpecification/"},{name:"v-2631246c",path:"/note/deployment/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2631246c").then(t)}},{path:"/note/deployment/index.html",redirect:"/note/deployment/"},{path:"/00.nav/01.前端/04.其它/04.部署.html",redirect:"/note/deployment/"},{name:"v-7f548e0b",path:"/note/remoteStore/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7f548e0b").then(t)}},{path:"/note/remoteStore/index.html",redirect:"/note/remoteStore/"},{path:"/00.nav/01.前端/04.其它/05.远程仓库.html",redirect:"/note/remoteStore/"},{name:"v-8bf89420",path:"/note/apiFactory/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8bf89420").then(t)}},{path:"/note/apiFactory/index.html",redirect:"/note/apiFactory/"},{path:"/00.nav/01.前端/04.其它/06.api 工厂.html",redirect:"/note/apiFactory/"},{name:"v-66aecfa0",path:"/note/SASS/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-66aecfa0").then(t)}},{path:"/note/SASS/index.html",redirect:"/note/SASS/"},{path:"/00.nav/01.前端/04.其它/07.SASS.html",redirect:"/note/SASS/"},{name:"v-130c26d4",path:"/note/VuePress/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-130c26d4").then(t)}},{path:"/note/VuePress/index.html",redirect:"/note/VuePress/"},{path:"/00.nav/01.前端/04.其它/08.VuePress.html",redirect:"/note/VuePress/"},{name:"v-1de594e2",path:"/note/webpack/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1de594e2").then(t)}},{path:"/note/webpack/index.html",redirect:"/note/webpack/"},{path:"/00.nav/01.前端/04.其它/09.webpack.html",redirect:"/note/webpack/"},{name:"v-a6b62df2",path:"/web/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-a6b62df2").then(t)}},{path:"/web/index.html",redirect:"/web/"},{path:"/01.目录/01.前端.html",redirect:"/web/"},{name:"v-2030046c",path:"/ui/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2030046c").then(t)}},{path:"/ui/index.html",redirect:"/ui/"},{path:"/01.目录/02.页面.html",redirect:"/ui/"},{name:"v-71ef98c3",path:"/technology/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-71ef98c3").then(t)}},{path:"/technology/index.html",redirect:"/technology/"},{path:"/01.目录/03.技术.html",redirect:"/technology/"},{name:"v-727a5c1b",path:"/more/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-727a5c1b").then(t)}},{path:"/more/index.html",redirect:"/more/"},{path:"/01.目录/04.更多.html",redirect:"/more/"},{name:"v-098f9cf6",path:"/categories/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-098f9cf6").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-5127404f",path:"/pages/734b1d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5127404f").then(t)}},{path:"/pages/734b1d/index.html",redirect:"/pages/734b1d/"},{path:"/《前端》笔记《其它》/01.其它/01.数据处理.html",redirect:"/pages/734b1d/"},{name:"v-39d35216",path:"/archives/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-39d35216").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-1b4d934a",path:"/pages/efd4a3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1b4d934a").then(t)}},{path:"/pages/efd4a3/index.html",redirect:"/pages/efd4a3/"},{path:"/《前端》笔记《其它》/01.其它/02.图片格式.html",redirect:"/pages/efd4a3/"},{name:"v-3545b6d6",path:"/pages/343d6d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3545b6d6").then(t)}},{path:"/pages/343d6d/index.html",redirect:"/pages/343d6d/"},{path:"/《前端》笔记《其它》/01.其它/03.项目开发流程.html",redirect:"/pages/343d6d/"},{name:"v-e01ae0a2",path:"/pages/70ac0f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-e01ae0a2").then(t)}},{path:"/pages/70ac0f/index.html",redirect:"/pages/70ac0f/"},{path:"/《前端》笔记《其它》/01.其它/04.自定义代码片段.html",redirect:"/pages/70ac0f/"},{name:"v-f2fcc99a",path:"/pages/699044/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-f2fcc99a").then(t)}},{path:"/pages/699044/index.html",redirect:"/pages/699044/"},{path:"/《前端》笔记《其它》/01.其它/05.Linux 命令.html",redirect:"/pages/699044/"},{name:"v-6cad0266",path:"/pages/7a7269/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6cad0266").then(t)}},{path:"/pages/7a7269/index.html",redirect:"/pages/7a7269/"},{path:"/《前端》笔记《其它》/01.其它/06.Markdown 语法.html",redirect:"/pages/7a7269/"},{name:"v-740ad10d",path:"/pages/fccd60/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-740ad10d").then(t)}},{path:"/pages/fccd60/index.html",redirect:"/pages/fccd60/"},{path:"/《前端》笔记《其它》/01.其它/07.Mock.html",redirect:"/pages/fccd60/"},{name:"v-cf3bf926",path:"/pages/1e908d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-cf3bf926").then(t)}},{path:"/pages/1e908d/index.html",redirect:"/pages/1e908d/"},{path:"/《前端》笔记《其它》/01.其它/08.VSCode 插件.html",redirect:"/pages/1e908d/"},{name:"v-3646c5e6",path:"/pages/a99743/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3646c5e6").then(t)}},{path:"/pages/a99743/index.html",redirect:"/pages/a99743/"},{path:"/《前端》笔记《其它》/02.报错分析/01.vue.html",redirect:"/pages/a99743/"},{name:"v-a62931a6",path:"/pages/28f723/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-a62931a6").then(t)}},{path:"/pages/28f723/index.html",redirect:"/pages/28f723/"},{path:"/《前端》笔记《其它》/03.编码规范/01.代码风格文档.html",redirect:"/pages/28f723/"},{name:"v-630ed0b4",path:"/pages/29bbaa/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-630ed0b4").then(t)}},{path:"/pages/29bbaa/index.html",redirect:"/pages/29bbaa/"},{path:"/《前端》笔记《其它》/03.编码规范/02.js.html",redirect:"/pages/29bbaa/"},{name:"v-d9275d64",path:"/pages/9dfa81/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d9275d64").then(t)}},{path:"/pages/9dfa81/index.html",redirect:"/pages/9dfa81/"},{path:"/《前端》笔记《其它》/03.编码规范/03.vue.html",redirect:"/pages/9dfa81/"},{name:"v-55f28ba4",path:"/pages/48cb8c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-55f28ba4").then(t)}},{path:"/pages/48cb8c/index.html",redirect:"/pages/48cb8c/"},{path:"/《前端》笔记《其它》/04.部署/01.部署到本地 nginx 服务器.html",redirect:"/pages/48cb8c/"},{name:"v-3a277d54",path:"/pages/c32593/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3a277d54").then(t)}},{path:"/pages/c32593/index.html",redirect:"/pages/c32593/"},{path:"/《前端》笔记《其它》/04.部署/03.部署到远程 nginx 服务器（宝塔）（推荐）.html",redirect:"/pages/c32593/"},{name:"v-5605576e",path:"/pages/228fd7/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5605576e").then(t)}},{path:"/pages/228fd7/index.html",redirect:"/pages/228fd7/"},{path:"/《前端》笔记《其它》/04.部署/02.部署到远程 nginx 服务器.html",redirect:"/pages/228fd7/"},{name:"v-1e0296eb",path:"/pages/491521/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1e0296eb").then(t)}},{path:"/pages/491521/index.html",redirect:"/pages/491521/"},{path:"/《前端》笔记《其它》/04.部署/04.Web 应用托管.html",redirect:"/pages/491521/"},{name:"v-63aacc5a",path:"/pages/22d76f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-63aacc5a").then(t)}},{path:"/pages/22d76f/index.html",redirect:"/pages/22d76f/"},{path:"/《前端》笔记《其它》/04.部署/05.一台服务器部署多个项目.html",redirect:"/pages/22d76f/"},{name:"v-cc14e3b2",path:"/pages/d735fe/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-cc14e3b2").then(t)}},{path:"/pages/d735fe/index.html",redirect:"/pages/d735fe/"},{path:"/《前端》笔记《其它》/05.远程仓库/02.《git》Git 命令.html",redirect:"/pages/d735fe/"},{name:"v-0f3ddd85",path:"/pages/17b532/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0f3ddd85").then(t)}},{path:"/pages/17b532/index.html",redirect:"/pages/17b532/"},{path:"/《前端》笔记《其它》/05.远程仓库/01.《git》Git 介绍.html",redirect:"/pages/17b532/"},{name:"v-52cf5563",path:"/pages/dd1524/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-52cf5563").then(t)}},{path:"/pages/dd1524/index.html",redirect:"/pages/dd1524/"},{path:"/《前端》笔记《其它》/05.远程仓库/03.《git》BUG.html",redirect:"/pages/dd1524/"},{name:"v-d469fd66",path:"/pages/f11ff2/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d469fd66").then(t)}},{path:"/pages/f11ff2/index.html",redirect:"/pages/f11ff2/"},{path:"/《前端》笔记《其它》/05.远程仓库/04.GitHub.html",redirect:"/pages/f11ff2/"},{name:"v-4d277b4e",path:"/pages/d3f9ee/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4d277b4e").then(t)}},{path:"/pages/d3f9ee/index.html",redirect:"/pages/d3f9ee/"},{path:"/《前端》笔记《其它》/05.远程仓库/05.码云.html",redirect:"/pages/d3f9ee/"},{name:"v-37bee46b",path:"/pages/ed226b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-37bee46b").then(t)}},{path:"/pages/ed226b/index.html",redirect:"/pages/ed226b/"},{path:"/《前端》笔记《其它》/07.SASS/01.介绍.html",redirect:"/pages/ed226b/"},{name:"v-6a3e7b32",path:"/pages/cac8fa/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6a3e7b32").then(t)}},{path:"/pages/cac8fa/index.html",redirect:"/pages/cac8fa/"},{path:"/《前端》笔记《其它》/06.api 工厂/01.接口使用.html",redirect:"/pages/cac8fa/"},{name:"v-30f185a1",path:"/pages/b426d7/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-30f185a1").then(t)}},{path:"/pages/b426d7/index.html",redirect:"/pages/b426d7/"},{path:"/《前端》笔记《其它》/07.SASS/02.使用方法.html",redirect:"/pages/b426d7/"},{name:"v-dc7732f2",path:"/pages/88174b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-dc7732f2").then(t)}},{path:"/pages/88174b/index.html",redirect:"/pages/88174b/"},{path:"/《前端》笔记《其它》/08.VuePress/01.项目初始化.html",redirect:"/pages/88174b/"},{name:"v-5845768c",path:"/pages/5f41d6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5845768c").then(t)}},{path:"/pages/5f41d6/index.html",redirect:"/pages/5f41d6/"},{path:"/《前端》笔记《其它》/08.VuePress/02.Markdown 语法.html",redirect:"/pages/5f41d6/"},{name:"v-1bab4b4f",path:"/pages/cc9d0a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1bab4b4f").then(t)}},{path:"/pages/cc9d0a/index.html",redirect:"/pages/cc9d0a/"},{path:"/《前端》笔记《其它》/08.VuePress/03.插件.html",redirect:"/pages/cc9d0a/"},{name:"v-76cd19f6",path:"/pages/6e410e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-76cd19f6").then(t)}},{path:"/pages/6e410e/index.html",redirect:"/pages/6e410e/"},{path:"/《前端》笔记《其它》/08.VuePress/04.主题.html",redirect:"/pages/6e410e/"},{name:"v-5aa4bdc0",path:"/pages/8e1824/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5aa4bdc0").then(t)}},{path:"/pages/8e1824/index.html",redirect:"/pages/8e1824/"},{path:"/《前端》笔记《其它》/09.webpack/01.前端工程化.html",redirect:"/pages/8e1824/"},{name:"v-17c14e92",path:"/pages/3b8550/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-17c14e92").then(t)}},{path:"/pages/3b8550/index.html",redirect:"/pages/3b8550/"},{path:"/《前端》笔记《基础知识》/01.HTML/01.html 骨架标签.html",redirect:"/pages/3b8550/"},{name:"v-7533111a",path:"/pages/208ef4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7533111a").then(t)}},{path:"/pages/208ef4/index.html",redirect:"/pages/208ef4/"},{path:"/《前端》笔记《其它》/09.webpack/02.webpack 介绍.html",redirect:"/pages/208ef4/"},{name:"v-53c0db68",path:"/pages/ed2742/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-53c0db68").then(t)}},{path:"/pages/ed2742/index.html",redirect:"/pages/ed2742/"},{path:"/《前端》笔记《基础知识》/01.HTML/02.DOCTYPE 和 lang.html",redirect:"/pages/ed2742/"},{name:"v-0ffecd12",path:"/pages/e98608/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0ffecd12").then(t)}},{path:"/pages/e98608/index.html",redirect:"/pages/e98608/"},{path:"/《前端》笔记《基础知识》/01.HTML/03.字符集.html",redirect:"/pages/e98608/"},{name:"v-02d4297e",path:"/pages/6b6c85/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-02d4297e").then(t)}},{path:"/pages/6b6c85/index.html",redirect:"/pages/6b6c85/"},{path:"/《前端》笔记《基础知识》/01.HTML/04.常用标签.html",redirect:"/pages/6b6c85/"},{name:"v-144cbcfc",path:"/pages/122fad/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-144cbcfc").then(t)}},{path:"/pages/122fad/index.html",redirect:"/pages/122fad/"},{path:"/《前端》笔记《基础知识》/01.HTML/05.文本格式化标签.html",redirect:"/pages/122fad/"},{name:"v-56dc7492",path:"/pages/58d45e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-56dc7492").then(t)}},{path:"/pages/58d45e/index.html",redirect:"/pages/58d45e/"},{path:"/《前端》笔记《基础知识》/01.HTML/06.布局标签.html",redirect:"/pages/58d45e/"},{name:"v-34e503a2",path:"/pages/d15b04/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-34e503a2").then(t)}},{path:"/pages/d15b04/index.html",redirect:"/pages/d15b04/"},{path:"/《前端》笔记《基础知识》/01.HTML/07.路径.html",redirect:"/pages/d15b04/"},{name:"v-b0946f2e",path:"/pages/b6757e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b0946f2e").then(t)}},{path:"/pages/b6757e/index.html",redirect:"/pages/b6757e/"},{path:"/《前端》笔记《基础知识》/01.HTML/08.常用特殊字符.html",redirect:"/pages/b6757e/"},{name:"v-11e867dc",path:"/pages/fe5560/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-11e867dc").then(t)}},{path:"/pages/fe5560/index.html",redirect:"/pages/fe5560/"},{path:"/《前端》笔记《基础知识》/01.HTML/09.表格标签.html",redirect:"/pages/fe5560/"},{name:"v-5a9aa5c8",path:"/pages/b2ec84/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5a9aa5c8").then(t)}},{path:"/pages/b2ec84/index.html",redirect:"/pages/b2ec84/"},{path:"/《前端》笔记《基础知识》/01.HTML/10.列表标签.html",redirect:"/pages/b2ec84/"},{name:"v-34db8534",path:"/pages/8ec70b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-34db8534").then(t)}},{path:"/pages/8ec70b/index.html",redirect:"/pages/8ec70b/"},{path:"/《前端》笔记《基础知识》/01.HTML/11.表单标签.html",redirect:"/pages/8ec70b/"},{name:"v-72a20d52",path:"/pages/c75eb5/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-72a20d52").then(t)}},{path:"/pages/c75eb5/index.html",redirect:"/pages/c75eb5/"},{path:"/《前端》笔记《基础知识》/01.HTML/12.自动对焦标签（label）.html",redirect:"/pages/c75eb5/"},{name:"v-6b59ecfc",path:"/pages/5363f3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6b59ecfc").then(t)}},{path:"/pages/5363f3/index.html",redirect:"/pages/5363f3/"},{path:"/《前端》笔记《基础知识》/01.HTML/13.H5 新增语义化标签 和 布局方式.html",redirect:"/pages/5363f3/"},{name:"v-d9d6ef6c",path:"/pages/75fc79/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d9d6ef6c").then(t)}},{path:"/pages/75fc79/index.html",redirect:"/pages/75fc79/"},{path:"/《前端》笔记《基础知识》/01.HTML/14.H5 新增多媒体标签.html",redirect:"/pages/75fc79/"},{name:"v-2cbc09ae",path:"/pages/20fdb7/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2cbc09ae").then(t)}},{path:"/pages/20fdb7/index.html",redirect:"/pages/20fdb7/"},{path:"/《前端》笔记《基础知识》/01.HTML/15.H5 新增 input 类型 和 属性.html",redirect:"/pages/20fdb7/"},{name:"v-710bcb73",path:"/pages/d8b567/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-710bcb73").then(t)}},{path:"/pages/d8b567/index.html",redirect:"/pages/d8b567/"},{path:"/《前端》笔记《基础知识》/02.CSS/01.基础选择器.html",redirect:"/pages/d8b567/"},{name:"v-21fe0376",path:"/pages/260170/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-21fe0376").then(t)}},{path:"/pages/260170/index.html",redirect:"/pages/260170/"},{path:"/《前端》笔记《基础知识》/02.CSS/02.字体属性.html",redirect:"/pages/260170/"},{name:"v-9dfb5f76",path:"/pages/504a1f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9dfb5f76").then(t)}},{path:"/pages/504a1f/index.html",redirect:"/pages/504a1f/"},{path:"/《前端》笔记《基础知识》/02.CSS/03.文本属性.html",redirect:"/pages/504a1f/"},{name:"v-137192e0",path:"/pages/bbf435/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-137192e0").then(t)}},{path:"/pages/bbf435/index.html",redirect:"/pages/bbf435/"},{path:"/《前端》笔记《基础知识》/02.CSS/04.CSS的引入方式.html",redirect:"/pages/bbf435/"},{name:"v-494c5dee",path:"/pages/4537e1/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-494c5dee").then(t)}},{path:"/pages/4537e1/index.html",redirect:"/pages/4537e1/"},{path:"/《前端》笔记《基础知识》/02.CSS/05.Emmet 语法.html",redirect:"/pages/4537e1/"},{name:"v-35a6c9d4",path:"/pages/ece8e0/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-35a6c9d4").then(t)}},{path:"/pages/ece8e0/index.html",redirect:"/pages/ece8e0/"},{path:"/《前端》笔记《基础知识》/02.CSS/06.复合选择器.html",redirect:"/pages/ece8e0/"},{name:"v-100e1a39",path:"/pages/50933a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-100e1a39").then(t)}},{path:"/pages/50933a/index.html",redirect:"/pages/50933a/"},{path:"/《前端》笔记《基础知识》/02.CSS/07.元素显示模式.html",redirect:"/pages/50933a/"},{name:"v-a2f47fd2",path:"/pages/e33f57/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-a2f47fd2").then(t)}},{path:"/pages/e33f57/index.html",redirect:"/pages/e33f57/"},{path:"/《前端》笔记《基础知识》/02.CSS/08.行高.html",redirect:"/pages/e33f57/"},{name:"v-e7560bc2",path:"/pages/4589aa/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-e7560bc2").then(t)}},{path:"/pages/4589aa/index.html",redirect:"/pages/4589aa/"},{path:"/《前端》笔记《基础知识》/02.CSS/09.背景.html",redirect:"/pages/4589aa/"},{name:"v-026e57d9",path:"/pages/063aff/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-026e57d9").then(t)}},{path:"/pages/063aff/index.html",redirect:"/pages/063aff/"},{path:"/《前端》笔记《基础知识》/02.CSS/10.CSS三大特性.html",redirect:"/pages/063aff/"},{name:"v-1b950d28",path:"/pages/eaa2b4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1b950d28").then(t)}},{path:"/pages/eaa2b4/index.html",redirect:"/pages/eaa2b4/"},{path:"/《前端》笔记《基础知识》/02.CSS/11.盒子模型（上）.html",redirect:"/pages/eaa2b4/"},{name:"v-32eee2a7",path:"/pages/2a4d8f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-32eee2a7").then(t)}},{path:"/pages/2a4d8f/index.html",redirect:"/pages/2a4d8f/"},{path:"/《前端》笔记《基础知识》/02.CSS/12.盒子模型（中）.html",redirect:"/pages/2a4d8f/"},{name:"v-e14c0002",path:"/pages/cf95ba/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-e14c0002").then(t)}},{path:"/pages/cf95ba/index.html",redirect:"/pages/cf95ba/"},{path:"/《前端》笔记《基础知识》/02.CSS/13.元素水平居中.html",redirect:"/pages/cf95ba/"},{name:"v-4bc9bc28",path:"/pages/dd802e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4bc9bc28").then(t)}},{path:"/pages/dd802e/index.html",redirect:"/pages/dd802e/"},{path:"/《前端》笔记《基础知识》/02.CSS/14.盒子模型（下）.html",redirect:"/pages/dd802e/"},{name:"v-5e0317de",path:"/pages/cb8da9/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5e0317de").then(t)}},{path:"/pages/cb8da9/index.html",redirect:"/pages/cb8da9/"},{path:"/《前端》笔记《基础知识》/02.CSS/15.圆角边框.html",redirect:"/pages/cb8da9/"},{name:"v-6938b212",path:"/pages/6a0c9e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6938b212").then(t)}},{path:"/pages/6a0c9e/index.html",redirect:"/pages/6a0c9e/"},{path:"/《前端》笔记《基础知识》/02.CSS/16.盒子阴影.html",redirect:"/pages/6a0c9e/"},{name:"v-6101dcae",path:"/pages/98084a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6101dcae").then(t)}},{path:"/pages/98084a/index.html",redirect:"/pages/98084a/"},{path:"/《前端》笔记《基础知识》/02.CSS/17.文字阴影.html",redirect:"/pages/98084a/"},{name:"v-3a5f55aa",path:"/pages/13fdc2/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3a5f55aa").then(t)}},{path:"/pages/13fdc2/index.html",redirect:"/pages/13fdc2/"},{path:"/《前端》笔记《基础知识》/02.CSS/18.传统网页布局的三种方式（上）.html",redirect:"/pages/13fdc2/"},{name:"v-0b9d662c",path:"/pages/740e98/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0b9d662c").then(t)}},{path:"/pages/740e98/index.html",redirect:"/pages/740e98/"},{path:"/《前端》笔记《基础知识》/02.CSS/19.传统网页布局的三种方式（下）.html",redirect:"/pages/740e98/"},{name:"v-2793d441",path:"/pages/b6bde1/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2793d441").then(t)}},{path:"/pages/b6bde1/index.html",redirect:"/pages/b6bde1/"},{path:"/《前端》笔记《基础知识》/02.CSS/20.元素的显示与隐藏.html",redirect:"/pages/b6bde1/"},{name:"v-27ecc802",path:"/pages/ccc340/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-27ecc802").then(t)}},{path:"/pages/ccc340/index.html",redirect:"/pages/ccc340/"},{path:"/《前端》笔记《基础知识》/02.CSS/21.精灵图 字体图标.html",redirect:"/pages/ccc340/"},{name:"v-30b1c3f0",path:"/pages/79ee99/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-30b1c3f0").then(t)}},{path:"/pages/79ee99/index.html",redirect:"/pages/79ee99/"},{path:"/《前端》笔记《基础知识》/02.CSS/22.三角形.html",redirect:"/pages/79ee99/"},{name:"v-474f49c4",path:"/pages/578107/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-474f49c4").then(t)}},{path:"/pages/578107/index.html",redirect:"/pages/578107/"},{path:"/《前端》笔记《基础知识》/02.CSS/23.界面样式.html",redirect:"/pages/578107/"},{name:"v-2d0d071f",path:"/pages/7d1983/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2d0d071f").then(t)}},{path:"/pages/7d1983/index.html",redirect:"/pages/7d1983/"},{path:"/《前端》笔记《基础知识》/02.CSS/24.元素的垂直对齐方式.html",redirect:"/pages/7d1983/"},{name:"v-e83702fc",path:"/pages/779512/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-e83702fc").then(t)}},{path:"/pages/779512/index.html",redirect:"/pages/779512/"},{path:"/《前端》笔记《基础知识》/02.CSS/25.溢出的文字，省略号显示.html",redirect:"/pages/779512/"},{name:"v-80a5e584",path:"/pages/6b9f9b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-80a5e584").then(t)}},{path:"/pages/6b9f9b/index.html",redirect:"/pages/6b9f9b/"},{path:"/《前端》笔记《基础知识》/02.CSS/26.布局技巧.html",redirect:"/pages/6b9f9b/"},{name:"v-c6c119ea",path:"/pages/e65401/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-c6c119ea").then(t)}},{path:"/pages/e65401/index.html",redirect:"/pages/e65401/"},{path:"/《前端》笔记《基础知识》/02.CSS/27.CSS3 新增选择器.html",redirect:"/pages/e65401/"},{name:"v-19a74dac",path:"/pages/fadfcc/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-19a74dac").then(t)}},{path:"/pages/fadfcc/index.html",redirect:"/pages/fadfcc/"},{path:"/《前端》笔记《基础知识》/02.CSS/28.CSS3 新增 盒子模型.html",redirect:"/pages/fadfcc/"},{name:"v-2f476fe8",path:"/pages/d0c686/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2f476fe8").then(t)}},{path:"/pages/d0c686/index.html",redirect:"/pages/d0c686/"},{path:"/《前端》笔记《基础知识》/02.CSS/29.过渡.html",redirect:"/pages/d0c686/"},{name:"v-865baf52",path:"/pages/95b985/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-865baf52").then(t)}},{path:"/pages/95b985/index.html",redirect:"/pages/95b985/"},{path:"/《前端》笔记《基础知识》/02.CSS/30.2D 转换.html",redirect:"/pages/95b985/"},{name:"v-4bbf1b09",path:"/pages/a5058a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4bbf1b09").then(t)}},{path:"/pages/a5058a/index.html",redirect:"/pages/a5058a/"},{path:"/《前端》笔记《基础知识》/02.CSS/31.动画.html",redirect:"/pages/a5058a/"},{name:"v-19470906",path:"/pages/f28ed0/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-19470906").then(t)}},{path:"/pages/f28ed0/index.html",redirect:"/pages/f28ed0/"},{path:"/《前端》笔记《基础知识》/02.CSS/32.3D 转换（未学）.html",redirect:"/pages/f28ed0/"},{name:"v-5ccd2f0e",path:"/pages/71e5a4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5ccd2f0e").then(t)}},{path:"/pages/71e5a4/index.html",redirect:"/pages/71e5a4/"},{path:"/《前端》笔记《基础知识》/02.CSS/33.背景颜色渐变.html",redirect:"/pages/71e5a4/"},{name:"v-14a85ffb",path:"/pages/8a59ec/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-14a85ffb").then(t)}},{path:"/pages/8a59ec/index.html",redirect:"/pages/8a59ec/"},{path:"/《前端》笔记《基础知识》/02.CSS/34.图片模糊.html",redirect:"/pages/8a59ec/"},{name:"v-678f65f0",path:"/pages/0540fa/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-678f65f0").then(t)}},{path:"/pages/0540fa/index.html",redirect:"/pages/0540fa/"},{path:"/《前端》笔记《基础知识》/03.JS/01.内置对象/01.String 对象.html",redirect:"/pages/0540fa/"},{name:"v-11de8673",path:"/pages/fd5bb6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-11de8673").then(t)}},{path:"/pages/fd5bb6/index.html",redirect:"/pages/fd5bb6/"},{path:"/《前端》笔记《基础知识》/02.CSS/35.数值允许使用公式计算.html",redirect:"/pages/fd5bb6/"},{name:"v-2dc61188",path:"/pages/c0c5ab/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2dc61188").then(t)}},{path:"/pages/c0c5ab/index.html",redirect:"/pages/c0c5ab/"},{path:"/《前端》笔记《基础知识》/03.JS/01.内置对象/03.Object 对象.html",redirect:"/pages/c0c5ab/"},{name:"v-4892a16c",path:"/pages/0fe8a5/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4892a16c").then(t)}},{path:"/pages/0fe8a5/index.html",redirect:"/pages/0fe8a5/"},{path:"/《前端》笔记《基础知识》/03.JS/01.内置对象/02.Array 对象.html",redirect:"/pages/0fe8a5/"},{name:"v-1c57a748",path:"/pages/d76ef8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1c57a748").then(t)}},{path:"/pages/d76ef8/index.html",redirect:"/pages/d76ef8/"},{path:"/《前端》笔记《基础知识》/03.JS/01.内置对象/04.Math 对象.html",redirect:"/pages/d76ef8/"},{name:"v-c3d2be30",path:"/pages/43f52a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-c3d2be30").then(t)}},{path:"/pages/43f52a/index.html",redirect:"/pages/43f52a/"},{path:"/《前端》笔记《基础知识》/03.JS/01.内置对象/05.Date 对象.html",redirect:"/pages/43f52a/"},{name:"v-185d5124",path:"/pages/e096ae/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-185d5124").then(t)}},{path:"/pages/e096ae/index.html",redirect:"/pages/e096ae/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/01.变量.html",redirect:"/pages/e096ae/"},{name:"v-3d69e8c7",path:"/pages/afa7e5/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3d69e8c7").then(t)}},{path:"/pages/afa7e5/index.html",redirect:"/pages/afa7e5/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/02.简单数据类型.html",redirect:"/pages/afa7e5/"},{name:"v-b84a47b4",path:"/pages/2e7ca5/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b84a47b4").then(t)}},{path:"/pages/2e7ca5/index.html",redirect:"/pages/2e7ca5/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/03.运算符.html",redirect:"/pages/2e7ca5/"},{name:"v-69f0e27d",path:"/pages/a27b88/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-69f0e27d").then(t)}},{path:"/pages/a27b88/index.html",redirect:"/pages/a27b88/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/05.流程控制-循环语句.html",redirect:"/pages/a27b88/"},{name:"v-04aa42cb",path:"/pages/1f470c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-04aa42cb").then(t)}},{path:"/pages/1f470c/index.html",redirect:"/pages/1f470c/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/04.流程控制-分支语句.html",redirect:"/pages/1f470c/"},{name:"v-24191ab8",path:"/pages/694e8e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-24191ab8").then(t)}},{path:"/pages/694e8e/index.html",redirect:"/pages/694e8e/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/06.数组.html",redirect:"/pages/694e8e/"},{name:"v-67f8971c",path:"/pages/0158db/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-67f8971c").then(t)}},{path:"/pages/0158db/index.html",redirect:"/pages/0158db/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/07.函数.html",redirect:"/pages/0158db/"},{name:"v-9c809024",path:"/pages/c5cfa4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9c809024").then(t)}},{path:"/pages/c5cfa4/index.html",redirect:"/pages/c5cfa4/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/08.作用域.html",redirect:"/pages/c5cfa4/"},{name:"v-032bad36",path:"/pages/343cbb/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-032bad36").then(t)}},{path:"/pages/343cbb/index.html",redirect:"/pages/343cbb/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/10.对象.html",redirect:"/pages/343cbb/"},{name:"v-117acedb",path:"/pages/d7e404/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-117acedb").then(t)}},{path:"/pages/d7e404/index.html",redirect:"/pages/d7e404/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/09.预解析.html",redirect:"/pages/d7e404/"},{name:"v-1ede3c6e",path:"/pages/50ebc9/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1ede3c6e").then(t)}},{path:"/pages/50ebc9/index.html",redirect:"/pages/50ebc9/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/11.内置对象.html",redirect:"/pages/50ebc9/"},{name:"v-573fc67a",path:"/pages/ae5250/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-573fc67a").then(t)}},{path:"/pages/ae5250/index.html",redirect:"/pages/ae5250/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/16.基本包装类型.html",redirect:"/pages/ae5250/"},{name:"v-3d3320b8",path:"/pages/1866b2/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3d3320b8").then(t)}},{path:"/pages/1866b2/index.html",redirect:"/pages/1866b2/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/17.值类型-引用类型-堆-栈.html",redirect:"/pages/1866b2/"},{name:"v-22561b66",path:"/pages/56958f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-22561b66").then(t)}},{path:"/pages/56958f/index.html",redirect:"/pages/56958f/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/19.扩展.html",redirect:"/pages/56958f/"},{name:"v-55199d82",path:"/pages/d3e812/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-55199d82").then(t)}},{path:"/pages/d3e812/index.html",redirect:"/pages/d3e812/"},{path:"/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/18.对象合并.html",redirect:"/pages/d3e812/"},{name:"v-8f9513da",path:"/pages/8ac83f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8f9513da").then(t)}},{path:"/pages/8ac83f/index.html",redirect:"/pages/8ac83f/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/01.编程思想.html",redirect:"/pages/8ac83f/"},{name:"v-61bdd60c",path:"/pages/cf3234/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-61bdd60c").then(t)}},{path:"/pages/cf3234/index.html",redirect:"/pages/cf3234/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/02.类操作.html",redirect:"/pages/cf3234/"},{name:"v-793c8bd7",path:"/pages/6d01f9/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-793c8bd7").then(t)}},{path:"/pages/6d01f9/index.html",redirect:"/pages/6d01f9/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/03.类继承.html",redirect:"/pages/6d01f9/"},{name:"v-ea406466",path:"/pages/69c9b4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-ea406466").then(t)}},{path:"/pages/69c9b4/index.html",redirect:"/pages/69c9b4/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/04.this 指向问题.html",redirect:"/pages/69c9b4/"},{name:"v-81ebc028",path:"/pages/b5e584/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-81ebc028").then(t)}},{path:"/pages/b5e584/index.html",redirect:"/pages/b5e584/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/05.动态创建元素.html",redirect:"/pages/b5e584/"},{name:"v-5e8004ea",path:"/pages/0ba950/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5e8004ea").then(t)}},{path:"/pages/0ba950/index.html",redirect:"/pages/0ba950/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/06.原型对象 与 对象原型.html",redirect:"/pages/0ba950/"},{name:"v-3d873ab8",path:"/pages/00734f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3d873ab8").then(t)}},{path:"/pages/00734f/index.html",redirect:"/pages/00734f/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/07.ES6前的继承方式.html",redirect:"/pages/00734f/"},{name:"v-1f938945",path:"/pages/503e00/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1f938945").then(t)}},{path:"/pages/503e00/index.html",redirect:"/pages/503e00/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/08.改变函数内 this 指向的方法.html",redirect:"/pages/503e00/"},{name:"v-7ee3851e",path:"/pages/f82327/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7ee3851e").then(t)}},{path:"/pages/f82327/index.html",redirect:"/pages/f82327/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/09.严格模式.html",redirect:"/pages/f82327/"},{name:"v-d1cc4f68",path:"/pages/89f470/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d1cc4f68").then(t)}},{path:"/pages/89f470/index.html",redirect:"/pages/89f470/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/10.高阶函数.html",redirect:"/pages/89f470/"},{name:"v-541f945e",path:"/pages/1a51f6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-541f945e").then(t)}},{path:"/pages/1a51f6/index.html",redirect:"/pages/1a51f6/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/11.闭包.html",redirect:"/pages/1a51f6/"},{name:"v-57d497d3",path:"/pages/f42fc9/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-57d497d3").then(t)}},{path:"/pages/f42fc9/index.html",redirect:"/pages/f42fc9/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/12.递归函数.html",redirect:"/pages/f42fc9/"},{name:"v-9337bd9c",path:"/pages/dc63c0/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9337bd9c").then(t)}},{path:"/pages/dc63c0/index.html",redirect:"/pages/dc63c0/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/13.对象合并.html",redirect:"/pages/dc63c0/"},{name:"v-8fed28fc",path:"/pages/6eb750/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8fed28fc").then(t)}},{path:"/pages/6eb750/index.html",redirect:"/pages/6eb750/"},{path:"/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/14.正则表达式.html",redirect:"/pages/6eb750/"},{name:"v-0ddd240e",path:"/pages/e52e53/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0ddd240e").then(t)}},{path:"/pages/e52e53/index.html",redirect:"/pages/e52e53/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/00.ES6 标准入门（作用：阮一峰）.html",redirect:"/pages/e52e53/"},{name:"v-4191bdea",path:"/pages/5d4860/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4191bdea").then(t)}},{path:"/pages/5d4860/index.html",redirect:"/pages/5d4860/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/03.Symbol 数据结构.html",redirect:"/pages/5d4860/"},{name:"v-7eb4aa00",path:"/pages/0f905a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7eb4aa00").then(t)}},{path:"/pages/0f905a/index.html",redirect:"/pages/0f905a/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/04.Set 数据结构.html",redirect:"/pages/0f905a/"},{name:"v-2846b740",path:"/pages/0490bf/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2846b740").then(t)}},{path:"/pages/0490bf/index.html",redirect:"/pages/0490bf/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/05.Map 数据结构.html",redirect:"/pages/0490bf/"},{name:"v-764d3585",path:"/pages/852835/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-764d3585").then(t)}},{path:"/pages/852835/index.html",redirect:"/pages/852835/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/06.新增关键字.html",redirect:"/pages/852835/"},{name:"v-6e2ea5e0",path:"/pages/42f9bb/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6e2ea5e0").then(t)}},{path:"/pages/42f9bb/index.html",redirect:"/pages/42f9bb/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/07.解构赋值.html",redirect:"/pages/42f9bb/"},{name:"v-63015344",path:"/pages/4211fe/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-63015344").then(t)}},{path:"/pages/4211fe/index.html",redirect:"/pages/4211fe/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/08.模板字符串.html",redirect:"/pages/4211fe/"},{name:"v-3500fbae",path:"/pages/19fa1b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3500fbae").then(t)}},{path:"/pages/19fa1b/index.html",redirect:"/pages/19fa1b/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/09.对象的简化写法.html",redirect:"/pages/19fa1b/"},{name:"v-0f924778",path:"/pages/21b19d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0f924778").then(t)}},{path:"/pages/21b19d/index.html",redirect:"/pages/21b19d/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/11.允许给函数形参设置默认值.html",redirect:"/pages/21b19d/"},{name:"v-5fc7eefb",path:"/pages/03f6ce/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5fc7eefb").then(t)}},{path:"/pages/03f6ce/index.html",redirect:"/pages/03f6ce/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/10.箭头函数.html",redirect:"/pages/03f6ce/"},{name:"v-5e8d290a",path:"/pages/09f22c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5e8d290a").then(t)}},{path:"/pages/09f22c/index.html",redirect:"/pages/09f22c/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/12.rest 参数.html",redirect:"/pages/09f22c/"},{name:"v-cde6b3b2",path:"/pages/cce582/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-cde6b3b2").then(t)}},{path:"/pages/cce582/index.html",redirect:"/pages/cce582/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/13.扩展运算符.html",redirect:"/pages/cce582/"},{name:"v-56b31338",path:"/pages/5d5497/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-56b31338").then(t)}},{path:"/pages/5d5497/index.html",redirect:"/pages/5d5497/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/14.迭代器.html",redirect:"/pages/5d5497/"},{name:"v-42973d83",path:"/pages/56c527/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-42973d83").then(t)}},{path:"/pages/56c527/index.html",redirect:"/pages/56c527/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/15.生成器函数.html",redirect:"/pages/56c527/"},{name:"v-6c8595c2",path:"/pages/ccc78e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6c8595c2").then(t)}},{path:"/pages/ccc78e/index.html",redirect:"/pages/ccc78e/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/16.Promise 对象.html",redirect:"/pages/ccc78e/"},{name:"v-10a0089e",path:"/pages/9426cc/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-10a0089e").then(t)}},{path:"/pages/9426cc/index.html",redirect:"/pages/9426cc/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/17.class 类.html",redirect:"/pages/9426cc/"},{name:"v-2e23dfa6",path:"/pages/4508e1/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2e23dfa6").then(t)}},{path:"/pages/4508e1/index.html",redirect:"/pages/4508e1/"},{path:"/《前端》笔记《基础知识》/03.JS/04.ES6/18.模块化开发.html",redirect:"/pages/4508e1/"},{name:"v-cc2b9d6e",path:"/pages/38cec0/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-cc2b9d6e").then(t)}},{path:"/pages/38cec0/index.html",redirect:"/pages/38cec0/"},{path:"/《前端》笔记《基础知识》/03.JS/05.ES7/01.指数操作符.html",redirect:"/pages/38cec0/"},{name:"v-9dac741a",path:"/pages/491e5c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9dac741a").then(t)}},{path:"/pages/491e5c/index.html",redirect:"/pages/491e5c/"},{path:"/《前端》笔记《基础知识》/03.JS/06.ES8/01.async & await 异步函数.html",redirect:"/pages/491e5c/"},{name:"v-0f1d6620",path:"/pages/103edd/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0f1d6620").then(t)}},{path:"/pages/103edd/index.html",redirect:"/pages/103edd/"},{path:"/《前端》笔记《基础知识》/03.JS/07.ES9/01.剩余参数.html",redirect:"/pages/103edd/"},{name:"v-254cd896",path:"/tags/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-254cd896").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-0d61cd4d",path:"/pages/72fe75/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0d61cd4d").then(t)}},{path:"/pages/72fe75/index.html",redirect:"/pages/72fe75/"},{path:"/《前端》笔记《基础知识》/03.JS/07.ES9/02.正则扩展-命名捕获分组.html",redirect:"/pages/72fe75/"},{name:"v-186941b8",path:"/pages/a55b0e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-186941b8").then(t)}},{path:"/pages/a55b0e/index.html",redirect:"/pages/a55b0e/"},{path:"/《前端》笔记《基础知识》/03.JS/07.ES9/03.正则扩展-正向断言 与 方向断言.html",redirect:"/pages/a55b0e/"},{name:"v-ef989612",path:"/pages/ae5e45/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-ef989612").then(t)}},{path:"/pages/ae5e45/index.html",redirect:"/pages/ae5e45/"},{path:"/《前端》笔记《基础知识》/03.JS/08.ES10/01.Symbol 方法.html",redirect:"/pages/ae5e45/"},{name:"v-dd6b4b16",path:"/pages/452524/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-dd6b4b16").then(t)}},{path:"/pages/452524/index.html",redirect:"/pages/452524/"},{path:"/《前端》笔记《基础知识》/03.JS/07.ES9/04.正则扩展-dotAll模式（搞不懂，重新学）.html",redirect:"/pages/452524/"},{name:"v-4486926a",path:"/pages/7d3e07/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4486926a").then(t)}},{path:"/pages/7d3e07/index.html",redirect:"/pages/7d3e07/"},{path:"/《前端》笔记《基础知识》/03.JS/09.ES11/01.私有属性.html",redirect:"/pages/7d3e07/"},{name:"v-b9311d42",path:"/pages/c68a1c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b9311d42").then(t)}},{path:"/pages/c68a1c/index.html",redirect:"/pages/c68a1c/"},{path:"/《前端》笔记《基础知识》/03.JS/09.ES11/02.Promise-allSettled.html",redirect:"/pages/c68a1c/"},{name:"v-5f385efa",path:"/pages/3502f2/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5f385efa").then(t)}},{path:"/pages/3502f2/index.html",redirect:"/pages/3502f2/"},{path:"/《前端》笔记《基础知识》/03.JS/09.ES11/04.可选链操作符.html",redirect:"/pages/3502f2/"},{name:"v-8acc1b34",path:"/pages/297c44/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8acc1b34").then(t)}},{path:"/pages/297c44/index.html",redirect:"/pages/297c44/"},{path:"/《前端》笔记《基础知识》/03.JS/09.ES11/06.BigInt （大整数） 数据结构.html",redirect:"/pages/297c44/"},{name:"v-66abb8b2",path:"/pages/71d197/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-66abb8b2").then(t)}},{path:"/pages/71d197/index.html",redirect:"/pages/71d197/"},{path:"/《前端》笔记《基础知识》/03.JS/09.ES11/05.动态 inport.html",redirect:"/pages/71d197/"},{name:"v-10cf7181",path:"/pages/072adc/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-10cf7181").then(t)}},{path:"/pages/072adc/index.html",redirect:"/pages/072adc/"},{path:"/《前端》笔记《基础知识》/03.JS/09.ES11/07.globalThis（全局 this）.html",redirect:"/pages/072adc/"},{name:"v-4203fcf5",path:"/pages/dbf0ce/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4203fcf5").then(t)}},{path:"/pages/dbf0ce/index.html",redirect:"/pages/dbf0ce/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/01.WebAPI.html",redirect:"/pages/dbf0ce/"},{name:"v-1bc2d22f",path:"/pages/a365d4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1bc2d22f").then(t)}},{path:"/pages/a365d4/index.html",redirect:"/pages/a365d4/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/02.DOM.html",redirect:"/pages/a365d4/"},{name:"v-5763c854",path:"/pages/5a42b6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5763c854").then(t)}},{path:"/pages/5a42b6/index.html",redirect:"/pages/5a42b6/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/03.获取页面元素.html",redirect:"/pages/5a42b6/"},{name:"v-2c131d26",path:"/pages/1b21a7/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2c131d26").then(t)}},{path:"/pages/1b21a7/index.html",redirect:"/pages/1b21a7/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/04.元素操作.html",redirect:"/pages/1b21a7/"},{name:"v-03d6255f",path:"/pages/cfbb1b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-03d6255f").then(t)}},{path:"/pages/cfbb1b/index.html",redirect:"/pages/cfbb1b/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/05.动态创建元素的三种方法.html",redirect:"/pages/cfbb1b/"},{name:"v-0dd722f1",path:"/pages/7f30b8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0dd722f1").then(t)}},{path:"/pages/7f30b8/index.html",redirect:"/pages/7f30b8/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/06.自定义属性.html",redirect:"/pages/7f30b8/"},{name:"v-79159600",path:"/pages/1ffde2/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-79159600").then(t)}},{path:"/pages/1ffde2/index.html",redirect:"/pages/1ffde2/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/07.增删改查.html",redirect:"/pages/1ffde2/"},{name:"v-b3a63b3a",path:"/pages/f62c41/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b3a63b3a").then(t)}},{path:"/pages/f62c41/index.html",redirect:"/pages/f62c41/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/08.排他思想.html",redirect:"/pages/f62c41/"},{name:"v-47e7f6ea",path:"/pages/ee6818/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-47e7f6ea").then(t)}},{path:"/pages/ee6818/index.html",redirect:"/pages/ee6818/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/09.事件类型（BOM：浏览器对象模型）.html",redirect:"/pages/ee6818/"},{name:"v-fce62fda",path:"/pages/a00402/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-fce62fda").then(t)}},{path:"/pages/a00402/index.html",redirect:"/pages/a00402/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/10.事件类型（DOM：文档对象模型）.html",redirect:"/pages/a00402/"},{name:"v-8c868670",path:"/pages/beb383/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8c868670").then(t)}},{path:"/pages/beb383/index.html",redirect:"/pages/beb383/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/11.事件操作.html",redirect:"/pages/beb383/"},{name:"v-140aeb5c",path:"/pages/b5ccb8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-140aeb5c").then(t)}},{path:"/pages/b5ccb8/index.html",redirect:"/pages/b5ccb8/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/12.事件流.html",redirect:"/pages/b5ccb8/"},{name:"v-5ffb4c4c",path:"/pages/d90cd6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5ffb4c4c").then(t)}},{path:"/pages/d90cd6/index.html",redirect:"/pages/d90cd6/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/13.事件对象（BOM：浏览器对象模型）.html",redirect:"/pages/d90cd6/"},{name:"v-f2e96e48",path:"/pages/956791/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-f2e96e48").then(t)}},{path:"/pages/956791/index.html",redirect:"/pages/956791/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/14.事件对象（DOM：文档对象模型）.html",redirect:"/pages/956791/"},{name:"v-64ff720f",path:"/pages/174302/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-64ff720f").then(t)}},{path:"/pages/174302/index.html",redirect:"/pages/174302/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/16.BOM.html",redirect:"/pages/174302/"},{name:"v-2dd6c762",path:"/pages/007db3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2dd6c762").then(t)}},{path:"/pages/007db3/index.html",redirect:"/pages/007db3/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/15.事件委拖.html",redirect:"/pages/007db3/"},{name:"v-c2d08bbc",path:"/pages/5f6ace/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-c2d08bbc").then(t)}},{path:"/pages/5f6ace/index.html",redirect:"/pages/5f6ace/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/17.定时器.html",redirect:"/pages/5f6ace/"},{name:"v-927c912e",path:"/pages/20efbf/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-927c912e").then(t)}},{path:"/pages/20efbf/index.html",redirect:"/pages/20efbf/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/18.this指向问题.html",redirect:"/pages/20efbf/"},{name:"v-ea0f7aa2",path:"/pages/6585fd/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-ea0f7aa2").then(t)}},{path:"/pages/6585fd/index.html",redirect:"/pages/6585fd/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/19.单线程（同步） 与 多线程（异步）.html",redirect:"/pages/6585fd/"},{name:"v-7d86f842",path:"/pages/22590b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7d86f842").then(t)}},{path:"/pages/22590b/index.html",redirect:"/pages/22590b/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/20.location 对象.html",redirect:"/pages/22590b/"},{name:"v-bafd43e4",path:"/pages/366a50/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-bafd43e4").then(t)}},{path:"/pages/366a50/index.html",redirect:"/pages/366a50/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/21.navigator 对象.html",redirect:"/pages/366a50/"},{name:"v-09aa1208",path:"/pages/b8f8fe/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-09aa1208").then(t)}},{path:"/pages/b8f8fe/index.html",redirect:"/pages/b8f8fe/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/22.history 对象(上）.html",redirect:"/pages/b8f8fe/"},{name:"v-3f33f23c",path:"/pages/626f8b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3f33f23c").then(t)}},{path:"/pages/626f8b/index.html",redirect:"/pages/626f8b/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/23.history 对象(下）.html",redirect:"/pages/626f8b/"},{name:"v-0f300dc0",path:"/pages/bb0314/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0f300dc0").then(t)}},{path:"/pages/bb0314/index.html",redirect:"/pages/bb0314/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/24. offset 系列.html",redirect:"/pages/bb0314/"},{name:"v-5efca30a",path:"/pages/ef677b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5efca30a").then(t)}},{path:"/pages/ef677b/index.html",redirect:"/pages/ef677b/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/25.client 系列.html",redirect:"/pages/ef677b/"},{name:"v-7b5a6bdc",path:"/pages/95b209/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7b5a6bdc").then(t)}},{path:"/pages/95b209/index.html",redirect:"/pages/95b209/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/26.scroll 系列 和 page 系列.html",redirect:"/pages/95b209/"},{name:"v-fc0977e8",path:"/pages/78c019/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-fc0977e8").then(t)}},{path:"/pages/78c019/index.html",redirect:"/pages/78c019/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/27.常用开发插件.html",redirect:"/pages/78c019/"},{name:"v-7bc53962",path:"/pages/a71be6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7bc53962").then(t)}},{path:"/pages/a71be6/index.html",redirect:"/pages/a71be6/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/28.常用开发框架.html",redirect:"/pages/a71be6/"},{name:"v-62b7e06a",path:"/pages/004d4e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-62b7e06a").then(t)}},{path:"/pages/004d4e/index.html",redirect:"/pages/004d4e/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/29.本地存储（上）.html",redirect:"/pages/004d4e/"},{name:"v-bf061d6c",path:"/pages/4a131d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-bf061d6c").then(t)}},{path:"/pages/4a131d/index.html",redirect:"/pages/4a131d/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/30.本地存储（下）.html",redirect:"/pages/4a131d/"},{name:"v-4a99c8a2",path:"/pages/a6ca72/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4a99c8a2").then(t)}},{path:"/pages/a6ca72/index.html",redirect:"/pages/a6ca72/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/31.服务端存储.html",redirect:"/pages/a6ca72/"},{name:"v-33a1c7a3",path:"/pages/42a459/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-33a1c7a3").then(t)}},{path:"/pages/42a459/index.html",redirect:"/pages/42a459/"},{path:"/《前端》笔记《基础知识》/04.WebAPI/32.封装 Storage.html",redirect:"/pages/42a459/"},{name:"v-29acfcf4",path:"/pages/063716/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-29acfcf4").then(t)}},{path:"/pages/063716/index.html",redirect:"/pages/063716/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/01.视口标签.html",redirect:"/pages/063716/"},{name:"v-85594856",path:"/pages/da4b10/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-85594856").then(t)}},{path:"/pages/da4b10/index.html",redirect:"/pages/da4b10/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/02.二倍图.html",redirect:"/pages/da4b10/"},{name:"v-88e5f472",path:"/pages/870d5c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-88e5f472").then(t)}},{path:"/pages/870d5c/index.html",redirect:"/pages/870d5c/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/03.移动端 开发方案.html",redirect:"/pages/870d5c/"},{name:"v-9e0b35f8",path:"/pages/287bfb/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9e0b35f8").then(t)}},{path:"/pages/287bfb/index.html",redirect:"/pages/287bfb/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/04.移动端 技术选型.html",redirect:"/pages/287bfb/"},{name:"v-7e472cf8",path:"/pages/047774/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7e472cf8").then(t)}},{path:"/pages/047774/index.html",redirect:"/pages/047774/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/05.flex 弹性布局（上）.html",redirect:"/pages/047774/"},{name:"v-8a70cff8",path:"/pages/b3bc54/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8a70cff8").then(t)}},{path:"/pages/b3bc54/index.html",redirect:"/pages/b3bc54/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/06.flex 弹性布局（下）.html",redirect:"/pages/b3bc54/"},{name:"v-c5688e88",path:"/pages/afc4fa/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-c5688e88").then(t)}},{path:"/pages/afc4fa/index.html",redirect:"/pages/afc4fa/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/07.less.html",redirect:"/pages/afc4fa/"},{name:"v-3f38e99e",path:"/pages/801c60/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3f38e99e").then(t)}},{path:"/pages/801c60/index.html",redirect:"/pages/801c60/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/08.rem 适配布局 和 媒体查询.html",redirect:"/pages/801c60/"},{name:"v-2bf8cf0c",path:"/pages/d7069a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2bf8cf0c").then(t)}},{path:"/pages/d7069a/index.html",redirect:"/pages/d7069a/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/09.rem 适配布局（技术方案一）.html",redirect:"/pages/d7069a/"},{name:"v-270c7930",path:"/pages/f6af9f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-270c7930").then(t)}},{path:"/pages/f6af9f/index.html",redirect:"/pages/f6af9f/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/10.rem 适配布局（技术方案一）案例.html",redirect:"/pages/f6af9f/"},{name:"v-ab095d7a",path:"/pages/0c16c8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-ab095d7a").then(t)}},{path:"/pages/0c16c8/index.html",redirect:"/pages/0c16c8/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/11.px 转换 rem 插件（cssrem）.html",redirect:"/pages/0c16c8/"},{name:"v-28302a7b",path:"/pages/91ff9f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-28302a7b").then(t)}},{path:"/pages/91ff9f/index.html",redirect:"/pages/91ff9f/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/12.rem 适配布局（技术方案二）（推荐）.html",redirect:"/pages/91ff9f/"},{name:"v-3241ccef",path:"/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3241ccef").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-73d64058",path:"/pages/6ce11c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-73d64058").then(t)}},{path:"/pages/6ce11c/index.html",redirect:"/pages/6ce11c/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/13.rem 适配布局（技术方案二）案例.html",redirect:"/pages/6ce11c/"},{name:"v-4a911256",path:"/pages/80324a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4a911256").then(t)}},{path:"/pages/80324a/index.html",redirect:"/pages/80324a/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/14.响应式布局.html",redirect:"/pages/80324a/"},{name:"v-0a519d84",path:"/pages/01c35d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0a519d84").then(t)}},{path:"/pages/01c35d/index.html",redirect:"/pages/01c35d/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/15.响应式布局 案例.html",redirect:"/pages/01c35d/"},{name:"v-7dfe4f8f",path:"/pages/8a06e4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7dfe4f8f").then(t)}},{path:"/pages/8a06e4/index.html",redirect:"/pages/8a06e4/"},{path:"/《前端》笔记《基础知识》/05.移动 web 开发/16.Bootstrap 框架.html",redirect:"/pages/8a06e4/"},{name:"v-44ef47bb",path:"/pages/a9419c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-44ef47bb").then(t)}},{path:"/pages/a9419c/index.html",redirect:"/pages/a9419c/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/01.介绍.html",redirect:"/pages/a9419c/"},{name:"v-8dfbb406",path:"/pages/25f752/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8dfbb406").then(t)}},{path:"/pages/25f752/index.html",redirect:"/pages/25f752/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/02.环境搭建.html",redirect:"/pages/25f752/"},{name:"v-562b6997",path:"/pages/8c1af4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-562b6997").then(t)}},{path:"/pages/8c1af4/index.html",redirect:"/pages/8c1af4/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/03.项目初始化.html",redirect:"/pages/8c1af4/"},{name:"v-64ec1ae6",path:"/pages/e97103/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-64ec1ae6").then(t)}},{path:"/pages/e97103/index.html",redirect:"/pages/e97103/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/05.配置文件.html",redirect:"/pages/e97103/"},{name:"v-5b239ac5",path:"/pages/ba1bb6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5b239ac5").then(t)}},{path:"/pages/ba1bb6/index.html",redirect:"/pages/ba1bb6/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/06.tabBar 功能.html",redirect:"/pages/ba1bb6/"},{name:"v-453d7eb9",path:"/pages/501d2d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-453d7eb9").then(t)}},{path:"/pages/501d2d/index.html",redirect:"/pages/501d2d/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/07.模板语法.html",redirect:"/pages/501d2d/"},{name:"v-b3243102",path:"/pages/99fc36/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b3243102").then(t)}},{path:"/pages/99fc36/index.html",redirect:"/pages/99fc36/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/08.事件绑定.html",redirect:"/pages/99fc36/"},{name:"v-1c3ffa58",path:"/pages/dd0f12/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1c3ffa58").then(t)}},{path:"/pages/dd0f12/index.html",redirect:"/pages/dd0f12/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/09.协同工作.html",redirect:"/pages/dd0f12/"},{name:"v-0a4c1062",path:"/pages/2726bb/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0a4c1062").then(t)}},{path:"/pages/2726bb/index.html",redirect:"/pages/2726bb/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/10.样式文件（wxss）.html",redirect:"/pages/2726bb/"},{name:"v-36efd7c2",path:"/pages/eaa6ce/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-36efd7c2").then(t)}},{path:"/pages/eaa6ce/index.html",redirect:"/pages/eaa6ce/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/11.内置组件.html",redirect:"/pages/eaa6ce/"},{name:"v-6a0481d6",path:"/pages/f5d4e9/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6a0481d6").then(t)}},{path:"/pages/f5d4e9/index.html",redirect:"/pages/f5d4e9/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/12.自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据.html",redirect:"/pages/f5d4e9/"},{name:"v-3a0fdb6a",path:"/pages/ca30ce/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3a0fdb6a").then(t)}},{path:"/pages/ca30ce/index.html",redirect:"/pages/ca30ce/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/13.应用生命周期.html",redirect:"/pages/ca30ce/"},{name:"v-0e4d407c",path:"/pages/44b3cc/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0e4d407c").then(t)}},{path:"/pages/44b3cc/index.html",redirect:"/pages/44b3cc/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/14.页面生命周期.html",redirect:"/pages/44b3cc/"},{name:"v-4eb30ad6",path:"/pages/2010a7/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4eb30ad6").then(t)}},{path:"/pages/2010a7/index.html",redirect:"/pages/2010a7/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/15.组件生命周期.html",redirect:"/pages/2010a7/"},{name:"v-5abcae32",path:"/pages/648c7a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5abcae32").then(t)}},{path:"/pages/648c7a/index.html",redirect:"/pages/648c7a/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/16.组件所在页面的生命周期.html",redirect:"/pages/648c7a/"},{name:"v-5faac68a",path:"/pages/342bec/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5faac68a").then(t)}},{path:"/pages/342bec/index.html",redirect:"/pages/342bec/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/17.全局共享数据（状态管理）.html",redirect:"/pages/342bec/"},{name:"v-407ea744",path:"/pages/724c77/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-407ea744").then(t)}},{path:"/pages/724c77/index.html",redirect:"/pages/724c77/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/18.uni-ui.html",redirect:"/pages/724c77/"},{name:"v-86cc2f9c",path:"/pages/f9eeed/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-86cc2f9c").then(t)}},{path:"/pages/f9eeed/index.html",redirect:"/pages/f9eeed/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/19.uni-api.html",redirect:"/pages/f9eeed/"},{name:"v-d6eff936",path:"/pages/ceab1f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d6eff936").then(t)}},{path:"/pages/ceab1f/index.html",redirect:"/pages/ceab1f/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/20.内置 API.html",redirect:"/pages/ceab1f/"},{name:"v-83d1c182",path:"/pages/ac0a66/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-83d1c182").then(t)}},{path:"/pages/ac0a66/index.html",redirect:"/pages/ac0a66/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/21.网络数据请求.html",redirect:"/pages/ac0a66/"},{name:"v-97e9645e",path:"/pages/ec1845/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-97e9645e").then(t)}},{path:"/pages/ec1845/index.html",redirect:"/pages/ec1845/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/22.封装请求.html",redirect:"/pages/ec1845/"},{name:"v-13167ccf",path:"/pages/f8bfed/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-13167ccf").then(t)}},{path:"/pages/f8bfed/index.html",redirect:"/pages/f8bfed/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/23.页面导航.html",redirect:"/pages/f8bfed/"},{name:"v-2b0e8803",path:"/pages/89dd13/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2b0e8803").then(t)}},{path:"/pages/89dd13/index.html",redirect:"/pages/89dd13/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/24.wxs 脚本.html",redirect:"/pages/89dd13/"},{name:"v-28f42e20",path:"/pages/243d96/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-28f42e20").then(t)}},{path:"/pages/243d96/index.html",redirect:"/pages/243d96/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/25.npm.html",redirect:"/pages/243d96/"},{name:"v-8ef74bae",path:"/pages/9376d8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8ef74bae").then(t)}},{path:"/pages/9376d8/index.html",redirect:"/pages/9376d8/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/26.分包.html",redirect:"/pages/9376d8/"},{name:"v-cbc33bfa",path:"/pages/0bb64d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-cbc33bfa").then(t)}},{path:"/pages/0bb64d/index.html",redirect:"/pages/0bb64d/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/27.自定义字体.html",redirect:"/pages/0bb64d/"},{name:"v-8c64e7fc",path:"/pages/f4a219/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8c64e7fc").then(t)}},{path:"/pages/f4a219/index.html",redirect:"/pages/f4a219/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/28.缓存.html",redirect:"/pages/f4a219/"},{name:"v-0e657df8",path:"/pages/bd9b78/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0e657df8").then(t)}},{path:"/pages/bd9b78/index.html",redirect:"/pages/bd9b78/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/29.微信开发者工具使用技巧.html",redirect:"/pages/bd9b78/"},{name:"v-6964c0b4",path:"/pages/929e62/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6964c0b4").then(t)}},{path:"/pages/929e62/index.html",redirect:"/pages/929e62/"},{path:"/《前端》笔记《基础知识》/06.原生微信小程序/30.sitemap 配置项.html",redirect:"/pages/929e62/"},{name:"v-8c4c5260",path:"/pages/c17dd7/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8c4c5260").then(t)}},{path:"/pages/c17dd7/index.html",redirect:"/pages/c17dd7/"},{path:"/《前端》笔记《库》/01.JQuery/01.JQuery 介绍.html",redirect:"/pages/c17dd7/"},{name:"v-7c4e206c",path:"/pages/1c8242/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7c4e206c").then(t)}},{path:"/pages/1c8242/index.html",redirect:"/pages/1c8242/"},{path:"/《前端》笔记《库》/01.JQuery/02.基础.html",redirect:"/pages/1c8242/"},{name:"v-d56afaf0",path:"/pages/7574fa/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d56afaf0").then(t)}},{path:"/pages/7574fa/index.html",redirect:"/pages/7574fa/"},{path:"/《前端》笔记《库》/01.JQuery/03.选择器.html",redirect:"/pages/7574fa/"},{name:"v-8d5ee670",path:"/pages/7395d0/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8d5ee670").then(t)}},{path:"/pages/7395d0/index.html",redirect:"/pages/7395d0/"},{path:"/《前端》笔记《库》/01.JQuery/04.隐式迭代.html",redirect:"/pages/7395d0/"},{name:"v-0154a152",path:"/pages/06defd/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0154a152").then(t)}},{path:"/pages/06defd/index.html",redirect:"/pages/06defd/"},{path:"/《前端》笔记《库》/01.JQuery/05.筛选选择器.html",redirect:"/pages/06defd/"},{name:"v-0753c8e0",path:"/pages/4d7618/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0753c8e0").then(t)}},{path:"/pages/4d7618/index.html",redirect:"/pages/4d7618/"},{path:"/《前端》笔记《库》/01.JQuery/06.筛选方法.html",redirect:"/pages/4d7618/"},{name:"v-1af13004",path:"/pages/d8b0cc/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1af13004").then(t)}},{path:"/pages/d8b0cc/index.html",redirect:"/pages/d8b0cc/"},{path:"/《前端》笔记《库》/01.JQuery/07.排他思想.html",redirect:"/pages/d8b0cc/"},{name:"v-9d00f62e",path:"/pages/2107dd/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9d00f62e").then(t)}},{path:"/pages/2107dd/index.html",redirect:"/pages/2107dd/"},{path:"/《前端》笔记《库》/01.JQuery/08.样式操作.html",redirect:"/pages/2107dd/"},{name:"v-19bad570",path:"/pages/c3cfb4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-19bad570").then(t)}},{path:"/pages/c3cfb4/index.html",redirect:"/pages/c3cfb4/"},{path:"/《前端》笔记《库》/01.JQuery/09.类操作.html",redirect:"/pages/c3cfb4/"},{name:"v-2c2d74f6",path:"/pages/e9ff3d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2c2d74f6").then(t)}},{path:"/pages/e9ff3d/index.html",redirect:"/pages/e9ff3d/"},{path:"/《前端》笔记《库》/01.JQuery/10.动画.html",redirect:"/pages/e9ff3d/"},{name:"v-8944309c",path:"/pages/417a58/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8944309c").then(t)}},{path:"/pages/417a58/index.html",redirect:"/pages/417a58/"},{path:"/《前端》笔记《库》/01.JQuery/11.事件切换.html",redirect:"/pages/417a58/"},{name:"v-41617b34",path:"/pages/2c7709/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-41617b34").then(t)}},{path:"/pages/2c7709/index.html",redirect:"/pages/2c7709/"},{path:"/《前端》笔记《库》/01.JQuery/12.停止动画排队.html",redirect:"/pages/2c7709/"},{name:"v-2207ccde",path:"/pages/0e200a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2207ccde").then(t)}},{path:"/pages/0e200a/index.html",redirect:"/pages/0e200a/"},{path:"/《前端》笔记《库》/01.JQuery/13.属性操作.html",redirect:"/pages/0e200a/"},{name:"v-9eb35d5e",path:"/pages/4a47f8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9eb35d5e").then(t)}},{path:"/pages/4a47f8/index.html",redirect:"/pages/4a47f8/"},{path:"/《前端》笔记《库》/01.JQuery/14.（元素内容、表单值）操作.html",redirect:"/pages/4a47f8/"},{name:"v-3bf18bd2",path:"/pages/3c206b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3bf18bd2").then(t)}},{path:"/pages/3c206b/index.html",redirect:"/pages/3c206b/"},{path:"/《前端》笔记《库》/01.JQuery/15.遍历元素.html",redirect:"/pages/3c206b/"},{name:"v-41aeddf3",path:"/pages/30ef11/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-41aeddf3").then(t)}},{path:"/pages/30ef11/index.html",redirect:"/pages/30ef11/"},{path:"/《前端》笔记《库》/01.JQuery/16.操作元素.html",redirect:"/pages/30ef11/"},{name:"v-1c9728b1",path:"/pages/e5c92d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1c9728b1").then(t)}},{path:"/pages/e5c92d/index.html",redirect:"/pages/e5c92d/"},{path:"/《前端》笔记《库》/01.JQuery/17.操作元素尺寸.html",redirect:"/pages/e5c92d/"},{name:"v-4457ccf9",path:"/pages/5b6383/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4457ccf9").then(t)}},{path:"/pages/5b6383/index.html",redirect:"/pages/5b6383/"},{path:"/《前端》笔记《库》/01.JQuery/18.操作元素位置.html",redirect:"/pages/5b6383/"},{name:"v-6da7ed1e",path:"/pages/d2cbce/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6da7ed1e").then(t)}},{path:"/pages/d2cbce/index.html",redirect:"/pages/d2cbce/"},{path:"/《前端》笔记《库》/01.JQuery/19.事件.html",redirect:"/pages/d2cbce/"},{name:"v-516c7555",path:"/pages/81b206/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-516c7555").then(t)}},{path:"/pages/81b206/index.html",redirect:"/pages/81b206/"},{path:"/《前端》笔记《库》/01.JQuery/20.事件自动触发.html",redirect:"/pages/81b206/"},{name:"v-0cce9194",path:"/pages/dff061/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0cce9194").then(t)}},{path:"/pages/dff061/index.html",redirect:"/pages/dff061/"},{path:"/《前端》笔记《库》/01.JQuery/21.事件对象.html",redirect:"/pages/dff061/"},{name:"v-5186b60c",path:"/pages/341517/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5186b60c").then(t)}},{path:"/pages/341517/index.html",redirect:"/pages/341517/"},{path:"/《前端》笔记《库》/01.JQuery/22.对象合并.html",redirect:"/pages/341517/"},{name:"v-f7c2d768",path:"/pages/e5f77f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-f7c2d768").then(t)}},{path:"/pages/e5f77f/index.html",redirect:"/pages/e5f77f/"},{path:"/《前端》笔记《库》/01.JQuery/23.多库共存.html",redirect:"/pages/e5f77f/"},{name:"v-409e8d99",path:"/pages/a62464/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-409e8d99").then(t)}},{path:"/pages/a62464/index.html",redirect:"/pages/a62464/"},{path:"/《前端》笔记《库》/01.JQuery/24.插件.html",redirect:"/pages/a62464/"},{name:"v-6aed7fb9",path:"/pages/960d46/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6aed7fb9").then(t)}},{path:"/pages/960d46/index.html",redirect:"/pages/960d46/"},{path:"/《前端》笔记《库》/02.EChart/01.介绍.html",redirect:"/pages/960d46/"},{name:"v-79227822",path:"/pages/c5d318/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-79227822").then(t)}},{path:"/pages/c5d318/index.html",redirect:"/pages/c5d318/"},{path:"/《前端》笔记《库》/02.EChart/02.使用步骤.html",redirect:"/pages/c5d318/"},{name:"v-78db4470",path:"/pages/ee2b65/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-78db4470").then(t)}},{path:"/pages/ee2b65/index.html",redirect:"/pages/ee2b65/"},{path:"/《前端》笔记《库》/02.EChart/03.通用配置.html",redirect:"/pages/ee2b65/"},{name:"v-2d97e714",path:"/pages/247f53/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2d97e714").then(t)}},{path:"/pages/247f53/index.html",redirect:"/pages/247f53/"},{path:"/《前端》笔记《库》/02.EChart/04.直角坐标系中的通用配置项.html",redirect:"/pages/247f53/"},{name:"v-2431e7cc",path:"/pages/265663/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2431e7cc").then(t)}},{path:"/pages/265663/index.html",redirect:"/pages/265663/"},{path:"/《前端》笔记《库》/02.EChart/05.柱状图.html",redirect:"/pages/265663/"},{name:"v-677e8b92",path:"/pages/d9763d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-677e8b92").then(t)}},{path:"/pages/d9763d/index.html",redirect:"/pages/d9763d/"},{path:"/《前端》笔记《库》/02.EChart/06.折线图.html",redirect:"/pages/d9763d/"},{name:"v-fd572a12",path:"/pages/b8894e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-fd572a12").then(t)}},{path:"/pages/b8894e/index.html",redirect:"/pages/b8894e/"},{path:"/《前端》笔记《库》/02.EChart/07.散点图.html",redirect:"/pages/b8894e/"},{name:"v-585a6335",path:"/pages/b963e8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-585a6335").then(t)}},{path:"/pages/b963e8/index.html",redirect:"/pages/b963e8/"},{path:"/《前端》笔记《库》/02.EChart/08.饼图.html",redirect:"/pages/b963e8/"},{name:"v-1c340074",path:"/pages/294d22/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1c340074").then(t)}},{path:"/pages/294d22/index.html",redirect:"/pages/294d22/"},{path:"/《前端》笔记《库》/02.EChart/09.地图.html",redirect:"/pages/294d22/"},{name:"v-5731bc7a",path:"/pages/e855fb/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5731bc7a").then(t)}},{path:"/pages/e855fb/index.html",redirect:"/pages/e855fb/"},{path:"/《前端》笔记《库》/02.EChart/10.雷达图.html",redirect:"/pages/e855fb/"},{name:"v-3413de38",path:"/pages/cbcf49/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3413de38").then(t)}},{path:"/pages/cbcf49/index.html",redirect:"/pages/cbcf49/"},{path:"/《前端》笔记《库》/02.EChart/11.仪表盘.html",redirect:"/pages/cbcf49/"},{name:"v-0be85f30",path:"/pages/23e617/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0be85f30").then(t)}},{path:"/pages/23e617/index.html",redirect:"/pages/23e617/"},{path:"/《前端》笔记《库》/02.EChart/12.主题.html",redirect:"/pages/23e617/"},{name:"v-58228608",path:"/pages/3026e7/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-58228608").then(t)}},{path:"/pages/3026e7/index.html",redirect:"/pages/3026e7/"},{path:"/《前端》笔记《库》/02.EChart/13.调色盘.html",redirect:"/pages/3026e7/"},{name:"v-60a2e194",path:"/pages/be046a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-60a2e194").then(t)}},{path:"/pages/be046a/index.html",redirect:"/pages/be046a/"},{path:"/《前端》笔记《库》/02.EChart/14.颜色渐变.html",redirect:"/pages/be046a/"},{name:"v-2bc4fe24",path:"/pages/fe0229/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2bc4fe24").then(t)}},{path:"/pages/fe0229/index.html",redirect:"/pages/fe0229/"},{path:"/《前端》笔记《库》/02.EChart/15.样式.html",redirect:"/pages/fe0229/"},{name:"v-50dd6d1f",path:"/pages/93d13a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-50dd6d1f").then(t)}},{path:"/pages/93d13a/index.html",redirect:"/pages/93d13a/"},{path:"/《前端》笔记《库》/02.EChart/16.自适应.html",redirect:"/pages/93d13a/"},{name:"v-52558656",path:"/pages/22face/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-52558656").then(t)}},{path:"/pages/22face/index.html",redirect:"/pages/22face/"},{path:"/《前端》笔记《库》/02.EChart/17.加载动画.html",redirect:"/pages/22face/"},{name:"v-7dcc7da2",path:"/pages/288120/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7dcc7da2").then(t)}},{path:"/pages/288120/index.html",redirect:"/pages/288120/"},{path:"/《前端》笔记《库》/02.EChart/18.增量动画.html",redirect:"/pages/288120/"},{name:"v-92e1d46e",path:"/pages/f93ec3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-92e1d46e").then(t)}},{path:"/pages/f93ec3/index.html",redirect:"/pages/f93ec3/"},{path:"/《前端》笔记《库》/02.EChart/19.动画配置项.html",redirect:"/pages/f93ec3/"},{name:"v-39b8722d",path:"/pages/463c49/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-39b8722d").then(t)}},{path:"/pages/463c49/index.html",redirect:"/pages/463c49/"},{path:"/《前端》笔记《库》/02.EChart/20.交互API-全局 echarts 对象.html",redirect:"/pages/463c49/"},{name:"v-9605ca52",path:"/pages/60605e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9605ca52").then(t)}},{path:"/pages/60605e/index.html",redirect:"/pages/60605e/"},{path:"/《前端》笔记《库》/02.EChart/21.交互API-echartsInstance 对象.html",redirect:"/pages/60605e/"},{name:"v-8e121888",path:"/pages/e17a64/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-8e121888").then(t)}},{path:"/pages/e17a64/index.html",redirect:"/pages/e17a64/"},{path:"/《前端》笔记《库》/02.EChart/22.koa2.html",redirect:"/pages/e17a64/"},{name:"v-56b945d9",path:"/pages/cc62b5/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-56b945d9").then(t)}},{path:"/pages/cc62b5/index.html",redirect:"/pages/cc62b5/"},{path:"/《前端》笔记《库》/03.Element-ui/01.介绍.html",redirect:"/pages/cc62b5/"},{name:"v-102c6808",path:"/pages/290baf/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-102c6808").then(t)}},{path:"/pages/290baf/index.html",redirect:"/pages/290baf/"},{path:"/《前端》笔记《库》/03.Element-ui/02.栅格布局.html",redirect:"/pages/290baf/"},{name:"v-d1ae67ce",path:"/pages/3e78f3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d1ae67ce").then(t)}},{path:"/pages/3e78f3/index.html",redirect:"/pages/3e78f3/"},{path:"/《前端》笔记《库》/03.Element-ui/03.组件.html",redirect:"/pages/3e78f3/"},{name:"v-47bf13d4",path:"/pages/5d424a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-47bf13d4").then(t)}},{path:"/pages/5d424a/index.html",redirect:"/pages/5d424a/"},{path:"/《前端》笔记《库》/03.Element-ui/04.编程式组件.html",redirect:"/pages/5d424a/"},{name:"v-98fad160",path:"/pages/ee7afe/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-98fad160").then(t)}},{path:"/pages/ee7afe/index.html",redirect:"/pages/ee7afe/"},{path:"/《前端》笔记《框架》/01.vue2/01.项目初始化.html",redirect:"/pages/ee7afe/"},{name:"v-20d6151f",path:"/pages/7f9266/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-20d6151f").then(t)}},{path:"/pages/7f9266/index.html",redirect:"/pages/7f9266/"},{path:"/《前端》笔记《框架》/01.vue2/02.使用步骤.html",redirect:"/pages/7f9266/"},{name:"v-96c274c4",path:"/pages/9913d3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-96c274c4").then(t)}},{path:"/pages/9913d3/index.html",redirect:"/pages/9913d3/"},{path:"/《前端》笔记《框架》/01.vue2/00.介绍.html",redirect:"/pages/9913d3/"},{name:"v-65ff4861",path:"/pages/5202a1/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-65ff4861").then(t)}},{path:"/pages/5202a1/index.html",redirect:"/pages/5202a1/"},{path:"/《前端》笔记《框架》/01.vue2/03.动态添加样式.html",redirect:"/pages/5202a1/"},{name:"v-fe22f704",path:"/pages/ae2ef8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-fe22f704").then(t)}},{path:"/pages/ae2ef8/index.html",redirect:"/pages/ae2ef8/"},{path:"/《前端》笔记《框架》/01.vue2/04.过滤器.html",redirect:"/pages/ae2ef8/"},{name:"v-082def39",path:"/pages/ee2297/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-082def39").then(t)}},{path:"/pages/ee2297/index.html",redirect:"/pages/ee2297/"},{path:"/《前端》笔记《框架》/01.vue2/05.侦听器.html",redirect:"/pages/ee2297/"},{name:"v-472ff7fa",path:"/pages/4e87f6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-472ff7fa").then(t)}},{path:"/pages/4e87f6/index.html",redirect:"/pages/4e87f6/"},{path:"/《前端》笔记《框架》/01.vue2/06.计算属性.html",redirect:"/pages/4e87f6/"},{name:"v-6fc9318d",path:"/pages/37b216/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6fc9318d").then(t)}},{path:"/pages/37b216/index.html",redirect:"/pages/37b216/"},{path:"/《前端》笔记《框架》/01.vue2/07.axios 发送请求.html",redirect:"/pages/37b216/"},{name:"v-46372f8f",path:"/pages/c0b227/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-46372f8f").then(t)}},{path:"/pages/c0b227/index.html",redirect:"/pages/c0b227/"},{path:"/《前端》笔记《框架》/01.vue2/08.axios 发送请求 简写.html",redirect:"/pages/c0b227/"},{name:"v-90fe2772",path:"/pages/6d2a87/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-90fe2772").then(t)}},{path:"/pages/6d2a87/index.html",redirect:"/pages/6d2a87/"},{path:"/《前端》笔记《框架》/01.vue2/09.axios 全局配置.html",redirect:"/pages/6d2a87/"},{name:"v-dd90940e",path:"/pages/36b5ae/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-dd90940e").then(t)}},{path:"/pages/36b5ae/index.html",redirect:"/pages/36b5ae/"},{path:"/《前端》笔记《框架》/01.vue2/10.axios 拦截器.html",redirect:"/pages/36b5ae/"},{name:"v-a96d079e",path:"/pages/8e1497/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-a96d079e").then(t)}},{path:"/pages/8e1497/index.html",redirect:"/pages/8e1497/"},{path:"/《前端》笔记《框架》/01.vue2/11.proxy 跨域代理.html",redirect:"/pages/8e1497/"},{name:"v-7e96e1a9",path:"/pages/dd342d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7e96e1a9").then(t)}},{path:"/pages/dd342d/index.html",redirect:"/pages/dd342d/"},{path:"/《前端》笔记《框架》/01.vue2/12.SPA.html",redirect:"/pages/dd342d/"},{name:"v-575ab7b2",path:"/pages/f1a7da/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-575ab7b2").then(t)}},{path:"/pages/f1a7da/index.html",redirect:"/pages/f1a7da/"},{path:"/《前端》笔记《框架》/01.vue2/13.vue-cli（脚手架）.html",redirect:"/pages/f1a7da/"},{name:"v-457d36c4",path:"/pages/7d1bb2/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-457d36c4").then(t)}},{path:"/pages/7d1bb2/index.html",redirect:"/pages/7d1bb2/"},{path:"/《前端》笔记《框架》/01.vue2/14.组件.html",redirect:"/pages/7d1bb2/"},{name:"v-0f688986",path:"/pages/bc7b7d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0f688986").then(t)}},{path:"/pages/bc7b7d/index.html",redirect:"/pages/bc7b7d/"},{path:"/《前端》笔记《框架》/01.vue2/15.自定义事件.html",redirect:"/pages/bc7b7d/"},{name:"v-ff0d159c",path:"/pages/a01ff5/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-ff0d159c").then(t)}},{path:"/pages/a01ff5/index.html",redirect:"/pages/a01ff5/"},{path:"/《前端》笔记《框架》/01.vue2/16.组件的生命周期 & 钩子函数.html",redirect:"/pages/a01ff5/"},{name:"v-882d8036",path:"/pages/0c319a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-882d8036").then(t)}},{path:"/pages/0c319a/index.html",redirect:"/pages/0c319a/"},{path:"/《前端》笔记《框架》/01.vue2/17.组件之间的数据共享.html",redirect:"/pages/0c319a/"},{name:"v-6297b88c",path:"/pages/29b80e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6297b88c").then(t)}},{path:"/pages/29b80e/index.html",redirect:"/pages/29b80e/"},{path:"/《前端》笔记《框架》/01.vue2/18.获取 DOM 元素 或 组件.html",redirect:"/pages/29b80e/"},{name:"v-25fd3951",path:"/pages/c39f39/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-25fd3951").then(t)}},{path:"/pages/c39f39/index.html",redirect:"/pages/c39f39/"},{path:"/《前端》笔记《框架》/01.vue2/19.props 高级用法.html",redirect:"/pages/c39f39/"},{name:"v-35215ac6",path:"/pages/65ee94/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-35215ac6").then(t)}},{path:"/pages/65ee94/index.html",redirect:"/pages/65ee94/"},{path:"/《前端》笔记《框架》/01.vue2/20.vuex-上.html",redirect:"/pages/65ee94/"},{name:"v-41762806",path:"/pages/27c1f4/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-41762806").then(t)}},{path:"/pages/27c1f4/index.html",redirect:"/pages/27c1f4/"},{path:"/《前端》笔记《框架》/01.vue2/21.vuex-下.html",redirect:"/pages/27c1f4/"},{name:"v-b20b9dde",path:"/pages/47f08e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b20b9dde").then(t)}},{path:"/pages/47f08e/index.html",redirect:"/pages/47f08e/"},{path:"/《前端》笔记《框架》/01.vue2/22.动态组件.html",redirect:"/pages/47f08e/"},{name:"v-6748c5ba",path:"/pages/6bcf69/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-6748c5ba").then(t)}},{path:"/pages/6bcf69/index.html",redirect:"/pages/6bcf69/"},{path:"/《前端》笔记《框架》/01.vue2/23.组件的名称.html",redirect:"/pages/6bcf69/"},{name:"v-05972e7f",path:"/pages/effd84/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-05972e7f").then(t)}},{path:"/pages/effd84/index.html",redirect:"/pages/effd84/"},{path:"/《前端》笔记《框架》/01.vue2/25.插槽.html",redirect:"/pages/effd84/"},{name:"v-14b205db",path:"/pages/c09a2f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-14b205db").then(t)}},{path:"/pages/c09a2f/index.html",redirect:"/pages/c09a2f/"},{path:"/《前端》笔记《框架》/01.vue2/24.封装组件.html",redirect:"/pages/c09a2f/"},{name:"v-4c1e89e4",path:"/pages/4c6157/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-4c1e89e4").then(t)}},{path:"/pages/4c6157/index.html",redirect:"/pages/4c6157/"},{path:"/《前端》笔记《框架》/01.vue2/26.自定义指令.html",redirect:"/pages/4c6157/"},{name:"v-20c8726d",path:"/pages/71ecc1/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-20c8726d").then(t)}},{path:"/pages/71ecc1/index.html",redirect:"/pages/71ecc1/"},{path:"/《前端》笔记《框架》/01.vue2/27.前端路由.html",redirect:"/pages/71ecc1/"},{name:"v-0318faaa",path:"/pages/871156/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0318faaa").then(t)}},{path:"/pages/871156/index.html",redirect:"/pages/871156/"},{path:"/《前端》笔记《框架》/01.vue2/28.vue-router 3 版本 第三方库.html",redirect:"/pages/871156/"},{name:"v-5929862e",path:"/pages/5e7df0/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-5929862e").then(t)}},{path:"/pages/5e7df0/index.html",redirect:"/pages/5e7df0/"},{path:"/《前端》笔记《框架》/01.vue2/29.页面导航.html",redirect:"/pages/5e7df0/"},{name:"v-7ce3cace",path:"/pages/b55487/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7ce3cace").then(t)}},{path:"/pages/b55487/index.html",redirect:"/pages/b55487/"},{path:"/《前端》笔记《框架》/01.vue2/30.导航守卫.html",redirect:"/pages/b55487/"},{name:"v-e174b762",path:"/pages/74b13b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-e174b762").then(t)}},{path:"/pages/74b13b/index.html",redirect:"/pages/74b13b/"},{path:"/《前端》笔记《框架》/01.vue2/32.组件库.html",redirect:"/pages/74b13b/"},{name:"v-27082361",path:"/pages/450ed8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-27082361").then(t)}},{path:"/pages/450ed8/index.html",redirect:"/pages/450ed8/"},{path:"/《前端》笔记《框架》/01.vue2/31.命名路由.html",redirect:"/pages/450ed8/"},{name:"v-fb5a06f6",path:"/pages/953c13/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-fb5a06f6").then(t)}},{path:"/pages/953c13/index.html",redirect:"/pages/953c13/"},{path:"/《前端》笔记《框架》/01.vue2/34.Vant.html",redirect:"/pages/953c13/"},{name:"v-2f268e20",path:"/pages/204695/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2f268e20").then(t)}},{path:"/pages/204695/index.html",redirect:"/pages/204695/"},{path:"/《前端》笔记《框架》/01.vue2/35.事件修饰符.html",redirect:"/pages/204695/"},{name:"v-13f19377",path:"/pages/7482ad/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-13f19377").then(t)}},{path:"/pages/7482ad/index.html",redirect:"/pages/7482ad/"},{path:"/《前端》笔记《框架》/01.vue2/36.打包上线.html",redirect:"/pages/7482ad/"},{name:"v-b5437a8e",path:"/pages/fecc7b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b5437a8e").then(t)}},{path:"/pages/fecc7b/index.html",redirect:"/pages/fecc7b/"},{path:"/《前端》笔记《框架》/01.vue2/37.事件.html",redirect:"/pages/fecc7b/"},{name:"v-cf95b010",path:"/pages/fab397/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-cf95b010").then(t)}},{path:"/pages/fab397/index.html",redirect:"/pages/fab397/"},{path:"/《前端》笔记《框架》/01.vue2/38.内容渲染 指令.html",redirect:"/pages/fab397/"},{name:"v-495bd5c0",path:"/pages/8a9dd8/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-495bd5c0").then(t)}},{path:"/pages/8a9dd8/index.html",redirect:"/pages/8a9dd8/"},{path:"/《前端》笔记《框架》/01.vue2/39.属性绑定 指令.html",redirect:"/pages/8a9dd8/"},{name:"v-52b85f76",path:"/pages/c1b76b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-52b85f76").then(t)}},{path:"/pages/c1b76b/index.html",redirect:"/pages/c1b76b/"},{path:"/《前端》笔记《框架》/01.vue2/40.事件绑定 指令.html",redirect:"/pages/c1b76b/"},{name:"v-38841f26",path:"/pages/823352/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-38841f26").then(t)}},{path:"/pages/823352/index.html",redirect:"/pages/823352/"},{path:"/《前端》笔记《框架》/01.vue2/41.双向绑定 指令.html",redirect:"/pages/823352/"},{name:"v-294fa810",path:"/pages/3f52b2/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-294fa810").then(t)}},{path:"/pages/3f52b2/index.html",redirect:"/pages/3f52b2/"},{path:"/《前端》笔记《框架》/01.vue2/42.条件渲染 指令.html",redirect:"/pages/3f52b2/"},{name:"v-0c811db3",path:"/pages/ff18e3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0c811db3").then(t)}},{path:"/pages/ff18e3/index.html",redirect:"/pages/ff18e3/"},{path:"/《前端》笔记《框架》/01.vue2/43.列表渲染 指令.html",redirect:"/pages/ff18e3/"},{name:"v-d67c0f5a",path:"/pages/e590af/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-d67c0f5a").then(t)}},{path:"/pages/e590af/index.html",redirect:"/pages/e590af/"},{path:"/《前端》笔记《框架》/01.vue2/44.登录.html",redirect:"/pages/e590af/"},{name:"v-eaa560e4",path:"/pages/fcfbbb/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-eaa560e4").then(t)}},{path:"/pages/fcfbbb/index.html",redirect:"/pages/fcfbbb/"},{path:"/《前端》笔记《框架》/01.vue2/45.权限控制-进度条.html",redirect:"/pages/fcfbbb/"},{name:"v-a9d48744",path:"/pages/48e461/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-a9d48744").then(t)}},{path:"/pages/48e461/index.html",redirect:"/pages/48e461/"},{path:"/《前端》笔记《框架》/02.vue3/00.介绍.html",redirect:"/pages/48e461/"},{name:"v-f54e7960",path:"/pages/10bec1/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-f54e7960").then(t)}},{path:"/pages/10bec1/index.html",redirect:"/pages/10bec1/"},{path:"/《前端》笔记《框架》/02.vue3/01.项目初始化.html",redirect:"/pages/10bec1/"},{name:"v-7c63b153",path:"/pages/f91db7/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-7c63b153").then(t)}},{path:"/pages/f91db7/index.html",redirect:"/pages/f91db7/"},{path:"/《前端》笔记《框架》/02.vue3/02.宏任务 & 微任务.html",redirect:"/pages/f91db7/"},{name:"v-1fea8f34",path:"/pages/623974/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1fea8f34").then(t)}},{path:"/pages/623974/index.html",redirect:"/pages/623974/"},{path:"/《前端》笔记《框架》/02.vue3/03.vite（脚手架工具）.html",redirect:"/pages/623974/"},{name:"v-697f26de",path:"/pages/d3846a/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-697f26de").then(t)}},{path:"/pages/d3846a/index.html",redirect:"/pages/d3846a/"},{path:"/《前端》笔记《框架》/02.vue3/05.过滤器.html",redirect:"/pages/d3846a/"},{name:"v-0b1c7a2c",path:"/pages/37b13e/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0b1c7a2c").then(t)}},{path:"/pages/37b13e/index.html",redirect:"/pages/37b13e/"},{path:"/《前端》笔记《框架》/02.vue3/04.API 接口案例.html",redirect:"/pages/37b13e/"},{name:"v-0322d3a6",path:"/pages/2eb382/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-0322d3a6").then(t)}},{path:"/pages/2eb382/index.html",redirect:"/pages/2eb382/"},{path:"/《前端》笔记《框架》/02.vue3/07.深度选择器.html",redirect:"/pages/2eb382/"},{name:"v-08599aca",path:"/pages/ad934f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-08599aca").then(t)}},{path:"/pages/ad934f/index.html",redirect:"/pages/ad934f/"},{path:"/《前端》笔记《框架》/02.vue3/06.组件.html",redirect:"/pages/ad934f/"},{name:"v-c6f6e3f6",path:"/pages/7d45b6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-c6f6e3f6").then(t)}},{path:"/pages/7d45b6/index.html",redirect:"/pages/7d45b6/"},{path:"/《前端》笔记《框架》/02.vue3/08.axios 全局配置.html",redirect:"/pages/7d45b6/"},{name:"v-2b560c46",path:"/pages/b7275b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-2b560c46").then(t)}},{path:"/pages/b7275b/index.html",redirect:"/pages/b7275b/"},{path:"/《前端》笔记《框架》/02.vue3/09.vue-router 4版本 第三方库.html",redirect:"/pages/b7275b/"},{name:"v-b62f781e",path:"/pages/6174e6/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b62f781e").then(t)}},{path:"/pages/6174e6/index.html",redirect:"/pages/6174e6/"},{path:"/《前端》笔记《框架》/02.vue3/10.组合式API.html",redirect:"/pages/6174e6/"},{name:"v-3e61e2e8",path:"/pages/8c2d46/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3e61e2e8").then(t)}},{path:"/pages/8c2d46/index.html",redirect:"/pages/8c2d46/"},{path:"/《前端》笔记《框架》/02.vue3/11.组件的生命周期 & 钩子函数.html",redirect:"/pages/8c2d46/"},{name:"v-14e52e21",path:"/pages/c8896f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-14e52e21").then(t)}},{path:"/pages/c8896f/index.html",redirect:"/pages/c8896f/"},{path:"/《前端》笔记《框架》/02.vue3/12.reactive 函数 & ref 函数.html",redirect:"/pages/c8896f/"},{name:"v-725dc806",path:"/pages/1e6c85/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-725dc806").then(t)}},{path:"/pages/1e6c85/index.html",redirect:"/pages/1e6c85/"},{path:"/《前端》笔记《框架》/02.vue3/13.toRef 函数 & toRefs 函数.html",redirect:"/pages/1e6c85/"},{name:"v-94faf56e",path:"/pages/fd5957/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-94faf56e").then(t)}},{path:"/pages/fd5957/index.html",redirect:"/pages/fd5957/"},{path:"/《前端》笔记《框架》/02.vue3/14.computed 函数.html",redirect:"/pages/fd5957/"},{name:"v-3c2557c5",path:"/pages/bf1d98/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3c2557c5").then(t)}},{path:"/pages/bf1d98/index.html",redirect:"/pages/bf1d98/"},{path:"/《前端》笔记《框架》/02.vue3/15.watch 函数.html",redirect:"/pages/bf1d98/"},{name:"v-fa3c31c8",path:"/pages/fce363/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-fa3c31c8").then(t)}},{path:"/pages/fce363/index.html",redirect:"/pages/fce363/"},{path:"/《前端》笔记《框架》/02.vue3/16.ref 引用.html",redirect:"/pages/fce363/"},{name:"v-66068836",path:"/pages/1e42a3/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-66068836").then(t)}},{path:"/pages/1e42a3/index.html",redirect:"/pages/1e42a3/"},{path:"/《前端》笔记《框架》/02.vue3/17.组件之间的数据共享.html",redirect:"/pages/1e42a3/"},{name:"v-74d65262",path:"/pages/6bcbc0/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-74d65262").then(t)}},{path:"/pages/6bcbc0/index.html",redirect:"/pages/6bcbc0/"},{path:"/《前端》笔记《框架》/02.vue3/18.v-model 语法糖.html",redirect:"/pages/6bcbc0/"},{name:"v-82317f6a",path:"/pages/d6e9fb/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-82317f6a").then(t)}},{path:"/pages/d6e9fb/index.html",redirect:"/pages/d6e9fb/"},{path:"/《前端》笔记《框架》/02.vue3/19.混入 (mixin) .html",redirect:"/pages/d6e9fb/"},{name:"v-cb60c634",path:"/pages/7fd07c/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-cb60c634").then(t)}},{path:"/pages/7fd07c/index.html",redirect:"/pages/7fd07c/"},{path:"/《前端》笔记《框架》/03.vue-element-admin/00.介绍.html",redirect:"/pages/7fd07c/"},{name:"v-b673deec",path:"/pages/796f85/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b673deec").then(t)}},{path:"/pages/796f85/index.html",redirect:"/pages/796f85/"},{path:"/《前端》笔记《框架》/03.vue-element-admin/01.项目初始化.html",redirect:"/pages/796f85/"},{name:"v-3561ff8f",path:"/pages/39d56d/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-3561ff8f").then(t)}},{path:"/pages/39d56d/index.html",redirect:"/pages/39d56d/"},{path:"/《前端》笔记《框架》/03.vue-element-admin/02.目录结构.html",redirect:"/pages/39d56d/"},{name:"v-1bf32c2a",path:"/pages/bc059f/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1bf32c2a").then(t)}},{path:"/pages/bc059f/index.html",redirect:"/pages/bc059f/"},{path:"/《前端》笔记《框架》/03.vue-element-admin/03.事件修饰符.html",redirect:"/pages/bc059f/"},{name:"v-e45063dc",path:"/pages/6503ff/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-e45063dc").then(t)}},{path:"/pages/6503ff/index.html",redirect:"/pages/6503ff/"},{path:"/《前端》笔记《框架》/03.vue-element-admin/04.静态路由、动态路由.html",redirect:"/pages/6503ff/"},{name:"v-22601e66",path:"/pages/e24c11/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-22601e66").then(t)}},{path:"/pages/e24c11/index.html",redirect:"/pages/e24c11/"},{path:"/《前端》笔记《框架》/04.uni-app/00.介绍.html",redirect:"/pages/e24c11/"},{name:"v-1888f947",path:"/pages/ddd057/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-1888f947").then(t)}},{path:"/pages/ddd057/index.html",redirect:"/pages/ddd057/"},{path:"/《前端》笔记《框架》/04.uni-app/01.自定义组件.html",redirect:"/pages/ddd057/"},{name:"v-11e4bf49",path:"/pages/eb9fff/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-11e4bf49").then(t)}},{path:"/pages/eb9fff/index.html",redirect:"/pages/eb9fff/"},{path:"/《前端》笔记《框架》/04.uni-app/02.uni-ui.html",redirect:"/pages/eb9fff/"},{name:"v-b2286a6e",path:"/pages/bdf18b/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-b2286a6e").then(t)}},{path:"/pages/bdf18b/index.html",redirect:"/pages/bdf18b/"},{path:"/《前端》笔记《框架》/04.uni-app/03.vuex.html",redirect:"/pages/bdf18b/"},{name:"v-9869b040",path:"/pages/c382fc/",component:Vs,beforeEnter:function(n,e,t){Wo("Layout","v-9869b040").then(t)}},{path:"/pages/c382fc/index.html",redirect:"/pages/c382fc/"},{path:"/《前端》笔记《框架》/04.uni-app/04.项目初始化.html",redirect:"/pages/c382fc/"},{path:"*",component:Vs}],Gs={title:"",description:"",base:"/bks-vuepress/",headTags:[["link",{rel:"shortcut icon",href:"https://symbol-node.oss-cn-shanghai.aliyuncs.com/blog/basic/favicon.ico"}],["script",{async:!0,crossorigin:"anonymous",src:"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1725717718088510"}],["link",{rel:"stylesheet",href:"/bks-vuepress//at.alicdn.com/t/font_3114978_qe0b39no76.css"}],["meta",{name:"referrer",content:"no-referrer-when-downgrade"}],["meta",{name:"keywords",content:"白开水-先生blog,Go,Golang开发,VuePress搭建,记录生活和技术路程"}],["meta",{name:"google-site-verification",content:"JfM7Cg2a2jlGXV2PfkH7sIRWZmcTa1aDCOHMaQH2UuE"}],["meta",{name:"theme-color",content:"#11a8cd"}],["script",{},'var _hmt = _hmt || [];\n(function() {\n  var hm = document.createElement("script");\n  hm.src = "https://hm.baidu.com/hm.js?4cd746698b2a13cb0c902d7ba1b5b57f";\n  var s = document.getElementsByTagName("script")[0]; \n  s.parentNode.insertBefore(hm, s);\n})();']],pages:[{title:"HTML",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/01.HTML"}},title:"HTML",permalink:"/note/HTML/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-26T15:05:00.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/01.HTML.html",relativePath:"00.nav/01.前端/01.基础知识/01.HTML.md",key:"v-114ebabf",path:"/note/HTML/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"CSS",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/02.CSS"}},title:"CSS",permalink:"/note/CSS/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-26T15:05:00.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/02.CSS.html",relativePath:"00.nav/01.前端/01.基础知识/02.CSS.md",key:"v-149b409a",path:"/note/CSS/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"JS",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/03.JS"}},title:"JS",permalink:"/note/JS/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-26T15:05:00.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/03.JS.html",relativePath:"00.nav/01.前端/01.基础知识/03.JS.md",key:"v-ee5ba5f2",path:"/note/JS/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"WebAPI",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/04.WebAPI"}},title:"WebAPI",permalink:"/note/WebAPI/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-26T15:05:00.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/04.WebAPI.html",relativePath:"00.nav/01.前端/01.基础知识/04.WebAPI.md",key:"v-06b57d62",path:"/note/WebAPI/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"移动 web 开发",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/05.移动 web 开发"}},title:"移动 web 开发",permalink:"/note/mobileWeb/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T14:09:48.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91%20copy.html",relativePath:"00.nav/01.前端/01.基础知识/05.移动 web 开发 copy.md",key:"v-22143aa3",path:"/note/mobileWeb/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"原生微信小程序",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/06.原生微信小程序"}},title:"原生微信小程序",permalink:"/note/wx/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T13:57:20.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F.html",relativePath:"00.nav/01.前端/01.基础知识/06.原生微信小程序.md",key:"v-45cab77c",path:"/note/wx/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"vue2",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《框架》/01.vue2"}},title:"vue2",permalink:"/note/vue2/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/02.%E6%A1%86%E6%9E%B6/01.vue2.html",relativePath:"00.nav/01.前端/02.框架/01.vue2.md",key:"v-77218b72",path:"/note/vue2/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"vue3",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《框架》/02.vue3"}},title:"vue3",permalink:"/note/vue3/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:55.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/02.%E6%A1%86%E6%9E%B6/02.vue3.html",relativePath:"00.nav/01.前端/02.框架/02.vue3.md",key:"v-82faadf2",path:"/note/vue3/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"vue-element-admin",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《框架》/03.vue-element-admin"}},title:"vue-element-admin",permalink:"/note/vue-element-admin/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:58:06.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/02.%E6%A1%86%E6%9E%B6/03.vue-element-admin.html",relativePath:"00.nav/01.前端/02.框架/03.vue-element-admin.md",key:"v-40ef500e",path:"/note/vue-element-admin/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"uni-app",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《框架》/04.uni-app"}},title:"uni-app",date:"2020-02-04T12:16:12.000Z",permalink:"/note/uni-app/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/02.%E6%A1%86%E6%9E%B6/04.uni-app.html",relativePath:"00.nav/01.前端/02.框架/04.uni-app.md",key:"v-630cfd39",path:"/note/uni-app/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"JQuery",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《库》/01.JQuery"}},title:"JQuery",permalink:"/note/JQuery/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/03.%E5%BA%93/01.JQuery.html",relativePath:"00.nav/01.前端/03.库/01.JQuery.md",key:"v-d94d81dc",path:"/note/JQuery/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"EChart",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《库》/02.EChart"}},title:"EChart",permalink:"/note/EChart/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:55.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/03.%E5%BA%93/02.EChart.html",relativePath:"00.nav/01.前端/03.库/02.EChart.md",key:"v-796a6452",path:"/note/EChart/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"Element-ui",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《库》/03.Element-ui"}},title:"Element-ui",permalink:"/note/Element-ui/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:58:06.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/03.%E5%BA%93/03.Element-ui.html",relativePath:"00.nav/01.前端/03.库/03.Element-ui.md",key:"v-18e4d532",path:"/note/Element-ui/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"其它",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/01.其它"}},title:"其它",permalink:"/note/other/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/01.%E5%85%B6%E5%AE%83.html",relativePath:"00.nav/01.前端/04.其它/01.其它.md",key:"v-e23b3e5a",path:"/note/other/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"报错分析",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/02.报错分析"}},title:"报错分析",permalink:"/note/errorAnalysis/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/02.%E6%8A%A5%E9%94%99%E5%88%86%E6%9E%90.html",relativePath:"00.nav/01.前端/04.其它/02.报错分析.md",key:"v-87e2adce",path:"/note/errorAnalysis/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"编码规范",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/03.编码规范"}},title:"编码规范",permalink:"/note/codingSpecification/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/03.%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83.html",relativePath:"00.nav/01.前端/04.其它/03.编码规范.md",key:"v-5b3db7c2",path:"/note/codingSpecification/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"部署",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/04.部署"}},title:"部署",permalink:"/note/deployment/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/04.%E9%83%A8%E7%BD%B2.html",relativePath:"00.nav/01.前端/04.其它/04.部署.md",key:"v-2631246c",path:"/note/deployment/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"远程仓库",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/05.远程仓库"}},title:"远程仓库",permalink:"/note/remoteStore/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/05.%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.html",relativePath:"00.nav/01.前端/04.其它/05.远程仓库.md",key:"v-7f548e0b",path:"/note/remoteStore/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"api 工厂",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/06.api 工厂"}},title:"api 工厂",permalink:"/note/apiFactory/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/06.api%20%E5%B7%A5%E5%8E%82.html",relativePath:"00.nav/01.前端/04.其它/06.api 工厂.md",key:"v-8bf89420",path:"/note/apiFactory/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"SASS",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/07.SASS"}},title:"SASS",permalink:"/note/SASS/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/07.SASS.html",relativePath:"00.nav/01.前端/04.其它/07.SASS.md",key:"v-66aecfa0",path:"/note/SASS/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"VuePress",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/08.VuePress"}},title:"VuePress",permalink:"/note/VuePress/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/08.VuePress.html",relativePath:"00.nav/01.前端/04.其它/08.VuePress.md",key:"v-130c26d4",path:"/note/VuePress/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"webpack",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/09.webpack"}},title:"webpack",permalink:"/note/webpack/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z",readingShow:"top"},regularPath:"/00.nav/01.%E5%89%8D%E7%AB%AF/04.%E5%85%B6%E5%AE%83/09.webpack.html",relativePath:"00.nav/01.前端/04.其它/09.webpack.md",key:"v-1de594e2",path:"/note/webpack/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"前端",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"00.nav/01.前端"}},title:"前端",date:"2020-03-11T21:50:53.000Z",permalink:"/web/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/01.%E7%9B%AE%E5%BD%95/01.%E5%89%8D%E7%AB%AF.html",relativePath:"01.目录/01.前端.md",key:"v-a6b62df2",path:"/web/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"页面",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"02.页面",imgUrl:"/img/ui.png",description:"html(5)/css(3)，前端页面相关技术"}},title:"页面",date:"2020-03-11T21:50:54.000Z",permalink:"/ui/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/01.%E7%9B%AE%E5%BD%95/02.%E9%A1%B5%E9%9D%A2.html",relativePath:"01.目录/02.页面.md",key:"v-2030046c",path:"/ui/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"技术",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"03.技术",imgUrl:"/img/other.png",description:"技术文档、教程、技巧、总结等文章"}},title:"技术",date:"2020-03-11T21:50:55.000Z",permalink:"/technology/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/01.%E7%9B%AE%E5%BD%95/03.%E6%8A%80%E6%9C%AF.html",relativePath:"01.目录/03.技术.md",key:"v-71ef98c3",path:"/technology/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"更多",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"04.更多",imgUrl:"/img/more.png",description:"学习、面试、在线工具等更多文章和页面"}},title:"更多",date:"2020-03-11T21:50:56.000Z",permalink:"/more/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/01.%E7%9B%AE%E5%BD%95/04.%E6%9B%B4%E5%A4%9A.html",relativePath:"01.目录/04.更多.md",key:"v-727a5c1b",path:"/more/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1,readingShow:"top"},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-098f9cf6",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"数据处理",frontmatter:{title:"数据处理",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/734b1d/",categories:["《前端》笔记《其它》","其它"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/01.%E5%85%B6%E5%AE%83/01.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86.html",relativePath:"《前端》笔记《其它》/01.其它/01.数据处理.md",key:"v-5127404f",path:"/pages/734b1d/",headers:[{level:2,title:"（一）筛选出元素对象 categoryId 为 '263919', '263920', ... 的属性，并且 this.goodsList 的每个元素长度不能超过 6",slug:"一-筛选出元素对象-categoryid-为-263919-263920-的属性-并且-this-goodslist-的每个元素长度不能超过-6",normalizedTitle:"（一）筛选出元素对象 categoryid 为 '263919', '263920', ... 的属性，并且 this.goodslist 的每个元素长度不能超过 6",charIndex:767},{level:2,title:"（二）筛选出数组中元素对象所拥有的某个属性值",slug:"二-筛选出数组中元素对象所拥有的某个属性值",normalizedTitle:"（二）筛选出数组中元素对象所拥有的某个属性值",charIndex:1296},{level:2,title:"替换属性名",slug:"替换属性名",normalizedTitle:"替换属性名",charIndex:2527},{level:2,title:"（一）",slug:"一",normalizedTitle:"（一）",charIndex:767},{level:2,title:"（二）",slug:"二",normalizedTitle:"（二）",charIndex:1296}],headersStr:"（一）筛选出元素对象 categoryId 为 '263919', '263920', ... 的属性，并且 this.goodsList 的每个元素长度不能超过 6 （二）筛选出数组中元素对象所拥有的某个属性值 替换属性名 （一） （二）",content:"# 一、将 一维数组 格式化为 二维数组\n\n需求： 将原数据转换为以每五个成员为一个数组的数组\n\n原数据：\n\n[{id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}]\n\n\n1\n\n\n新数据：\n\n[\n  [{id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}],\n  [{id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}]\n]\n\n\n1\n2\n3\n4\n\n\n原理：\n\n 1. 使用 slice 方法截取数据\n 2. 再将返回的新数组 push 到新的变量中\n 3. 使用 for 循环重复以上步骤\n\n例：\n\nasync getFloorList() {\n const { data: res } = await uni.$http.get( '/banner/list', {\n   type: 'fruit, drinks'\n } )\n \n let data = res.data\n let newData = []\n let j = 5\n for ( let i = 0; i < data.length; i += 5 ) {\n   newData.push( data.slice( i, j ) )\n   j += 5\n }\n\n if ( res.msg !== 'success' ) return uni.$showMsg()\n\n this.floorList = newData\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 二、筛选出数组中元素对象所拥有的某个属性值\n\n\n# （一）筛选出元素对象 categoryId 为 '263919', '263920', ... 的属性，并且 this.goodsList 的每个元素长度不能超过 6\n\n原数据：\n\n新数据：\n\ngetGoodsList() {\n  const categoryId = ['263919', '263920', '263921', '263923', '269499', '263924', '263925', '263926', '263927', '263975']\n  this.axios\n    .post('/shop/goods/list/v2', {\n      categoryId: categoryId,\n    })\n    .then(res => {\n      this.goodsList = categoryId.map(item => {\n        return (res.result || []).filter(item1 => item1.categoryId == item).slice(0, 6)\n      })\n    })\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# （二）筛选出数组中元素对象所拥有的某个属性值\n\nthis.employeeList = result.rows.map(item => item.username)\n\n\n1\n\n\n\n# 三、将数组列表数据格式化成树形结构\n\n如：\n\n// 格式化前\n[\n  { id: 1, pid: '', text: '菜单1' },\n  { id: 11, pid: 1, text: '菜单1-1' },\n  { id: 12, pid: 1, text: '菜单1-2' },\n  { id: 2, pid: '', text: '菜单2' },\n  { id: 21, pid: 2, text: '菜单2-1' },\n]\n\n// 格式化后\n[\n  {\n    id: 1, pid: '', text: '菜单1', children: [\n      { id: 11, pid: 1, text: '菜单1-1' },\n      { id: 12, pid: 1, text: '菜单1-2' },\n    ]\n  },\n  {\n    id: 2, pid: '', text: '菜单2', children: [\n      { id: 21, pid: 2, text: '菜单2-1' },\n    ]\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n原理： 递归算法\n\n（1） 定义方法（-- utils/dataConvert.js）\n\n// 将数组数据转换成树形结构\nexport function tranListToTreeData(list, rootValue) { // （参数一【Array】： 数据）（参数二【String】：根值。分别顶层节点的值）\n  var arr = []\n  list.forEach(item => {\n    if (item.pid === rootValue) {\n      const children = tranListToTreeData(list, item.id)\n      if (children.length) {\n        item.children = children\n      }\n      arr.push(item)\n    }\n  })\n  return arr\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n（2）导入方法（-- 组件）\n\nimport { tranListToTreeData } from '@/utils/dataConvert.js'\n\n\n1\n\n\n（2）调用方法（-- 同上）\n\nthis.departs = tranListToTreeData(result.depts, '')\n\n\n1\n\n\n\n# 替换属性名\n\n\b如：\n\n// 转换前：\n[\n  {\n    姓名: 1,\n    手机号: 2,\n    工号: 3,\n  },\n]\n\n// 转换后：\n[\n  {\n    name: 1,\n    mobile: 2,\n  },\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n----------------------------------------\n\nsuccess({ results }) {\n  // 格式：【旧属性：新属性】\n  const relations = {\n    '姓名': 'timeOfEntry',\n    '手机号': 'mobile',\n    '工号': 'workNumber',\n  }\n  /* 数据格式化。替换属性名\n  转换前：\n  [\n    {\n      姓名: 1,\n      手机号: 2,\n      工号: 3,\n    },\n  ]\n  转换后：\n  [\n    {\n      name: 1,\n      mobile: 2,\n      workNumber: 3,\n    },\n  ]\n  */\n  var newArr = results.map(item => {\n    var userInfo = {}\n    Object.keys(item).forEach(key => {\n      userInfo[relations[key]] = item[key]\n    })\n    return userInfo\n  })\n\n  // 调用接口批量添加用户\n  await importEmployee(newArr)\n  this.$message.success('导入 excel 成功')\n  this.$router.back()\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n# 四、将数组中对象类型的成员格式化成数组类型的成员 && 筛选出指定的属性 && 成员中的数据按照规定的顺序排列 && 去掉成员中的数据 key 只保留\n\n数据转换前后对比：\n\n// 格式化前\ndata: [\n  {username: '张三', mobile: 123456, age: 18, demo: 1},\n  {username: '李四', mobile: 123456, age: 18, demo: 1},\n  {username: '王五', mobile: 123456, age: 18, demo: 1},\n]\n\n// 格式化后\nnewData: [\n  ['张三', 18, 123456],\n  ['李四', 18, 123456],\n  ['王五', 18, 123456],\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n实现步骤：\n\nconst order = ['username', 'age', 'mobile']\n// 格式化数据：将数组中对象类型的成员格式化成数组类型的成员 && 筛选出指定的属性 && 成员中的数据按照规定的顺序排列 && 去掉成员中的数据 key 只保留 value\nconst newData = data.map(item => Object.keys(order).map(key => item[order[key]]))\n\n\n1\n2\n3\n\n\n\n# 五、格式化时间\n\n\n# （一）\n\n// 格式化前\ndata: 2018-11-02T08:00:00.000+0000\n\n// 格式化后\nnewData: 2018-11\n\n\n1\n2\n3\n4\n5\n\n\n（1）导入方法（-- filters 文件由老师提供）\n\nimport { formatDate } from '@/filters'\n\n\n1\n\n\n（2）调用方法\n\nconst newData = formatDate(data)\n\n\n1\n\n\n\n# （二）\n\n// 格式化前：\n43535\n\n// 格式化后：\n2019-09-09T16:00:00.000Z\n\n\n1\n2\n3\n4\n5\n\n\n（1）将以下方法复制到 methods 中（-- @/view/import/index.vue; methods 配置项）\n\n/* 格式化 excel 的日期\n格式化前：\n  43535\n\n格式化后：\n  2019-03-10\n*/\nformatDate(numb, format) {\n  const time = new Date((numb - 1) * 24 * 3600000 + 1)\n  time.setYear(time.getFullYear() - 70)\n  const year = time.getFullYear() + ''\n  const month = time.getMonth() + 1 + ''\n  const date = time.getDate() - 1 + ''\n  if (format && format.length === 1) {\n    return year + format + month + format + date\n  }\n  return year + (month < 10 ? '0' + month : month) + (date < 10 ? '0' + date : date)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n（2）调用 formatDate 方法（-- 同上）\n\n-- 换（旧）\nObject.keys(item).forEach(key => {\n  userInfo[relations[key]] = item[key]\n})\n--\n\n-- 换（新）\nObject.keys(item).forEach(key => {\n  if (relations[key] === 'timeOfEntry' || relations[key] === 'correctionTime') {\n    userInfo[relations[key]] = new Date(this.formatDate(item[key], '/'))\n  } else {\n    userInfo[relations[key]] = item[key]\n  }\n})\n--\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 六、通过枚举数据格式化字段数据\n\n使用场景： 该字段响应的数据为 1，需要把这个 1 变为特定的格式，如字段值为 1，则格式化为 正式\n\n（1）定义枚举数据（枚举数据：字段的值根据枚举数据进行变化）（-- @/api/新建 constant/employees.js） 枚举数据：\n\nexport default {\n  // 聘用形式\n  hireType: [\n    {\n      id: 1,\n      value: '正式'\n    },\n    {\n      id: 2,\n      value: '非正式'\n    }\n  ],\n  // 在职状态\n  workingState: [\n    {\n      id: '1',\n      value: '在职'\n    },\n    {\n      id: '2',\n      value: '离职'\n    }\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n（2）导入枚举数据（-- 组件）\n\nimport EmployeeEnum from '@/api/constant/employees'\n\n\n1\n\n\n（4）定义格式化方法（-- 同上）\n\n！！！以下代码需要进行完善，使其看起来更加清晰、简单\n\n// 格式化 聘用字段的数据\nif (order[key] === 'formOfEmployment') {\n  const obj = EmployeeEnum.hireType.find(obj => obj.id === item[order[key]])\n  return obj ? obj.value : '未知'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 修改数组中元素对象的属性名\n\n\b如：\n\n// 转换前：\n[\n  {\n    姓名: 1,\n    手机号: 2,\n    工号: 3,\n  },\n]\n\n// 转换后：\n[\n  {\n    name: 1,\n    mobile: 2,\n  },\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n----------------------------------------\n\nsuccess({ header, results }) { // 上传文件成功后触发\n  // header：字段 【type：Array】\n  // results：字段数据 【type：Array】\n\n  -- 增\n  // 格式：【旧属性：新属性】\n  const relations = {\n    '姓名': 'username',\n    '手机号': 'mobile',\n    '工号': 'workNumber',\n  }\n  /* 数据格式化。替换属性名\n  转换前：\n  [\n    {\n      姓名: 1,\n      手机号: 2,\n      工号: 3,\n    },\n  ]\n  转换后：\n  [\n    {\n      name: 1,\n      mobile: 2,\n      workNumber: 3,\n    },\n  ]\n  */\n  var newArr = results.map(item => {\n    var userInfo = {}\n    Object.keys(item).forEach(key => {\n      userInfo[relations[key]] = item[key]\n    })\n    return userInfo\n  })\n\n  // 调用接口批量添加用户\n  await importEmployee(newArr)\n\n  this.$message.success('导入 excel 成功')\n  this.$router.back()\n  --\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n",normalizedContent:"# 一、将 一维数组 格式化为 二维数组\n\n需求： 将原数据转换为以每五个成员为一个数组的数组\n\n原数据：\n\n[{id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}]\n\n\n1\n\n\n新数据：\n\n[\n  [{id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}],\n  [{id: 1}, {id: 1}, {id: 1}, {id: 1}, {id: 1}]\n]\n\n\n1\n2\n3\n4\n\n\n原理：\n\n 1. 使用 slice 方法截取数据\n 2. 再将返回的新数组 push 到新的变量中\n 3. 使用 for 循环重复以上步骤\n\n例：\n\nasync getfloorlist() {\n const { data: res } = await uni.$http.get( '/banner/list', {\n   type: 'fruit, drinks'\n } )\n \n let data = res.data\n let newdata = []\n let j = 5\n for ( let i = 0; i < data.length; i += 5 ) {\n   newdata.push( data.slice( i, j ) )\n   j += 5\n }\n\n if ( res.msg !== 'success' ) return uni.$showmsg()\n\n this.floorlist = newdata\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 二、筛选出数组中元素对象所拥有的某个属性值\n\n\n# （一）筛选出元素对象 categoryid 为 '263919', '263920', ... 的属性，并且 this.goodslist 的每个元素长度不能超过 6\n\n原数据：\n\n新数据：\n\ngetgoodslist() {\n  const categoryid = ['263919', '263920', '263921', '263923', '269499', '263924', '263925', '263926', '263927', '263975']\n  this.axios\n    .post('/shop/goods/list/v2', {\n      categoryid: categoryid,\n    })\n    .then(res => {\n      this.goodslist = categoryid.map(item => {\n        return (res.result || []).filter(item1 => item1.categoryid == item).slice(0, 6)\n      })\n    })\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# （二）筛选出数组中元素对象所拥有的某个属性值\n\nthis.employeelist = result.rows.map(item => item.username)\n\n\n1\n\n\n\n# 三、将数组列表数据格式化成树形结构\n\n如：\n\n// 格式化前\n[\n  { id: 1, pid: '', text: '菜单1' },\n  { id: 11, pid: 1, text: '菜单1-1' },\n  { id: 12, pid: 1, text: '菜单1-2' },\n  { id: 2, pid: '', text: '菜单2' },\n  { id: 21, pid: 2, text: '菜单2-1' },\n]\n\n// 格式化后\n[\n  {\n    id: 1, pid: '', text: '菜单1', children: [\n      { id: 11, pid: 1, text: '菜单1-1' },\n      { id: 12, pid: 1, text: '菜单1-2' },\n    ]\n  },\n  {\n    id: 2, pid: '', text: '菜单2', children: [\n      { id: 21, pid: 2, text: '菜单2-1' },\n    ]\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n原理： 递归算法\n\n（1） 定义方法（-- utils/dataconvert.js）\n\n// 将数组数据转换成树形结构\nexport function tranlisttotreedata(list, rootvalue) { // （参数一【array】： 数据）（参数二【string】：根值。分别顶层节点的值）\n  var arr = []\n  list.foreach(item => {\n    if (item.pid === rootvalue) {\n      const children = tranlisttotreedata(list, item.id)\n      if (children.length) {\n        item.children = children\n      }\n      arr.push(item)\n    }\n  })\n  return arr\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n（2）导入方法（-- 组件）\n\nimport { tranlisttotreedata } from '@/utils/dataconvert.js'\n\n\n1\n\n\n（2）调用方法（-- 同上）\n\nthis.departs = tranlisttotreedata(result.depts, '')\n\n\n1\n\n\n\n# 替换属性名\n\n\b如：\n\n// 转换前：\n[\n  {\n    姓名: 1,\n    手机号: 2,\n    工号: 3,\n  },\n]\n\n// 转换后：\n[\n  {\n    name: 1,\n    mobile: 2,\n  },\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n----------------------------------------\n\nsuccess({ results }) {\n  // 格式：【旧属性：新属性】\n  const relations = {\n    '姓名': 'timeofentry',\n    '手机号': 'mobile',\n    '工号': 'worknumber',\n  }\n  /* 数据格式化。替换属性名\n  转换前：\n  [\n    {\n      姓名: 1,\n      手机号: 2,\n      工号: 3,\n    },\n  ]\n  转换后：\n  [\n    {\n      name: 1,\n      mobile: 2,\n      worknumber: 3,\n    },\n  ]\n  */\n  var newarr = results.map(item => {\n    var userinfo = {}\n    object.keys(item).foreach(key => {\n      userinfo[relations[key]] = item[key]\n    })\n    return userinfo\n  })\n\n  // 调用接口批量添加用户\n  await importemployee(newarr)\n  this.$message.success('导入 excel 成功')\n  this.$router.back()\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n# 四、将数组中对象类型的成员格式化成数组类型的成员 && 筛选出指定的属性 && 成员中的数据按照规定的顺序排列 && 去掉成员中的数据 key 只保留\n\n数据转换前后对比：\n\n// 格式化前\ndata: [\n  {username: '张三', mobile: 123456, age: 18, demo: 1},\n  {username: '李四', mobile: 123456, age: 18, demo: 1},\n  {username: '王五', mobile: 123456, age: 18, demo: 1},\n]\n\n// 格式化后\nnewdata: [\n  ['张三', 18, 123456],\n  ['李四', 18, 123456],\n  ['王五', 18, 123456],\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n实现步骤：\n\nconst order = ['username', 'age', 'mobile']\n// 格式化数据：将数组中对象类型的成员格式化成数组类型的成员 && 筛选出指定的属性 && 成员中的数据按照规定的顺序排列 && 去掉成员中的数据 key 只保留 value\nconst newdata = data.map(item => object.keys(order).map(key => item[order[key]]))\n\n\n1\n2\n3\n\n\n\n# 五、格式化时间\n\n\n# （一）\n\n// 格式化前\ndata: 2018-11-02t08:00:00.000+0000\n\n// 格式化后\nnewdata: 2018-11\n\n\n1\n2\n3\n4\n5\n\n\n（1）导入方法（-- filters 文件由老师提供）\n\nimport { formatdate } from '@/filters'\n\n\n1\n\n\n（2）调用方法\n\nconst newdata = formatdate(data)\n\n\n1\n\n\n\n# （二）\n\n// 格式化前：\n43535\n\n// 格式化后：\n2019-09-09t16:00:00.000z\n\n\n1\n2\n3\n4\n5\n\n\n（1）将以下方法复制到 methods 中（-- @/view/import/index.vue; methods 配置项）\n\n/* 格式化 excel 的日期\n格式化前：\n  43535\n\n格式化后：\n  2019-03-10\n*/\nformatdate(numb, format) {\n  const time = new date((numb - 1) * 24 * 3600000 + 1)\n  time.setyear(time.getfullyear() - 70)\n  const year = time.getfullyear() + ''\n  const month = time.getmonth() + 1 + ''\n  const date = time.getdate() - 1 + ''\n  if (format && format.length === 1) {\n    return year + format + month + format + date\n  }\n  return year + (month < 10 ? '0' + month : month) + (date < 10 ? '0' + date : date)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n（2）调用 formatdate 方法（-- 同上）\n\n-- 换（旧）\nobject.keys(item).foreach(key => {\n  userinfo[relations[key]] = item[key]\n})\n--\n\n-- 换（新）\nobject.keys(item).foreach(key => {\n  if (relations[key] === 'timeofentry' || relations[key] === 'correctiontime') {\n    userinfo[relations[key]] = new date(this.formatdate(item[key], '/'))\n  } else {\n    userinfo[relations[key]] = item[key]\n  }\n})\n--\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 六、通过枚举数据格式化字段数据\n\n使用场景： 该字段响应的数据为 1，需要把这个 1 变为特定的格式，如字段值为 1，则格式化为 正式\n\n（1）定义枚举数据（枚举数据：字段的值根据枚举数据进行变化）（-- @/api/新建 constant/employees.js） 枚举数据：\n\nexport default {\n  // 聘用形式\n  hiretype: [\n    {\n      id: 1,\n      value: '正式'\n    },\n    {\n      id: 2,\n      value: '非正式'\n    }\n  ],\n  // 在职状态\n  workingstate: [\n    {\n      id: '1',\n      value: '在职'\n    },\n    {\n      id: '2',\n      value: '离职'\n    }\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n（2）导入枚举数据（-- 组件）\n\nimport employeeenum from '@/api/constant/employees'\n\n\n1\n\n\n（4）定义格式化方法（-- 同上）\n\n！！！以下代码需要进行完善，使其看起来更加清晰、简单\n\n// 格式化 聘用字段的数据\nif (order[key] === 'formofemployment') {\n  const obj = employeeenum.hiretype.find(obj => obj.id === item[order[key]])\n  return obj ? obj.value : '未知'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 修改数组中元素对象的属性名\n\n\b如：\n\n// 转换前：\n[\n  {\n    姓名: 1,\n    手机号: 2,\n    工号: 3,\n  },\n]\n\n// 转换后：\n[\n  {\n    name: 1,\n    mobile: 2,\n  },\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n----------------------------------------\n\nsuccess({ header, results }) { // 上传文件成功后触发\n  // header：字段 【type：array】\n  // results：字段数据 【type：array】\n\n  -- 增\n  // 格式：【旧属性：新属性】\n  const relations = {\n    '姓名': 'username',\n    '手机号': 'mobile',\n    '工号': 'worknumber',\n  }\n  /* 数据格式化。替换属性名\n  转换前：\n  [\n    {\n      姓名: 1,\n      手机号: 2,\n      工号: 3,\n    },\n  ]\n  转换后：\n  [\n    {\n      name: 1,\n      mobile: 2,\n      worknumber: 3,\n    },\n  ]\n  */\n  var newarr = results.map(item => {\n    var userinfo = {}\n    object.keys(item).foreach(key => {\n      userinfo[relations[key]] = item[key]\n    })\n    return userinfo\n  })\n\n  // 调用接口批量添加用户\n  await importemployee(newarr)\n\n  this.$message.success('导入 excel 成功')\n  this.$router.back()\n  --\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1,readingShow:"top"},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-39d35216",path:"/archives/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"图片格式",frontmatter:{title:"图片格式",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/efd4a3/",categories:["《前端》笔记《其它》","其它"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/01.%E5%85%B6%E5%AE%83/02.%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F.html",relativePath:"《前端》笔记《其它》/01.其它/02.图片格式.md",key:"v-1b4d934a",path:"/pages/efd4a3/",headersStr:null,content:"1、DPG图片压缩技术（推荐） 京东自主研发推出DPG图片压缩技术，经测试该技术，可直接节省用户近50%的浏览流量，极大的提升了用户的网页打开速度。能够兼容jpeg，实现全平台、全部浏览器的兼容支持，经过内部和外部上万张图片的人眼浏览测试后发现，压缩后的图片和webp的清晰度对比没有差距。\n\n2、webp 谷歌开发的一种旨在加快图片加载速度的图片格式。图片压缩体积大约只有JPEG的2/3，并能节省大量的服务器宽带资源和数据空间\n\n3、svg 矢量图，放大缩小都不会失真",normalizedContent:"1、dpg图片压缩技术（推荐） 京东自主研发推出dpg图片压缩技术，经测试该技术，可直接节省用户近50%的浏览流量，极大的提升了用户的网页打开速度。能够兼容jpeg，实现全平台、全部浏览器的兼容支持，经过内部和外部上万张图片的人眼浏览测试后发现，压缩后的图片和webp的清晰度对比没有差距。\n\n2、webp 谷歌开发的一种旨在加快图片加载速度的图片格式。图片压缩体积大约只有jpeg的2/3，并能节省大量的服务器宽带资源和数据空间\n\n3、svg 矢量图，放大缩小都不会失真",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"项目开发流程",frontmatter:{title:"项目开发流程",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/343d6d/",categories:["《前端》笔记《其它》","其它"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/01.%E5%85%B6%E5%AE%83/03.%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B.html",relativePath:"《前端》笔记《其它》/01.其它/03.项目开发流程.md",key:"v-3545b6d6",path:"/pages/343d6d/",headersStr:null,content:"项目开发流程： 一、需求会议 （1）需求讨论 （2）工期\n\n前后端定义接口文档 （1）响应数据结构 （2）请求数据结构\n\n二、前端小组讨论 （1）分工 （2）技术选型\n\n三、开发阶段 （1）产品：整理 客户/用户/老板 需求、设计原型图（交互效果）\n\n（2）设计：通过 原型图 设计 设计稿）\n\n（3）前端：通过 原型图、设计稿 和后端提供的数据，渲染页面 - 后端提供接口文档 - 功能开发 - 前后端联调 - 自测 - 功能审核（前端组长） - 打包构建交给测试\n\n（4）后端\n\n（5）测试：找 BUG、搭建测试环境 - 本地环境测试 - 测试环境测试 - 正式环境测试\n\n（6）产品确认\n\n（7）部署上线（后端）\n\n（6）运维\n\n项目准备工作 熟悉文档、查看原型、读懂需求 查看功能、设计稿 是否合理，如果不合理要提出 了解后台接口文档、前后端配合制定相关对接方案 观察哪些地方需要定义接口： - 列表渲染 - 点击互动 接口规范： 请求地址 请求方式 请求参数 - 参数的类型 - 参数的默认值 请求成功响应什么 - 响应的字段有哪些 - 字段的类型 请求失败响应什么 - 响应的字段有哪些 - 字段的类型 预估工作量",normalizedContent:"项目开发流程： 一、需求会议 （1）需求讨论 （2）工期\n\n前后端定义接口文档 （1）响应数据结构 （2）请求数据结构\n\n二、前端小组讨论 （1）分工 （2）技术选型\n\n三、开发阶段 （1）产品：整理 客户/用户/老板 需求、设计原型图（交互效果）\n\n（2）设计：通过 原型图 设计 设计稿）\n\n（3）前端：通过 原型图、设计稿 和后端提供的数据，渲染页面 - 后端提供接口文档 - 功能开发 - 前后端联调 - 自测 - 功能审核（前端组长） - 打包构建交给测试\n\n（4）后端\n\n（5）测试：找 bug、搭建测试环境 - 本地环境测试 - 测试环境测试 - 正式环境测试\n\n（6）产品确认\n\n（7）部署上线（后端）\n\n（6）运维\n\n项目准备工作 熟悉文档、查看原型、读懂需求 查看功能、设计稿 是否合理，如果不合理要提出 了解后台接口文档、前后端配合制定相关对接方案 观察哪些地方需要定义接口： - 列表渲染 - 点击互动 接口规范： 请求地址 请求方式 请求参数 - 参数的类型 - 参数的默认值 请求成功响应什么 - 响应的字段有哪些 - 字段的类型 请求失败响应什么 - 响应的字段有哪些 - 字段的类型 预估工作量",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"自定义代码片段",frontmatter:{title:"自定义代码片段",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/70ac0f/",categories:["《前端》笔记《其它》","其它"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/01.%E5%85%B6%E5%AE%83/04.%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html",relativePath:"《前端》笔记《其它》/01.其它/04.自定义代码片段.md",key:"v-e01ae0a2",path:"/pages/70ac0f/",headersStr:null,content:'", " $1", "',normalizedContent:'", " $1", "',charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"Linux 命令",frontmatter:{title:"Linux 命令",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/699044/",categories:["《前端》笔记《其它》","其它"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/01.%E5%85%B6%E5%AE%83/05.Linux%20%E5%91%BD%E4%BB%A4.html",relativePath:"《前端》笔记《其它》/01.其它/05.Linux 命令.md",key:"v-f2fcc99a",path:"/pages/699044/",headers:[{level:2,title:"添加用户：adduser",slug:"添加用户-adduser-用户名",normalizedTitle:"添加用户：adduser",charIndex:58},{level:2,title:"临时使用超级管理员权限：sudo",slug:"临时使用超级管理员权限-sudo-命令",normalizedTitle:"临时使用超级管理员权限：sudo",charIndex:81},{level:2,title:"退出远程服务器：exit",slug:"退出远程服务器-exit",normalizedTitle:"退出远程服务器：exit",charIndex:107},{level:2,title:"删除目录：rm -rf",slug:"删除目录-rm-rf-目录名",normalizedTitle:"删除目录：rm -rf",charIndex:124},{level:2,title:"删除受保护的目录：rm -rf",slug:"删除受保护的目录-rm-rf-目录名",normalizedTitle:"删除受保护的目录：rm -rf",charIndex:146},{level:2,title:"打开文件（打开 vim 文本编辑器）（vi 编辑器的升级版）：vim",slug:"打开文件-打开-vim-文本编辑器-vi-编辑器的升级版-vim-文件名",normalizedTitle:"打开文件（打开 vim 文本编辑器）（vi 编辑器的升级版）：vim",charIndex:172},{level:3,title:"进入编辑模式：i",slug:"进入编辑模式-i",normalizedTitle:"进入编辑模式：i",charIndex:217},{level:2,title:"保存文件：[长按 esc + shift + ;] + w + 回车",slug:"保存文件-长按-esc-shift-w-回车",normalizedTitle:"保存文件：[长按 esc + shift + ;] + w + 回车",charIndex:230},{level:2,title:"不保存退出文件：[长按 esc + shift + ;] + q + 回车",slug:"不保存退出文件-长按-esc-shift-q-回车",normalizedTitle:"不保存退出文件：[长按 esc + shift + ;] + q + 回车",charIndex:269},{level:2,title:"保存退出文件：[长按 esc + shift + ;] + wq + 回车",slug:"保存退出文件-长按-esc-shift-wq-回车",normalizedTitle:"保存退出文件：[长按 esc + shift + ;] + wq + 回车",charIndex:311},{level:2,title:"强制保存退出文件：[长按 esc + shift + ;] + wq! + 回车",slug:"强制保存退出文件-长按-esc-shift-wq-回车",normalizedTitle:"强制保存退出文件：[长按 esc + shift + ;] + wq! + 回车",charIndex:353},{level:2,title:"复制文件：cp",slug:"复制文件-cp-要复制的文件-复制到哪个目录下",normalizedTitle:"复制文件：cp",charIndex:398},{level:2,title:"创建目录：mkdir",slug:"创建目录-mkdir-目录名",normalizedTitle:"创建目录：mkdir",charIndex:430},{level:2,title:"重命名文件或目录改名 或 将文件或目录移入其它位置",slug:"重命名文件或目录改名-或-将文件或目录移入其它位置",normalizedTitle:"重命名文件或目录改名 或 将文件或目录移入其它位置",charIndex:451},{level:2,title:"从客户端上传文件到服务端：rz",slug:"从客户端上传文件到服务端-rz",normalizedTitle:"从客户端上传文件到服务端：rz",charIndex:843},{level:2,title:"Ubuntu 系统中的包管理工具，类似 npm 包管理工具：apt-get",slug:"ubuntu-系统中的包管理工具-类似-npm-包管理工具-apt-get",normalizedTitle:"ubuntu 系统中的包管理工具，类似 npm 包管理工具：apt-get",charIndex:863},{level:3,title:"安装包：apt-get install",slug:"安装包-apt-get-install-包名",normalizedTitle:"安装包：apt-get install",charIndex:905},{level:3,title:"卸载包：apt-get remove",slug:"卸载包-apt-get-remove-包名",normalizedTitle:"卸载包：apt-get remove",charIndex:934},{level:3,title:"更新包：apt-get update",slug:"更新包-apt-get-update-包名",normalizedTitle:"更新包：apt-get update",charIndex:962},{level:2,title:"启动 nginx：nginx",slug:"启动-nginx-nginx",normalizedTitle:"启动 nginx：nginx",charIndex:1003},{level:2,title:"关闭 nginx：nginx -s stop",slug:"关闭-nginx-nginx-s-stop",normalizedTitle:"关闭 nginx：nginx -s stop",charIndex:1022},{level:2,title:"重启 nginx：nginx -s reload",slug:"重启-nginx-nginx-s-reload",normalizedTitle:"重启 nginx：nginx -s reload",charIndex:1049},{level:2,title:"检查语法：nginx -s reload",slug:"检查语法-nginx-s-reload",normalizedTitle:"检查语法：nginx -s reload",charIndex:1078}],headersStr:"添加用户：adduser 临时使用超级管理员权限：sudo 退出远程服务器：exit 删除目录：rm -rf 删除受保护的目录：rm -rf 打开文件（打开 vim 文本编辑器）（vi 编辑器的升级版）：vim 进入编辑模式：i 保存文件：[长按 esc + shift + ;] + w + 回车 不保存退出文件：[长按 esc + shift + ;] + q + 回车 保存退出文件：[长按 esc + shift + ;] + wq + 回车 强制保存退出文件：[长按 esc + shift + ;] + wq! + 回车 复制文件：cp 创建目录：mkdir 重命名文件或目录改名 或 将文件或目录移入其它位置 从客户端上传文件到服务端：rz Ubuntu 系统中的包管理工具，类似 npm 包管理工具：apt-get 安装包：apt-get install 卸载包：apt-get remove 更新包：apt-get update 启动 nginx：nginx 关闭 nginx：nginx -s stop 重启 nginx：nginx -s reload 检查语法：nginx -s reload",content:"文档： https://www.runoob.com/linux/linux-tutorial.html）\n\n\n# 添加用户：adduser <用户名>\n\n\n# 临时使用超级管理员权限：sudo <命令>\n\n\n# 退出远程服务器：exit\n\n\n# 删除目录：rm -rf <目录名>\n\n\n# 删除受保护的目录：rm -rf <目录名>\n\n\n# 打开文件（打开 vim 文本编辑器）（vi 编辑器的升级版）：vim <文件名>\n\n\n# 进入编辑模式：i\n\n\n# 保存文件：[长按 esc + shift + ;] + w + 回车\n\n\n# 不保存退出文件：[长按 esc + shift + ;] + q + 回车\n\n\n# 保存退出文件：[长按 esc + shift + ;] + wq + 回车\n\n\n# 强制保存退出文件：[长按 esc + shift + ;] + wq! + 回车\n\n\n# 复制文件：cp <要复制的文件> <复制到哪个目录下>\n\n\n# 创建目录：mkdir <目录名>\n\n\n# 重命名文件或目录改名 或 将文件或目录移入其它位置\n\nmv source_file(文件) dest_file(文件) 将源文件名 source_file 改为目标文件名 dest_file mv source_file(文件) dest_directory(目录) 将文件 source_file 移动到目标目录 dest_directory 中 mv source_directory(目录) dest_directory(目录) 目录名 dest_directory 已存在，将 source_directory 移动到目录名 dest_directory 中；目录名 dest_directory 不存在则 source_directory 改名为目录名 dest_directory mv source_directory(目录) dest_file(文件) 出错\n\n\n# 从客户端上传文件到服务端：rz\n\n\n# Ubuntu 系统中的包管理工具，类似 npm 包管理工具：apt-get\n\n\n# 安装包：apt-get install <包名>\n\n\n# 卸载包：apt-get remove <包名>\n\n\n# 更新包：apt-get update <包名>\n\n\n# nginx 命令\n\n\n# 启动 nginx：nginx\n\n\n# 关闭 nginx：nginx -s stop\n\n\n# 重启 nginx：nginx -s reload\n\n\n# 检查语法：nginx -s reload",normalizedContent:"文档： https://www.runoob.com/linux/linux-tutorial.html）\n\n\n# 添加用户：adduser <用户名>\n\n\n# 临时使用超级管理员权限：sudo <命令>\n\n\n# 退出远程服务器：exit\n\n\n# 删除目录：rm -rf <目录名>\n\n\n# 删除受保护的目录：rm -rf <目录名>\n\n\n# 打开文件（打开 vim 文本编辑器）（vi 编辑器的升级版）：vim <文件名>\n\n\n# 进入编辑模式：i\n\n\n# 保存文件：[长按 esc + shift + ;] + w + 回车\n\n\n# 不保存退出文件：[长按 esc + shift + ;] + q + 回车\n\n\n# 保存退出文件：[长按 esc + shift + ;] + wq + 回车\n\n\n# 强制保存退出文件：[长按 esc + shift + ;] + wq! + 回车\n\n\n# 复制文件：cp <要复制的文件> <复制到哪个目录下>\n\n\n# 创建目录：mkdir <目录名>\n\n\n# 重命名文件或目录改名 或 将文件或目录移入其它位置\n\nmv source_file(文件) dest_file(文件) 将源文件名 source_file 改为目标文件名 dest_file mv source_file(文件) dest_directory(目录) 将文件 source_file 移动到目标目录 dest_directory 中 mv source_directory(目录) dest_directory(目录) 目录名 dest_directory 已存在，将 source_directory 移动到目录名 dest_directory 中；目录名 dest_directory 不存在则 source_directory 改名为目录名 dest_directory mv source_directory(目录) dest_file(文件) 出错\n\n\n# 从客户端上传文件到服务端：rz\n\n\n# ubuntu 系统中的包管理工具，类似 npm 包管理工具：apt-get\n\n\n# 安装包：apt-get install <包名>\n\n\n# 卸载包：apt-get remove <包名>\n\n\n# 更新包：apt-get update <包名>\n\n\n# nginx 命令\n\n\n# 启动 nginx：nginx\n\n\n# 关闭 nginx：nginx -s stop\n\n\n# 重启 nginx：nginx -s reload\n\n\n# 检查语法：nginx -s reload",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"Markdown 语法",frontmatter:{title:"Markdown 语法",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/7a7269/",categories:["《前端》笔记《其它》","其它"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/01.%E5%85%B6%E5%AE%83/06.Markdown%20%E8%AF%AD%E6%B3%95.html",relativePath:"《前端》笔记《其它》/01.其它/06.Markdown 语法.md",key:"v-6cad0266",path:"/pages/7a7269/",headers:[{level:2,title:"标题二",slug:"标题二",normalizedTitle:"标题二",charIndex:151},{level:3,title:"标题三",slug:"标题三",normalizedTitle:"标题三",charIndex:159},{level:4,title:"标题四",slug:"标题四",normalizedTitle:"标题四",charIndex:166},{level:5,title:"标题五",slug:"标题五",normalizedTitle:"标题五",charIndex:173}],headersStr:"标题二 标题三 标题四 标题五",content:"# 标题格式顺序\n\n第一层：一、二、三\n\n第二层：（一） （二） （三）\n\n第三层：1、2、3\n\n第四层：（1）（2）（3）\n\n第五层：①②③\n\n\n# 标题\n\n# ...\n## ...\n### ...\n#### ...\n##### ...\n\n\n1\n2\n3\n4\n5\n\n\n渲染后：\n\n\n# 标题一\n\n\n# 标题二\n\n\n# 标题三\n\n# 标题四\n\n# 标题五\n\n\n# 换行\n\n中间空一行\n\n\n# 加粗\n\n**...**\n\n渲染后： demo\n\n\n# 无序列表\n\n* ...\n\n渲染后：\n\n * demo\n * demo\n * demo\n\n\n# 有序列表\n\n1. ...\n\n渲染后：\n\n 1. demo\n 2. demo\n 3. demo\n\n\n# 清单\n\n- [ ] 、- [x]\n\n> 提示：option + c 可以快速切换勾选状态\n\n渲染后：\n\n * [ ] demo\n * [ ] demo\n * [x] demo\n\n\n# 删除线\n\n~~...~~\n\n渲染后： demo\n\n\n# 单行代码块\n\n  `...`\n\n\n1\n\n\ndemo\n\n\n# 多行代码块\n\n```语言/注释\n\n```\n\n渲染后：\n\ndemo\n\n\n1\n\n\n\n# 表格\n\n:---: 居中\n:--- 左对齐（默认）\n---: 右对齐\n\n| 小明 | 小红  | 小刚 |\n| :--- | :---: | ---: |\n| 1    |   2   |    3 |\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n渲染后：\n\n小明   小红   小刚\n1    2    3\n\n\n# 引言\n\n> ...\n\n渲染后：\n\n> demo\n> \n> > demo\n> > \n> > > demo...\n\n\n# 生成目录\n\n查找命令（cmd + shift + p） → 输入 mctoc → 选择 Markdown All in One: Create Table of Contents\n\n\n# 更新目录\n\n提示： 在 VSCode 中编辑时自动更新目录，不知道是插件还是什么的原因\n\n查找命令（cmd + shift + p） → 输入 mutoc → 选择 Markdown All in One: Update Table of Contents",normalizedContent:"# 标题格式顺序\n\n第一层：一、二、三\n\n第二层：（一） （二） （三）\n\n第三层：1、2、3\n\n第四层：（1）（2）（3）\n\n第五层：①②③\n\n\n# 标题\n\n# ...\n## ...\n### ...\n#### ...\n##### ...\n\n\n1\n2\n3\n4\n5\n\n\n渲染后：\n\n\n# 标题一\n\n\n# 标题二\n\n\n# 标题三\n\n# 标题四\n\n# 标题五\n\n\n# 换行\n\n中间空一行\n\n\n# 加粗\n\n**...**\n\n渲染后： demo\n\n\n# 无序列表\n\n* ...\n\n渲染后：\n\n * demo\n * demo\n * demo\n\n\n# 有序列表\n\n1. ...\n\n渲染后：\n\n 1. demo\n 2. demo\n 3. demo\n\n\n# 清单\n\n- [ ] 、- [x]\n\n> 提示：option + c 可以快速切换勾选状态\n\n渲染后：\n\n * [ ] demo\n * [ ] demo\n * [x] demo\n\n\n# 删除线\n\n~~...~~\n\n渲染后： demo\n\n\n# 单行代码块\n\n  `...`\n\n\n1\n\n\ndemo\n\n\n# 多行代码块\n\n```语言/注释\n\n```\n\n渲染后：\n\ndemo\n\n\n1\n\n\n\n# 表格\n\n:---: 居中\n:--- 左对齐（默认）\n---: 右对齐\n\n| 小明 | 小红  | 小刚 |\n| :--- | :---: | ---: |\n| 1    |   2   |    3 |\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n渲染后：\n\n小明   小红   小刚\n1    2    3\n\n\n# 引言\n\n> ...\n\n渲染后：\n\n> demo\n> \n> > demo\n> > \n> > > demo...\n\n\n# 生成目录\n\n查找命令（cmd + shift + p） → 输入 mctoc → 选择 markdown all in one: create table of contents\n\n\n# 更新目录\n\n提示： 在 vscode 中编辑时自动更新目录，不知道是插件还是什么的原因\n\n查找命令（cmd + shift + p） → 输入 mutoc → 选择 markdown all in one: update table of contents",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"Mock",frontmatter:{title:"Mock",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/fccd60/",categories:["《前端》笔记《其它》","其它"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/01.%E5%85%B6%E5%AE%83/07.Mock.html",relativePath:"《前端》笔记《其它》/01.其它/07.Mock.md",key:"v-740ad10d",path:"/pages/fccd60/",headersStr:null,content:'官网：http://mockjs.com/\n\n作用：模拟数据、模拟后端接口。减少沟通、减少接口联调时间，不需要等待后端接口开发完毕，可以随机生成数据（如：文本、数字、布尔值、日期、邮箱、链接、图片、颜色等）\n\n说明：先把 api 接口的 URL 路径，请求参数、返回数据结构先确定下来。等正式 api接口 开发好以后，只需把前端开发中的 mock 域名，更换成开发域名即可联调，再关闭 mock 开关即可，而无需再去修改前端任何其他代码。\n\n特性： （1）前后端分离：让前端独立于后端进行开发 （2）增加单元测试的真实性：通过随机数据，模拟各种场景 （3）开发无侵入：灵活插拔。不需要修改既有代码，就可以拦截 Ajax 请求，返回模拟的响应数据 （4）用法简单：符合直觉的接口 （5）数据类型丰富：随机生成 文本、数字、布尔值、日期、邮箱、链接、图片、颜色等 （6）方便扩展：支持扩展更多数据类型，支持自定义函数和正则\n\n方案一：本地 json（需要接口文档）(缺点：需要改代码) 原理：请求本地的 json 文件 在 public 目录下创建 /mock/user/login.json（该 json 文件内容由课件提供） 调试（查看接口返回的数据）：控制台 Network → Fetch/XHR → 刷新页面 → Name（存放请求文件）→ Response -- App.vue data() { return { res: {} } }, mounted() { this.axios.get(\'/mock/user/login.json\').then((res) => { this.res = res; // 获取接口返回的数据 }) }\n\n方案二：easy-mock 平台（缺点：因为是免费的，人多时，服务器容易崩 解决方法：手动搭建 mock，并在 github 上下载，然后在自己的电脑上搭建 easy-mock 的平台） 提示：easy-mock 服务器经常崩，推荐使用 fastmock（官网：www.fastmock.site） 特性：在学习时 easy-mock 平台 服务器崩了，无法进行学习，如果用到，请看重新观看 Mock设置（2）05:50 分的视频\n\n方案三（推荐）：集成 Mock API 文档：https://github.com/nuysoft/Mock/wiki/Getting-Started 特性：不会发送请求，请求会被拦截，但是可以看到数据\n\n下载 mockjs npm i mockjs --save-dev\n\n语法规范： 数据模板 定义规范： \'属性名 | 生成规则\': 初始值\n\n  \'name|1-9\': \'*\'\n    作用：随机生成 1~9 个字符\n    输出：******\n\n  \'name|1-9\': 0\n    作用：随机生成 1~9 之间的数\n    输出：6\n\n数据占位符 定义规范：\n  @占位符（参数[,参数...])\n\n  @id()\n    作用：随机生成 id\n\n  @name()\n    作用：随机生成 英文名\n\n  @cname()\n    作用：随机生成 中文名\n\n  @date(yyyy-MM-dd)\n    作用：随机生成 日期\n\n  @paragraph()\n    作用：随机生成 描述\n\n  @email()\n    作用：随机生成 邮箱地址\n\n例：生成以下数据\n  {\n    "id": "230000201903033537",\n    "username": "卢平",\n    "date": "1978-09-16",\n    "description": "Kcb jkkvdypcst xef .",\n    "email": "n.qoimyx@ewoea.mh",\n    "age": 29\n  }\n  \n  var data = Mock.mock({\n    id: \'@id()\',\n    username: \'@cname()\',\n    date: \'@date(yyyy-MM-dd)\',\n    description: \'@paragraph()\',\n    email: \'@email()\',\n    \'age|18-40\': 0\n  })\n\n\n模拟接口 使用步骤： （1）定义 Mock 接口路由，在接口中返回 mock 模拟的数据（-- src/新建 mock.js） import Mock from \'mockjs\' const Random = Mock.Random\n\n  // 参数一：请求地址  参数二：响应数据\n  Mock.mock(\'/api/demo\', {\n    "status": 0,\n    "data|30-100": [{\n      "id|5-10": 0, // 随机生成 5-10 的数，默认是 0\n      "username": "@cname",  // 随机生成 中文名称；   @name：随机生成 英文名称\n      "email": "@email",  // 随机生成邮箱\n      "phone|1-9": null,  // 随机生成 1-9 的数字\n      "role": 0,\n      "createTime": 1479048325000,\n      "updateTime": 1479048325000,\n      \'img\': Random.image()  // 随机生成图片\n    }]\n  })\n\n（2）定义 mock 开关（-- main.js）\n  // Mock API开关\n  if (true) {\n    require(\'@/mock.js\')\n  }\n\n（3）使用 axios 调用该接口，获取数据（-- 组件）\n  created() {\n    axios.get(\'/api/demo\').then(result => {\n      console.log(result)\n    })\n  }\n\n\n调试：在 vue 调试工具中查看 data 里的 res 数据，res 里存放的就是 json 数据',normalizedContent:'官网：http://mockjs.com/\n\n作用：模拟数据、模拟后端接口。减少沟通、减少接口联调时间，不需要等待后端接口开发完毕，可以随机生成数据（如：文本、数字、布尔值、日期、邮箱、链接、图片、颜色等）\n\n说明：先把 api 接口的 url 路径，请求参数、返回数据结构先确定下来。等正式 api接口 开发好以后，只需把前端开发中的 mock 域名，更换成开发域名即可联调，再关闭 mock 开关即可，而无需再去修改前端任何其他代码。\n\n特性： （1）前后端分离：让前端独立于后端进行开发 （2）增加单元测试的真实性：通过随机数据，模拟各种场景 （3）开发无侵入：灵活插拔。不需要修改既有代码，就可以拦截 ajax 请求，返回模拟的响应数据 （4）用法简单：符合直觉的接口 （5）数据类型丰富：随机生成 文本、数字、布尔值、日期、邮箱、链接、图片、颜色等 （6）方便扩展：支持扩展更多数据类型，支持自定义函数和正则\n\n方案一：本地 json（需要接口文档）(缺点：需要改代码) 原理：请求本地的 json 文件 在 public 目录下创建 /mock/user/login.json（该 json 文件内容由课件提供） 调试（查看接口返回的数据）：控制台 network → fetch/xhr → 刷新页面 → name（存放请求文件）→ response -- app.vue data() { return { res: {} } }, mounted() { this.axios.get(\'/mock/user/login.json\').then((res) => { this.res = res; // 获取接口返回的数据 }) }\n\n方案二：easy-mock 平台（缺点：因为是免费的，人多时，服务器容易崩 解决方法：手动搭建 mock，并在 github 上下载，然后在自己的电脑上搭建 easy-mock 的平台） 提示：easy-mock 服务器经常崩，推荐使用 fastmock（官网：www.fastmock.site） 特性：在学习时 easy-mock 平台 服务器崩了，无法进行学习，如果用到，请看重新观看 mock设置（2）05:50 分的视频\n\n方案三（推荐）：集成 mock api 文档：https://github.com/nuysoft/mock/wiki/getting-started 特性：不会发送请求，请求会被拦截，但是可以看到数据\n\n下载 mockjs npm i mockjs --save-dev\n\n语法规范： 数据模板 定义规范： \'属性名 | 生成规则\': 初始值\n\n  \'name|1-9\': \'*\'\n    作用：随机生成 1~9 个字符\n    输出：******\n\n  \'name|1-9\': 0\n    作用：随机生成 1~9 之间的数\n    输出：6\n\n数据占位符 定义规范：\n  @占位符（参数[,参数...])\n\n  @id()\n    作用：随机生成 id\n\n  @name()\n    作用：随机生成 英文名\n\n  @cname()\n    作用：随机生成 中文名\n\n  @date(yyyy-mm-dd)\n    作用：随机生成 日期\n\n  @paragraph()\n    作用：随机生成 描述\n\n  @email()\n    作用：随机生成 邮箱地址\n\n例：生成以下数据\n  {\n    "id": "230000201903033537",\n    "username": "卢平",\n    "date": "1978-09-16",\n    "description": "kcb jkkvdypcst xef .",\n    "email": "n.qoimyx@ewoea.mh",\n    "age": 29\n  }\n  \n  var data = mock.mock({\n    id: \'@id()\',\n    username: \'@cname()\',\n    date: \'@date(yyyy-mm-dd)\',\n    description: \'@paragraph()\',\n    email: \'@email()\',\n    \'age|18-40\': 0\n  })\n\n\n模拟接口 使用步骤： （1）定义 mock 接口路由，在接口中返回 mock 模拟的数据（-- src/新建 mock.js） import mock from \'mockjs\' const random = mock.random\n\n  // 参数一：请求地址  参数二：响应数据\n  mock.mock(\'/api/demo\', {\n    "status": 0,\n    "data|30-100": [{\n      "id|5-10": 0, // 随机生成 5-10 的数，默认是 0\n      "username": "@cname",  // 随机生成 中文名称；   @name：随机生成 英文名称\n      "email": "@email",  // 随机生成邮箱\n      "phone|1-9": null,  // 随机生成 1-9 的数字\n      "role": 0,\n      "createtime": 1479048325000,\n      "updatetime": 1479048325000,\n      \'img\': random.image()  // 随机生成图片\n    }]\n  })\n\n（2）定义 mock 开关（-- main.js）\n  // mock api开关\n  if (true) {\n    require(\'@/mock.js\')\n  }\n\n（3）使用 axios 调用该接口，获取数据（-- 组件）\n  created() {\n    axios.get(\'/api/demo\').then(result => {\n      console.log(result)\n    })\n  }\n\n\n调试：在 vue 调试工具中查看 data 里的 res 数据，res 里存放的就是 json 数据',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"VSCode 插件",frontmatter:{title:"VSCode 插件",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/1e908d/",categories:["《前端》笔记《其它》","其它"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/01.%E5%85%B6%E5%AE%83/08.VSCode%20%E6%8F%92%E4%BB%B6.html",relativePath:"《前端》笔记《其它》/01.其它/08.VSCode 插件.md",key:"v-cf3bf926",path:"/pages/1e908d/",headers:[{level:2,title:"一、约束代码风格",slug:"一、约束代码风格",normalizedTitle:"一、约束代码风格",charIndex:2},{level:2,title:"二、保存时自动格式化化代码",slug:"二、保存时自动格式化化代码",normalizedTitle:"二、保存时自动格式化化代码",charIndex:2546},{level:3,title:"插件配置",slug:"插件配置",normalizedTitle:"插件配置",charIndex:2734},{level:3,title:"禁用规则",slug:"禁用规则",normalizedTitle:"禁用规则",charIndex:3970},{level:4,title:"局部禁用规则",slug:"局部禁用规则",normalizedTitle:"局部禁用规则",charIndex:3978},{level:4,title:"全局禁用规则",slug:"全局禁用规则",normalizedTitle:"全局禁用规则",charIndex:4120},{level:2,title:"三、Markdown 工具包",slug:"三、markdown-工具包",normalizedTitle:"三、markdown 工具包",charIndex:4292},{level:2,title:"四、Markdown 工具包",slug:"四、markdown-工具包",normalizedTitle:"四、markdown 工具包",charIndex:4423},{level:2,title:"五、快捷插入图片",slug:"五、快捷插入图片",normalizedTitle:"五、快捷插入图片",charIndex:4563},{level:3,title:"修改图片存放路径",slug:"修改图片存放路径",normalizedTitle:"修改图片存放路径",charIndex:4666},{level:2,title:"六、驼峰翻译工具",slug:"六、驼峰翻译工具",normalizedTitle:"六、驼峰翻译工具",charIndex:4768},{level:2,title:"七、GitLens（作者：GitKraken）",slug:"七、gitlens-作者-gitkraken",normalizedTitle:"七、gitlens（作者：gitkraken）",charIndex:4872},{level:2,title:"开启菜单栏图标",slug:"开启菜单栏图标",normalizedTitle:"开启菜单栏图标",charIndex:4900},{level:3,title:"（1）查看每行代码的日志",slug:"_1-查看每行代码的日志",normalizedTitle:"（1）查看每行代码的日志",charIndex:4986},{level:3,title:"（2）查看提交历史信息",slug:"_2-查看提交历史信息",normalizedTitle:"（2）查看提交历史信息",charIndex:5044},{level:2,title:"八、快速生成 SASS/LESS",slug:"八、快速生成-sass-less",normalizedTitle:"八、快速生成 sass/less",charIndex:5079},{level:3,title:"（一）快速生成 SASS/LESS",slug:"一-快速生成-sass-less",normalizedTitle:"（一）快速生成 sass/less",charIndex:5155},{level:3,title:"（二）快速生成 CSS",slug:"二-快速生成-css",normalizedTitle:"（二）快速生成 css",charIndex:5217},{level:2,title:"九、Code Spell Checker（作者：Street Side Software）",slug:"九、code-spell-checker-作者-street-side-software",normalizedTitle:"九、code spell checker（作者：street side software）",charIndex:5233},{level:2,title:"十、图片预览",slug:"十、图片预览",normalizedTitle:"十、图片预览",charIndex:5332},{level:2,title:"十一、记录每次保存时的历史代码",slug:"十一、记录每次保存时的历史代码",normalizedTitle:"十一、记录每次保存时的历史代码",charIndex:5378},{level:2,title:"十二、将 sass/less 转换成 css",slug:"十二、将-sass-less-转换成-css",normalizedTitle:"十二、将 sass/less 转换成 css",charIndex:5494}],headersStr:"一、约束代码风格 二、保存时自动格式化化代码 插件配置 禁用规则 局部禁用规则 全局禁用规则 三、Markdown 工具包 四、Markdown 工具包 五、快捷插入图片 修改图片存放路径 六、驼峰翻译工具 七、GitLens（作者：GitKraken） 开启菜单栏图标 （1）查看每行代码的日志 （2）查看提交历史信息 八、快速生成 SASS/LESS （一）快速生成 SASS/LESS （二）快速生成 CSS 九、Code Spell Checker（作者：Street Side Software） 十、图片预览 十一、记录每次保存时的历史代码 十二、将 sass/less 转换成 css",content:"# 一、约束代码风格\n\n插件： ESLint（作者：Microsoft） 作用： 1、约束代码风格 2、提示代码不规范的地方 3、根据 ESLint 规则自动格式化\n\n配置： 在 vscode 设置中搜索 Editor: Default Formatter，选择 ESLint\n\n1、制表符（Tab） 特性： 代码缩进一般是两个空格，四个空格 会导致代码太宽 使用步骤：\n\n 1. 打开 VScode 编辑器中的 设置\n 2. 搜索 tabsize\n 3. 将 Editror:Tab Size 改为 2\n 4. 将 Vetur > Format > Options: Tab Size 改为 2\n\n2、保存格式化代码 使用步骤：\n\n 1. 打开 VScode 编辑器中的 设置\n 2. 搜索 Format On Save，并打勾\n\n主流规范：\n\n * 代码结尾不能跟 分号\n * 声明的变量和方法必须被 调用\n * 代码的最后一行要加 换行\n * tab：两个空格\n * 方法名和括号之间要加 空格\n\n3、js 文件格式化不生效的问题 解决方法： 右键格式化，跟着提示配置即可\n\n常见规则：\n\n      规则名称\t                        规则约束/默认约束\n  quotes\t                        默认：字符串需要使用单引号包裹\n  key-spacing\t                    默认：对象的属性和值之间，需要有一个空格分割\n  comma-dangle\t                默认：对象或数组的末尾，不允许出现多余的逗号\n  no-multiple-empty-lines\t        不允许出现多个空行\n  no-trailing-spaces\t            不允许在行尾出现多余的空格\n  eol-last\t                    默认：文件的末尾必须保留一个空行\n  spaced-comment\t                在注释中的//或/*后强制使用一致的间距\n  indent\t                        强制一致的缩进\n  import/first\t                import 导入模块的语句必须声明在文件的顶部\n  1space-before-function-paren\t方法的形参之前是否需要保留一个空格\n  no-unused-vars                  声明的 变量/常量 没有被使用\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n.eslintrc.js 配置文件： 规则文档： https://eslint.bootcss.com/docs/rules/\n\nrulds: {\n  / production：发布阶段 才会生效\n\n      'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',  // 禁用 console\n\n      // debugger\n      // 作用：打断点，代码会在 debugger 出现的地方停止执行，方便调试\n      // 解决：传统的浏览器打断点，当代码量很多时，还需要找打断点的地方，导致 效率低的问题\n      /* 如：\n          let name = 'zs'\n          debugger\n          name = 'ls'\n          debugger\n          console.log(name)\n      */\n      'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off',  // 禁用 debugger\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n配置规则（-- .eslintrc.js）：\n\n特性：\n\n1、当代码风格不规范导致的报错，但不知道哪条规则报错，可以复制报错信息后面的 规则（灰色字体），到 规则文档中 搜索\n\n例： 4:1：第四行，第一个字符 报错 如： 4:1 error More than 1 blank line not allowed no-multiple-empty-lines 复制 no-multiple-empty-lines 到 规则文档中搜索，规则文档会告诉你 这是 禁止出现多行空行 的规则， 在 Options 中有配置该规则的选项，根据文档进行修改\n\nrulds: {\n  'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',  // 禁用 console\n  'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off',  // 禁用 debugger\n  \n  // ignore：忽略这条规则（即使代码风格不规范，也不会报错）\n  \"space-before-function-paren\": [\"error\", \"ignore\"]\n\n  // '规则': ['error', 'Options']\n  'comma-dangle': ['error', 'always'], // 要求使用拖尾逗号\n\n  'space-before-function-paren': 0, // 函数和圆括号之间没有空格\n  'comma-dangle': ['error', 'never'], // 要求或禁止使用拖尾逗号\n  'eol-last': ['error', 'always'] // 要求或禁止文件末尾保留一行空行\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 二、保存时自动格式化化代码\n\n插件： Prettier-Code formatter 插件（作者：Prettier）\n\n文档： https://prettier.io/docs/en/options.html#quote-props\n\n文档： https://www.jianshu.com/p/4be58a69b20f\n\n.prettierignore（忽略清单）\n\n\n# 插件配置\n\n使用步骤：\n\n1、选择 VScode 中的的设置 打开 settings.json 配置文件\n\n2、在花括号里的 最上面 添加以下代码\n\n// ESLint 插件配置\n\"editor.codeActionsOnSave\": {\n    \"source.fixAll\": true,\n},\n\"eslint.alwaysShowStatus\": true,\n\n// prettier 插件配置\n\"prettier.configPath\": \"C:\\\\Users\\\\xxxx\\\\.prettierrc\",  // .prettierrc 配置文件路径\n\n// vetur 插件配置\n\"vetur.format.defaultFormatter.html\": \"js-beautify-html\",\n\"vetur.ignoreProjectWarning\": true,\n\"vetur.format.defaultFormatterOptions\": {\n    \"js-beautify-html\": {\n        \"wrap_attributes\": false\n    },\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n3、打开访达，command + shift + g，输入 ~\n\n4、创建名为 .prettierrc 的文件，并进行配置（BUG：要在同一个 vscode 中配置才能生效，不要打开两个 vscode ，然后在另一个 vscode 中进行配置）\n\n{\n    \"semi\": false, // 代码末尾不加分号\n    \"printWidth\": 300, // 每行文字个数超出此限制将会被迫换行\n    \"trailingComma\": \"es5\", // 对象、数组末尾加逗号\n    \"singleQuote\": true, // 使用单引号替换双引号\n    \"arrowParens\": \"avoid\",  // always 总是有括号\n    \"quoteProps\": \"preserve\"  // 保存时，不会自动将动态类名的引号去掉\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n5、将 \"prettier.configPath\": \".prettierrc 所在路径\" 配置项放到 VScode 中的 settings.json 配置文件中 如： \"prettier.configPath\": \"/Users/zhengcunrui/.prettierrc\" （该路径待验证，学习时自己想的）\n\n6、随便打开 VScode 中的 js 文件，右键内容区，选择 格式化文档的方式，如果 prettierrc - Code formatter 不是默认值，点击 配置默认格式化程序，将 prettierrc - Code formatter 改为默认值\n\n\n# 禁用规则\n\n# 局部禁用规则\n\n说明： 这条规则不会在该组件中生效\n\n使用步骤： 在当前组件的 script 中添加以下代码\n\n语法： /* eslint-disable 规则名称 */\n\n如： /* eslint-disable space-before-function-paren */\n\n# 全局禁用规则\n\n使用步骤： 在 rules 字段中添加禁用规则代码（-- .eslintrc.js）\n\n如：\n\nrules: {\n    // 禁用（off）\n    'space-before-function-paren': 'off'\n    // 禁用（0）\n    'eqeqeq': 0,\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 三、Markdown 工具包\n\n插件： Markdown All in One（作者：Yu Zhang）\n\n作用： （1）Markdown 语法快捷键\n\n（2）代码自动补全\n\n（1）自动添加链接\n\n使用步骤： 选中要添加链接的文本，将赋值的链接粘贴即可\n\n\n# 四、Markdown 工具包\n\n语法： Markdown Preview Enhanced（作者：Yiyi Wang）\n\n作用： （1）查看渲染后的 Markdown\n\n（2）将 Markdown 导出为 PDF 使用步骤： 右键新的渲染层 → Chrome → PDF\n\n\n# 五、快捷插入图片\n\n插件： Paste Image（作者：mushan）\n\n作用: （1）快捷插入图片，并在文件所在目录添加该图片，可配合截图工具使用 使用步骤： cmd + option + v\n\n\n# 修改图片存放路径\n\n使用步骤: 1、设置中搜索 Paste Image: Path 2、在 ${currentFileDir} 后面添加路径。如 ${currentFileDir}/images\n\n\n# 六、驼峰翻译工具\n\n【关键词：转换大写、转换小写】\n\n插件： 驼峰翻译助手（作者：sven）\n\n作用： 中英文一键翻译转换成常用大小驼峰、大小写 等格式\n\n使用步骤： cmd + shift + t\n\n\n# 七、GitLens（作者：GitKraken）\n\n\n# 开启菜单栏图标\n\n（1）cmd + shift + p 输入：gitlens open settings\n\n（2）找到下图区域，选择 GITLENS LAYOUT\n\n\n# （1）查看每行代码的日志\n\n作用： 对内置 git 功能进行了增强\n\n说明： 查看 代码作者、代码时间\n\n\n\n\n# （2）查看提交历史信息\n\n\n\n也就是远程仓库中的仓库网络图：\n\n\n# 八、快速生成 SASS/LESS\n\n插件： CSS Tree（作者：Sachin Bansal）\n\n作用： 保存时自动生成 SASS/LESS\n\n\n# （一）快速生成 SASS/LESS\n\n1、选中生成的元素 2、ctrl + p：Generate CSS tree\n\n\n# （二）快速生成 CSS\n\n\n# 九、Code Spell Checker（作者：Street Side Software）\n\n作用： 代码拼写检查器 1、错误拼写代码提示 2、自动修改错误拼写的代码 3、错误拼写代码建议\n\n\n# 十、图片预览\n\n插件名： Image preview（作者：Kiss Tamás）\n\n\n# 十一、记录每次保存时的历史代码\n\n插件名： Local History（作者：xyz）\n\n配置历史代码存放目录： 1、设置中搜索 Local-history:Path 2、将目录设置为 /Users/zhengcunrui\n\n\n# 十二、将 sass/less 转换成 css\n\n插件名 Easy Sass/Esay Less（作者：Wojciech Sura/mrcrowl）\n\n使用方法： 只在当前项目中使用。只推荐在小项目中开启。大项目不需要开启，因为 webpack 会自动转换 右键插件 → 启用（工作区）",normalizedContent:"# 一、约束代码风格\n\n插件： eslint（作者：microsoft） 作用： 1、约束代码风格 2、提示代码不规范的地方 3、根据 eslint 规则自动格式化\n\n配置： 在 vscode 设置中搜索 editor: default formatter，选择 eslint\n\n1、制表符（tab） 特性： 代码缩进一般是两个空格，四个空格 会导致代码太宽 使用步骤：\n\n 1. 打开 vscode 编辑器中的 设置\n 2. 搜索 tabsize\n 3. 将 editror:tab size 改为 2\n 4. 将 vetur > format > options: tab size 改为 2\n\n2、保存格式化代码 使用步骤：\n\n 1. 打开 vscode 编辑器中的 设置\n 2. 搜索 format on save，并打勾\n\n主流规范：\n\n * 代码结尾不能跟 分号\n * 声明的变量和方法必须被 调用\n * 代码的最后一行要加 换行\n * tab：两个空格\n * 方法名和括号之间要加 空格\n\n3、js 文件格式化不生效的问题 解决方法： 右键格式化，跟着提示配置即可\n\n常见规则：\n\n      规则名称\t                        规则约束/默认约束\n  quotes\t                        默认：字符串需要使用单引号包裹\n  key-spacing\t                    默认：对象的属性和值之间，需要有一个空格分割\n  comma-dangle\t                默认：对象或数组的末尾，不允许出现多余的逗号\n  no-multiple-empty-lines\t        不允许出现多个空行\n  no-trailing-spaces\t            不允许在行尾出现多余的空格\n  eol-last\t                    默认：文件的末尾必须保留一个空行\n  spaced-comment\t                在注释中的//或/*后强制使用一致的间距\n  indent\t                        强制一致的缩进\n  import/first\t                import 导入模块的语句必须声明在文件的顶部\n  1space-before-function-paren\t方法的形参之前是否需要保留一个空格\n  no-unused-vars                  声明的 变量/常量 没有被使用\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n.eslintrc.js 配置文件： 规则文档： https://eslint.bootcss.com/docs/rules/\n\nrulds: {\n  / production：发布阶段 才会生效\n\n      'no-console': process.env.node_env === 'production' ? 'warn' : 'off',  // 禁用 console\n\n      // debugger\n      // 作用：打断点，代码会在 debugger 出现的地方停止执行，方便调试\n      // 解决：传统的浏览器打断点，当代码量很多时，还需要找打断点的地方，导致 效率低的问题\n      /* 如：\n          let name = 'zs'\n          debugger\n          name = 'ls'\n          debugger\n          console.log(name)\n      */\n      'no-debugger': process.env.node_env === 'production' ? 'warn' : 'off',  // 禁用 debugger\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n配置规则（-- .eslintrc.js）：\n\n特性：\n\n1、当代码风格不规范导致的报错，但不知道哪条规则报错，可以复制报错信息后面的 规则（灰色字体），到 规则文档中 搜索\n\n例： 4:1：第四行，第一个字符 报错 如： 4:1 error more than 1 blank line not allowed no-multiple-empty-lines 复制 no-multiple-empty-lines 到 规则文档中搜索，规则文档会告诉你 这是 禁止出现多行空行 的规则， 在 options 中有配置该规则的选项，根据文档进行修改\n\nrulds: {\n  'no-console': process.env.node_env === 'production' ? 'warn' : 'off',  // 禁用 console\n  'no-debugger': process.env.node_env === 'production' ? 'warn' : 'off',  // 禁用 debugger\n  \n  // ignore：忽略这条规则（即使代码风格不规范，也不会报错）\n  \"space-before-function-paren\": [\"error\", \"ignore\"]\n\n  // '规则': ['error', 'options']\n  'comma-dangle': ['error', 'always'], // 要求使用拖尾逗号\n\n  'space-before-function-paren': 0, // 函数和圆括号之间没有空格\n  'comma-dangle': ['error', 'never'], // 要求或禁止使用拖尾逗号\n  'eol-last': ['error', 'always'] // 要求或禁止文件末尾保留一行空行\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 二、保存时自动格式化化代码\n\n插件： prettier-code formatter 插件（作者：prettier）\n\n文档： https://prettier.io/docs/en/options.html#quote-props\n\n文档： https://www.jianshu.com/p/4be58a69b20f\n\n.prettierignore（忽略清单）\n\n\n# 插件配置\n\n使用步骤：\n\n1、选择 vscode 中的的设置 打开 settings.json 配置文件\n\n2、在花括号里的 最上面 添加以下代码\n\n// eslint 插件配置\n\"editor.codeactionsonsave\": {\n    \"source.fixall\": true,\n},\n\"eslint.alwaysshowstatus\": true,\n\n// prettier 插件配置\n\"prettier.configpath\": \"c:\\\\users\\\\xxxx\\\\.prettierrc\",  // .prettierrc 配置文件路径\n\n// vetur 插件配置\n\"vetur.format.defaultformatter.html\": \"js-beautify-html\",\n\"vetur.ignoreprojectwarning\": true,\n\"vetur.format.defaultformatteroptions\": {\n    \"js-beautify-html\": {\n        \"wrap_attributes\": false\n    },\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n3、打开访达，command + shift + g，输入 ~\n\n4、创建名为 .prettierrc 的文件，并进行配置（bug：要在同一个 vscode 中配置才能生效，不要打开两个 vscode ，然后在另一个 vscode 中进行配置）\n\n{\n    \"semi\": false, // 代码末尾不加分号\n    \"printwidth\": 300, // 每行文字个数超出此限制将会被迫换行\n    \"trailingcomma\": \"es5\", // 对象、数组末尾加逗号\n    \"singlequote\": true, // 使用单引号替换双引号\n    \"arrowparens\": \"avoid\",  // always 总是有括号\n    \"quoteprops\": \"preserve\"  // 保存时，不会自动将动态类名的引号去掉\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n5、将 \"prettier.configpath\": \".prettierrc 所在路径\" 配置项放到 vscode 中的 settings.json 配置文件中 如： \"prettier.configpath\": \"/users/zhengcunrui/.prettierrc\" （该路径待验证，学习时自己想的）\n\n6、随便打开 vscode 中的 js 文件，右键内容区，选择 格式化文档的方式，如果 prettierrc - code formatter 不是默认值，点击 配置默认格式化程序，将 prettierrc - code formatter 改为默认值\n\n\n# 禁用规则\n\n# 局部禁用规则\n\n说明： 这条规则不会在该组件中生效\n\n使用步骤： 在当前组件的 script 中添加以下代码\n\n语法： /* eslint-disable 规则名称 */\n\n如： /* eslint-disable space-before-function-paren */\n\n# 全局禁用规则\n\n使用步骤： 在 rules 字段中添加禁用规则代码（-- .eslintrc.js）\n\n如：\n\nrules: {\n    // 禁用（off）\n    'space-before-function-paren': 'off'\n    // 禁用（0）\n    'eqeqeq': 0,\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 三、markdown 工具包\n\n插件： markdown all in one（作者：yu zhang）\n\n作用： （1）markdown 语法快捷键\n\n（2）代码自动补全\n\n（1）自动添加链接\n\n使用步骤： 选中要添加链接的文本，将赋值的链接粘贴即可\n\n\n# 四、markdown 工具包\n\n语法： markdown preview enhanced（作者：yiyi wang）\n\n作用： （1）查看渲染后的 markdown\n\n（2）将 markdown 导出为 pdf 使用步骤： 右键新的渲染层 → chrome → pdf\n\n\n# 五、快捷插入图片\n\n插件： paste image（作者：mushan）\n\n作用: （1）快捷插入图片，并在文件所在目录添加该图片，可配合截图工具使用 使用步骤： cmd + option + v\n\n\n# 修改图片存放路径\n\n使用步骤: 1、设置中搜索 paste image: path 2、在 ${currentfiledir} 后面添加路径。如 ${currentfiledir}/images\n\n\n# 六、驼峰翻译工具\n\n【关键词：转换大写、转换小写】\n\n插件： 驼峰翻译助手（作者：sven）\n\n作用： 中英文一键翻译转换成常用大小驼峰、大小写 等格式\n\n使用步骤： cmd + shift + t\n\n\n# 七、gitlens（作者：gitkraken）\n\n\n# 开启菜单栏图标\n\n（1）cmd + shift + p 输入：gitlens open settings\n\n（2）找到下图区域，选择 gitlens layout\n\n\n# （1）查看每行代码的日志\n\n作用： 对内置 git 功能进行了增强\n\n说明： 查看 代码作者、代码时间\n\n\n\n\n# （2）查看提交历史信息\n\n\n\n也就是远程仓库中的仓库网络图：\n\n\n# 八、快速生成 sass/less\n\n插件： css tree（作者：sachin bansal）\n\n作用： 保存时自动生成 sass/less\n\n\n# （一）快速生成 sass/less\n\n1、选中生成的元素 2、ctrl + p：generate css tree\n\n\n# （二）快速生成 css\n\n\n# 九、code spell checker（作者：street side software）\n\n作用： 代码拼写检查器 1、错误拼写代码提示 2、自动修改错误拼写的代码 3、错误拼写代码建议\n\n\n# 十、图片预览\n\n插件名： image preview（作者：kiss tamas）\n\n\n# 十一、记录每次保存时的历史代码\n\n插件名： local history（作者：xyz）\n\n配置历史代码存放目录： 1、设置中搜索 local-history:path 2、将目录设置为 /users/zhengcunrui\n\n\n# 十二、将 sass/less 转换成 css\n\n插件名 easy sass/esay less（作者：wojciech sura/mrcrowl）\n\n使用方法： 只在当前项目中使用。只推荐在小项目中开启。大项目不需要开启，因为 webpack 会自动转换 右键插件 → 启用（工作区）",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"vue",frontmatter:{title:"vue",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/a99743/",categories:["《前端》笔记《其它》","报错解决方式"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/02.%E6%8A%A5%E9%94%99%E5%88%86%E6%9E%90/01.vue.html",relativePath:"《前端》笔记《其它》/02.报错分析/01.vue.md",key:"v-3646c5e6",path:"/pages/a99743/",headers:[{level:2,title:"解决方法：",slug:"解决方法",normalizedTitle:"解决方法：",charIndex:229},{level:3,title:"（一）查看请求服务器的域名是否正确",slug:"一-查看请求服务器的域名是否正确",normalizedTitle:"（一）查看请求服务器的域名是否正确",charIndex:664},{level:2,title:"一、携带 node_modules",slug:"一、携带-node-modules",normalizedTitle:"一、携带 node_modules",charIndex:712},{level:2,title:"二、未找到模块",slug:"二、未找到模块",normalizedTitle:"二、未找到模块",charIndex:878},{level:2,title:"三、Uncaught (in promise) ReferenceError: ??? is not defined",slug:"三、uncaught-in-promise-referenceerror-is-not-defined",normalizedTitle:"三、uncaught (in promise) referenceerror: ??? is not defined",charIndex:917},{level:2,title:"四、控制台没有报错，但是页面没有正常显示或运行",slug:"四、控制台没有报错-但是页面没有正常显示或运行",normalizedTitle:"四、控制台没有报错，但是页面没有正常显示或运行",charIndex:1165},{level:2,title:"五、xhr.js?b50d:187 GET http://pcapi-xiaotuxian-front-devtest.itheima.net/home.new 404",slug:"五、xhr-js-b50d-187-get-http-pcapi-xiaotuxian-front-devtest-itheima-net-home-new-404",normalizedTitle:"五、xhr.js?b50d:187 get http://pcapi-xiaotuxian-front-devtest.itheima.net/home.new 404",charIndex:1216},{level:2,title:"六、[Vue warn]: Failed to resolve component: HomePanel",slug:"六、-vue-warn-failed-to-resolve-component-homepanel",normalizedTitle:"六、[vue warn]: failed to resolve component: homepanel",charIndex:1324},{level:2,title:"七、Cannot read properties of null (reading 'result')",slug:"七、cannot-read-properties-of-null-reading-result",normalizedTitle:"七、cannot read properties of null (reading 'result')",charIndex:1407}],headersStr:"解决方法： （一）查看请求服务器的域名是否正确 一、携带 node_modules 二、未找到模块 三、Uncaught (in promise) ReferenceError: ??? is not defined 四、控制台没有报错，但是页面没有正常显示或运行 五、xhr.js?b50d:187 GET http://pcapi-xiaotuxian-front-devtest.itheima.net/home.new 404 六、[Vue warn]: Failed to resolve component: HomePanel 七、Cannot read properties of null (reading 'result')",content:"# 一、\n\n[Violation] Added non-passive event listener to a scroll-blocking 'mousewheel' event. Consider marking event handler as 'passive' to make the page more responsive. See https://www.chromestatus.com/feature/5745543795965952\n\n解决方法： （1）下载依赖包\n\nnpm i default-passive-events -S\n\n\n1\n\n\n（2）引入依赖包（-- main.js）\n\nimport 'default-passive-events'\n\n\n1\n\n\n\n# 一、\n\nUncaught (in promise) ReferenceError: *** is not defined\n\n\n1\n\n\n说明： *** 未定义\n\n解决方法： （一）定义 ***\n\n（二）查看 *** 是否书写错误\n\n\n# 二、\n\n[Vue warn]: Error in v-on handler (Promise/async): \"***\"\n\n\n1\n\n\n说明： *** 使用 async/await 时，没有对错误进行处理\n\n解决方法： 使用 try/catch 对错误进行处理\n\n\n# 三、\n\n状态码：404 Not Found\n\n\n1\n\n\n翻译： 404 找不到\n\n说明： 服务器找不到\n\n\n# 解决方法：\n\n\n# （一）查看请求服务器的域名是否正确\n\n * 查看代理配置中，target 配置项是否正\n\n\n# 一、携带 node_modules\n\n说明： 没安装依赖或插件\n\n解决方法：\n\n 1. 安装缺少的插件或依赖。\n 2. 去老师的 package.json 文件中拷贝对应依赖的版本到自己的 package.json 文件，然后删除 node_modules 目录，使用 npm i，重新下载 node_modules 目录\n\n\n# 二、未找到模块\n\n说明： 模块路径错误\n\n解决方法： 填写正确的路径\n\n\n# 三、Uncaught (in promise) ReferenceError: ??? is not defined\n\nUncaught (in promise) TypeError: Cannot read properties of undefined\n\nError: Cannot find ???\n\n说明： 没有引入 ??? 文件、变量名写错 解决方法： 注意看 ReferenceError 后面说明哪个文件没有引入，然后点击提示的错误文件，查看哪个文件没有引入，引入就可以了\n\n\n# 四、控制台没有报错，但是页面没有正常显示或运行\n\n说明： 变量语法错误 或 没有引入相关模块\n\n\n# 五、xhr.js?b50d:187 GET http://pcapi-xiaotuxian-front-devtest.itheima.net/home.new 404\n\n说明： 接口地址错误，或接口有问题\n\n\n# 六、[Vue warn]: Failed to resolve component: HomePanel\n\n说明： 组件导入错误\n\n解决方法： 正确导入组件\n\n\n# 七、Cannot read properties of null (reading 'result')\n\n翻译： 不能 读 属性 的 null （阅读 ‘【...】’） 解释： 无法读取 null 的属性（读取 ‘【...】’）\n\n说明： 【...】变量的内容不能为 null",normalizedContent:"# 一、\n\n[violation] added non-passive event listener to a scroll-blocking 'mousewheel' event. consider marking event handler as 'passive' to make the page more responsive. see https://www.chromestatus.com/feature/5745543795965952\n\n解决方法： （1）下载依赖包\n\nnpm i default-passive-events -s\n\n\n1\n\n\n（2）引入依赖包（-- main.js）\n\nimport 'default-passive-events'\n\n\n1\n\n\n\n# 一、\n\nuncaught (in promise) referenceerror: *** is not defined\n\n\n1\n\n\n说明： *** 未定义\n\n解决方法： （一）定义 ***\n\n（二）查看 *** 是否书写错误\n\n\n# 二、\n\n[vue warn]: error in v-on handler (promise/async): \"***\"\n\n\n1\n\n\n说明： *** 使用 async/await 时，没有对错误进行处理\n\n解决方法： 使用 try/catch 对错误进行处理\n\n\n# 三、\n\n状态码：404 not found\n\n\n1\n\n\n翻译： 404 找不到\n\n说明： 服务器找不到\n\n\n# 解决方法：\n\n\n# （一）查看请求服务器的域名是否正确\n\n * 查看代理配置中，target 配置项是否正\n\n\n# 一、携带 node_modules\n\n说明： 没安装依赖或插件\n\n解决方法：\n\n 1. 安装缺少的插件或依赖。\n 2. 去老师的 package.json 文件中拷贝对应依赖的版本到自己的 package.json 文件，然后删除 node_modules 目录，使用 npm i，重新下载 node_modules 目录\n\n\n# 二、未找到模块\n\n说明： 模块路径错误\n\n解决方法： 填写正确的路径\n\n\n# 三、uncaught (in promise) referenceerror: ??? is not defined\n\nuncaught (in promise) typeerror: cannot read properties of undefined\n\nerror: cannot find ???\n\n说明： 没有引入 ??? 文件、变量名写错 解决方法： 注意看 referenceerror 后面说明哪个文件没有引入，然后点击提示的错误文件，查看哪个文件没有引入，引入就可以了\n\n\n# 四、控制台没有报错，但是页面没有正常显示或运行\n\n说明： 变量语法错误 或 没有引入相关模块\n\n\n# 五、xhr.js?b50d:187 get http://pcapi-xiaotuxian-front-devtest.itheima.net/home.new 404\n\n说明： 接口地址错误，或接口有问题\n\n\n# 六、[vue warn]: failed to resolve component: homepanel\n\n说明： 组件导入错误\n\n解决方法： 正确导入组件\n\n\n# 七、cannot read properties of null (reading 'result')\n\n翻译： 不能 读 属性 的 null （阅读 ‘【...】’） 解释： 无法读取 null 的属性（读取 ‘【...】’）\n\n说明： 【...】变量的内容不能为 null",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"代码风格文档",frontmatter:{title:"代码风格文档",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/28f723/",categories:["《前端》笔记《其它》","编码规范"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/03.%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/01.%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E6%96%87%E6%A1%A3.html",relativePath:"《前端》笔记《其它》/03.编码规范/01.代码风格文档.md",key:"v-a62931a6",path:"/pages/28f723/",headersStr:null,content:'代码风格规范文档 Vue（推荐）：https://cn.vuejs.org/v2/style-guide/\n\n通过分析 github 代码库总结出来的工程师代码书写习惯（推荐）：http://alloyteam.github.io/CodeGuide/\n\n京东：https://guide.aotu.io/index.html\n\n腾讯：https://tgideas.qq.com/doc/index.html\n\nBootstrap：https://codeguide.bootcss.com/\n\n工具文档： eslint（代码检查工具）：https://eslint.bootcss.com/ Prettier（代码格式化工具）：\n\n项目命名 （1）以 my_project_ 开头 （2）小写方式 （3）下划线分隔\n\n例：my_project_name\n\n目录、文件命名 （1）小写方式 （2）下划线分隔\n\n目录命名 有复数结构时，要采用复数命名法\n\n例：scripts, styles, images, data_models\n\n注释 统一使用 /* */\n\n错误： // ...\n\n正确： /* ... */\n\nHTML （1）在属性上，使用双引号 （2）属性名全小写，用中划线做分隔符 （3）不要在自动闭合标签结尾处使用斜线\n\n错误：</img> 正确：<img>\n\n属性顺序 class id name 其它属性\n\n减少标签数量 在编写HTML代码时，需要尽量避免多余的父节点； 很多时候，需要通过迭代和重构来使HTML变得更少。\n\n错误：\n\n<span class="avatar">\n    <img src="...">\n</span>\n\n\n1\n2\n3\n\n\n正确：\n\n<img class="avatar" src="...">\n\n\n1\n\n\nCSS 命名 类名使用小写字母，以中划线分隔 id 采用驼峰式命名 scss 中的变量、函数、混合、placeholder 采用驼峰式命名\n\n属性声明顺序 相关的属性声明按右边的顺序做分组处理，组之间需要有一个空行 说明：声明顺序可以根据自己的喜好做好分组\n\n.declaration-order {\n  display: block;\n  float: right;\n\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 100;\n\n  border: 1px solid #e5e5e5;\n  border-radius: 3px;\n  width: 100px;\n  height: 100px;\n\n  font: normal 13px "Helvetica Neue", sans-serif;\n  line-height: 1.5;\n  text-align: center;\n\n  color: #333;\n  background-color: #f5f5f5;\n\n  opacity: 1;\n}\n\n\n去掉小数点前面的0 错误：color: rgba(0, 0, 0, 0.5); 正确：color: rgba(0, 0, 0, .5);\n\n同个属性不同前缀的写法需要在垂直方向保持对齐 正确： .element { -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px;\n\n    background: -webkit-linear-gradient(top, #fff 0, #eee 100%);\n    background:    -moz-linear-gradient(top, #fff 0, #eee 100%);\n    background:         linear-gradient(to bottom, #fff 0, #eee 100%);\n  }\n\n\nSCSS @import 引入的文件不需要开头的 \'_\' 和结尾的 \'.scss\'\n\n错误：\n  @import "_dialog.scss";\n\n正确：\n  @import "dialog";\n\n\nJavaScript 使用多行注释 /* * one space after \'*\' */\n\n使用单引号 var y = \'foo\'\n\n变量命名 （1）标准变量采用驼峰式命名 var thisIsMyName\n\n（2）\'ID\'在变量名中全大写\n  var goodID\n\n（3）\'URL\'在变量名中全大写\n  var reportURL\n\n（4）常量全大写，用下划线连接\n  const MAX_COUNT = 10;\n\n（5）构造函数，大写第一个字母\n  function Person(name) {\n    this.name = name;\n  }\n\n\nnull 适用场景： （1）初始化一个将来可能被赋值为对象的变量 （2）与已经初始化的变量做比较 （3）作为一个参数为对象的函数的调用传参 （4）作为一个返回对象的函数的返回值\n\n不适用场景：\n  （1）不要用null来判断函数调用时有无传参\n  （2）不要与未初始化的变量做比较\n\n\nVue 组件名 组件名为多个单词 组件名应该始终是多个单词的，根组件 App 以及 <transition>、<component> 之类的 Vue 内置组件除外。 这样做可以避免跟现有的以及未来的 HTML 元素相冲突，因为所有的 HTML 元素名称都是单个单词的。\n\n  错误：\n    Vue.component(\'todo\', {\n      // ...\n    })\n\n    export default {\n      name: \'Todo\',\n      // ...\n    }\n  \n  正确：\n    Vue.component(\'todo-item\', {\n      // ...\n    })\n\n    export default {\n      name: \'TodoItem\',\n      // ...\n    }\n\n单文件组件的文件名应该要么始终是单词大写开头 (PascalCase)，要么始终是横线连接 (kebab-case)\n\n展示类的、无逻辑的或无状态的组件，应该全部以一个特定的前缀开头，比如 Base、App 或 V\n  |- BaseButton.vue\n  |- BaseTable.vue\n  |- BaseIcon.vue\n\n  |- AppButton.vue\n  |- AppTable.vue\n  |- AppIcon.vue\n\n  |- VButton.vue\n  |- VTable.vue\n  |- VIcon.vue\n\n紧密耦合的组件名。和父组件紧密耦合的子组件应该以父组件名作为前缀命名\n  错误：\n    |- TodoList.vue\n    |- TodoItem.vue\n    |- TodoButton.vue\n\n  正确：\n    |- TodoList.vue\n    |- TodoListItem.vue\n    |- TodoListItemButton.vue\n\n完整单词的组件名。组件名应该倾向于完整单词而不是缩写\n  编辑器中的自动补全已经让书写长命名的代价非常之低了，而其带来的明确性却是非常宝贵的。不常用的缩写尤其应该避免。\n\n  错误：\n    |- SdSettings.vue\n    |- UProfOpts.vue\n\n  正确：\n    |- StudentDashboardSettings.vue\n    |- UserProfileOptions.vue\n\n\nProp 定义应该尽量详细 至少需要指定其类型\n\n错误：\n  props: [\'status\']\n\n正确：\n  props: {\n    status: {\n      type: Number\n    }\n  }\n\n\nProp 命名。在声明 prop 的时候，其命名应该使用 驼峰命名法，而在模板和 JSX 中应该使用 短横线命名法 props: { greetingText: String }\n\n<WelcomeMessage greeting-text="hi"/>\n\n\n不要把 v-if 和 v-for 同时用在同一个元素上 错误：\n\n<ul>\n  <li\n    v-for="user in users"\n    v-if="shouldShowUsers"\n    :key="user.id"\n  >\n    {{ user.name }}\n  </li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n正确：\n\n<ul v-if="shouldShowUsers">\n  <li\n    v-for="user in users"\n    :key="user.id"\n  >\n    {{ user.name }}\n  </li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n为组件样式设置作用域 <style scoped>\n\n多个属性独占一行\n\n<img\n  src="https://vuejs.org/images/logo.png"\n  alt="Vue Logo"\n>\n\n\n1\n2\n3\n4\n\n\n<MyComponent\n  foo="a"\n  bar="b"\n  baz="c"\n/>\n\n\n1\n2\n3\n4\n5\n\n\n避免在 scoped 中使用 元素选择器。大量使用元素选择器会影响性能 错误：\n\n  button {\n    background-color: red;\n  }\n\n\n1\n2\n3\n\n\n正确：\n\n.btn-close {\n  background-color: red;\n}\n\n\n1\n2\n3\n',normalizedContent:'代码风格规范文档 vue（推荐）：https://cn.vuejs.org/v2/style-guide/\n\n通过分析 github 代码库总结出来的工程师代码书写习惯（推荐）：http://alloyteam.github.io/codeguide/\n\n京东：https://guide.aotu.io/index.html\n\n腾讯：https://tgideas.qq.com/doc/index.html\n\nbootstrap：https://codeguide.bootcss.com/\n\n工具文档： eslint（代码检查工具）：https://eslint.bootcss.com/ prettier（代码格式化工具）：\n\n项目命名 （1）以 my_project_ 开头 （2）小写方式 （3）下划线分隔\n\n例：my_project_name\n\n目录、文件命名 （1）小写方式 （2）下划线分隔\n\n目录命名 有复数结构时，要采用复数命名法\n\n例：scripts, styles, images, data_models\n\n注释 统一使用 /* */\n\n错误： // ...\n\n正确： /* ... */\n\nhtml （1）在属性上，使用双引号 （2）属性名全小写，用中划线做分隔符 （3）不要在自动闭合标签结尾处使用斜线\n\n错误：</img> 正确：<img>\n\n属性顺序 class id name 其它属性\n\n减少标签数量 在编写html代码时，需要尽量避免多余的父节点； 很多时候，需要通过迭代和重构来使html变得更少。\n\n错误：\n\n<span class="avatar">\n    <img src="...">\n</span>\n\n\n1\n2\n3\n\n\n正确：\n\n<img class="avatar" src="...">\n\n\n1\n\n\ncss 命名 类名使用小写字母，以中划线分隔 id 采用驼峰式命名 scss 中的变量、函数、混合、placeholder 采用驼峰式命名\n\n属性声明顺序 相关的属性声明按右边的顺序做分组处理，组之间需要有一个空行 说明：声明顺序可以根据自己的喜好做好分组\n\n.declaration-order {\n  display: block;\n  float: right;\n\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 100;\n\n  border: 1px solid #e5e5e5;\n  border-radius: 3px;\n  width: 100px;\n  height: 100px;\n\n  font: normal 13px "helvetica neue", sans-serif;\n  line-height: 1.5;\n  text-align: center;\n\n  color: #333;\n  background-color: #f5f5f5;\n\n  opacity: 1;\n}\n\n\n去掉小数点前面的0 错误：color: rgba(0, 0, 0, 0.5); 正确：color: rgba(0, 0, 0, .5);\n\n同个属性不同前缀的写法需要在垂直方向保持对齐 正确： .element { -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px;\n\n    background: -webkit-linear-gradient(top, #fff 0, #eee 100%);\n    background:    -moz-linear-gradient(top, #fff 0, #eee 100%);\n    background:         linear-gradient(to bottom, #fff 0, #eee 100%);\n  }\n\n\nscss @import 引入的文件不需要开头的 \'_\' 和结尾的 \'.scss\'\n\n错误：\n  @import "_dialog.scss";\n\n正确：\n  @import "dialog";\n\n\njavascript 使用多行注释 /* * one space after \'*\' */\n\n使用单引号 var y = \'foo\'\n\n变量命名 （1）标准变量采用驼峰式命名 var thisismyname\n\n（2）\'id\'在变量名中全大写\n  var goodid\n\n（3）\'url\'在变量名中全大写\n  var reporturl\n\n（4）常量全大写，用下划线连接\n  const max_count = 10;\n\n（5）构造函数，大写第一个字母\n  function person(name) {\n    this.name = name;\n  }\n\n\nnull 适用场景： （1）初始化一个将来可能被赋值为对象的变量 （2）与已经初始化的变量做比较 （3）作为一个参数为对象的函数的调用传参 （4）作为一个返回对象的函数的返回值\n\n不适用场景：\n  （1）不要用null来判断函数调用时有无传参\n  （2）不要与未初始化的变量做比较\n\n\nvue 组件名 组件名为多个单词 组件名应该始终是多个单词的，根组件 app 以及 <transition>、<component> 之类的 vue 内置组件除外。 这样做可以避免跟现有的以及未来的 html 元素相冲突，因为所有的 html 元素名称都是单个单词的。\n\n  错误：\n    vue.component(\'todo\', {\n      // ...\n    })\n\n    export default {\n      name: \'todo\',\n      // ...\n    }\n  \n  正确：\n    vue.component(\'todo-item\', {\n      // ...\n    })\n\n    export default {\n      name: \'todoitem\',\n      // ...\n    }\n\n单文件组件的文件名应该要么始终是单词大写开头 (pascalcase)，要么始终是横线连接 (kebab-case)\n\n展示类的、无逻辑的或无状态的组件，应该全部以一个特定的前缀开头，比如 base、app 或 v\n  |- basebutton.vue\n  |- basetable.vue\n  |- baseicon.vue\n\n  |- appbutton.vue\n  |- apptable.vue\n  |- appicon.vue\n\n  |- vbutton.vue\n  |- vtable.vue\n  |- vicon.vue\n\n紧密耦合的组件名。和父组件紧密耦合的子组件应该以父组件名作为前缀命名\n  错误：\n    |- todolist.vue\n    |- todoitem.vue\n    |- todobutton.vue\n\n  正确：\n    |- todolist.vue\n    |- todolistitem.vue\n    |- todolistitembutton.vue\n\n完整单词的组件名。组件名应该倾向于完整单词而不是缩写\n  编辑器中的自动补全已经让书写长命名的代价非常之低了，而其带来的明确性却是非常宝贵的。不常用的缩写尤其应该避免。\n\n  错误：\n    |- sdsettings.vue\n    |- uprofopts.vue\n\n  正确：\n    |- studentdashboardsettings.vue\n    |- userprofileoptions.vue\n\n\nprop 定义应该尽量详细 至少需要指定其类型\n\n错误：\n  props: [\'status\']\n\n正确：\n  props: {\n    status: {\n      type: number\n    }\n  }\n\n\nprop 命名。在声明 prop 的时候，其命名应该使用 驼峰命名法，而在模板和 jsx 中应该使用 短横线命名法 props: { greetingtext: string }\n\n<welcomemessage greeting-text="hi"/>\n\n\n不要把 v-if 和 v-for 同时用在同一个元素上 错误：\n\n<ul>\n  <li\n    v-for="user in users"\n    v-if="shouldshowusers"\n    :key="user.id"\n  >\n    {{ user.name }}\n  </li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n正确：\n\n<ul v-if="shouldshowusers">\n  <li\n    v-for="user in users"\n    :key="user.id"\n  >\n    {{ user.name }}\n  </li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n为组件样式设置作用域 <style scoped>\n\n多个属性独占一行\n\n<img\n  src="https://vuejs.org/images/logo.png"\n  alt="vue logo"\n>\n\n\n1\n2\n3\n4\n\n\n<mycomponent\n  foo="a"\n  bar="b"\n  baz="c"\n/>\n\n\n1\n2\n3\n4\n5\n\n\n避免在 scoped 中使用 元素选择器。大量使用元素选择器会影响性能 错误：\n\n  button {\n    background-color: red;\n  }\n\n\n1\n2\n3\n\n\n正确：\n\n.btn-close {\n  background-color: red;\n}\n\n\n1\n2\n3\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"js",frontmatter:{title:"js",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/29bbaa/",categories:["《前端》笔记《其它》","编码规范"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/03.%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/02.js.html",relativePath:"《前端》笔记《其它》/03.编码规范/02.js.md",key:"v-630ed0b4",path:"/pages/29bbaa/",headersStr:null,content:'# 一、类名。短横线命名法\n\n如： <el-button class="login-btn">登陆</el-button>',normalizedContent:'# 一、类名。短横线命名法\n\n如： <el-button class="login-btn">登陆</el-button>',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"vue",frontmatter:{title:"vue",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/9dfa81/",categories:["《前端》笔记《其它》","编码规范"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/03.%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/03.vue.html",relativePath:"《前端》笔记《其它》/03.编码规范/03.vue.md",key:"v-d9275d64",path:"/pages/9dfa81/",headersStr:null,content:"# 一、公共组件目录名称需遵循 大驼峰命名法\n\n如：\n\n * components/DemoDemo/index.vue\n * components/DemoDemo1/index.vue\n\n\n# 二、路由组件目录名称需遵循 小驼峰命名法\n\n如：\n\n * views/demoDemo/index.vue\n * views/demoDemo1/index.vue\n\n\n# 三、组件名称的 name 配置项需遵循 大驼峰命名法\n\nexport default {\n  name: 'Demo'\n}\n\n\n1\n2\n3\n",normalizedContent:"# 一、公共组件目录名称需遵循 大驼峰命名法\n\n如：\n\n * components/demodemo/index.vue\n * components/demodemo1/index.vue\n\n\n# 二、路由组件目录名称需遵循 小驼峰命名法\n\n如：\n\n * views/demodemo/index.vue\n * views/demodemo1/index.vue\n\n\n# 三、组件名称的 name 配置项需遵循 大驼峰命名法\n\nexport default {\n  name: 'demo'\n}\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"部署到本地的 nginx 中",frontmatter:{title:"部署到本地的 nginx 中",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/48cb8c/",categories:["《前端》笔记《其它》","部署"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/04.%E9%83%A8%E7%BD%B2/01.%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%AC%E5%9C%B0%20nginx%20%E6%9C%8D%E5%8A%A1%E5%99%A8.html",relativePath:"《前端》笔记《其它》/04.部署/01.部署到本地 nginx 服务器.md",key:"v-55f28ba4",path:"/pages/48cb8c/",headers:[{level:2,title:"1、下载 跨域代理 中间件",slug:"_1、下载-跨域代理-中间件",normalizedTitle:"1、下载 跨域代理 中间件",charIndex:596},{level:2,title:"2、导入",slug:"_2、导入",normalizedTitle:"2、导入",charIndex:643},{level:2,title:"3、注册",slug:"_3、注册",normalizedTitle:"3、注册",charIndex:700}],headersStr:"1、下载 跨域代理 中间件 2、导入 3、注册",content:"参考文档： 人资项目\n\n\n# 一、创建 web 服务器目录\n\n在桌面创建一个目录，名字可以和项目名相同，这里用 zhengzhengrishang\n\n\n# 二、进入这个目录，并初始化 npm\n\nnpm init -y\n\n\n# 三、安装 koa 服务端框架 和 静态代码托管包\n\nnpm i koa koa-static\n\n\n# 四、将打包好的 dist 目录下的内容拷贝到 public 目录下（-- zhengzhengrishang/新建 public）\n\n\n# 五、新建后端服务主文件，并进行配置（-- zhengzhengrishang/新建 app.js）\n\nconst Koa = require('koa')\nconst serve = require('koa-static')\n\nconst app = new Koa() // 实例化 web 服务\n\napp.use(serve(__dirname + \"/public\")) // 设置需要 静态代码托管 的目录\n\napp.listen(3333, function() { // 监听端口\n  console.log('郑郑日上项目启动成功，访问地址：http://localhost:3333')\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 七、配置 生产 环境下的接口代理（-- 同上）\n\n\n# 1、下载 跨域代理 中间件\n\nnpm i koa2-proxy-middleware\n\n\n# 2、导入\n\nconst proxy = require('koa2-proxy-middleware')\n\n\n# 3、注册\n\napp.use(proxy ({\n  targets: {\n    '/api/(.*)': {\n      target: 'https://api.it120.cc/zcr',\n      changeOrigin: true,\n      pathRewrite: {\n        \"/api\": \"\"\n      }\n    }\n  }\n}))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",normalizedContent:"参考文档： 人资项目\n\n\n# 一、创建 web 服务器目录\n\n在桌面创建一个目录，名字可以和项目名相同，这里用 zhengzhengrishang\n\n\n# 二、进入这个目录，并初始化 npm\n\nnpm init -y\n\n\n# 三、安装 koa 服务端框架 和 静态代码托管包\n\nnpm i koa koa-static\n\n\n# 四、将打包好的 dist 目录下的内容拷贝到 public 目录下（-- zhengzhengrishang/新建 public）\n\n\n# 五、新建后端服务主文件，并进行配置（-- zhengzhengrishang/新建 app.js）\n\nconst koa = require('koa')\nconst serve = require('koa-static')\n\nconst app = new koa() // 实例化 web 服务\n\napp.use(serve(__dirname + \"/public\")) // 设置需要 静态代码托管 的目录\n\napp.listen(3333, function() { // 监听端口\n  console.log('郑郑日上项目启动成功，访问地址：http://localhost:3333')\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 七、配置 生产 环境下的接口代理（-- 同上）\n\n\n# 1、下载 跨域代理 中间件\n\nnpm i koa2-proxy-middleware\n\n\n# 2、导入\n\nconst proxy = require('koa2-proxy-middleware')\n\n\n# 3、注册\n\napp.use(proxy ({\n  targets: {\n    '/api/(.*)': {\n      target: 'https://api.it120.cc/zcr',\n      changeorigin: true,\n      pathrewrite: {\n        \"/api\": \"\"\n      }\n    }\n  }\n}))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",charsets:{cjk:!0}},{title:"部署到远程 nginx 服务器（宝塔）（推荐）",frontmatter:{title:"部署到远程 nginx 服务器（宝塔）（推荐）",date:"2022-06-28T11:42:38.000Z",permalink:"/pages/c32593/",categories:["《前端》笔记《其它》","部署"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/04.%E9%83%A8%E7%BD%B2/03.%E9%83%A8%E7%BD%B2%E5%88%B0%E8%BF%9C%E7%A8%8B%20nginx%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E5%AE%9D%E5%A1%94%EF%BC%89%EF%BC%88%E6%8E%A8%E8%8D%90%EF%BC%89.html",relativePath:"《前端》笔记《其它》/04.部署/03.部署到远程 nginx 服务器（宝塔）（推荐）.md",key:"v-3a277d54",path:"/pages/c32593/",headers:[{level:2,title:"【BUG】没有找到站点",slug:"【bug】没有找到站点",normalizedTitle:"【bug】没有找到站点",charIndex:518}],headersStr:"【BUG】没有找到站点",content:"# 一、在远程服务器中安装宝塔脚本\n\n说明： 最好把服务器的系统重装下 Ubuntu 系统： wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh && sudo bash install.sh ed8484bec\n\n\n# 二、放行 8888 端口\n\n说明： 只有放行 8888 端口才可以访问 宝塔面板\n\n服务器 → 防火墙/安全组 → 添加规则 协议：TCP 端口：8888 策略：允许 备注：宝塔面板\n\n\n# 三、进入外网面板\n\n打开生成的外网面板地址 → 使用生成的账号密码登录\n\n\n# 四、配置安全入口\n\n说明： 1、进入外网面板地址要在端口号后面加上安全码，否则会无法进入，显示 请使用正确的入口登录面板 2、忘记安全码可以服务器输入 sudo bt → 14，来查看安全码\n\n面板设置 → 安全入口 → 设置好记的 8 位数安全码\n\n\n# 四、安装 Nginx-Tengine2.2\n\n在弹出的推荐安装套件对 话框中选择 Nginx-Tengine2.2，其它推荐都取消勾选\n\n\n# 五、添加站点\n\n填写服务器域名，其它默认\n\n\n# 【BUG】没有找到站点\n\n检查添加的站点域名是否正确，携带 www 和 不携带 www 的域名都添加试试，如果还不行可以强制刷新浏览器 或 换一个浏览器试试",normalizedContent:"# 一、在远程服务器中安装宝塔脚本\n\n说明： 最好把服务器的系统重装下 ubuntu 系统： wget -o install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh && sudo bash install.sh ed8484bec\n\n\n# 二、放行 8888 端口\n\n说明： 只有放行 8888 端口才可以访问 宝塔面板\n\n服务器 → 防火墙/安全组 → 添加规则 协议：tcp 端口：8888 策略：允许 备注：宝塔面板\n\n\n# 三、进入外网面板\n\n打开生成的外网面板地址 → 使用生成的账号密码登录\n\n\n# 四、配置安全入口\n\n说明： 1、进入外网面板地址要在端口号后面加上安全码，否则会无法进入，显示 请使用正确的入口登录面板 2、忘记安全码可以服务器输入 sudo bt → 14，来查看安全码\n\n面板设置 → 安全入口 → 设置好记的 8 位数安全码\n\n\n# 四、安装 nginx-tengine2.2\n\n在弹出的推荐安装套件对 话框中选择 nginx-tengine2.2，其它推荐都取消勾选\n\n\n# 五、添加站点\n\n填写服务器域名，其它默认\n\n\n# 【bug】没有找到站点\n\n检查添加的站点域名是否正确，携带 www 和 不携带 www 的域名都添加试试，如果还不行可以强制刷新浏览器 或 换一个浏览器试试",charsets:{cjk:!0}},{title:"部署到远程服务器的 nginx 中",frontmatter:{title:"部署到远程服务器的 nginx 中",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/228fd7/",categories:["《前端》笔记《其它》","部署"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/04.%E9%83%A8%E7%BD%B2/02.%E9%83%A8%E7%BD%B2%E5%88%B0%E8%BF%9C%E7%A8%8B%20nginx%20%E6%9C%8D%E5%8A%A1%E5%99%A8.html",relativePath:"《前端》笔记《其它》/04.部署/02.部署到远程 nginx 服务器.md",key:"v-5605576e",path:"/pages/228fd7/",headers:[{level:2,title:"1、重置远程服务器密码",slug:"_1、重置远程服务器密码",normalizedTitle:"1、重置远程服务器密码",charIndex:796},{level:2,title:"1、添加用户",slug:"_1、添加用户",normalizedTitle:"1、添加用户",charIndex:812},{level:2,title:"2、打开 sudoers 文件",slug:"_2、打开-sudoers-文件",normalizedTitle:"2、打开 sudoers 文件",charIndex:873},{level:2,title:"3、给予用户管理员权限",slug:"_3、给予用户管理员权限",normalizedTitle:"3、给予用户管理员权限",charIndex:916},{level:2,title:"4、退出远程服务器",slug:"_4、退出远程服务器",normalizedTitle:"4、退出远程服务器",charIndex:1327},{level:2,title:"5、以后使用刚刚创建的 zcr 用户进行连接即可",slug:"_5、以后使用刚刚创建的-zcr-用户进行连接即可",normalizedTitle:"5、以后使用刚刚创建的 zcr 用户进行连接即可",charIndex:1347},{level:2,title:"（1）创建密钥（-- 腾讯云/控制台/轻量应用服务器/密钥）",slug:"_1-创建密钥-腾讯云-控制台-轻量应用服务器-密钥",normalizedTitle:"（1）创建密钥（-- 腾讯云/控制台/轻量应用服务器/密钥）",charIndex:1450},{level:2,title:"（2）绑定实例",slug:"_2-绑定实例",normalizedTitle:"（2）绑定实例",charIndex:1521},{level:2,title:"（3）将密钥上传到远程服务器",slug:"_3-将密钥上传到远程服务器",normalizedTitle:"（3）将密钥上传到远程服务器",charIndex:1542},{level:2,title:"1、登录远程服务器",slug:"_1、登录远程服务器",normalizedTitle:"1、登录远程服务器",charIndex:1970},{level:2,title:"2、升级 apt-get 包管理工具",slug:"_2、升级-apt-get-包管理工具",normalizedTitle:"2、升级 apt-get 包管理工具",charIndex:1984},{level:2,title:"1、安装 nginx（轻量级 web 服务器）",slug:"_1、安装-nginx-轻量级-web-服务器",normalizedTitle:"1、安装 nginx（轻量级 web 服务器）",charIndex:2049},{level:2,title:"2、安装 nodejs 环境",slug:"_2、安装-nodejs-环境",normalizedTitle:"2、安装 nodejs 环境",charIndex:2105},{level:2,title:"3、安装 npm",slug:"_3、安装-npm",normalizedTitle:"3、安装 npm",charIndex:2324},{level:2,title:"4、切换 npm 下载资源的镜像地址",slug:"_4、切换-npm-下载资源的镜像地址",normalizedTitle:"4、切换 npm 下载资源的镜像地址",charIndex:2450},{level:2,title:"5、测试",slug:"_5、测试",normalizedTitle:"5、测试",charIndex:2538},{level:2,title:"1、进入到该目录下",slug:"_1、进入到该目录下",normalizedTitle:"1、进入到该目录下",charIndex:2618},{level:2,title:"2、克隆远程仓库到该目录中",slug:"_2、克隆远程仓库到该目录中",normalizedTitle:"2、克隆远程仓库到该目录中",charIndex:2650},{level:3,title:"BUG：远程仓库 和 远程服务器没有建立连接",slug:"bug-远程仓库-和-远程服务器没有建立连接",normalizedTitle:"bug：远程仓库 和 远程服务器没有建立连接",charIndex:2730},{level:2,title:"4、进入到项目中",slug:"_4、进入到项目中",normalizedTitle:"4、进入到项目中",charIndex:2991},{level:2,title:"5、安装依赖",slug:"_5、安装依赖",normalizedTitle:"5、安装依赖",charIndex:3047},{level:3,title:"BUG：报很多 npm ERR 的错，而且也没有出现 node_modules 这个目录",slug:"bug-报很多-npm-err-的错-而且也没有出现-node-modules-这个目录",normalizedTitle:"bug：报很多 npm err 的错，而且也没有出现 node_modules 这个目录",charIndex:3070},{level:2,title:"6、打包项目",slug:"_6、打包项目",normalizedTitle:"6、打包项目",charIndex:3170},{level:2,title:"1、打开 default 文件",slug:"_1、打开-default-文件",normalizedTitle:"1、打开 default 文件",charIndex:3259},{level:2,title:"2、修改配置",slug:"_2、修改配置",normalizedTitle:"2、修改配置",charIndex:3324},{level:2,title:"3、检查语法（可以用来查看 nginx 的配置文件所在位置）",slug:"_3、检查语法-可以用来查看-nginx-的配置文件所在位置",normalizedTitle:"3、检查语法（可以用来查看 nginx 的配置文件所在位置）",charIndex:3426},{level:2,title:"4、重启 nginx",slug:"_4、重启-nginx",normalizedTitle:"4、重启 nginx",charIndex:3517},{level:2,title:"（1）申请免费证书（-- 腾讯云/控制台/搜索 ssl/选择 ssl 证书/我的证书）",slug:"_1-申请免费证书-腾讯云-控制台-搜索-ssl-选择-ssl-证书-我的证书",normalizedTitle:"（1）申请免费证书（-- 腾讯云/控制台/搜索 ssl/选择 ssl 证书/我的证书）",charIndex:3625},{level:2,title:"（2）下载证书（-- 同上）",slug:"_2-下载证书-同上",normalizedTitle:"（2）下载证书（-- 同上）",charIndex:3694},{level:2,title:"（3） 上传证书文件到远程服务器 并 修改 nginx 配置文件",slug:"_3-上传证书文件到远程服务器-并-修改-nginx-配置文件",normalizedTitle:"（3） 上传证书文件到远程服务器 并 修改 nginx 配置文件",charIndex:3724},{level:3,title:"1、打开 FinalShell 软件",slug:"_1、打开-finalshell-软件",normalizedTitle:"1、打开 finalshell 软件",charIndex:3761},{level:3,title:"2、点击目录图标",slug:"_2、点击目录图标",normalizedTitle:"2、点击目录图标",charIndex:3784},{level:3,title:"3、点击菜单栏第一个图标",slug:"_3、点击菜单栏第一个图标",normalizedTitle:"3、点击菜单栏第一个图标",charIndex:3797},{level:3,title:"4、点击 SSH 连接(Linux)",slug:"_4、点击-ssh-连接-linux",normalizedTitle:"4、点击 ssh 连接(linux)",charIndex:3814},{level:3,title:"5、推荐连接远程服务器的信息",slug:"_5、推荐连接远程服务器的信息",normalizedTitle:"5、推荐连接远程服务器的信息",charIndex:3837},{level:3,title:"6、点击连接",slug:"_6、点击连接",normalizedTitle:"6、点击连接",charIndex:3941},{level:3,title:"7、进入到远程服务器目录中",slug:"_7、进入到远程服务器目录中",normalizedTitle:"7、进入到远程服务器目录中",charIndex:3952},{level:3,title:"8、创建 ssl 目录",slug:"_8、创建-ssl-目录",normalizedTitle:"8、创建 ssl 目录",charIndex:3976},{level:3,title:"9、进入到 sll 目录中",slug:"_9、进入到-sll-目录中",normalizedTitle:"9、进入到 sll 目录中",charIndex:4008},{level:3,title:"10、上传证书 秘钥、文件",slug:"_10、上传证书-秘钥、文件",normalizedTitle:"10、上传证书 秘钥、文件",charIndex:4034},{level:3,title:"11、打开 nginx 配置文件",slug:"_11、打开-nginx-配置文件",normalizedTitle:"11、打开 nginx 配置文件",charIndex:4061},{level:3,title:"12、修改 nginx 配置文件",slug:"_12、修改-nginx-配置文件",normalizedTitle:"12、修改 nginx 配置文件",charIndex:4162},{level:3,title:"13、检测语法",slug:"_13、检测语法",normalizedTitle:"13、检测语法",charIndex:5015},{level:3,title:"14、重启 nginx",slug:"_14、重启-nginx",normalizedTitle:"14、重启 nginx",charIndex:5042},{level:3,title:"15、测试",slug:"_15、测试",normalizedTitle:"15、测试",charIndex:5080}],headersStr:"1、重置远程服务器密码 1、添加用户 2、打开 sudoers 文件 3、给予用户管理员权限 4、退出远程服务器 5、以后使用刚刚创建的 zcr 用户进行连接即可 （1）创建密钥（-- 腾讯云/控制台/轻量应用服务器/密钥） （2）绑定实例 （3）将密钥上传到远程服务器 1、登录远程服务器 2、升级 apt-get 包管理工具 1、安装 nginx（轻量级 web 服务器） 2、安装 nodejs 环境 3、安装 npm 4、切换 npm 下载资源的镜像地址 5、测试 1、进入到该目录下 2、克隆远程仓库到该目录中 BUG：远程仓库 和 远程服务器没有建立连接 4、进入到项目中 5、安装依赖 BUG：报很多 npm ERR 的错，而且也没有出现 node_modules 这个目录 6、打包项目 1、打开 default 文件 2、修改配置 3、检查语法（可以用来查看 nginx 的配置文件所在位置） 4、重启 nginx （1）申请免费证书（-- 腾讯云/控制台/搜索 ssl/选择 ssl 证书/我的证书） （2）下载证书（-- 同上） （3） 上传证书文件到远程服务器 并 修改 nginx 配置文件 1、打开 FinalShell 软件 2、点击目录图标 3、点击菜单栏第一个图标 4、点击 SSH 连接(Linux) 5、推荐连接远程服务器的信息 6、点击连接 7、进入到远程服务器目录中 8、创建 ssl 目录 9、进入到 sll 目录中 10、上传证书 秘钥、文件 11、打开 nginx 配置文件 12、修改 nginx 配置文件 13、检测语法 14、重启 nginx 15、测试",content:'# 知识点：部署到远程服务器\n\n说明： 该流程由 运维 部署\n\n轻量应用服务器 文档： https://cloud.tencent.com/document/product/1207\n\n参考 视频： https://www.bilibili.com/video/BV1ZT4y1c7iL?p=12\n\n视频： https://www.bilibili.com/video/BV1334y1U7Wz?spm_id_from=333.337.search-card.all.click\n\n平台： 腾讯云\n\n服务器配置：\n\n * 类型： 2 核 4G 轻量级服务器\n * 宽带： 6M\n * 系统盘： 60GB SSD盘\n * 月流量： 1000GB\n\n\n# 镜像\n\n应用镜像：适合不会 Linux 操作系统的用户 系统镜像：Ubuntu 20.04 LTS（这个是 Linux 其中的一个版本）（推荐）\n\n\n# 域名实名认证（满 72 小时后才可备案）\n\n\n# 备案\n\n科普： 使用中国大陆境内服务器开办网站，必须完成 ICP 备案，并取得工信部备案号\n\n时长： 20 个工作日内。（我只用了 3 天） - 服务器平台（腾讯云）将会在 1 个工作日左右将您的备案订单上报至通信管理局。（腾讯客服会打电话向你核实信息。然后在打电话向你的紧急联系人核对信息） - 通信管理局将在 20 个工作日内完成审核\n\n请做好以下准备： 1、注册域名\n\n2、购买服务器\n\n\n# 公安备案\n\n说明： 网站需要在备案通过后的 30 天内进行公安备案\n\n具体操作流程 和 填写信息： https://cloud.tencent.com/document/product/243/19142\n\n\n# 解析域名\n\n1、主机记录选择 www 2、记录值为远程服务器 ip\n\n\n# 添加用户，并给予这个用户管理员的权限\n\n\n# 1、重置远程服务器密码\n\n\n# 1、添加用户\n\nsudo adduser zcr\n\n * 创建密码\n * 确认密码\n * 信息默认不填\n * Y\n\n\n# 2、打开 sudoers 文件\n\nsudo vim /etc/sudoers\n\n\n# 3、给予用户管理员权限\n\nDefaults        env_reset\nDefaults        mail_badpass\nDefaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"\n\nroot    ALL=(ALL:ALL) ALL\n\n%admin ALL=(ALL) ALL\n\n%sudo   ALL=(ALL:ALL) ALL\n-- 增\n  zcr ALL=(ALL:ALL) ALL\n--\n\nlighthouse ALL=(ALL) NOPASSWD: ALL\nubuntu  ALL=(ALL:ALL) NOPASSWD: ALL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n * 强制报错：W!\n * 退出：q\n\n\n# 4、退出远程服务器\n\nexit\n\n\n# 5、以后使用刚刚创建的 zcr 用户进行连接即可\n\nssh zcr@124.221.216.72\n\n\n# 配置 SSH（没配置成功，先跳过这一步吧）\n\n作用： 以后登录远程服务器就不需要输入密码了\n\n\n# （1）创建密钥（-- 腾讯云/控制台/轻量应用服务器/密钥）\n\n说明： 创建完毕会自动下载一个密钥，要保存好，一会要上传到远程服务器\n\n\n# （2）绑定实例\n\n绑定远程服务器\n\n\n# （3）将密钥上传到远程服务器\n\n说明： 这个命令不需要登录 远程服务器，直接在终端输入即可\n\nssh-copy-id -i ~/.ssh/密钥名称 用户@远程服务器ip\n\n例： ssh-copy-id -i ~/.ssh/tenXunYunQinqLiangFuWuQi.pub zcr@124.221.216.72\n\n文档（以 mac 系统为例）： 1、Ubuntu 系统如何使用 root 用户登录实例？https://cloud.tencent.com/document/product/1207/44569 2、管理密钥 https://cloud.tencent.com/document/product/1207/44573 2、使用 SSH 登录 Linux 实例 / 使用密钥登录 https://cloud.tencent.com/document/product/1207/44643\n\n\n# 升级 apt-get 包管理工具\n\n\n# 1、登录远程服务器\n\n\n# 2、升级 apt-get 包管理工具\n\nsudo apt-get update\n\n\n# 在远程服务器中 配置环境、安装包\n\n\n# 1、安装 nginx（轻量级 web 服务器）\n\nsudo apt-get install nginx\n\n\n# 2、安装 nodejs 环境\n\nsudo apt-get install nodejs\n\n说明： 安装的版本比较低，如果是版本 10 的需要手动升级，目前稳定版是版本 16\n\n查看版本： node --version\n\n升级到最新版： 因为 nodejs 不能自升级到最新版，所以需要借助 n 这个库\n\n 1. 下载 n 包： sudo npm i -g n\n 2. 升级 node 至最新的稳定版： sudo n stable\n\n\n# 3、安装 npm\n\nsudo apt-get install npm\n\n说明： 版本如果是 6 的需要手动升级，目前稳定版是版本 8\n\n查看版本： npm --version\n\n升级到最新版： sudo npm i -g npm@latest\n\n\n# 4、切换 npm 下载资源的镜像地址\n\n下载： sudo npm i nrm -g\n\n查看镜像地址： nrm ls\n\n切换为淘宝的镜像： nrm use taobao\n\n\n# 5、测试\n\n浏览器输入服务器 ip 或 域名，如果显示 Welcome to nginx! 代表配置成功\n\n\n# 将远程仓库中的项目部署到远程服务器中\n\n\n# 1、进入到该目录下\n\ncd /var/www/html\n\n\n# 2、克隆远程仓库到该目录中\n\nsudo git clone <远程仓库中的 HTTPS>\n\n * 输入 gitee 账号\n * 输入 gitee 密码\n\n\n# BUG：远程仓库 和 远程服务器没有建立连接\n\n\n\n解决方法： 将服务器的 SSH 公钥添加到远程仓库中\n\n1、返回远程服务器根目录 2、进入到 .ssh 目录目录中：cd .ssh 3、创建公钥和密钥：ssh-keygen 4、查看公钥，并复制内容：car id_rsa.pub 5、进入到远程仓库中 → 管理 → 部署公钥管理 → 添加公钥 → 设置标题 → 将公钥粘贴到内容中 → 添加 6、进入到 vue 目录下：/var/www/html/vue/ 7、git clone <远程仓库中的 HTTPS>\n\n\n# 4、进入到项目中\n\ncd <项目名称>\n\n例： cd my-zhengzhengrishang-pc/\n\n\n# 5、安装依赖\n\nsudo npm i\n\n\n# BUG：报很多 npm ERR 的错，而且也没有出现 node_modules 这个目录\n\n解决方法： 重新安装本机在使用的 npm 版本 sudo npm i -g npm@6.14.13\n\n\n# 6、打包项目\n\n说明： 这里如果打包不成功可以现在本地打包在上传\n\nsudo npm run build\n\n\n# 修改 nginx 配置文件，使其响应项目中的 html\n\n\n# 1、打开 default 文件\n\nsudo vim /etc/nginx/sites-available/default\n\n\n# 2、修改配置\n\n-- 改（旧）\nroot /var/www/html;\n--\n\n-- 改（新）\nroot /var/www/html/项目目录/dist \n--\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 3、检查语法（可以用来查看 nginx 的配置文件所在位置）\n\nsudo nginx -t\n\n说明： 显示 syntax is ok、successful 这些单词代表成功\n\n\n# 4、重启 nginx\n\nsudo nginx -s reload\n\n\n# 开启 https\n\n文档： https://cloud.tencent.com/document/product/400/35244\n\n\n# （1）申请免费证书（-- 腾讯云/控制台/搜索 ssl/选择 ssl 证书/我的证书）\n\n说明： 跟着推荐选，只填必填的就可以了\n\n\n# （2）下载证书（-- 同上）\n\n下载 Nginx\n\n\n\n# （3） 上传证书文件到远程服务器 并 修改 nginx 配置文件\n\n\n# 1、打开 FinalShell 软件\n\n\n# 2、点击目录图标\n\n\n# 3、点击菜单栏第一个图标\n\n\n# 4、点击 SSH 连接(Linux)\n\n\n# 5、推荐连接远程服务器的信息\n\n * 名称：自定义\n * 主机：远程服务器官网 IP\n * 端口：22\n * 认证方法：公钥\n * 用户名：远程服务器用户名\n * 私钥：在配置 SSH 时下载的私钥\n\n\n# 6、点击连接\n\n\n# 7、进入到远程服务器目录中\n\ncd /\n\n\n# 8、创建 ssl 目录\n\nsduo mkdir ssl\n\n\n# 9、进入到 sll 目录中\n\ncd ssl\n\n\n# 10、上传证书 秘钥、文件\n\nsudo rz\n\n\n# 11、打开 nginx 配置文件\n\n提示： default 文件最好备份一下，如果配置不成功方便改回来\n\nsudo vim /etc/nginx/sites-available/default\n\n\n# 12、修改 nginx 配置文件\n\n科普： Nginx 可以配置多个服务器，一个Server就是一个服务器\n\n-- 增\nserver {\n  # SSL 访问端口号为 443\n  listen 443 ssl;\n\n  # 绑定证书的域名\n  server_name zhengzhengrishang.cc;\n\n  # 证书文件所在路径\n  ssl_certificate /ssl/zhengzhengrishang.cc_bundle.crt;\n\n  # 私钥文件所在路径\n  ssl_certificate_key /ssl/zhengzhengrishang.cc.key;\n\n  # 代理配置\n  location / {\n    # 网站默认打开文件所在目录\n    root /var/www/html/demo;\n\n    # 网站默认打开文件名称\n    index index.html index.htm;\n  }\n}\n--\n\nserver {\n  listen 80 default_server;\n  listen [::]:80 default_server;\n\n  root /var/www/html/demo;\n\n  index index.html index.html index.nginx-debian.html;\n\n  server_name _;\n\n  location / {\n          try_files $uri $uri/ =404;\n  }\n\n  -- 增\n  # 永久重定向\n  return 301 https://www.$host$request_uri;\n  --\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n\n# 13、检测语法\n\nsudo nginx -t\n\n\n# 14、重启 nginx\n\nsudo nginx -s reload\n\n\n# 15、测试\n\n访问 http 跳转到 https 代表成功\n\n\n# 配置 生产 环境下的接口代理（-- sudo vim /etc/nginx/sites-available/default）\n\nserver {\n  ...\n\n  # 拦截携带 / 的接口\n  location / {\n    # 网站默认打开文件所在目录\n    root /var/www/html/demo;\n\n    # 网站默认打开文件名称\n    index index.html index.htm;\n  }\n\n  -- 增\n  # 拦截携带 /api 的接口\n  location /api {\n    # 代理到的目标地址\n    proxy_pass https://api.it120.cc/zcr;\n  }\n  --\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 知识点：部署到远程服务器\n\n说明： 该流程由 运维 部署\n\n轻量应用服务器 文档： https://cloud.tencent.com/document/product/1207\n\n参考 视频： https://www.bilibili.com/video/bv1zt4y1c7il?p=12\n\n视频： https://www.bilibili.com/video/bv1334y1u7wz?spm_id_from=333.337.search-card.all.click\n\n平台： 腾讯云\n\n服务器配置：\n\n * 类型： 2 核 4g 轻量级服务器\n * 宽带： 6m\n * 系统盘： 60gb ssd盘\n * 月流量： 1000gb\n\n\n# 镜像\n\n应用镜像：适合不会 linux 操作系统的用户 系统镜像：ubuntu 20.04 lts（这个是 linux 其中的一个版本）（推荐）\n\n\n# 域名实名认证（满 72 小时后才可备案）\n\n\n# 备案\n\n科普： 使用中国大陆境内服务器开办网站，必须完成 icp 备案，并取得工信部备案号\n\n时长： 20 个工作日内。（我只用了 3 天） - 服务器平台（腾讯云）将会在 1 个工作日左右将您的备案订单上报至通信管理局。（腾讯客服会打电话向你核实信息。然后在打电话向你的紧急联系人核对信息） - 通信管理局将在 20 个工作日内完成审核\n\n请做好以下准备： 1、注册域名\n\n2、购买服务器\n\n\n# 公安备案\n\n说明： 网站需要在备案通过后的 30 天内进行公安备案\n\n具体操作流程 和 填写信息： https://cloud.tencent.com/document/product/243/19142\n\n\n# 解析域名\n\n1、主机记录选择 www 2、记录值为远程服务器 ip\n\n\n# 添加用户，并给予这个用户管理员的权限\n\n\n# 1、重置远程服务器密码\n\n\n# 1、添加用户\n\nsudo adduser zcr\n\n * 创建密码\n * 确认密码\n * 信息默认不填\n * y\n\n\n# 2、打开 sudoers 文件\n\nsudo vim /etc/sudoers\n\n\n# 3、给予用户管理员权限\n\ndefaults        env_reset\ndefaults        mail_badpass\ndefaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"\n\nroot    all=(all:all) all\n\n%admin all=(all) all\n\n%sudo   all=(all:all) all\n-- 增\n  zcr all=(all:all) all\n--\n\nlighthouse all=(all) nopasswd: all\nubuntu  all=(all:all) nopasswd: all\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n * 强制报错：w!\n * 退出：q\n\n\n# 4、退出远程服务器\n\nexit\n\n\n# 5、以后使用刚刚创建的 zcr 用户进行连接即可\n\nssh zcr@124.221.216.72\n\n\n# 配置 ssh（没配置成功，先跳过这一步吧）\n\n作用： 以后登录远程服务器就不需要输入密码了\n\n\n# （1）创建密钥（-- 腾讯云/控制台/轻量应用服务器/密钥）\n\n说明： 创建完毕会自动下载一个密钥，要保存好，一会要上传到远程服务器\n\n\n# （2）绑定实例\n\n绑定远程服务器\n\n\n# （3）将密钥上传到远程服务器\n\n说明： 这个命令不需要登录 远程服务器，直接在终端输入即可\n\nssh-copy-id -i ~/.ssh/密钥名称 用户@远程服务器ip\n\n例： ssh-copy-id -i ~/.ssh/tenxunyunqinqliangfuwuqi.pub zcr@124.221.216.72\n\n文档（以 mac 系统为例）： 1、ubuntu 系统如何使用 root 用户登录实例？https://cloud.tencent.com/document/product/1207/44569 2、管理密钥 https://cloud.tencent.com/document/product/1207/44573 2、使用 ssh 登录 linux 实例 / 使用密钥登录 https://cloud.tencent.com/document/product/1207/44643\n\n\n# 升级 apt-get 包管理工具\n\n\n# 1、登录远程服务器\n\n\n# 2、升级 apt-get 包管理工具\n\nsudo apt-get update\n\n\n# 在远程服务器中 配置环境、安装包\n\n\n# 1、安装 nginx（轻量级 web 服务器）\n\nsudo apt-get install nginx\n\n\n# 2、安装 nodejs 环境\n\nsudo apt-get install nodejs\n\n说明： 安装的版本比较低，如果是版本 10 的需要手动升级，目前稳定版是版本 16\n\n查看版本： node --version\n\n升级到最新版： 因为 nodejs 不能自升级到最新版，所以需要借助 n 这个库\n\n 1. 下载 n 包： sudo npm i -g n\n 2. 升级 node 至最新的稳定版： sudo n stable\n\n\n# 3、安装 npm\n\nsudo apt-get install npm\n\n说明： 版本如果是 6 的需要手动升级，目前稳定版是版本 8\n\n查看版本： npm --version\n\n升级到最新版： sudo npm i -g npm@latest\n\n\n# 4、切换 npm 下载资源的镜像地址\n\n下载： sudo npm i nrm -g\n\n查看镜像地址： nrm ls\n\n切换为淘宝的镜像： nrm use taobao\n\n\n# 5、测试\n\n浏览器输入服务器 ip 或 域名，如果显示 welcome to nginx! 代表配置成功\n\n\n# 将远程仓库中的项目部署到远程服务器中\n\n\n# 1、进入到该目录下\n\ncd /var/www/html\n\n\n# 2、克隆远程仓库到该目录中\n\nsudo git clone <远程仓库中的 https>\n\n * 输入 gitee 账号\n * 输入 gitee 密码\n\n\n# bug：远程仓库 和 远程服务器没有建立连接\n\n\n\n解决方法： 将服务器的 ssh 公钥添加到远程仓库中\n\n1、返回远程服务器根目录 2、进入到 .ssh 目录目录中：cd .ssh 3、创建公钥和密钥：ssh-keygen 4、查看公钥，并复制内容：car id_rsa.pub 5、进入到远程仓库中 → 管理 → 部署公钥管理 → 添加公钥 → 设置标题 → 将公钥粘贴到内容中 → 添加 6、进入到 vue 目录下：/var/www/html/vue/ 7、git clone <远程仓库中的 https>\n\n\n# 4、进入到项目中\n\ncd <项目名称>\n\n例： cd my-zhengzhengrishang-pc/\n\n\n# 5、安装依赖\n\nsudo npm i\n\n\n# bug：报很多 npm err 的错，而且也没有出现 node_modules 这个目录\n\n解决方法： 重新安装本机在使用的 npm 版本 sudo npm i -g npm@6.14.13\n\n\n# 6、打包项目\n\n说明： 这里如果打包不成功可以现在本地打包在上传\n\nsudo npm run build\n\n\n# 修改 nginx 配置文件，使其响应项目中的 html\n\n\n# 1、打开 default 文件\n\nsudo vim /etc/nginx/sites-available/default\n\n\n# 2、修改配置\n\n-- 改（旧）\nroot /var/www/html;\n--\n\n-- 改（新）\nroot /var/www/html/项目目录/dist \n--\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 3、检查语法（可以用来查看 nginx 的配置文件所在位置）\n\nsudo nginx -t\n\n说明： 显示 syntax is ok、successful 这些单词代表成功\n\n\n# 4、重启 nginx\n\nsudo nginx -s reload\n\n\n# 开启 https\n\n文档： https://cloud.tencent.com/document/product/400/35244\n\n\n# （1）申请免费证书（-- 腾讯云/控制台/搜索 ssl/选择 ssl 证书/我的证书）\n\n说明： 跟着推荐选，只填必填的就可以了\n\n\n# （2）下载证书（-- 同上）\n\n下载 nginx\n\n\n\n# （3） 上传证书文件到远程服务器 并 修改 nginx 配置文件\n\n\n# 1、打开 finalshell 软件\n\n\n# 2、点击目录图标\n\n\n# 3、点击菜单栏第一个图标\n\n\n# 4、点击 ssh 连接(linux)\n\n\n# 5、推荐连接远程服务器的信息\n\n * 名称：自定义\n * 主机：远程服务器官网 ip\n * 端口：22\n * 认证方法：公钥\n * 用户名：远程服务器用户名\n * 私钥：在配置 ssh 时下载的私钥\n\n\n# 6、点击连接\n\n\n# 7、进入到远程服务器目录中\n\ncd /\n\n\n# 8、创建 ssl 目录\n\nsduo mkdir ssl\n\n\n# 9、进入到 sll 目录中\n\ncd ssl\n\n\n# 10、上传证书 秘钥、文件\n\nsudo rz\n\n\n# 11、打开 nginx 配置文件\n\n提示： default 文件最好备份一下，如果配置不成功方便改回来\n\nsudo vim /etc/nginx/sites-available/default\n\n\n# 12、修改 nginx 配置文件\n\n科普： nginx 可以配置多个服务器，一个server就是一个服务器\n\n-- 增\nserver {\n  # ssl 访问端口号为 443\n  listen 443 ssl;\n\n  # 绑定证书的域名\n  server_name zhengzhengrishang.cc;\n\n  # 证书文件所在路径\n  ssl_certificate /ssl/zhengzhengrishang.cc_bundle.crt;\n\n  # 私钥文件所在路径\n  ssl_certificate_key /ssl/zhengzhengrishang.cc.key;\n\n  # 代理配置\n  location / {\n    # 网站默认打开文件所在目录\n    root /var/www/html/demo;\n\n    # 网站默认打开文件名称\n    index index.html index.htm;\n  }\n}\n--\n\nserver {\n  listen 80 default_server;\n  listen [::]:80 default_server;\n\n  root /var/www/html/demo;\n\n  index index.html index.html index.nginx-debian.html;\n\n  server_name _;\n\n  location / {\n          try_files $uri $uri/ =404;\n  }\n\n  -- 增\n  # 永久重定向\n  return 301 https://www.$host$request_uri;\n  --\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n\n# 13、检测语法\n\nsudo nginx -t\n\n\n# 14、重启 nginx\n\nsudo nginx -s reload\n\n\n# 15、测试\n\n访问 http 跳转到 https 代表成功\n\n\n# 配置 生产 环境下的接口代理（-- sudo vim /etc/nginx/sites-available/default）\n\nserver {\n  ...\n\n  # 拦截携带 / 的接口\n  location / {\n    # 网站默认打开文件所在目录\n    root /var/www/html/demo;\n\n    # 网站默认打开文件名称\n    index index.html index.htm;\n  }\n\n  -- 增\n  # 拦截携带 /api 的接口\n  location /api {\n    # 代理到的目标地址\n    proxy_pass https://api.it120.cc/zcr;\n  }\n  --\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0}},{title:"03、Web 应用托管",frontmatter:{title:"03、Web 应用托管",date:"2022-06-27T22:04:50.000Z",permalink:"/pages/491521/",categories:["《前端》笔记《其它》","部署"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/04.%E9%83%A8%E7%BD%B2/04.Web%20%E5%BA%94%E7%94%A8%E6%89%98%E7%AE%A1.html",relativePath:"《前端》笔记《其它》/04.部署/04.Web 应用托管.md",key:"v-1e0296eb",path:"/pages/491521/",headersStr:null,content:"视频： https://www.bilibili.com/video/BV1mQ4y1S7y3?p=9&spm_id_from=pageDriver&vd_source=ca727b605400f1cddccb1f530ef80c5f",normalizedContent:"视频： https://www.bilibili.com/video/bv1mq4y1s7y3?p=9&spm_id_from=pagedriver&vd_source=ca727b605400f1cddccb1f530ef80c5f",charsets:{cjk:!0}},{title:"一台服务器部署多个项目",frontmatter:{title:"一台服务器部署多个项目",date:"2022-06-28T11:42:01.000Z",permalink:"/pages/22d76f/",categories:["《前端》笔记《其它》","部署"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/04.%E9%83%A8%E7%BD%B2/05.%E4%B8%80%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E5%A4%9A%E4%B8%AA%E9%A1%B9%E7%9B%AE.html",relativePath:"《前端》笔记《其它》/04.部署/05.一台服务器部署多个项目.md",key:"v-63aacc5a",path:"/pages/22d76f/",headersStr:null,content:"文档： https://www.vpssw.com/85.html\n\n\n# 一、购买一个新的域名\n\n购买一个新的域名，并和服务器的 ip 地址进行关联（解析）\n\n\n# 二、",normalizedContent:"文档： https://www.vpssw.com/85.html\n\n\n# 一、购买一个新的域名\n\n购买一个新的域名，并和服务器的 ip 地址进行关联（解析）\n\n\n# 二、",charsets:{cjk:!0}},{title:"《git》Git 命令",frontmatter:{title:"《git》Git 命令",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/d735fe/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/05.%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/02.%E3%80%8Agit%E3%80%8BGit%20%E5%91%BD%E4%BB%A4.html",relativePath:"《前端》笔记《其它》/05.远程仓库/02.《git》Git 命令.md",key:"v-cc14e3b2",path:"/pages/d735fe/",headersStr:null,content:'知识点： Git 命令\n\nmaster // 默认开发分支 origin // 默认远程版本库 Head // 默认开发分支 Head^ // Head 的父提交\n\n创建版本库 git clone // 克隆远程版本库 git init // 初始化本地版本库\n\n修改和提交 git status // 查看状态 git diff // 查看变更内容 git add . // 跟踪指定的文件 git mv // 文件改名 git rm // 删除文件 git rm --cached // 停止跟踪文件但不删除 git commit -m "commit message" // 提交所有更新过的文件 git commit --amend // 修改最后一次提交\n\n查看提交历史 git log // 查看提交是 git log -p // 查看指定文件的提交历史 git blame // 以列表方式查看指定文件的提交历史\n\n撤销（回滚） git reset --hard HEAD // 撤销工作目录中所有未提交文件的修改内容 git checkout HEAD // 撤销指定的未提交文件的修改内容 git revert // 撤销指定的提交\n\n分支与标签 git branch // 显示所有本地分支 git checkout <branch/tag> // 切换到指定分支或标签 git branch // 创建新分支 git branch -d // 删除本地分支 git tag // 列出所有本地标签 git tag // 基于最新提交创建标签 git tag -d // 删除标签\n\n合并与衍合 git merge // 合并指定分支到当前分支 git rebase // 衍合指定分支到当前分支\n\n远程操作 git remote -v // 查看远程版本库信息 git remote show // 查看指定远程版本库信息 git remote add // 添加远程版本库 git fetch // 从远程库获取代码 git pull // 下载代码及快速合并 git push // 上载代码及快速合并 git push :<branch/tag-name> // 删除远程分支或标签 git push --tags // 上传所有标签',normalizedContent:'知识点： git 命令\n\nmaster // 默认开发分支 origin // 默认远程版本库 head // 默认开发分支 head^ // head 的父提交\n\n创建版本库 git clone // 克隆远程版本库 git init // 初始化本地版本库\n\n修改和提交 git status // 查看状态 git diff // 查看变更内容 git add . // 跟踪指定的文件 git mv // 文件改名 git rm // 删除文件 git rm --cached // 停止跟踪文件但不删除 git commit -m "commit message" // 提交所有更新过的文件 git commit --amend // 修改最后一次提交\n\n查看提交历史 git log // 查看提交是 git log -p // 查看指定文件的提交历史 git blame // 以列表方式查看指定文件的提交历史\n\n撤销（回滚） git reset --hard head // 撤销工作目录中所有未提交文件的修改内容 git checkout head // 撤销指定的未提交文件的修改内容 git revert // 撤销指定的提交\n\n分支与标签 git branch // 显示所有本地分支 git checkout <branch/tag> // 切换到指定分支或标签 git branch // 创建新分支 git branch -d // 删除本地分支 git tag // 列出所有本地标签 git tag // 基于最新提交创建标签 git tag -d // 删除标签\n\n合并与衍合 git merge // 合并指定分支到当前分支 git rebase // 衍合指定分支到当前分支\n\n远程操作 git remote -v // 查看远程版本库信息 git remote show // 查看指定远程版本库信息 git remote add // 添加远程版本库 git fetch // 从远程库获取代码 git pull // 下载代码及快速合并 git push // 上载代码及快速合并 git push :<branch/tag-name> // 删除远程分支或标签 git push --tags // 上传所有标签',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"《git》Git 介绍",frontmatter:{title:"《git》Git 介绍",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/17b532/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/05.%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/01.%E3%80%8Agit%E3%80%8BGit%20%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《其它》/05.远程仓库/01.《git》Git 介绍.md",key:"v-0f3ddd85",path:"/pages/17b532/",headersStr:null,content:'知识点：Git 介绍\n\n下载地址：https://git-scm.com/downloads\n\n查看 git 存放目录：which -a git\n\n删除： 1、cd 到 git 存放目录 2、删除 git：bin rm -rf git* - rm：删除 - -rf：强力删除 报错：Operation not permitted（没有权限删除） 解：查看 git 版本后面是否携带 (Apple Git-xxx)，如果携带，说明这是 mac 电脑预安装的 git 无法删除 - 查看版本：bin ./git --version\n\n作用： 1、对项目进行版本管理（版本管理工具） 2、记录项目版本的变化，方便将来 查阅 或 恢复 特定版本 3、当用 旧版本 覆盖 新版本 时会发出警告\n\n解决： 1、项目数量多时，命名不清晰导致文档版本混乱 2、每次编辑项目都需要复制粘贴 3、多人同时编辑一个项目，容易产生覆盖\n\n使用场景： 1、在开发新功能前，可以先保存一下当前项目状态，如果功能在开发中出现问题，可以很方便的恢复到开发前的项目状态\n\n原则：每次提交暂存区的文件到 本地仓库中时，只提交一个功能\n\n本地仓库：用于存放项目状态；git 仓库又被叫做本地仓库\n\n工作目录：被 Git 管理的项目目录\n\n暂存区：每一次存储项目的状态，并不是保存项目中的所有文件，而是只保存被修改过的文件 特性： 1、减少冗余文件 2、减少保存项目状态的时间\n\n配置 GIT： 特性：该配置项只需要配置一次，后续使用可以不用配置\n\ngit config --global user.name 提交人姓名\ngit config --global user.email 提交人邮箱\n\ngit config --list：查看 Git 配置信息\n\n\n其它命令： git --version： 查看 Git 版本 git clone 远程仓库地址： 克隆远程仓库到本地仓库 git config --global credential.helper store： 记住账号密码（这样每次推送仓库就不需要输入账号密码了） ssh-keygen -t rsa -C "邮箱地址"： 生成私钥 - -t：生成 rsa 类型（rsa：非对称加密方式）\n\n分支重命名： 1.先重命名本地分支\n\n2.删除远程分支\n\n3.从现有来源创建新的分支\n\n\n使用步骤： （1）git init： 初始化本地 本地仓库（在项目目录下新建一个 本地仓库，也就是 .git 目录，该目录默认是隐藏的）\n\n（2）git status：            查看文件状态（查看 Git 管理中的文件状态）（红色：不被管理的文件）（绿色：被管理的文件）\n    提示信息：\n        No commits yet（当前仓库中还没有任何提交）\n        Untracked files（以下文件没有被 Git 管理）\n        nothing to commit, working tree clean（在工作目录和暂存区中没有要提交的文件）\n        modified（这个文件被修改过了）\n\n（3）git add 文件名：         将文件添加到暂存区中（该文件的状态变为 被管理的文件）\n    - git add.：            将所有文件添加到暂存区中\n\n（4）git commit -m 提交说明： 将暂存区的文件提交到 本地仓库中\n    提示信息：\n        1 file changed, 1 insertion(+)：有 1 个文件发送了变化，在这个文件中插入了 1 行内容\n\n（5）关联仓库\n    码云 → 创建仓库 → 选择 SSH → 已有仓库 → 执行里面的两个 git 命令\n\n（6）git checkout -b 分支名称：  创建分支，并切换到这个分支中\n\n（7）git push -u origin 分支名称：将本地分支推送到远程仓库\n\n（8）将其它分支合并到 master 分支中：\n    git checkout master\n    git merge 其它分支\n\n（9）git push：将本地仓库推送到远程仓库中\n\ngit log：               查看提交历史记录\n    提示信息：\n        commit：这次项目提交的 ID\n        Author：这次项目提交的 作者、邮箱\n        Date：  这次项目提交的 事件\n\n\n撤销操作： 应用场景：在项目功能开发到一半的时候，将工作目录中已修改的文件添加到暂存区中，回到工作目录中继续开发，在开发的过程中发现代码有问题，需要将功能恢复到开发一半时的状态 原理：将暂存区中的文件覆盖工作目录中的文件\n\n命令：git checkout 要恢复的文件\n\n特性：恢复暂存区中的文件时，该文件依然还在暂存区中\n\n\n从暂存区中删除文件： 应用场景：工作目录下有一些测试文件，这些测试文件不需要 Git 管理，因为这些只是临时文件，用完就删除了，但有时候不小心添加到了暂存区中，这时候就要将这些文件从暂存区中删除\n\n命令： git rm --cached 要删除的文件\n\n\n恢复 Git 中的项目状态（回滚）： 特性： 1、在 本地仓库中分别有 A B C D 的项目状态，这次要恢复到 B 状态，Git 内部会自动将 C D 状态给删除（我试过好像并不会删除，回滚到 B 状态，还能在回滚到 D 状态） 2、本地仓库中对应版本的文件会覆盖工作目录中的文件和暂存区中的文件 命令：git reset --hard 项目提交ID\n\n分支 概念：可以理解为副本，相当于将工作目录复制了一份 作用： 1、同时在不同的代码副本上做不同的事情。如：在一个分支上开发新功能，在另一个分支上修复其它功能的 BUG，这样的好处是可以在不同的环境中做不同的事情，互不影响 2、从开发主线中分离出来，相对独立，互不影响 特性：将当前工作目录切换到分支中\n\n主分支（master）：第一个向 本地仓库提交项目状态时，自动产生的一个分支\n\n开发分支（develop）：基于主分支创建的分支\n    作用：主分支中的代码一般都是向外界提供的代码，所以开发工作一般都不会在主分支上进行，而是在开发分支中进行，当开发分支开发结束后，在将开发分支的代码合并到主分支上\n\n功能分支（feature）：开发具体功能的分支，基于开发分支创建的分支\n    作用：当功能开发完成后，再将功能分支中的代码合并到开发分支，这时功能分支就可以输出了\n\n提示：除功能分支外，修复 BUG、不同版本的开发（如 jquery1 jquery2 jquery3）也可以创建单独的分支\n\n命令：\n    git branch：               查看分支\n        * 代表当前所在分支\n        命令行中的工作目录最后面的蓝色小括号里显示的也是 当前所在分支\n\n    git branch 分支名称：       创建分支（当前所在分支创建分支）\n        例：git branch develop（创建开发分支）\n\n    git checkout -b 分支名称：  创建分支，并切换到这个分支中\n\n    git checkout 分支名称：     切换分支\n        例：git checkout develop（切换开发分支）\n        注意：再切换分支前，当前分支上的工作一定要提交到 本地仓库中，暂存区中必须是空的，否则暂存区中的文件会移动到切换后的分支中\n\n    git merge 被合并的分支：     合并分支（将其它分支合并到当前分支中）\n        特性： \n            1、切换到合并后的开发分支上，在进行合并分支\n            2、合并后被合并的分支依然存在，还可以继续在被合并的分支中继续开发\n        提示信息：1 file changed, 0 insertion(+), 0 deletions(-)：有 1 个文件发送了变化，在这个文件中插入了 0 行内容, 删除了 0 行代码\n        例：将 开发分支 合并到 主分支 中\n            git checkout master\n            git merge develop\n        演示：将 master 合并到 demo-1 中（合并分支）（使用 VSCode 操作）\n            - 切换到 demo-1 分支中\n            - command + shift + p\n            - 选择 合并分支\n            - 选择 master\n\n    git branch -d 分支名称：    删除分支（分支被合并后才允许删除）（-D 强制删除）\n\n\n暂存 临时改动功能： 作用：将当前分支上的所有改动保存起来，并提供一个干净的工作副本（不存在任何改动的工作目录），也就可以随意的切换分支了，当需要再次开发之前的分支时，只需要恢复即可 应用场景：正在开发一个新功能，领导告诉你之前开发的功能有个 BUG，需要你马上修复，但是当前分支上的新功能还没有开发完成，你不想提交，就可以使用暂存 临时改动功能\n\n注意：在其它分支中 恢复临时改时，会将 临时改动 恢复到其它分支中，所以在 恢复临时改时，要确认当前所在的分支\n\n存储 临时改动：git stash\n恢复 临时改动：git stash pop\n\n\nGit 忽略清单： 作用：告诉 Git 哪些文件不需要被管理 使用场景：工作目录的文件较多时，通常会一次性将所有文件添加到暂存区中，所以需要告诉 Git 哪些文件不需要被管理，这样一次性将所有文件添加到暂存区中时，这些文件就不会被管理了。 如：node_modules、测试代码文件 都不想被 Git 管理\n\n使用步骤：\n    1、在项目根目录新建 .gitignore 文件\n    2、将不想被 Git 管理的文件 或 文件夹 写在这个忽略清单中\n        如：\n            node_modules\n            test.html\n            ...\n    3、把工作目录中的所有文件添加到暂存区中\n        命令：git add .\n\n\n特性：无法提交空的文件夹，如果需要提交空目录，需要在空目录中创建 .gitkeep，当以后这个空目录有文件时，在删除 .gitkeep\n\n使用步骤演示：\n慕课网git：https://git.imooc.com\n\n- 关掉记住账号密码\n    git config --global credential.helper ""\n\n- 配置密钥\n    - 如果已有秘钥，只需要将已有的 id_rsa.pub 文件，将里面的代码复制远程仓库的密钥中即可\n    \n    - 生成秘钥：ssh-keygen -t rsa -C "1160206165@qq.com"，命令行会提示输入信息，全部回车默认\n    - 打开提示的密钥目录\n    - 打开 id_rsa.pub 文件，将里面的代码复制远程仓库的密钥中\n\n- 在慕课网 git 中创建仓库\n    - 启用 README.md 文件初始化仓库\n    - 其它选项都默认\n\n- 克隆远程仓库到本地仓库\n    git clone 远程仓库地址（HHS）\n    命令行提示：是否确实要继续连接，输入 yes\n\n- 提交代码到远程仓库（使用 VSCode 操作）\n    - 修改代码\n    - 在源代码管理中添加到 暂存区 中\n    - 填写日志\n    - 提交\n    - 推送到远程仓库中\n    - 输入远程仓库的账号密码（只有第一次推送才需要输入账号密码）\n\n- 将 master 合并到 demo-1 中（合并分支）（使用 VSCode 操作）\n    - 切换到 demo-1 分支中\n    - command + shift + p\n    - 选择 合并分支\n    - 选择 master（自动提交）\n\n\nVSCode 操作 git 要比使用命令操作更加的高效、方便 配置 VSCode 工具（--settings.json）： "git.autofetch": true, // 提示：如果要切换 git 版本，请修改 git 存放目录 "git.path": git 存放目录, 如："git.path": "/usr/bin/git",\n\n安装 Git History Diff 插件\n    作用：查看 历史记录、日志、Diff 对比、等\n\n特性：文件推送发生冲突时，重新打开冲突的文件就会提示冲突的地方，选择方案后，会自动提交\n\n使用技巧：\n    问题：让删除掉的分支不显示在分支列表中\n    解决方法：从新克隆一遍项目\n\n使用方法：\n    （1）在 git 中创建仓库\n\n    （2）添加远程仓库\n\n    （3）推送本地仓库。将本地仓库推送到远程仓库的流程：将要提交的文件放到暂存区 → 提交暂存区中的文件，并输入提交信息 → 推送到远程仓库\n\n    （4）创建分支。每实现一个功能就创建一个分支\n\n    （5）合并分支。功能实现完后再合并分支\n\n    （6）暂存区。实现一些复杂的逻辑时，可以先将代码放到暂存区，如果代码有问题，可以很方便的恢复到之前的代码\n\n    （7）文件冲突。多人修改同一个地方导致代码冲突的问题，打开冲突文件，选择保留？？？',normalizedContent:'知识点：git 介绍\n\n下载地址：https://git-scm.com/downloads\n\n查看 git 存放目录：which -a git\n\n删除： 1、cd 到 git 存放目录 2、删除 git：bin rm -rf git* - rm：删除 - -rf：强力删除 报错：operation not permitted（没有权限删除） 解：查看 git 版本后面是否携带 (apple git-xxx)，如果携带，说明这是 mac 电脑预安装的 git 无法删除 - 查看版本：bin ./git --version\n\n作用： 1、对项目进行版本管理（版本管理工具） 2、记录项目版本的变化，方便将来 查阅 或 恢复 特定版本 3、当用 旧版本 覆盖 新版本 时会发出警告\n\n解决： 1、项目数量多时，命名不清晰导致文档版本混乱 2、每次编辑项目都需要复制粘贴 3、多人同时编辑一个项目，容易产生覆盖\n\n使用场景： 1、在开发新功能前，可以先保存一下当前项目状态，如果功能在开发中出现问题，可以很方便的恢复到开发前的项目状态\n\n原则：每次提交暂存区的文件到 本地仓库中时，只提交一个功能\n\n本地仓库：用于存放项目状态；git 仓库又被叫做本地仓库\n\n工作目录：被 git 管理的项目目录\n\n暂存区：每一次存储项目的状态，并不是保存项目中的所有文件，而是只保存被修改过的文件 特性： 1、减少冗余文件 2、减少保存项目状态的时间\n\n配置 git： 特性：该配置项只需要配置一次，后续使用可以不用配置\n\ngit config --global user.name 提交人姓名\ngit config --global user.email 提交人邮箱\n\ngit config --list：查看 git 配置信息\n\n\n其它命令： git --version： 查看 git 版本 git clone 远程仓库地址： 克隆远程仓库到本地仓库 git config --global credential.helper store： 记住账号密码（这样每次推送仓库就不需要输入账号密码了） ssh-keygen -t rsa -c "邮箱地址"： 生成私钥 - -t：生成 rsa 类型（rsa：非对称加密方式）\n\n分支重命名： 1.先重命名本地分支\n\n2.删除远程分支\n\n3.从现有来源创建新的分支\n\n\n使用步骤： （1）git init： 初始化本地 本地仓库（在项目目录下新建一个 本地仓库，也就是 .git 目录，该目录默认是隐藏的）\n\n（2）git status：            查看文件状态（查看 git 管理中的文件状态）（红色：不被管理的文件）（绿色：被管理的文件）\n    提示信息：\n        no commits yet（当前仓库中还没有任何提交）\n        untracked files（以下文件没有被 git 管理）\n        nothing to commit, working tree clean（在工作目录和暂存区中没有要提交的文件）\n        modified（这个文件被修改过了）\n\n（3）git add 文件名：         将文件添加到暂存区中（该文件的状态变为 被管理的文件）\n    - git add.：            将所有文件添加到暂存区中\n\n（4）git commit -m 提交说明： 将暂存区的文件提交到 本地仓库中\n    提示信息：\n        1 file changed, 1 insertion(+)：有 1 个文件发送了变化，在这个文件中插入了 1 行内容\n\n（5）关联仓库\n    码云 → 创建仓库 → 选择 ssh → 已有仓库 → 执行里面的两个 git 命令\n\n（6）git checkout -b 分支名称：  创建分支，并切换到这个分支中\n\n（7）git push -u origin 分支名称：将本地分支推送到远程仓库\n\n（8）将其它分支合并到 master 分支中：\n    git checkout master\n    git merge 其它分支\n\n（9）git push：将本地仓库推送到远程仓库中\n\ngit log：               查看提交历史记录\n    提示信息：\n        commit：这次项目提交的 id\n        author：这次项目提交的 作者、邮箱\n        date：  这次项目提交的 事件\n\n\n撤销操作： 应用场景：在项目功能开发到一半的时候，将工作目录中已修改的文件添加到暂存区中，回到工作目录中继续开发，在开发的过程中发现代码有问题，需要将功能恢复到开发一半时的状态 原理：将暂存区中的文件覆盖工作目录中的文件\n\n命令：git checkout 要恢复的文件\n\n特性：恢复暂存区中的文件时，该文件依然还在暂存区中\n\n\n从暂存区中删除文件： 应用场景：工作目录下有一些测试文件，这些测试文件不需要 git 管理，因为这些只是临时文件，用完就删除了，但有时候不小心添加到了暂存区中，这时候就要将这些文件从暂存区中删除\n\n命令： git rm --cached 要删除的文件\n\n\n恢复 git 中的项目状态（回滚）： 特性： 1、在 本地仓库中分别有 a b c d 的项目状态，这次要恢复到 b 状态，git 内部会自动将 c d 状态给删除（我试过好像并不会删除，回滚到 b 状态，还能在回滚到 d 状态） 2、本地仓库中对应版本的文件会覆盖工作目录中的文件和暂存区中的文件 命令：git reset --hard 项目提交id\n\n分支 概念：可以理解为副本，相当于将工作目录复制了一份 作用： 1、同时在不同的代码副本上做不同的事情。如：在一个分支上开发新功能，在另一个分支上修复其它功能的 bug，这样的好处是可以在不同的环境中做不同的事情，互不影响 2、从开发主线中分离出来，相对独立，互不影响 特性：将当前工作目录切换到分支中\n\n主分支（master）：第一个向 本地仓库提交项目状态时，自动产生的一个分支\n\n开发分支（develop）：基于主分支创建的分支\n    作用：主分支中的代码一般都是向外界提供的代码，所以开发工作一般都不会在主分支上进行，而是在开发分支中进行，当开发分支开发结束后，在将开发分支的代码合并到主分支上\n\n功能分支（feature）：开发具体功能的分支，基于开发分支创建的分支\n    作用：当功能开发完成后，再将功能分支中的代码合并到开发分支，这时功能分支就可以输出了\n\n提示：除功能分支外，修复 bug、不同版本的开发（如 jquery1 jquery2 jquery3）也可以创建单独的分支\n\n命令：\n    git branch：               查看分支\n        * 代表当前所在分支\n        命令行中的工作目录最后面的蓝色小括号里显示的也是 当前所在分支\n\n    git branch 分支名称：       创建分支（当前所在分支创建分支）\n        例：git branch develop（创建开发分支）\n\n    git checkout -b 分支名称：  创建分支，并切换到这个分支中\n\n    git checkout 分支名称：     切换分支\n        例：git checkout develop（切换开发分支）\n        注意：再切换分支前，当前分支上的工作一定要提交到 本地仓库中，暂存区中必须是空的，否则暂存区中的文件会移动到切换后的分支中\n\n    git merge 被合并的分支：     合并分支（将其它分支合并到当前分支中）\n        特性： \n            1、切换到合并后的开发分支上，在进行合并分支\n            2、合并后被合并的分支依然存在，还可以继续在被合并的分支中继续开发\n        提示信息：1 file changed, 0 insertion(+), 0 deletions(-)：有 1 个文件发送了变化，在这个文件中插入了 0 行内容, 删除了 0 行代码\n        例：将 开发分支 合并到 主分支 中\n            git checkout master\n            git merge develop\n        演示：将 master 合并到 demo-1 中（合并分支）（使用 vscode 操作）\n            - 切换到 demo-1 分支中\n            - command + shift + p\n            - 选择 合并分支\n            - 选择 master\n\n    git branch -d 分支名称：    删除分支（分支被合并后才允许删除）（-d 强制删除）\n\n\n暂存 临时改动功能： 作用：将当前分支上的所有改动保存起来，并提供一个干净的工作副本（不存在任何改动的工作目录），也就可以随意的切换分支了，当需要再次开发之前的分支时，只需要恢复即可 应用场景：正在开发一个新功能，领导告诉你之前开发的功能有个 bug，需要你马上修复，但是当前分支上的新功能还没有开发完成，你不想提交，就可以使用暂存 临时改动功能\n\n注意：在其它分支中 恢复临时改时，会将 临时改动 恢复到其它分支中，所以在 恢复临时改时，要确认当前所在的分支\n\n存储 临时改动：git stash\n恢复 临时改动：git stash pop\n\n\ngit 忽略清单： 作用：告诉 git 哪些文件不需要被管理 使用场景：工作目录的文件较多时，通常会一次性将所有文件添加到暂存区中，所以需要告诉 git 哪些文件不需要被管理，这样一次性将所有文件添加到暂存区中时，这些文件就不会被管理了。 如：node_modules、测试代码文件 都不想被 git 管理\n\n使用步骤：\n    1、在项目根目录新建 .gitignore 文件\n    2、将不想被 git 管理的文件 或 文件夹 写在这个忽略清单中\n        如：\n            node_modules\n            test.html\n            ...\n    3、把工作目录中的所有文件添加到暂存区中\n        命令：git add .\n\n\n特性：无法提交空的文件夹，如果需要提交空目录，需要在空目录中创建 .gitkeep，当以后这个空目录有文件时，在删除 .gitkeep\n\n使用步骤演示：\n慕课网git：https://git.imooc.com\n\n- 关掉记住账号密码\n    git config --global credential.helper ""\n\n- 配置密钥\n    - 如果已有秘钥，只需要将已有的 id_rsa.pub 文件，将里面的代码复制远程仓库的密钥中即可\n    \n    - 生成秘钥：ssh-keygen -t rsa -c "1160206165@qq.com"，命令行会提示输入信息，全部回车默认\n    - 打开提示的密钥目录\n    - 打开 id_rsa.pub 文件，将里面的代码复制远程仓库的密钥中\n\n- 在慕课网 git 中创建仓库\n    - 启用 readme.md 文件初始化仓库\n    - 其它选项都默认\n\n- 克隆远程仓库到本地仓库\n    git clone 远程仓库地址（hhs）\n    命令行提示：是否确实要继续连接，输入 yes\n\n- 提交代码到远程仓库（使用 vscode 操作）\n    - 修改代码\n    - 在源代码管理中添加到 暂存区 中\n    - 填写日志\n    - 提交\n    - 推送到远程仓库中\n    - 输入远程仓库的账号密码（只有第一次推送才需要输入账号密码）\n\n- 将 master 合并到 demo-1 中（合并分支）（使用 vscode 操作）\n    - 切换到 demo-1 分支中\n    - command + shift + p\n    - 选择 合并分支\n    - 选择 master（自动提交）\n\n\nvscode 操作 git 要比使用命令操作更加的高效、方便 配置 vscode 工具（--settings.json）： "git.autofetch": true, // 提示：如果要切换 git 版本，请修改 git 存放目录 "git.path": git 存放目录, 如："git.path": "/usr/bin/git",\n\n安装 git history diff 插件\n    作用：查看 历史记录、日志、diff 对比、等\n\n特性：文件推送发生冲突时，重新打开冲突的文件就会提示冲突的地方，选择方案后，会自动提交\n\n使用技巧：\n    问题：让删除掉的分支不显示在分支列表中\n    解决方法：从新克隆一遍项目\n\n使用方法：\n    （1）在 git 中创建仓库\n\n    （2）添加远程仓库\n\n    （3）推送本地仓库。将本地仓库推送到远程仓库的流程：将要提交的文件放到暂存区 → 提交暂存区中的文件，并输入提交信息 → 推送到远程仓库\n\n    （4）创建分支。每实现一个功能就创建一个分支\n\n    （5）合并分支。功能实现完后再合并分支\n\n    （6）暂存区。实现一些复杂的逻辑时，可以先将代码放到暂存区，如果代码有问题，可以很方便的恢复到之前的代码\n\n    （7）文件冲突。多人修改同一个地方导致代码冲突的问题，打开冲突文件，选择保留？？？',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"《git》BUG",frontmatter:{title:"《git》BUG",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/dd1524/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/05.%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/03.%E3%80%8Agit%E3%80%8BBUG.html",relativePath:"《前端》笔记《其它》/05.远程仓库/03.《git》BUG.md",key:"v-52cf5563",path:"/pages/dd1524/",headersStr:null,content:"Git: Host key verification failed.（Git:主机密钥验证失败。） 解决方法： 一、重新将远程仓库克隆到本地，在进行上传 二、添加到可信列表中：ssh -T git@gitee.com\n\nPlease make sure you have the correct access rightsand the repository exists.（请确保您拥有正确的访问权限并且存储库存在。） 解决方法： 一、重新将远程仓库克隆到本地，在进行上传 二、添加到可信列表中：ssh -T git@gitee.com\n\nGit: hint: Pulling without specifying how to reconcile divergent branches is（在不指定如何协调分歧分支的情况下进行拉取是非常困难的） 解决方法：\b重新将远程仓库克隆到本地，在进行上传 一、重新将远程仓库克隆到本地，在进行上传 二、添加到可信列表中：ssh -T git@gitee.com",normalizedContent:"git: host key verification failed.（git:主机密钥验证失败。） 解决方法： 一、重新将远程仓库克隆到本地，在进行上传 二、添加到可信列表中：ssh -t git@gitee.com\n\nplease make sure you have the correct access rightsand the repository exists.（请确保您拥有正确的访问权限并且存储库存在。） 解决方法： 一、重新将远程仓库克隆到本地，在进行上传 二、添加到可信列表中：ssh -t git@gitee.com\n\ngit: hint: pulling without specifying how to reconcile divergent branches is（在不指定如何协调分歧分支的情况下进行拉取是非常困难的） 解决方法：\b重新将远程仓库克隆到本地，在进行上传 一、重新将远程仓库克隆到本地，在进行上传 二、添加到可信列表中：ssh -t git@gitee.com",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"GitHub",frontmatter:{title:"GitHub",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/f11ff2/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/05.%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/04.GitHub.html",relativePath:"《前端》笔记《其它》/05.远程仓库/04.GitHub.md",key:"v-d469fd66",path:"/pages/f11ff2/",headersStr:null,content:"特性： 1、功能和 Git 基本一样，区别是 Git 是本地仓库，GitHub 是公共仓库（远程仓库）\n\n原理：先在 本地仓库 中进行开发，当功能开发完成后再推送到 公共仓库，其它开发人员就可以从公共仓库中下载你推送的代码了，这样就可以实现多人协作开发了\n\nGitHub 网站加载缓慢的解决方法： 在 IP 查询工具中输入 www.github.com，把解析的 IP 地址复制到 hosts 文件中 如：20.205.243.166 www.github.com\n\n多人协作开发流程：\n\n技术经理 在自己的计算机中创建本地仓库\n技术经理 在github中创建远程仓库\n技术经理 将本地仓库推送到远程仓库\n开发人员 克隆远程仓库到本地进行开发\n开发人员 将本地仓库中开发的内容推送到远程仓库\n技术经理 将远程仓库中的最新内容拉去到本地\n\n特性：开发人员的克隆操作只需要操作一次就可以了，后续的开发中无需克隆\n\n\n使用步骤：\n\n提示：在钥匙串访问中删除 GitHub账号 来实现切换或退出 GitHub账号 的操作\n\n技术经理：\n    \n    （1）git init：创建本地仓库\n\n    （2）git add index.html：将文件添加到暂存区中（该文件的状态变为 被管理的文件）\n\n    （3）git commit -m 第一次提交： 将暂存区的文件提交到 Git 仓库中\n\n    （4）在 GitHub 网站登录账号，并创建一个远程仓库（Repositories New)\n        Owner（仓库所有者）\n        Repository name（仓库名称）\n        Description（仓库描述信息）\n\n        Public（创建公共仓库）\n        Private（创建私有仓库）\n\n        Initialize this repository with（初始化）\n            Add a README file（创建仓库 描述文件 md格式的）\n\n        创建后：\n            HTTPS 形式 里的是远程仓库的地址\n                格式：协议://仓库域名/仓库所有者/仓库名字\n                如：https://github.com/hunmingwu/Demon-GitHub.git\n\n    （5）将本地仓库推送到远程仓库\n        原理：通过远程仓库地址向仓库中推送内容\n\n        命令：\n            git push 远程仓库地址 推送的分支名称（将本地仓库推送到远程仓库）\n            如：git push https://github.com/hunmingwu/Demon-GitHub.git master\n            提示：*[new branch] master -> master（向远程仓库中推送了新的分支，把本地仓库中的 master 推送到了 远程仓库中的 master \n\n        优化：\n            解决：每次将本地仓库推送到远程仓库时，都要输入远程仓库地址，而远程仓库地址非常的长，我们可以给它取个短的别名，内部会自动解析成远程仓库地址\n\n            git remote add 远程仓库地址别名 远程仓库地址（为远程仓库地址起一个别名）\n            如：git remote add origin https://github.com/hunmingwu/Demon-GitHub.git\n            下次提交地址时，只需要输入 git push origin 即可\n\n        优化：\n            作用：使用该命令后下次提交地址，只需要输入 git push 就可以将本地仓库提交到 记录的远程仓库中了\n            git push -u 远程仓库地址别名 分支名称（记录远程仓库地址 和 分支名称）\n\n    （6）邀请开发人员成为合作者\n        远程仓库 → Settings → Manage access → Invite a collaborator → 添加 GipHub 账号 → 复制 Copy invite link 里的邀请链接给 开发人员\n\n    （7）当开发人员提交本地仓库到远程仓库后，技术经理需要把最新的远程仓库，拉取到本地仓库中\n        命令：git pull 远程仓库地址 分支名称（拉取远程仓库中最新的版本）\n        如：git pull origin master\n\n开发人员：\n    \n    （1）克隆远程仓库到本地仓库\n        命令：git clone 远程仓库地址\n\n    （2）将本地仓库推送到远程仓库\n        提示：\n            1、技术经理 需要邀请 开发人员 为合作者，开发人员才可以向远程仓库中提交本地仓库。登录开发人员的 GitHub 账号，将技术经理给的 邀请链接 粘贴到地址栏，点击接受邀请即可\n            2、远程仓库地址的别名也会被克隆到本地仓库，使用 git push origin 还是可以将本地仓库推送到远程仓库中\n\n    （3）当远程仓库的版本发送变化时，只需要拉取远程仓库中最新的版本 即可，无需再次克隆\n        注意：如果远程仓库中的版本高于本地仓库中的版本，本地仓库是不能推送的，必须先拉取远程仓库中的内容到本地，才可以推送\n\n\n合作者开发冲突的问题： 问题：两个人修改了同一个文件的同一个地方，就会产生冲突，只有先向远程仓库中推送的人，才可以推送成功 解决方法： 1、将远程仓库的最新版本拉取到本地仓库中 提示：CONFLICT: Merge conflict in index.html（当前这个文件发送了冲突） 2、打开冲突的文件 提示：<<<<<<< >>>>>>>，内的内容就是冲突的区域，======= 是分割线，用来区分冲突的代码 如： 我是 index.html 文件 <<<<<<< HEAD 11111111111111111 我是程序员B做出的修改 ======= 11111111111111111 我是程序员A做出的修改 >>>>>>> cf5ece87f20885167373188c8f8ac35af7d13395 22222222222222222 33333333333333333 我是程序员B添加的内容\n\n            修改后：\n                我是 index.html 文件\n                11111111111111111 我是程序员B做出的修改\n                22222222222222222\n                33333333333333333\n                我是程序员B添加的内容\n    3、保留正确的代码，将冲突文件保存到暂存区中，在保存到本地文件，然后在推送到远程仓库,即可解决\n\n\n非合作者开发冲突的问题： 非合作者也可以推送本地仓库，但是需要仓库所有者审核，审核通过后仓库所有者就可以把非合作者的仓库合并到远程仓库中了\n\n使用步骤：\n    非合作者：\n        1、点击远程仓库中的 Fork 选项（复制当前仓库到自己的 GitHub 账号中）\n        2、将这个远程仓库克隆到本地仓库中\n        3、开发完成后将本地仓库推送到远程仓库中\n        4、在远程仓库中点击 Pull requests → New pull request → Create pull request\n        5、填写主题、在 Write 中填写 描述信息，在页面的代码块中也可以查看修改的内容\n        6、点击 Create pull request\n\n    仓库所有者：\n        1、在远程仓库中的 Pull requests 选项中就会多出一个非合作者 推送的仓库\n        2、点击进非合作者推送的仓库，选择 Commits 就可以看到非合作者 修改的信息\n        3、点击 Files changed 就可以看到非合作者 修改的内容\n        4、检查后发现没有问题，选择 Conversation，往下拉 点击 Merge pull request，填写一些提交信息，就可以将非合作者 推送的仓库 合并到仓库所有者的仓库中\n\n\nssh 协议： 作用：实现免登录操作 原理： 用户验证通过密钥实现，密钥是成对出现的分为 公钥 和 私钥，通过验证公钥和私钥的配对情况，决定验证是否通过。公钥相当于门锁，私钥相当于钥匙，如果他们是配对的，那就验证通过\n\nhttps 协议：推送仓库时用户 必须 提供用户名和密码\nssh 协议：推送仓库时用户 不需要 提供用户名和密码\n\n使用步骤：\n    1、生成密钥：ssh-keygen\n        会提示你输入些信息，全部回车常用默认值即可\n    2、打开提示的密钥目录\n        id_rsa（私钥）\n        id_rsa.pub（公  钥）\n    3、打开 id_rsa.pub 文件，将里面的代码复制 → GitHub 网站头像 → Settings → SSH and GPG keys → New SSH key → 粘贴到 Key 中点击完成即可\n    4、GitHub 网站头像 → Your repositories（我的仓库）→ Clone or download → 复制SSH地址\n    -- 第五步一般不需要了\n    5、命令行输入：git remote add origin_ssh git@github.com:hunmingwu/git-demo.git（为这个 SSH 地址起个别名），以后就可以使用这个别名推送仓库了\n\n\n为远程仓库添加详细说明 如：https://github.com/jquery/jquery ，中的 README.md 就是远程仓库的详细说明\n\n使用步骤：在项目的根目录创建 README.md 文件，这个文件会自动显示在远程仓库的下面",normalizedContent:"特性： 1、功能和 git 基本一样，区别是 git 是本地仓库，github 是公共仓库（远程仓库）\n\n原理：先在 本地仓库 中进行开发，当功能开发完成后再推送到 公共仓库，其它开发人员就可以从公共仓库中下载你推送的代码了，这样就可以实现多人协作开发了\n\ngithub 网站加载缓慢的解决方法： 在 ip 查询工具中输入 www.github.com，把解析的 ip 地址复制到 hosts 文件中 如：20.205.243.166 www.github.com\n\n多人协作开发流程：\n\n技术经理 在自己的计算机中创建本地仓库\n技术经理 在github中创建远程仓库\n技术经理 将本地仓库推送到远程仓库\n开发人员 克隆远程仓库到本地进行开发\n开发人员 将本地仓库中开发的内容推送到远程仓库\n技术经理 将远程仓库中的最新内容拉去到本地\n\n特性：开发人员的克隆操作只需要操作一次就可以了，后续的开发中无需克隆\n\n\n使用步骤：\n\n提示：在钥匙串访问中删除 github账号 来实现切换或退出 github账号 的操作\n\n技术经理：\n    \n    （1）git init：创建本地仓库\n\n    （2）git add index.html：将文件添加到暂存区中（该文件的状态变为 被管理的文件）\n\n    （3）git commit -m 第一次提交： 将暂存区的文件提交到 git 仓库中\n\n    （4）在 github 网站登录账号，并创建一个远程仓库（repositories new)\n        owner（仓库所有者）\n        repository name（仓库名称）\n        description（仓库描述信息）\n\n        public（创建公共仓库）\n        private（创建私有仓库）\n\n        initialize this repository with（初始化）\n            add a readme file（创建仓库 描述文件 md格式的）\n\n        创建后：\n            https 形式 里的是远程仓库的地址\n                格式：协议://仓库域名/仓库所有者/仓库名字\n                如：https://github.com/hunmingwu/demon-github.git\n\n    （5）将本地仓库推送到远程仓库\n        原理：通过远程仓库地址向仓库中推送内容\n\n        命令：\n            git push 远程仓库地址 推送的分支名称（将本地仓库推送到远程仓库）\n            如：git push https://github.com/hunmingwu/demon-github.git master\n            提示：*[new branch] master -> master（向远程仓库中推送了新的分支，把本地仓库中的 master 推送到了 远程仓库中的 master \n\n        优化：\n            解决：每次将本地仓库推送到远程仓库时，都要输入远程仓库地址，而远程仓库地址非常的长，我们可以给它取个短的别名，内部会自动解析成远程仓库地址\n\n            git remote add 远程仓库地址别名 远程仓库地址（为远程仓库地址起一个别名）\n            如：git remote add origin https://github.com/hunmingwu/demon-github.git\n            下次提交地址时，只需要输入 git push origin 即可\n\n        优化：\n            作用：使用该命令后下次提交地址，只需要输入 git push 就可以将本地仓库提交到 记录的远程仓库中了\n            git push -u 远程仓库地址别名 分支名称（记录远程仓库地址 和 分支名称）\n\n    （6）邀请开发人员成为合作者\n        远程仓库 → settings → manage access → invite a collaborator → 添加 giphub 账号 → 复制 copy invite link 里的邀请链接给 开发人员\n\n    （7）当开发人员提交本地仓库到远程仓库后，技术经理需要把最新的远程仓库，拉取到本地仓库中\n        命令：git pull 远程仓库地址 分支名称（拉取远程仓库中最新的版本）\n        如：git pull origin master\n\n开发人员：\n    \n    （1）克隆远程仓库到本地仓库\n        命令：git clone 远程仓库地址\n\n    （2）将本地仓库推送到远程仓库\n        提示：\n            1、技术经理 需要邀请 开发人员 为合作者，开发人员才可以向远程仓库中提交本地仓库。登录开发人员的 github 账号，将技术经理给的 邀请链接 粘贴到地址栏，点击接受邀请即可\n            2、远程仓库地址的别名也会被克隆到本地仓库，使用 git push origin 还是可以将本地仓库推送到远程仓库中\n\n    （3）当远程仓库的版本发送变化时，只需要拉取远程仓库中最新的版本 即可，无需再次克隆\n        注意：如果远程仓库中的版本高于本地仓库中的版本，本地仓库是不能推送的，必须先拉取远程仓库中的内容到本地，才可以推送\n\n\n合作者开发冲突的问题： 问题：两个人修改了同一个文件的同一个地方，就会产生冲突，只有先向远程仓库中推送的人，才可以推送成功 解决方法： 1、将远程仓库的最新版本拉取到本地仓库中 提示：conflict: merge conflict in index.html（当前这个文件发送了冲突） 2、打开冲突的文件 提示：<<<<<<< >>>>>>>，内的内容就是冲突的区域，======= 是分割线，用来区分冲突的代码 如： 我是 index.html 文件 <<<<<<< head 11111111111111111 我是程序员b做出的修改 ======= 11111111111111111 我是程序员a做出的修改 >>>>>>> cf5ece87f20885167373188c8f8ac35af7d13395 22222222222222222 33333333333333333 我是程序员b添加的内容\n\n            修改后：\n                我是 index.html 文件\n                11111111111111111 我是程序员b做出的修改\n                22222222222222222\n                33333333333333333\n                我是程序员b添加的内容\n    3、保留正确的代码，将冲突文件保存到暂存区中，在保存到本地文件，然后在推送到远程仓库,即可解决\n\n\n非合作者开发冲突的问题： 非合作者也可以推送本地仓库，但是需要仓库所有者审核，审核通过后仓库所有者就可以把非合作者的仓库合并到远程仓库中了\n\n使用步骤：\n    非合作者：\n        1、点击远程仓库中的 fork 选项（复制当前仓库到自己的 github 账号中）\n        2、将这个远程仓库克隆到本地仓库中\n        3、开发完成后将本地仓库推送到远程仓库中\n        4、在远程仓库中点击 pull requests → new pull request → create pull request\n        5、填写主题、在 write 中填写 描述信息，在页面的代码块中也可以查看修改的内容\n        6、点击 create pull request\n\n    仓库所有者：\n        1、在远程仓库中的 pull requests 选项中就会多出一个非合作者 推送的仓库\n        2、点击进非合作者推送的仓库，选择 commits 就可以看到非合作者 修改的信息\n        3、点击 files changed 就可以看到非合作者 修改的内容\n        4、检查后发现没有问题，选择 conversation，往下拉 点击 merge pull request，填写一些提交信息，就可以将非合作者 推送的仓库 合并到仓库所有者的仓库中\n\n\nssh 协议： 作用：实现免登录操作 原理： 用户验证通过密钥实现，密钥是成对出现的分为 公钥 和 私钥，通过验证公钥和私钥的配对情况，决定验证是否通过。公钥相当于门锁，私钥相当于钥匙，如果他们是配对的，那就验证通过\n\nhttps 协议：推送仓库时用户 必须 提供用户名和密码\nssh 协议：推送仓库时用户 不需要 提供用户名和密码\n\n使用步骤：\n    1、生成密钥：ssh-keygen\n        会提示你输入些信息，全部回车常用默认值即可\n    2、打开提示的密钥目录\n        id_rsa（私钥）\n        id_rsa.pub（公  钥）\n    3、打开 id_rsa.pub 文件，将里面的代码复制 → github 网站头像 → settings → ssh and gpg keys → new ssh key → 粘贴到 key 中点击完成即可\n    4、github 网站头像 → your repositories（我的仓库）→ clone or download → 复制ssh地址\n    -- 第五步一般不需要了\n    5、命令行输入：git remote add origin_ssh git@github.com:hunmingwu/git-demo.git（为这个 ssh 地址起个别名），以后就可以使用这个别名推送仓库了\n\n\n为远程仓库添加详细说明 如：https://github.com/jquery/jquery ，中的 readme.md 就是远程仓库的详细说明\n\n使用步骤：在项目的根目录创建 readme.md 文件，这个文件会自动显示在远程仓库的下面",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"码云",frontmatter:{title:"码云",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/d3f9ee/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/05.%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/05.%E7%A0%81%E4%BA%91.html",relativePath:"《前端》笔记《其它》/05.远程仓库/05.码云.md",key:"v-4d277b4e",path:"/pages/d3f9ee/",headersStr:null,content:'知识点：码云\n\n简介：可以理解为国内版的 GitHub\n\n将本地仓库推送到远程仓库中：\n\n（1）配置 SSH 公钥 文档：https://gitee.com/help/articles/4181 1、生成公钥：ssh-keygen -t ed25519 -C "邮箱" - 命令行会提示一些信息：全部按回车即可 - 命令行提示：Your public key has been saved in 公钥要存放的位置（mac 存放目录：/Users/zhengcunrui/.ssh）（pub后缀的就是公钥） 2、复制公钥中的内容到码云的 SSH 公钥中 3、添加到可信列表中：ssh -T git@gitee.com - 输入 yes - 显示 Hi XXX!... 代表添加成功\n\n（2）新建项目 - 填写项目名称 - 将 使用 Readme 文件初始化这个仓库 关闭 - 创建项目\n\n（3）Git 全局配置 - 终端输入文档中的 两条命令\n\n（4）提交本地仓库到远程仓库中 - 在项目目录中打开终端 - 执行 git add . - 执行 git commit -m "add files" - 选择 SSH 项，执行 文档已有仓库的第二条命令 如：git remote add origin https://gitee.com/vsdeveloper/vue_shop.git - 将本地仓库和远程仓库进行关联：选择 SSH 项，执行 文档已有仓库的第三条命令 如：git push -u origin master - 第一次关联时会提示输入码云的账号密码，以后关联时不会提示',normalizedContent:'知识点：码云\n\n简介：可以理解为国内版的 github\n\n将本地仓库推送到远程仓库中：\n\n（1）配置 ssh 公钥 文档：https://gitee.com/help/articles/4181 1、生成公钥：ssh-keygen -t ed25519 -c "邮箱" - 命令行会提示一些信息：全部按回车即可 - 命令行提示：your public key has been saved in 公钥要存放的位置（mac 存放目录：/users/zhengcunrui/.ssh）（pub后缀的就是公钥） 2、复制公钥中的内容到码云的 ssh 公钥中 3、添加到可信列表中：ssh -t git@gitee.com - 输入 yes - 显示 hi xxx!... 代表添加成功\n\n（2）新建项目 - 填写项目名称 - 将 使用 readme 文件初始化这个仓库 关闭 - 创建项目\n\n（3）git 全局配置 - 终端输入文档中的 两条命令\n\n（4）提交本地仓库到远程仓库中 - 在项目目录中打开终端 - 执行 git add . - 执行 git commit -m "add files" - 选择 ssh 项，执行 文档已有仓库的第二条命令 如：git remote add origin https://gitee.com/vsdeveloper/vue_shop.git - 将本地仓库和远程仓库进行关联：选择 ssh 项，执行 文档已有仓库的第三条命令 如：git push -u origin master - 第一次关联时会提示输入码云的账号密码，以后关联时不会提示',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"介绍",frontmatter:{title:"介绍",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/ed226b/",categories:["《前端》笔记《其它》","SASS"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/07.SASS/01.%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《其它》/07.SASS/01.介绍.md",key:"v-37bee46b",path:"/pages/ed226b/",headersStr:null,content:"官方文档： https://www.sass.hk/\n\nsass 和 scss 一样吗？ sass 和 scss 其实是一样的 css 预处理语言。SASS 版本3.0之前的后缀名为 .sass，而版本3.0之后的后缀名 .scss\n\nsass 和 scss 有什么不同？ 继 sass 之后 scss 的编写规范基本和 css 一致，sass 时代是有严格的缩进规范并且没有 {} 和 ；。而 scss 则和 css 的规范是一致的。",normalizedContent:"官方文档： https://www.sass.hk/\n\nsass 和 scss 一样吗？ sass 和 scss 其实是一样的 css 预处理语言。sass 版本3.0之前的后缀名为 .sass，而版本3.0之后的后缀名 .scss\n\nsass 和 scss 有什么不同？ 继 sass 之后 scss 的编写规范基本和 css 一致，sass 时代是有严格的缩进规范并且没有 {} 和 ；。而 scss 则和 css 的规范是一致的。",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"接口使用",frontmatter:{title:"接口使用",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/cac8fa/",categories:["《前端》笔记《其它》","api 工厂"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/06.api%20%E5%B7%A5%E5%8E%82/01.%E6%8E%A5%E5%8F%A3%E4%BD%BF%E7%94%A8.html",relativePath:"《前端》笔记《其它》/06.api 工厂/01.接口使用.md",key:"v-6a3e7b32",path:"/pages/cac8fa/",headersStr:null,content:"知识点：接口使用\n\n文档：https://api.it120.cc/doc.html#/home\n\n说明： 1、application/x-www-form-urlencoded 方式，千万不要用 Json 的方式提交参数，否则接口会返回缺少参数的提示\n\n设置专属域名 https://admin.it120.cc/ → 首页 → 专属域名 → 设置为：zcr\n\n小程序配置 https://admin.it120.cc/ → 微信设置 → 小程序设置 → 配置 Appid / Secret → 配置 appID、appIDSecret\n\n个人配置存储（每个用户都不一样） AppID(小程序ID)：wx916760d267fed5ff AppSecret(小程序密钥)：e880a3ac40748a0629143907df9b94ef\n\n数据克隆 登录后台，左侧菜单 “工厂设置” --\x3e “数据克隆” --\x3e “将别人的数据克隆给我” → 对方商户ID填写 951\n\n请求根路径：https://api.it120.cc/zcr\n\n语法：domain：https://api.it120.cc/专属域名 例：domain：https://api.it120.cc/zcr\n\n获取 banner 列表接口：/{domain}/banner/list 例：https://api.it120.cc/zcr/banner/list\n\n商品详情页： （1）图片之间有空白间隙 解决方法：不用管它，后面渲染的时候通过 vertical-align: bottom; 就可以解决了",normalizedContent:"知识点：接口使用\n\n文档：https://api.it120.cc/doc.html#/home\n\n说明： 1、application/x-www-form-urlencoded 方式，千万不要用 json 的方式提交参数，否则接口会返回缺少参数的提示\n\n设置专属域名 https://admin.it120.cc/ → 首页 → 专属域名 → 设置为：zcr\n\n小程序配置 https://admin.it120.cc/ → 微信设置 → 小程序设置 → 配置 appid / secret → 配置 appid、appidsecret\n\n个人配置存储（每个用户都不一样） appid(小程序id)：wx916760d267fed5ff appsecret(小程序密钥)：e880a3ac40748a0629143907df9b94ef\n\n数据克隆 登录后台，左侧菜单 “工厂设置” --\x3e “数据克隆” --\x3e “将别人的数据克隆给我” → 对方商户id填写 951\n\n请求根路径：https://api.it120.cc/zcr\n\n语法：domain：https://api.it120.cc/专属域名 例：domain：https://api.it120.cc/zcr\n\n获取 banner 列表接口：/{domain}/banner/list 例：https://api.it120.cc/zcr/banner/list\n\n商品详情页： （1）图片之间有空白间隙 解决方法：不用管它，后面渲染的时候通过 vertical-align: bottom; 就可以解决了",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"使用方法",frontmatter:{title:"使用方法",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/b426d7/",categories:["《前端》笔记《其它》","SASS"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/07.SASS/02.%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html",relativePath:"《前端》笔记《其它》/07.SASS/02.使用方法.md",key:"v-30f185a1",path:"/pages/b426d7/",headers:[{level:2,title:"只在局部作用域中生效",slug:"只在局部作用域中生效",normalizedTitle:"只在局部作用域中生效",charIndex:114}],headersStr:"只在局部作用域中生效",content:"# 一、变量\n\n语法： $变量名: 变量值\n\n例：\n\n// 高亮\n$highlight-color: #f90\n\n// 默认边框\n$basic-border: 1px solid block;\n\n\n1\n2\n3\n4\n5\n\n\n\n# 只在局部作用域中生效\n\n使用方法： 在当前局部作用域中声明\n\nnav {\n  $width: 100px;\n  width: $width;\n}\n\n\n1\n2\n3\n4\n",normalizedContent:"# 一、变量\n\n语法： $变量名: 变量值\n\n例：\n\n// 高亮\n$highlight-color: #f90\n\n// 默认边框\n$basic-border: 1px solid block;\n\n\n1\n2\n3\n4\n5\n\n\n\n# 只在局部作用域中生效\n\n使用方法： 在当前局部作用域中声明\n\nnav {\n  $width: 100px;\n  width: $width;\n}\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"项目初始化",frontmatter:{title:"项目初始化",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/88174b/",categories:["《前端》笔记《其它》","VuePress"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/08.VuePress/01.%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"《前端》笔记《其它》/08.VuePress/01.项目初始化.md",key:"v-dc7732f2",path:"/pages/88174b/",headers:[{level:2,title:"1、创建项目",slug:"_1、创建项目",normalizedTitle:"1、创建项目",charIndex:148},{level:2,title:"2、初始化项目",slug:"_2、初始化项目",normalizedTitle:"2、初始化项目",charIndex:210},{level:2,title:"3、安装 VuePress",slug:"_3、安装-vuepress",normalizedTitle:"3、安装 vuepress",charIndex:249},{level:2,title:"4、添加一些 scripts（-- package.json）",slug:"_4、添加一些-scripts-package-json",normalizedTitle:"4、添加一些 scripts（-- package.json）",charIndex:303},{level:2,title:"5、配置 git 忽略清单",slug:"_5、配置-git-忽略清单",normalizedTitle:"5、配置 git 忽略清单",charIndex:586},{level:2,title:"6、创建你的第一篇文档",slug:"_6、创建你的第一篇文档",normalizedTitle:"6、创建你的第一篇文档",charIndex:703},{level:2,title:"7、启动项目",slug:"_7、启动项目",normalizedTitle:"7、启动项目",charIndex:779},{level:2,title:"全局静态资源",slug:"全局静态资源",normalizedTitle:"全局静态资源",charIndex:1378},{level:3,title:"1、新建静态资源目录",slug:"_1、新建静态资源目录",normalizedTitle:"1、新建静态资源目录",charIndex:1389},{level:3,title:"2、使用",slug:"_2、使用",normalizedTitle:"2、使用",charIndex:1435},{level:2,title:"局部静态资源（可选）",slug:"局部静态资源-可选",normalizedTitle:"局部静态资源（可选）",charIndex:1490},{level:3,title:"1、新建静态资源目录",slug:"_1、新建静态资源目录-2",normalizedTitle:"1、新建静态资源目录",charIndex:1389},{level:3,title:"2、使用",slug:"_2、使用-2",normalizedTitle:"2、使用",charIndex:1435},{level:2,title:"（一）GitHub Pages",slug:"一-github-pages",normalizedTitle:"（一）github pages",charIndex:1688},{level:3,title:"1、配置 deploy.sh 脚本",slug:"_1、配置-deploy-sh-脚本",normalizedTitle:"1、配置 deploy.sh 脚本",charIndex:1795},{level:3,title:"2、配置 前缀地址",slug:"_2、配置-前缀地址",normalizedTitle:"2、配置 前缀地址",charIndex:2349},{level:2,title:"（二）打包",slug:"二-打包",normalizedTitle:"（二）打包",charIndex:2440},{level:2,title:"（三）执行 deploy.sh 脚本",slug:"三-执行-deploy-sh-脚本",normalizedTitle:"（三）执行 deploy.sh 脚本",charIndex:2467},{level:2,title:"（四）查看是否配置成功",slug:"四-查看是否配置成功",normalizedTitle:"（四）查看是否配置成功",charIndex:2583},{level:2,title:"（五）查看项目",slug:"五-查看项目",normalizedTitle:"（五）查看项目",charIndex:2706}],headersStr:"1、创建项目 2、初始化项目 3、安装 VuePress 4、添加一些 scripts（-- package.json） 5、配置 git 忽略清单 6、创建你的第一篇文档 7、启动项目 全局静态资源 1、新建静态资源目录 2、使用 局部静态资源（可选） 1、新建静态资源目录 2、使用 （一）GitHub Pages 1、配置 deploy.sh 脚本 2、配置 前缀地址 （二）打包 （三）执行 deploy.sh 脚本 （四）查看是否配置成功 （五）查看项目",content:'文档： https://v2.vuepress.vuejs.org/zh/ 视频： https://www.bilibili.com/video/BV18L41177Bm?p=8&vd_source=ca727b605400f1cddccb1f530ef80c5f\n\n\n# 一、创建项目\n\n\n# 1、创建项目\n\nmkdir vuepress-starter\ncd vuepress-starter\n\n\n1\n2\n\n\n\n# 2、初始化项目\n\ngit init\nyarn init\n\n\n1\n2\n\n\n\n# 3、安装 VuePress\n\nyarn add -D vuepress@2.0.0-beta.48\n\n\n# 4、添加一些 scripts（-- package.json）\n\n{\n  "name": "students",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n\n  --增\n  "scripts": {\n    "docs:dev": "vuepress dev docs", 启动命令\n    "docs:build": "vuepress build docs" 打包命令\n  }\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 5、配置 git 忽略清单\n\necho \'node_modules\' >> .gitignore\necho \'.temp\' >> .gitignore\necho \'.cache\' >> .gitignore\n\n\n1\n2\n3\n\n\n\n# 6、创建你的第一篇文档\n\nmkdir docs\necho \'# Hello VuePress\' > docs/README.md\n\n\n1\n2\n\n\n\n# 7、启动项目\n\nyarn docs:dev\n\n\n1\n\n\n\n# 二、配置 config.ts\n\n说明： 推荐使用 ts，因为有语法提示\n\n（-- docs/.vuepress/新建 config.ts）\n\nimport { defineUserConfig } from \'vuepress\'\n\nexport default defineUserConfig({\n  lang: \'zh-CN\',\n  title: \'你好， VuePress ！\',\n  description: \'这是我的第一个 VuePress 站点\',\n  markdown: {\n    code: { // 代码块 配置\n      lineNumbers: false // 不显示行号\n    }\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 三、路由（科普）\n\n/ 对应的是 docs /demo/demo1.html 对应的是 /demo/demo1.md\n\n\n# 四、配置 Frontmatter（局部 config.ts）（可选）\n\n（-- docs/新建 demo/demo1.md）\n\n-- 增\n---\nlang: zh-CN\ntitle: 页面的标题\ndescription: 页面的描述\n---\n--\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 五、静态资源\n\n\n# 全局静态资源\n\n\n# 1、新建静态资源目录\n\n（-- docs/.vuepress/新建 public）\n\n\n# 2、使用\n\n（-- docs/demo/index.md）\n\n![](/logo.png)\n\n\n1\n\n\n\n# 局部静态资源（可选）\n\n\n# 1、新建静态资源目录\n\n（-- docs/.vuepress/新建 images）\n\n\n# 2、使用\n\n（-- docs/demo/index.md）\n\n![](./images/logo.png)\n\n\n1\n\n\n\n# 六、配置远程仓库\n\n\n# 七、部署\n\n说明： 这里的部署使用的是 v1 的，因为 v2 的 GitHub Pages 有时生效，有时不生效\n\n\n# （一）GitHub Pages\n\n文档： https://v1.vuepress.vuejs.org/zh/guide/deploy.html#github-pages\n\n警告： 这里记得修改远程仓库地址\n\n\n# 1、配置 deploy.sh 脚本\n\n（项目根目录/新建 deploy.sh）\n\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run docs:build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo \'www.example.com\' > CNAME\n\ngit init\ngit add -A\ngit commit -m \'deploy\'\n\n# 如果发布到 https://<USERNAME>.github.io\n# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>，这里的地址写远程仓库的地址\ngit push -f git@github.com:xxxx-xx/xxxx-xxxxxxxx.git master:gh-pages\n\ncd -\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 2、配置 前缀地址\n\n说明： 这里要填远程仓库的名称\n\n（-- docs/.vuepress/config.ts）\n\nbase: \'/bks-vuepress/\'\n\n\n1\n\n\n\n# （二）打包\n\nyarn docs:build\n\n\n# （三）执行 deploy.sh 脚本\n\n说明： 正常情况下会报 permission denied，输入 chmod +x deploy.sh，重新打开终端，然后输入 ./deploy.sh 即可\n\n./deploy.sh\n\n\n# （四）查看是否配置成功\n\n进入远程仓库（网站） → 选择 gh-pages 分支 → 查看右下角的 Environments 中的 github-pages 后面的 棕色字体是否变为绿色（大概需要一段时间进行构建） → 变成绿色代表成功\n\n\n# （五）查看项目\n\n接着上面的步骤 → 点击 github-pages → 点击 view deployment 即可查看项目',normalizedContent:'文档： https://v2.vuepress.vuejs.org/zh/ 视频： https://www.bilibili.com/video/bv18l41177bm?p=8&vd_source=ca727b605400f1cddccb1f530ef80c5f\n\n\n# 一、创建项目\n\n\n# 1、创建项目\n\nmkdir vuepress-starter\ncd vuepress-starter\n\n\n1\n2\n\n\n\n# 2、初始化项目\n\ngit init\nyarn init\n\n\n1\n2\n\n\n\n# 3、安装 vuepress\n\nyarn add -d vuepress@2.0.0-beta.48\n\n\n# 4、添加一些 scripts（-- package.json）\n\n{\n  "name": "students",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n\n  --增\n  "scripts": {\n    "docs:dev": "vuepress dev docs", 启动命令\n    "docs:build": "vuepress build docs" 打包命令\n  }\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 5、配置 git 忽略清单\n\necho \'node_modules\' >> .gitignore\necho \'.temp\' >> .gitignore\necho \'.cache\' >> .gitignore\n\n\n1\n2\n3\n\n\n\n# 6、创建你的第一篇文档\n\nmkdir docs\necho \'# hello vuepress\' > docs/readme.md\n\n\n1\n2\n\n\n\n# 7、启动项目\n\nyarn docs:dev\n\n\n1\n\n\n\n# 二、配置 config.ts\n\n说明： 推荐使用 ts，因为有语法提示\n\n（-- docs/.vuepress/新建 config.ts）\n\nimport { defineuserconfig } from \'vuepress\'\n\nexport default defineuserconfig({\n  lang: \'zh-cn\',\n  title: \'你好， vuepress ！\',\n  description: \'这是我的第一个 vuepress 站点\',\n  markdown: {\n    code: { // 代码块 配置\n      linenumbers: false // 不显示行号\n    }\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 三、路由（科普）\n\n/ 对应的是 docs /demo/demo1.html 对应的是 /demo/demo1.md\n\n\n# 四、配置 frontmatter（局部 config.ts）（可选）\n\n（-- docs/新建 demo/demo1.md）\n\n-- 增\n---\nlang: zh-cn\ntitle: 页面的标题\ndescription: 页面的描述\n---\n--\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 五、静态资源\n\n\n# 全局静态资源\n\n\n# 1、新建静态资源目录\n\n（-- docs/.vuepress/新建 public）\n\n\n# 2、使用\n\n（-- docs/demo/index.md）\n\n![](/logo.png)\n\n\n1\n\n\n\n# 局部静态资源（可选）\n\n\n# 1、新建静态资源目录\n\n（-- docs/.vuepress/新建 images）\n\n\n# 2、使用\n\n（-- docs/demo/index.md）\n\n![](./images/logo.png)\n\n\n1\n\n\n\n# 六、配置远程仓库\n\n\n# 七、部署\n\n说明： 这里的部署使用的是 v1 的，因为 v2 的 github pages 有时生效，有时不生效\n\n\n# （一）github pages\n\n文档： https://v1.vuepress.vuejs.org/zh/guide/deploy.html#github-pages\n\n警告： 这里记得修改远程仓库地址\n\n\n# 1、配置 deploy.sh 脚本\n\n（项目根目录/新建 deploy.sh）\n\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run docs:build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo \'www.example.com\' > cname\n\ngit init\ngit add -a\ngit commit -m \'deploy\'\n\n# 如果发布到 https://<username>.github.io\n# git push -f git@github.com:<username>/<username>.github.io.git master\n\n# 如果发布到 https://<username>.github.io/<repo>，这里的地址写远程仓库的地址\ngit push -f git@github.com:xxxx-xx/xxxx-xxxxxxxx.git master:gh-pages\n\ncd -\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 2、配置 前缀地址\n\n说明： 这里要填远程仓库的名称\n\n（-- docs/.vuepress/config.ts）\n\nbase: \'/bks-vuepress/\'\n\n\n1\n\n\n\n# （二）打包\n\nyarn docs:build\n\n\n# （三）执行 deploy.sh 脚本\n\n说明： 正常情况下会报 permission denied，输入 chmod +x deploy.sh，重新打开终端，然后输入 ./deploy.sh 即可\n\n./deploy.sh\n\n\n# （四）查看是否配置成功\n\n进入远程仓库（网站） → 选择 gh-pages 分支 → 查看右下角的 environments 中的 github-pages 后面的 棕色字体是否变为绿色（大概需要一段时间进行构建） → 变成绿色代表成功\n\n\n# （五）查看项目\n\n接着上面的步骤 → 点击 github-pages → 点击 view deployment 即可查看项目',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"Markdown 语法",frontmatter:{title:"Markdown 语法",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/5f41d6/",categories:["《前端》笔记《其它》","VuePress"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/08.VuePress/02.Markdown%20%E8%AF%AD%E6%B3%95.html",relativePath:"《前端》笔记《其它》/08.VuePress/02.Markdown 语法.md",key:"v-5845768c",path:"/pages/5f41d6/",headers:[{level:2,title:"内置组件",slug:"内置组件",normalizedTitle:"内置组件",charIndex:619},{level:3,title:"Tabs 代码块",slug:"tabs-代码块",normalizedTitle:"tabs 代码块",charIndex:628},{level:2,title:"提示、注意、警告",slug:"提示、注意、警告",normalizedTitle:"提示、注意、警告",charIndex:957}],headersStr:"内置组件 Tabs 代码块 提示、注意、警告",content:"Markdown 增强（有需要高级功能的可以看文档使用）：https://vuepress-theme-hope.github.io\n\n\n# Emoji（表情图标）\n\n文档： https://v2.vuepress.vuejs.org/zh/guide/markdown.html#emoji\n\n图标编码： https://github.com/ikatyang/emoji-cheat-sheet\n\n\n# 代码块\n\n行高亮： 添加行数范围标记，来为对应代码行进行高亮\n\n \n\n\n\n\n \n \n \n\n\n\nimport { defaultTheme, defineUserConfig } from 'vuepress'\n\nexport default defineUserConfig({\n  title: '你好， VuePress',\n\n  theme: defaultTheme({\n    logo: 'https://vuejs.org/images/logo.png',\n  }),\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 模板语法\n\n输入：\n\n一加一等于： {{ 1 + 1 }}\n\n<span v-for=\"i in 3\"> span: {{ i }} </span>\n\n\n1\n2\n3\n\n\n输出：\n\n一加一等于： 2\n\nspan: 1 span: 2 span: 3\n\n\n1\n2\n3\n\n\n\n# 组件\n\n\n# 内置组件\n\n\n# Tabs 代码块\n\n<CodeGroup>\n  <CodeGroupItem title=\"YARN\">\n\n```bash:no-line-numbers\nyarn\n\n\n1\n2\n3\n4\n5\n\n\n</CodeGroupItem>\n\n<CodeGroupItem title=\"NPM\" active>\n\n\nnpm install\n\n\n1\n\n\n</CodeGroupItem>\n\n\n```\n\n\n# 自定义容器\n\n文档： https://v2.vuepress.vuejs.org/zh/reference/default-theme/markdown.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%B9%E5%99%A8\n\n\n# 提示、注意、警告\n\n::: tip\n这是一个提示\n:::\n\n::: warning\n这是一个警告\n:::\n\n::: danger\n这是一个危险警告\n:::\n\n::: details\n这是一个 details 标签\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",normalizedContent:"markdown 增强（有需要高级功能的可以看文档使用）：https://vuepress-theme-hope.github.io\n\n\n# emoji（表情图标）\n\n文档： https://v2.vuepress.vuejs.org/zh/guide/markdown.html#emoji\n\n图标编码： https://github.com/ikatyang/emoji-cheat-sheet\n\n\n# 代码块\n\n行高亮： 添加行数范围标记，来为对应代码行进行高亮\n\n \n\n\n\n\n \n \n \n\n\n\nimport { defaulttheme, defineuserconfig } from 'vuepress'\n\nexport default defineuserconfig({\n  title: '你好， vuepress',\n\n  theme: defaulttheme({\n    logo: 'https://vuejs.org/images/logo.png',\n  }),\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 模板语法\n\n输入：\n\n一加一等于： {{ 1 + 1 }}\n\n<span v-for=\"i in 3\"> span: {{ i }} </span>\n\n\n1\n2\n3\n\n\n输出：\n\n一加一等于： 2\n\nspan: 1 span: 2 span: 3\n\n\n1\n2\n3\n\n\n\n# 组件\n\n\n# 内置组件\n\n\n# tabs 代码块\n\n<codegroup>\n  <codegroupitem title=\"yarn\">\n\n```bash:no-line-numbers\nyarn\n\n\n1\n2\n3\n4\n5\n\n\n</codegroupitem>\n\n<codegroupitem title=\"npm\" active>\n\n\nnpm install\n\n\n1\n\n\n</codegroupitem>\n\n\n```\n\n\n# 自定义容器\n\n文档： https://v2.vuepress.vuejs.org/zh/reference/default-theme/markdown.html#%e8%87%aa%e5%ae%9a%e4%b9%89%e5%ae%b9%e5%99%a8\n\n\n# 提示、注意、警告\n\n::: tip\n这是一个提示\n:::\n\n::: warning\n这是一个警告\n:::\n\n::: danger\n这是一个危险警告\n:::\n\n::: details\n这是一个 details 标签\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"插件",frontmatter:{title:"插件",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/cc9d0a/",categories:["《前端》笔记《其它》","VuePress"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/08.VuePress/03.%E6%8F%92%E4%BB%B6.html",relativePath:"《前端》笔记《其它》/08.VuePress/03.插件.md",key:"v-1bab4b4f",path:"/pages/cc9d0a/",headers:[{level:2,title:"（一）谷歌分析",slug:"一-谷歌分析",normalizedTitle:"（一）谷歌分析",charIndex:13},{level:2,title:"1、配置谷歌分析",slug:"_1、配置谷歌分析",normalizedTitle:"1、配置谷歌分析",charIndex:119},{level:2,title:"2、下载",slug:"_2、下载",normalizedTitle:"2、下载",charIndex:354},{level:2,title:"3、导入",slug:"_3、导入",normalizedTitle:"3、导入",charIndex:415},{level:2,title:"4、配置 谷歌分析 插件",slug:"_4、配置-谷歌分析-插件",normalizedTitle:"4、配置 谷歌分析 插件",charIndex:540}],headersStr:"（一）谷歌分析 1、配置谷歌分析 2、下载 3、导入 4、配置 谷歌分析 插件",content:"# 一、社区插件\n\n\n# （一）谷歌分析\n\n文档： https://v2.vuepress.vuejs.org/zh/reference/plugin/google-analytics.html#google-analytics\n\n\n# 1、配置谷歌分析\n\n作用： 收集网站数据（网页浏览量、滚动次数、出站点击次数 等）\n\n谷歌分析： https://analytics.google.com/analytics/web/provision/#/provision\n\n进入谷歌分析网站 → 点击开始衡量 → 填写账户名称 → 勾选 Google 产品和服务 → 下一项 → 网络媒体资源名称随便写（zzrs） → 下一步 → 创建 → 点击左下角管理 → 数据流 → 创建数据流 → 复制衡量 ID\n\n\n# 2、下载\n\nyarn add @vuepress/plugin-google-analytics@next -D\n\n\n# 3、导入\n\n（-- docs/.vuepress/config.ts）\n\nconst { googleAnalyticsPlugin } = require('@vuepress/plugin-google-analytics')\n\n\n1\n\n\n\n# 4、配置 谷歌分析 插件\n\n（-- 同上）\n\nplugins: [\n  googleAnalyticsPlugin({\n    id: \"G-XXXXXXXXXX\" // 将衡量 ID 粘贴到这里\n  })\n]\n\n\n1\n2\n3\n4\n5\n",normalizedContent:"# 一、社区插件\n\n\n# （一）谷歌分析\n\n文档： https://v2.vuepress.vuejs.org/zh/reference/plugin/google-analytics.html#google-analytics\n\n\n# 1、配置谷歌分析\n\n作用： 收集网站数据（网页浏览量、滚动次数、出站点击次数 等）\n\n谷歌分析： https://analytics.google.com/analytics/web/provision/#/provision\n\n进入谷歌分析网站 → 点击开始衡量 → 填写账户名称 → 勾选 google 产品和服务 → 下一项 → 网络媒体资源名称随便写（zzrs） → 下一步 → 创建 → 点击左下角管理 → 数据流 → 创建数据流 → 复制衡量 id\n\n\n# 2、下载\n\nyarn add @vuepress/plugin-google-analytics@next -d\n\n\n# 3、导入\n\n（-- docs/.vuepress/config.ts）\n\nconst { googleanalyticsplugin } = require('@vuepress/plugin-google-analytics')\n\n\n1\n\n\n\n# 4、配置 谷歌分析 插件\n\n（-- 同上）\n\nplugins: [\n  googleanalyticsplugin({\n    id: \"g-xxxxxxxxxx\" // 将衡量 id 粘贴到这里\n  })\n]\n\n\n1\n2\n3\n4\n5\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"主题",frontmatter:{title:"主题",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/6e410e/",categories:["《前端》笔记《其它》","VuePress"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/08.VuePress/04.%E4%B8%BB%E9%A2%98.html",relativePath:"《前端》笔记《其它》/08.VuePress/04.主题.md",key:"v-76cd19f6",path:"/pages/6e410e/",headers:[{level:2,title:"1、安装",slug:"_1、安装",normalizedTitle:"1、安装",charIndex:318},{level:2,title:"2、注释默认主题",slug:"_2、注释默认主题",normalizedTitle:"2、注释默认主题",charIndex:360},{level:2,title:"2、导入主题",slug:"_2、导入主题",normalizedTitle:"2、导入主题",charIndex:430},{level:2,title:"3、配置",slug:"_3、配置",normalizedTitle:"3、配置",charIndex:500}],headersStr:"1、安装 2、注释默认主题 2、导入主题 3、配置",content:"文档： https://v2.vuepress.vuejs.org/zh/guide/theme.html#%E4%B8%BB%E9%A2%98\n\n\n# 一、默认主题\n\n（-- config.ts）\n\ntheme: defaultTheme({\n  navbar: [ // 顶部导航条\n    {\n      text: '首页',\n      link: '/'\n    }\n  ]\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、社区主题\n\n说明： 以 vuepress-theme-knzn 主题为例\n\n文档： https://www.npmjs.com/package/vuepress-theme-knzn\n\n\n# 1、安装\n\nyarn add vuepress-theme-knzn -D\n\n\n# 2、注释默认主题\n\n（-- config.ts）\n\ntheme: defaultTheme({\n  ...\n})\n\n\n1\n2\n3\n\n\n\n# 2、导入主题\n\n（-- 同上）\n\nimport KnznTheme from 'vuepress-theme-knzn'\n\n\n1\n\n\n\n# 3、配置\n\n（-- 同上）\n\ntheme: KnznTheme({\n  logo: '/images/logo-light.svg',\n  darkLogo: 'images/logo-dark.svg',\n  backgroundImage: '/images/bg.svg',\n  darkBackgroundImage: '/images/ba-dark.jpg',\n  // 文章简介图片\n  // postImage: 'https://v2.vuepress.vuejs.org/images/hero.png',\n  darkPostImage: 'images/post-dark.svg',\n  // 背景 canvas 动画配置\n  // particlesOptions,\n  // 博主名称\n  blogger: '前端程序员',\n  // 名言\n  slogan: '种一棵树最好的时间是十年前，其次是现在！',\n  // 头像\n  avatar: '/images/avatar.jpg',\n  darkAvatar: '/images/avatar-dark.jpg',\n  // 其它媒体\n  medias: [\n    { link: 'mailto: 1130357303@qq.com', icon: 'email' },\n    { link: 'http://wpa.qq.com/msgrd?v=3&uin=1140457303&site-qq&menu=yes', icon: 'QQ' },\n    { link: 'https://www.jianshu.com/u/f22487800f07', icon: 'jianshu' },\n    { link: 'https://gitee.com/zhanghuanbiao', icon: 'gitee' },\n    { link: 'https://github.com/zhb333', icon:'github' }\n  ],\n  // 列表页显示文章个数\n  perPage: 10,\n  // 主页显示分类的个数\n  maxCategories: 6,\n  // 主页显示的标签个数\n  maxTags: 10,\n  // 备案号\n  beian: '粤ICP备20016112号-2',\n  // 备案查询地址\n  beianUrl: '',\n  // 网址起始时间\n  siteStartDate: '2018',\n  comment: {\n    repo: 'zhb333/vuepress-theme-knzn',\n    repoId: 'R_kgDOHSwV_A',\n    category: 'General',\n    categoryId: 'DIC_kwDOHSwV_M4CPHIA',\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n",normalizedContent:"文档： https://v2.vuepress.vuejs.org/zh/guide/theme.html#%e4%b8%bb%e9%a2%98\n\n\n# 一、默认主题\n\n（-- config.ts）\n\ntheme: defaulttheme({\n  navbar: [ // 顶部导航条\n    {\n      text: '首页',\n      link: '/'\n    }\n  ]\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、社区主题\n\n说明： 以 vuepress-theme-knzn 主题为例\n\n文档： https://www.npmjs.com/package/vuepress-theme-knzn\n\n\n# 1、安装\n\nyarn add vuepress-theme-knzn -d\n\n\n# 2、注释默认主题\n\n（-- config.ts）\n\ntheme: defaulttheme({\n  ...\n})\n\n\n1\n2\n3\n\n\n\n# 2、导入主题\n\n（-- 同上）\n\nimport knzntheme from 'vuepress-theme-knzn'\n\n\n1\n\n\n\n# 3、配置\n\n（-- 同上）\n\ntheme: knzntheme({\n  logo: '/images/logo-light.svg',\n  darklogo: 'images/logo-dark.svg',\n  backgroundimage: '/images/bg.svg',\n  darkbackgroundimage: '/images/ba-dark.jpg',\n  // 文章简介图片\n  // postimage: 'https://v2.vuepress.vuejs.org/images/hero.png',\n  darkpostimage: 'images/post-dark.svg',\n  // 背景 canvas 动画配置\n  // particlesoptions,\n  // 博主名称\n  blogger: '前端程序员',\n  // 名言\n  slogan: '种一棵树最好的时间是十年前，其次是现在！',\n  // 头像\n  avatar: '/images/avatar.jpg',\n  darkavatar: '/images/avatar-dark.jpg',\n  // 其它媒体\n  medias: [\n    { link: 'mailto: 1130357303@qq.com', icon: 'email' },\n    { link: 'http://wpa.qq.com/msgrd?v=3&uin=1140457303&site-qq&menu=yes', icon: 'qq' },\n    { link: 'https://www.jianshu.com/u/f22487800f07', icon: 'jianshu' },\n    { link: 'https://gitee.com/zhanghuanbiao', icon: 'gitee' },\n    { link: 'https://github.com/zhb333', icon:'github' }\n  ],\n  // 列表页显示文章个数\n  perpage: 10,\n  // 主页显示分类的个数\n  maxcategories: 6,\n  // 主页显示的标签个数\n  maxtags: 10,\n  // 备案号\n  beian: '粤icp备20016112号-2',\n  // 备案查询地址\n  beianurl: '',\n  // 网址起始时间\n  sitestartdate: '2018',\n  comment: {\n    repo: 'zhb333/vuepress-theme-knzn',\n    repoid: 'r_kgdohswv_a',\n    category: 'general',\n    categoryid: 'dic_kwdohswv_m4cphia',\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"前端工程化",frontmatter:{title:"前端工程化",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/8e1824/",categories:["《前端》笔记《其它》","webpack"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/09.webpack/01.%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96.html",relativePath:"《前端》笔记《其它》/09.webpack/01.前端工程化.md",key:"v-5aa4bdc0",path:"/pages/8e1824/",headers:[{level:2,title:"一、前端工程化",slug:"一、前端工程化",normalizedTitle:"一、前端工程化",charIndex:2},{level:2,title:"二、特性",slug:"二、特性",normalizedTitle:"二、特性",charIndex:59},{level:2,title:"三、前端工程化解决方法",slug:"三、前端工程化解决方法",normalizedTitle:"三、前端工程化解决方法",charIndex:169},{level:3,title:"（1）早期的前端工程化解决方案：",slug:"_1-早期的前端工程化解决方案",normalizedTitle:"（1）早期的前端工程化解决方案：",charIndex:185},{level:3,title:"（2）目前主流的前端工程化解决方案：",slug:"_2-目前主流的前端工程化解决方案",normalizedTitle:"（2）目前主流的前端工程化解决方案：",charIndex:288}],headersStr:"一、前端工程化 二、特性 三、前端工程化解决方法 （1）早期的前端工程化解决方案： （2）目前主流的前端工程化解决方案：",content:"# 一、前端工程化\n\n在企业级的前端项目开发中，把前端开发所需的工具、技术、流程、经验等进行规范化、标准化\n\n\n\n# 二、特性\n\n1、模块化（复用 JS）\n2、组件化（复用 UI 结构和样式）\n3、规范化（目录结构的划分、编码规范化、接口规范化、文档规范化、 Git 分支管理）\n4、自动化（自动化构建、自动部署、自动化测试）\n\n\n\n# 三、前端工程化解决方法\n\n\n# （1）早期的前端工程化解决方案：\n\ngrunt（ https://www.gruntjs.net/ ）（逐渐淘汰） gulp（ https://www.gulpjs.com.cn/ ）（逐渐淘汰）\n\n\n# （2）目前主流的前端工程化解决方案：\n\nwebpack（ https://www.webpackjs.com/ ）（主流） parcel（ https://zh.parceljs.org/ ）",normalizedContent:"# 一、前端工程化\n\n在企业级的前端项目开发中，把前端开发所需的工具、技术、流程、经验等进行规范化、标准化\n\n\n\n# 二、特性\n\n1、模块化（复用 js）\n2、组件化（复用 ui 结构和样式）\n3、规范化（目录结构的划分、编码规范化、接口规范化、文档规范化、 git 分支管理）\n4、自动化（自动化构建、自动部署、自动化测试）\n\n\n\n# 三、前端工程化解决方法\n\n\n# （1）早期的前端工程化解决方案：\n\ngrunt（ https://www.gruntjs.net/ ）（逐渐淘汰） gulp（ https://www.gulpjs.com.cn/ ）（逐渐淘汰）\n\n\n# （2）目前主流的前端工程化解决方案：\n\nwebpack（ https://www.webpackjs.com/ ）（主流） parcel（ https://zh.parceljs.org/ ）",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"html 骨架标签",frontmatter:{title:"html 骨架标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/3b8550/",categories:["《HTML》笔记"],tags:["HTML"],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/01.html%20%E9%AA%A8%E6%9E%B6%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/01.HTML/01.html 骨架标签.md",key:"v-17c14e92",path:"/pages/3b8550/",headersStr:null,content:"# 知识点：html 骨架标签\n\n<html>\n    <header>\n        <title></title>\n    </header>\n    <body>\n    </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n",normalizedContent:"# 知识点：html 骨架标签\n\n<html>\n    <header>\n        <title></title>\n    </header>\n    <body>\n    </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"webpack 介绍",frontmatter:{title:"webpack 介绍",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/208ef4/",categories:["《前端》笔记《其它》","webpack"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%85%B6%E5%AE%83%E3%80%8B/09.webpack/02.webpack%20%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《其它》/09.webpack/02.webpack 介绍.md",key:"v-7533111a",path:"/pages/208ef4/",headersStr:null,content:'作用：它提供了友好的前端模块化开发支持，以及代码压缩混淆、不用考虑浏览器兼容问题，内部会自动转换成兼容代码、性能优化等强大的功能 - CSS 高级代码不会转换成兼容代码，但是 CSS 高级代码在低版本浏览器中虽然不能运行，但是并不会报错 优点：让程序员把工作的重心放到具体功能的实现上，提高了前端开发效率和项目的可维护性。\n\n提示：使用 vue-cli 可以快速搭建 webpack，详见 知识点：vue-cli\n\n特性：由于 webpack 是基于 node.js 开发出来的打包工具，因此在它的配置文件中，支持使用 node.js 相关语法\n\n可以解决以下报错： Uncaught SyntaxError: Cannot use import statement outside a module 解：该语法有兼容性问题，无法识别。webpack 可以将不兼容的语法，转换成兼容语法\n\n搭建项目： （1）新建用个项目，输入 npm init -y 生成 package.json （2）创建 src 目录，用于存放程序员写的源代码\n\n下载：npm install webpack@5.42.1 webpack-cli@4.7.2 -D\n\n开发环境\n\n * 命令：npm run dev\n * 特性：不打包项目\n\n生产环境\n\n * npm run build\n * 特性：打包项目。将文件打包成 html + js + css\n\n提示：配置以下操作后，要重新打包，才会生效 配置 webpack：\n\n（1）在项目根目录创建 webpack.config.js 配置文件，并添加以下配置项\n    module.exports = {\n        // 指定构件模式：development（开发模式：不会 对打包生成的文件进行 代码压缩 和 性能优化，打包速度快）production（生产模式：会 对打包生成的文件进行 代码压缩 和 性能优化，打包速度慢）\n        mode: \'development\'  \n    }\n\n（2）在 package.json 的 scripts 配置项下，新增 dev 脚本如下：\n    "scripts": { // 注册脚本，通过 npm run dev 脚本名 执行脚本\n        "dev": "webpack"\n    }\n\n（3）运行 npm run dev 命令，启动 webpack 进行项目的打包构建\n    - 会自动在项目根目录生成 dist 目录 和 main.js 文件\n\n\n压缩 main.js 中的代码（压缩后的代码没有 空格 和 注释： 1、把构件模式改为 production 2、运行 npm run dev 命令\n\n默认约定： 默认打包 入口文件 路径 src/index.js 默认输出 入口文件 路径 dist/main.js\n\n-- webpack.config.js\n    修改默认打包 入口文件 路径：\n        1、导入 const path = require(\'path\')\n        2、在 module.exports 里添加以下配置项\n            // entry：指定打包 入口 文件路径\n            entry: path.join(__dirname, \'./src/index.js\')\n\n    修改默认输出入口文件 路径 和 名字：\n        // 将 dist/main.js 改为 bundle.js\n        // 将 main.js 改为 bundle.js\n        1、在 module.exports 里添加以下配置项\n            // output：指定打包 出口 文件\n            output: {\n                path: path.join(__dirname, \'./dist\'),  // 入口文件的存放目录\n                filename: \'bundle.js\'  // 输出入口文件路径\n            }\n\n\n插件： （1）webpack-dev-server： 作用：每保存一次入口文件，就自动执行 npm run dev 命令，并自动刷新浏览器 下载：npm install webpack-dev-server@3.11.2 -D 配置： 在 package.json → scripts → dev 中添加 serve，如下 "scripts": { // 注册脚本，通过 npm run dev 脚本名 执行脚本 "dev": "webpack serve" // server 作用：将生成的文件放到内存中 } 使用步骤： 1、引入项目根目录中的 main.js 到 index.html 中（不能引入 dist/bundle.js，因为进入监听状态后，每次保存操作修改的是内存中的入口文件，不是 dist/bundle.js 的入口文件，这个入口文件在项目根目录是看不到的，webpack-dev-server 把它放到了内存中，因为内存要比物理磁盘的读写速度更快，这样可以更快速的进行读写操作）（输入 npm run dev 后的提示信息也会显示入口文件的所在目录 如：webpack output is served from /，即目录在根目录下）',normalizedContent:'作用：它提供了友好的前端模块化开发支持，以及代码压缩混淆、不用考虑浏览器兼容问题，内部会自动转换成兼容代码、性能优化等强大的功能 - css 高级代码不会转换成兼容代码，但是 css 高级代码在低版本浏览器中虽然不能运行，但是并不会报错 优点：让程序员把工作的重心放到具体功能的实现上，提高了前端开发效率和项目的可维护性。\n\n提示：使用 vue-cli 可以快速搭建 webpack，详见 知识点：vue-cli\n\n特性：由于 webpack 是基于 node.js 开发出来的打包工具，因此在它的配置文件中，支持使用 node.js 相关语法\n\n可以解决以下报错： uncaught syntaxerror: cannot use import statement outside a module 解：该语法有兼容性问题，无法识别。webpack 可以将不兼容的语法，转换成兼容语法\n\n搭建项目： （1）新建用个项目，输入 npm init -y 生成 package.json （2）创建 src 目录，用于存放程序员写的源代码\n\n下载：npm install webpack@5.42.1 webpack-cli@4.7.2 -d\n\n开发环境\n\n * 命令：npm run dev\n * 特性：不打包项目\n\n生产环境\n\n * npm run build\n * 特性：打包项目。将文件打包成 html + js + css\n\n提示：配置以下操作后，要重新打包，才会生效 配置 webpack：\n\n（1）在项目根目录创建 webpack.config.js 配置文件，并添加以下配置项\n    module.exports = {\n        // 指定构件模式：development（开发模式：不会 对打包生成的文件进行 代码压缩 和 性能优化，打包速度快）production（生产模式：会 对打包生成的文件进行 代码压缩 和 性能优化，打包速度慢）\n        mode: \'development\'  \n    }\n\n（2）在 package.json 的 scripts 配置项下，新增 dev 脚本如下：\n    "scripts": { // 注册脚本，通过 npm run dev 脚本名 执行脚本\n        "dev": "webpack"\n    }\n\n（3）运行 npm run dev 命令，启动 webpack 进行项目的打包构建\n    - 会自动在项目根目录生成 dist 目录 和 main.js 文件\n\n\n压缩 main.js 中的代码（压缩后的代码没有 空格 和 注释： 1、把构件模式改为 production 2、运行 npm run dev 命令\n\n默认约定： 默认打包 入口文件 路径 src/index.js 默认输出 入口文件 路径 dist/main.js\n\n-- webpack.config.js\n    修改默认打包 入口文件 路径：\n        1、导入 const path = require(\'path\')\n        2、在 module.exports 里添加以下配置项\n            // entry：指定打包 入口 文件路径\n            entry: path.join(__dirname, \'./src/index.js\')\n\n    修改默认输出入口文件 路径 和 名字：\n        // 将 dist/main.js 改为 bundle.js\n        // 将 main.js 改为 bundle.js\n        1、在 module.exports 里添加以下配置项\n            // output：指定打包 出口 文件\n            output: {\n                path: path.join(__dirname, \'./dist\'),  // 入口文件的存放目录\n                filename: \'bundle.js\'  // 输出入口文件路径\n            }\n\n\n插件： （1）webpack-dev-server： 作用：每保存一次入口文件，就自动执行 npm run dev 命令，并自动刷新浏览器 下载：npm install webpack-dev-server@3.11.2 -d 配置： 在 package.json → scripts → dev 中添加 serve，如下 "scripts": { // 注册脚本，通过 npm run dev 脚本名 执行脚本 "dev": "webpack serve" // server 作用：将生成的文件放到内存中 } 使用步骤： 1、引入项目根目录中的 main.js 到 index.html 中（不能引入 dist/bundle.js，因为进入监听状态后，每次保存操作修改的是内存中的入口文件，不是 dist/bundle.js 的入口文件，这个入口文件在项目根目录是看不到的，webpack-dev-server 把它放到了内存中，因为内存要比物理磁盘的读写速度更快，这样可以更快速的进行读写操作）（输入 npm run dev 后的提示信息也会显示入口文件的所在目录 如：webpack output is served from /，即目录在根目录下）',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"DOCTYPE 和 lang",frontmatter:{title:"DOCTYPE 和 lang",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/ed2742/",categories:["《HTML》笔记"],tags:["HTML"],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/02.DOCTYPE%20%E5%92%8C%20lang.html",relativePath:"《前端》笔记《基础知识》/01.HTML/02.DOCTYPE 和 lang.md",key:"v-53c0db68",path:"/pages/ed2742/",headersStr:null,content:'# DOCTYPE 和 lang\n\n<!DOCTYPE> 作用： 文档类型声明。告诉浏览器使用哪种HTML版本来显示网页\n\n<!DOCTYPE html> 作用： 采取 HTML5 版本来显示网页\n\nlang 作用： 告诉浏览器当前文档使用的语言\n\n * en：英语\n * zh-CN：中文\n\n <!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n\t<meta charset="UTF-8">\n\t<title>Document</title>\n</head>\n<body>\n\t你好吗 \n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# doctype 和 lang\n\n<!doctype> 作用： 文档类型声明。告诉浏览器使用哪种html版本来显示网页\n\n<!doctype html> 作用： 采取 html5 版本来显示网页\n\nlang 作用： 告诉浏览器当前文档使用的语言\n\n * en：英语\n * zh-cn：中文\n\n <!doctype html>\n<html lang="zh-cn">\n<head>\n\t<meta charset="utf-8">\n\t<title>document</title>\n</head>\n<body>\n\t你好吗 \n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"字符集",frontmatter:{title:"字符集",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/e98608/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/03.%E5%AD%97%E7%AC%A6%E9%9B%86.html",relativePath:"《前端》笔记《基础知识》/01.HTML/03.字符集.md",key:"v-0ffecd12",path:"/pages/e98608/",headersStr:null,content:'# 知识点：字符集\n\n作用： 规定 HTML 文档应该使用哪种字符编码\n\nUTF-8： 基本包含了全世界所有国家需要用到的字符\n\n <!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    \x3c!-- charset（字符集） --\x3e\n\t<meta charset="UTF-8">\n\t<title>Document</title>\n</head>\n<body>\n\t你好吗 \n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 知识点：字符集\n\n作用： 规定 html 文档应该使用哪种字符编码\n\nutf-8： 基本包含了全世界所有国家需要用到的字符\n\n <!doctype html>\n<html lang="zh-cn">\n<head>\n    \x3c!-- charset（字符集） --\x3e\n\t<meta charset="utf-8">\n\t<title>document</title>\n</head>\n<body>\n\t你好吗 \n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"常用标签",frontmatter:{title:"常用标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/6b6c85/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/04.%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/01.HTML/04.常用标签.md",key:"v-02d4297e",path:"/pages/6b6c85/",headers:[{level:2,title:"一、标题标签",slug:"一、标题标签",normalizedTitle:"一、标题标签",charIndex:15},{level:2,title:"二、段落标签",slug:"二、段落标签",normalizedTitle:"二、段落标签",charIndex:226},{level:2,title:"三、换行标签",slug:"三、换行标签",normalizedTitle:"三、换行标签",charIndex:345},{level:2,title:"四、图像标签",slug:"四、图像标签",normalizedTitle:"四、图像标签",charIndex:390},{level:2,title:"五、超链接标签",slug:"五、超链接标签",normalizedTitle:"五、超链接标签",charIndex:583},{level:3,title:"（一）外部链接",slug:"一-外部链接",normalizedTitle:"（一）外部链接",charIndex:679},{level:3,title:"（二）内部链接",slug:"二-内部链接",normalizedTitle:"（二）内部链接",charIndex:878},{level:3,title:"（三）空链接",slug:"三-空链接",normalizedTitle:"（三）空链接",charIndex:944},{level:3,title:"（四）下载链接",slug:"四-下载链接",normalizedTitle:"（四）下载链接",charIndex:998},{level:3,title:"（五）锚点链接",slug:"五-锚点链接",normalizedTitle:"（五）锚点链接",charIndex:1094}],headersStr:"一、标题标签 二、段落标签 三、换行标签 四、图像标签 五、超链接标签 （一）外部链接 （二）内部链接 （三）空链接 （四）下载链接 （五）锚点链接",content:'# 知识点：常用标签\n\n\n# 一、标题标签\n\n特性：\n\n 1. 加粗\n 2. 变大\n 3. 独占一行\n\n  <h1>标题一</h1>\n  <h2>标题二</h2>\n  <h3>标题三</h3>\n  <h4>标题四</h4>\n  <h5>标题五</h5>\n  <h6>标题六</h6>\n\n\n1\n2\n3\n4\n5\n6\n\n\n渲染后：\n\n\n> 标题一\n> \n> \n> 标题二\n> \n> \n> 标题三\n> \n> 标题四\n> \n> 标题五\n> \n> 标题六\n\n\n# 二、段落标签\n\n<p></p>\n\n\n1\n\n\n特性：\n\n 1. 文本在一个段落中会根据浏览器窗口的大小自动换行\n 2. 段落和段落之间会有空隙\n\n渲染后：\n\n> demo、demo、demo\n> \n> demo、demo、demo\n\n\n# 三、换行标签\n\n<br />\n\n\n1\n\n\n渲染后：\n\n> demo\n> demo\n\n\n# 四、图像标签\n\n<img>\n\n\n1\n\n\n属性：\n\n 1. src：图片路径\n 2. alt：图片加载失败显示的文字\n 3. title：鼠标停留显示的信息\n 4. border：边框\n\n例：\n\n> <img src="images/2022-01-29-22-06-01.png" alt="图片加载失败" title="胡歌" border="6px">\n\n渲染后：\n\n> \n\n\n# 五、超链接标签\n\n<a></a>\n\n\n1\n\n\n属性：\n\n 1. href： 链接地址\n 2. target： 打开方式。（_self：在当前页面打开）（__blank：在新页面打开）\n\n\n# （一）外部链接\n\n例：\n\n<a href="http://www.baidu.com" target="_self">_self方式（默认）：外部链接</a>\n<a href="http://www.baidu.com" target="__blank">__blank方式：外部链接</a>\n\n\n1\n2\n\n\n渲染后：\n\n> _self方式（默认）：外部链接 __blank方式：外部链接\n\n\n# （二）内部链接\n\n例：\n\n<a href="index.html">内部链接</a>\n\n\n1\n\n\n渲染后：\n\n> 内部链接\n\n\n# （三）空链接\n\n例：\n\n<a href="#">空链接</a>\n\n\n1\n\n\n渲染后：\n\n> 空链接\n\n\n# （四）下载链接\n\n作用： 地址是一个文件或者压缩包，访问时会下载这个文件\n\n例：\n\n<a href="img/001.zip">下载链接</a>\n\n\n1\n\n\n渲染后：\n\n> 下载链接\n\n\n# （五）锚点链接\n\n作用： 快速定位到页面中的某个位置\n\n特性： 会产生浏览历史\n\n使用步骤：\n\n 1. 定义 href="#标识符"\n 2. 定义 id="标识符"\n\n例：\n\n<br>\n  <a href="#two">锚点链接：1、定义href="#demo"</a>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n<a id="two">锚点链接：2、定义id="demo"</a>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n渲染后： 定义 href="#标识符"\n\n\n\n\n\n\n\n\n\n\n定义 id="标识符"',normalizedContent:'# 知识点：常用标签\n\n\n# 一、标题标签\n\n特性：\n\n 1. 加粗\n 2. 变大\n 3. 独占一行\n\n  <h1>标题一</h1>\n  <h2>标题二</h2>\n  <h3>标题三</h3>\n  <h4>标题四</h4>\n  <h5>标题五</h5>\n  <h6>标题六</h6>\n\n\n1\n2\n3\n4\n5\n6\n\n\n渲染后：\n\n\n> 标题一\n> \n> \n> 标题二\n> \n> \n> 标题三\n> \n> 标题四\n> \n> 标题五\n> \n> 标题六\n\n\n# 二、段落标签\n\n<p></p>\n\n\n1\n\n\n特性：\n\n 1. 文本在一个段落中会根据浏览器窗口的大小自动换行\n 2. 段落和段落之间会有空隙\n\n渲染后：\n\n> demo、demo、demo\n> \n> demo、demo、demo\n\n\n# 三、换行标签\n\n<br />\n\n\n1\n\n\n渲染后：\n\n> demo\n> demo\n\n\n# 四、图像标签\n\n<img>\n\n\n1\n\n\n属性：\n\n 1. src：图片路径\n 2. alt：图片加载失败显示的文字\n 3. title：鼠标停留显示的信息\n 4. border：边框\n\n例：\n\n> <img src="images/2022-01-29-22-06-01.png" alt="图片加载失败" title="胡歌" border="6px">\n\n渲染后：\n\n> \n\n\n# 五、超链接标签\n\n<a></a>\n\n\n1\n\n\n属性：\n\n 1. href： 链接地址\n 2. target： 打开方式。（_self：在当前页面打开）（__blank：在新页面打开）\n\n\n# （一）外部链接\n\n例：\n\n<a href="http://www.baidu.com" target="_self">_self方式（默认）：外部链接</a>\n<a href="http://www.baidu.com" target="__blank">__blank方式：外部链接</a>\n\n\n1\n2\n\n\n渲染后：\n\n> _self方式（默认）：外部链接 __blank方式：外部链接\n\n\n# （二）内部链接\n\n例：\n\n<a href="index.html">内部链接</a>\n\n\n1\n\n\n渲染后：\n\n> 内部链接\n\n\n# （三）空链接\n\n例：\n\n<a href="#">空链接</a>\n\n\n1\n\n\n渲染后：\n\n> 空链接\n\n\n# （四）下载链接\n\n作用： 地址是一个文件或者压缩包，访问时会下载这个文件\n\n例：\n\n<a href="img/001.zip">下载链接</a>\n\n\n1\n\n\n渲染后：\n\n> 下载链接\n\n\n# （五）锚点链接\n\n作用： 快速定位到页面中的某个位置\n\n特性： 会产生浏览历史\n\n使用步骤：\n\n 1. 定义 href="#标识符"\n 2. 定义 id="标识符"\n\n例：\n\n<br>\n  <a href="#two">锚点链接：1、定义href="#demo"</a>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n<a id="two">锚点链接：2、定义id="demo"</a>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n渲染后： 定义 href="#标识符"\n\n\n\n\n\n\n\n\n\n\n定义 id="标识符"',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"文本格式化标签",frontmatter:{title:"文本格式化标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/122fad/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/05.%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/01.HTML/05.文本格式化标签.md",key:"v-144cbcfc",path:"/pages/122fad/",headers:[{level:2,title:"一、加粗",slug:"一、加粗",normalizedTitle:"一、加粗",charIndex:18},{level:2,title:"二、倾斜",slug:"二、倾斜",normalizedTitle:"二、倾斜",charIndex:65},{level:2,title:"三、删除线",slug:"三、删除线",normalizedTitle:"三、删除线",charIndex:104},{level:2,title:"四、下划线",slug:"四、下划线",normalizedTitle:"四、下划线",charIndex:148}],headersStr:"一、加粗 二、倾斜 三、删除线 四、下划线",content:"# 知识点：文本格式化标签\n\n\n# 一、加粗\n\n<strong>加粗</strong>\n\n\n1\n\n\n渲染后：\n\n> 加粗\n\n\n# 二、倾斜\n\n<em>倾斜</em>\n\n\n1\n\n\n渲染后：\n\n> 倾斜\n\n\n# 三、删除线\n\n<del>删除线</del>\n\n\n1\n\n\n渲染后：\n\n> 删除线\n\n\n# 四、下划线\n\n<ins>下划线</ins>\n\n\n1\n\n\n渲染后：\n\n> 下划线",normalizedContent:"# 知识点：文本格式化标签\n\n\n# 一、加粗\n\n<strong>加粗</strong>\n\n\n1\n\n\n渲染后：\n\n> 加粗\n\n\n# 二、倾斜\n\n<em>倾斜</em>\n\n\n1\n\n\n渲染后：\n\n> 倾斜\n\n\n# 三、删除线\n\n<del>删除线</del>\n\n\n1\n\n\n渲染后：\n\n> 删除线\n\n\n# 四、下划线\n\n<ins>下划线</ins>\n\n\n1\n\n\n渲染后：\n\n> 下划线",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"布局标签",frontmatter:{title:"布局标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/58d45e/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/06.%E5%B8%83%E5%B1%80%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/01.HTML/06.布局标签.md",key:"v-56dc7492",path:"/pages/58d45e/",headers:[{level:2,title:"div",slug:"div",normalizedTitle:"div",charIndex:15},{level:2,title:"span",slug:"span",normalizedTitle:"span",charIndex:89}],headersStr:"div span",content:"# 知识点：布局标签\n\n\n# div\n\n<div></div>\n\n\n1\n\n\n作用： 大盒子\n\n特性： 独占一行\n\n渲染后：\n\n> 大盒子，独占一行\n> 大盒子，独占一行\n\n\n# span\n\n<span></span>\n\n\n1\n\n\n作用： 小盒子\n\n特性： 一行显示多个\n\n渲染后：\n\n> 小盒子，一行可以显示多个 小盒子，一行可以显示多个 小盒子，一行可以显示多个",normalizedContent:"# 知识点：布局标签\n\n\n# div\n\n<div></div>\n\n\n1\n\n\n作用： 大盒子\n\n特性： 独占一行\n\n渲染后：\n\n> 大盒子，独占一行\n> 大盒子，独占一行\n\n\n# span\n\n<span></span>\n\n\n1\n\n\n作用： 小盒子\n\n特性： 一行显示多个\n\n渲染后：\n\n> 小盒子，一行可以显示多个 小盒子，一行可以显示多个 小盒子，一行可以显示多个",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"路径",frontmatter:{title:"路径",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/d15b04/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/07.%E8%B7%AF%E5%BE%84.html",relativePath:"《前端》笔记《基础知识》/01.HTML/07.路径.md",key:"v-34e503a2",path:"/pages/d15b04/",headers:[{level:2,title:"一、相对路径",slug:"一、相对路径",normalizedTitle:"一、相对路径",charIndex:13},{level:2,title:"二、绝对路径",slug:"二、绝对路径",normalizedTitle:"二、绝对路径",charIndex:76}],headersStr:"一、相对路径 二、绝对路径",content:'# 知识点：路径\n\n\n# 一、相对路径\n\n<img src="./案例/timg.jpg">\n\n\n1\n\n\n特性： 从本文件出发，去寻找目标文件\n\n\n# 二、绝对路径\n\n<img src="C:/用户/zhengcunrui/Desktop/lian/前端开发基础/01-HTML/01/案例">\n\n\n1\n\n\n特性： 从盘符出发，去寻找目标文件',normalizedContent:'# 知识点：路径\n\n\n# 一、相对路径\n\n<img src="./案例/timg.jpg">\n\n\n1\n\n\n特性： 从本文件出发，去寻找目标文件\n\n\n# 二、绝对路径\n\n<img src="c:/用户/zhengcunrui/desktop/lian/前端开发基础/01-html/01/案例">\n\n\n1\n\n\n特性： 从盘符出发，去寻找目标文件',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"常用特殊字符",frontmatter:{title:"常用特殊字符",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/b6757e/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/08.%E5%B8%B8%E7%94%A8%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6.html",relativePath:"《前端》笔记《基础知识》/01.HTML/08.常用特殊字符.md",key:"v-b0946f2e",path:"/pages/b6757e/",headers:[{level:2,title:"一、空格",slug:"一、空格",normalizedTitle:"一、空格",charIndex:39},{level:2,title:"二、小于号：",slug:"二、小于号",normalizedTitle:"二、小于号：",charIndex:86},{level:2,title:"三、大于号：",slug:"三、大于号",normalizedTitle:"三、大于号：",charIndex:123}],headersStr:"一、空格 二、小于号： 三、大于号：",content:"# 知识点：常用特殊字符\n\n作用： 解决某些字符会被浏览器解析的问题\n\n\n# 一、空格\n\n&nbsp; \n\n\n1\n\n\n渲染后：\n\n> 特      殊  字  符\n\n\n# 二、小于号：\n\n&lt;\n\n\n1\n\n\n渲染后：\n\n> 特殊<字符\n\n\n# 三、大于号：\n\n&gt;\n\n\n1\n\n\n渲染后：\n\n> 特殊>字符",normalizedContent:"# 知识点：常用特殊字符\n\n作用： 解决某些字符会被浏览器解析的问题\n\n\n# 一、空格\n\n&nbsp; \n\n\n1\n\n\n渲染后：\n\n> 特      殊  字  符\n\n\n# 二、小于号：\n\n&lt;\n\n\n1\n\n\n渲染后：\n\n> 特殊<字符\n\n\n# 三、大于号：\n\n&gt;\n\n\n1\n\n\n渲染后：\n\n> 特殊>字符",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"表格标签",frontmatter:{title:"表格标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/fe5560/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/09.%E8%A1%A8%E6%A0%BC%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/01.HTML/09.表格标签.md",key:"v-11e867dc",path:"/pages/fe5560/",headers:[{level:2,title:"相邻边框合并",slug:"相邻边框合并",normalizedTitle:"相邻边框合并",charIndex:973}],headersStr:"相邻边框合并",content:'# 知识点：表格标签\n\n作用： 展示数据\n\n使用步骤：\n\n 1. 定义 表格：<table></table>\n 2. 定义 表格头：<thead></thead>\n 3. 定义 表格主体：<tbody></tbody>\n 4. 创建 表头：<th></th>\n    \n    > 特性：加粗、居中\n\n 5. 创建 行：<tr></tr>\n 6. 创建 单元格：<td></td>\n\n属性：\n\n 1. align：表格相对周围元素的对齐方式\n    * 值：left、center、right\n 2. border：边框。（在 行内样式 表定义的 border 是单元格的边框）（在 非行内样式 表定义的 border 是表格的边框）\n 3. cellpadding：内容与单元格的距离\n 4. cellspacing：单元格与单元格之间的距离\n 5. width：表格宽度\n\n合并单元格\n\n * 跨行合并：rowspan="合并单元格的个数"\n * 跨单元格合并：colspan="合并单元格的个数"\n\n结构：\n\n<table align="center" border="4px" cellpadding="4px" cellspacing="4px" width="400px">\n    <thead>\n      <tr>\n          <th>姓名</th>\n          <th>性别</th>\n          <th>年龄</th>\n      </tr>\n   </thead>\n   <tbody>\n      <tr>\n          <td>张三</td>\n          <td>男</td>\n          <td rowspan="2">18</td>\n      </tr>\n     <tr>\n         <td>小红</td>\n         <td>女</td>\n     </tr>\n     <tr>\n      <td colspan="3">备注：</td>\n  </tr>\n   </tbody>\n</table>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n渲染后：\n\n\n# 相邻边框合并\n\n语法：\n\nborder-collapse: collapse\n\n\n1\n',normalizedContent:'# 知识点：表格标签\n\n作用： 展示数据\n\n使用步骤：\n\n 1. 定义 表格：<table></table>\n 2. 定义 表格头：<thead></thead>\n 3. 定义 表格主体：<tbody></tbody>\n 4. 创建 表头：<th></th>\n    \n    > 特性：加粗、居中\n\n 5. 创建 行：<tr></tr>\n 6. 创建 单元格：<td></td>\n\n属性：\n\n 1. align：表格相对周围元素的对齐方式\n    * 值：left、center、right\n 2. border：边框。（在 行内样式 表定义的 border 是单元格的边框）（在 非行内样式 表定义的 border 是表格的边框）\n 3. cellpadding：内容与单元格的距离\n 4. cellspacing：单元格与单元格之间的距离\n 5. width：表格宽度\n\n合并单元格\n\n * 跨行合并：rowspan="合并单元格的个数"\n * 跨单元格合并：colspan="合并单元格的个数"\n\n结构：\n\n<table align="center" border="4px" cellpadding="4px" cellspacing="4px" width="400px">\n    <thead>\n      <tr>\n          <th>姓名</th>\n          <th>性别</th>\n          <th>年龄</th>\n      </tr>\n   </thead>\n   <tbody>\n      <tr>\n          <td>张三</td>\n          <td>男</td>\n          <td rowspan="2">18</td>\n      </tr>\n     <tr>\n         <td>小红</td>\n         <td>女</td>\n     </tr>\n     <tr>\n      <td colspan="3">备注：</td>\n  </tr>\n   </tbody>\n</table>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n渲染后：\n\n\n# 相邻边框合并\n\n语法：\n\nborder-collapse: collapse\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"列表标签",frontmatter:{title:"列表标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/b2ec84/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/10.%E5%88%97%E8%A1%A8%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/01.HTML/10.列表标签.md",key:"v-5a9aa5c8",path:"/pages/b2ec84/",headers:[{level:2,title:"一、无序列表",slug:"一、无序列表",normalizedTitle:"一、无序列表",charIndex:86},{level:2,title:"二、有序列表",slug:"二、有序列表",normalizedTitle:"二、有序列表",charIndex:251},{level:2,title:"三、自定义列表",slug:"三、自定义列表",normalizedTitle:"三、自定义列表",charIndex:398}],headersStr:"一、无序列表 二、有序列表 三、自定义列表",content:'# 知识点：列表标签\n\n作用： 布局\n\n注意： 所有列表标签的子标签只能是 li 标签\n\n说明： list-style: none（去掉 li 前面的 项目符号）\n\n\n# 一、无序列表\n\n<ul>\n    <li style="list-style: none;">列表项1</li>\n    <li>列表项2</li>\n    <li>列表项3</li>\n</ul>\n\n\n1\n2\n3\n4\n5\n\n\n渲染后：\n\n * 列表项1\n * 列表项2\n * 列表项3\n\n特性： 以 排列数字 呈现列表项\n\n\n# 二、有序列表\n\n<ol>\n    <li>列表项1</li>\n    <li>列表项2</li>\n    <li>列表项3</li>\n</ol>\n\n\n1\n2\n3\n4\n5\n\n\n渲染后：\n\n 1. 列表项1\n 2. 列表项2\n 3. 列表项3\n\n\n\n**特性：**以 排列数字 呈现列表项\n\n\n# 三、自定义列表\n\n<dl>\n    <dt>大类</dt>\n    <dd>相关分类</dd>\n    <dd>相关分类</dd>\n</dl>\n\n\n1\n2\n3\n4\n5\n\n\n渲染后：\n\n大类 相关分类 相关分类\n\n\n\n特性： 没有任何符号数字 呈现列表项\n\n应用场景： 常用于对某一大类进行分类。如页脚的导航模块',normalizedContent:'# 知识点：列表标签\n\n作用： 布局\n\n注意： 所有列表标签的子标签只能是 li 标签\n\n说明： list-style: none（去掉 li 前面的 项目符号）\n\n\n# 一、无序列表\n\n<ul>\n    <li style="list-style: none;">列表项1</li>\n    <li>列表项2</li>\n    <li>列表项3</li>\n</ul>\n\n\n1\n2\n3\n4\n5\n\n\n渲染后：\n\n * 列表项1\n * 列表项2\n * 列表项3\n\n特性： 以 排列数字 呈现列表项\n\n\n# 二、有序列表\n\n<ol>\n    <li>列表项1</li>\n    <li>列表项2</li>\n    <li>列表项3</li>\n</ol>\n\n\n1\n2\n3\n4\n5\n\n\n渲染后：\n\n 1. 列表项1\n 2. 列表项2\n 3. 列表项3\n\n\n\n**特性：**以 排列数字 呈现列表项\n\n\n# 三、自定义列表\n\n<dl>\n    <dt>大类</dt>\n    <dd>相关分类</dd>\n    <dd>相关分类</dd>\n</dl>\n\n\n1\n2\n3\n4\n5\n\n\n渲染后：\n\n大类 相关分类 相关分类\n\n\n\n特性： 没有任何符号数字 呈现列表项\n\n应用场景： 常用于对某一大类进行分类。如页脚的导航模块',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"表单标签",frontmatter:{title:"表单标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/8ec70b/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/11.%E8%A1%A8%E5%8D%95%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/01.HTML/11.表单标签.md",key:"v-34db8534",path:"/pages/8ec70b/",headers:[{level:2,title:"表单类型",slug:"表单类型",normalizedTitle:"表单类型",charIndex:379},{level:3,title:"一、文本",slug:"一、文本",normalizedTitle:"一、文本",charIndex:388},{level:3,title:"二、密码",slug:"二、密码",normalizedTitle:"二、密码",charIndex:431},{level:3,title:"三、单选框",slug:"三、单选框",normalizedTitle:"三、单选框",charIndex:478},{level:3,title:"四、多选框",slug:"四、多选框",normalizedTitle:"四、多选框",charIndex:605},{level:3,title:"五、文件上传",slug:"五、文件上传",normalizedTitle:"五、文件上传",charIndex:779},{level:3,title:"六、脚本按钮",slug:"六、脚本按钮",normalizedTitle:"六、脚本按钮",charIndex:824},{level:3,title:"七、提交按钮",slug:"七、提交按钮",normalizedTitle:"七、提交按钮",charIndex:903},{level:3,title:"八、图像提交按钮",slug:"八、图像提交按钮",normalizedTitle:"八、图像提交按钮",charIndex:979},{level:3,title:"九、重置按钮",slug:"九、重置按钮",normalizedTitle:"九、重置按钮",charIndex:1064},{level:3,title:"十、下拉列表",slug:"十、下拉列表",normalizedTitle:"十、下拉列表",charIndex:1110},{level:3,title:"十一、文本域",slug:"十一、文本域",normalizedTitle:"十一、文本域",charIndex:1306}],headersStr:"表单类型 一、文本 二、密码 三、单选框 四、多选框 五、文件上传 六、脚本按钮 七、提交按钮 八、图像提交按钮 九、重置按钮 十、下拉列表 十一、文本域",content:'# 知识点：表单标签\n\n<form action="" method="GET" name="user">\n\n  文本：<input type="text" />\n\n  密码：<input type="password" />\n\n  ...\n\n</form>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n作用： 收集用户信息\n\nform 表单 属性：\n\n 1. action：服务器地址\n 2. method：提交方式(get/post)\n 3. name：表单域名称\n\ninput 表单控件 属性\n\n 1. type：控件类型\n 2. name：控件名称\n 3. value：控件值\n 4. checked：默认选中项\n 5. maxlength：输入字符的最大长度\n\n使用步骤：\n\n 1. 定义表单域\n 2. 定义表单控件\n 3. 定义提示信息\n\n\n# 表单类型\n\n\n# 一、文本\n\n<input type="text" />\n\n\n1\n\n\n渲染后：\n\n\n# 二、密码\n\n<input type="password" />\n\n\n1\n\n\n渲染后：\n\n\n# 三、单选框\n\n<input type="radio" name="danxk" />\n<input type="radio" name="danxk" />\n\n\n1\n2\n\n\n渲染后：\n\n特性： 必须指定 name，且要相同。用来区分每组的单选框\n\n\n# 四、多选框\n\n<input type="checkbox" name="duoxk" />\n<input type="checkbox" name="duoxk" />\n<input type="checkbox" name="duoxk" />\n\n\n1\n2\n3\n\n\n渲染后：\n\n特性： 必须指定 name，且要相同。用来区分每组的多选框\n\n\n# 五、文件上传\n\n<input type="file" />\n\n\n1\n\n\n渲染后：\n\n\n# 六、脚本按钮\n\n<input type="button" />\n\n\n1\n\n\n渲染后：\n\n作用： 通常配合 JS 启动脚本\n\n特性： 不会提交表单数据\n\n\n# 七、提交按钮\n\n<input type="submit" />\n\n\n1\n\n\n渲染后：\n\n作用： 将表单数据发送到服务器\n\n特性： 提交表单数据\n\n\n# 八、图像提交按钮\n\n<input type="image" src="images/2022-01-29-22-06-01.png" />\n\n\n1\n\n\n渲染后：\n\n\n# 九、重置按钮\n\n<input type="reset" />\n\n\n1\n\n\n渲染后：\n\n\n# 十、下拉列表\n\n<select>\n <option>--请选择城市--</option>\n <option>海淀区</option>\n <option>昌平区</option>\n <option>通州区</option>\n <option>雄安区</option>\n</select>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n渲染后： --请选择城市-- 海淀区 昌平区 通州区 雄安区\n\n\n# 十一、文本域\n\n  <textarea></textarea>\n\n\n1\n\n\n',normalizedContent:'# 知识点：表单标签\n\n<form action="" method="get" name="user">\n\n  文本：<input type="text" />\n\n  密码：<input type="password" />\n\n  ...\n\n</form>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n作用： 收集用户信息\n\nform 表单 属性：\n\n 1. action：服务器地址\n 2. method：提交方式(get/post)\n 3. name：表单域名称\n\ninput 表单控件 属性\n\n 1. type：控件类型\n 2. name：控件名称\n 3. value：控件值\n 4. checked：默认选中项\n 5. maxlength：输入字符的最大长度\n\n使用步骤：\n\n 1. 定义表单域\n 2. 定义表单控件\n 3. 定义提示信息\n\n\n# 表单类型\n\n\n# 一、文本\n\n<input type="text" />\n\n\n1\n\n\n渲染后：\n\n\n# 二、密码\n\n<input type="password" />\n\n\n1\n\n\n渲染后：\n\n\n# 三、单选框\n\n<input type="radio" name="danxk" />\n<input type="radio" name="danxk" />\n\n\n1\n2\n\n\n渲染后：\n\n特性： 必须指定 name，且要相同。用来区分每组的单选框\n\n\n# 四、多选框\n\n<input type="checkbox" name="duoxk" />\n<input type="checkbox" name="duoxk" />\n<input type="checkbox" name="duoxk" />\n\n\n1\n2\n3\n\n\n渲染后：\n\n特性： 必须指定 name，且要相同。用来区分每组的多选框\n\n\n# 五、文件上传\n\n<input type="file" />\n\n\n1\n\n\n渲染后：\n\n\n# 六、脚本按钮\n\n<input type="button" />\n\n\n1\n\n\n渲染后：\n\n作用： 通常配合 js 启动脚本\n\n特性： 不会提交表单数据\n\n\n# 七、提交按钮\n\n<input type="submit" />\n\n\n1\n\n\n渲染后：\n\n作用： 将表单数据发送到服务器\n\n特性： 提交表单数据\n\n\n# 八、图像提交按钮\n\n<input type="image" src="images/2022-01-29-22-06-01.png" />\n\n\n1\n\n\n渲染后：\n\n\n# 九、重置按钮\n\n<input type="reset" />\n\n\n1\n\n\n渲染后：\n\n\n# 十、下拉列表\n\n<select>\n <option>--请选择城市--</option>\n <option>海淀区</option>\n <option>昌平区</option>\n <option>通州区</option>\n <option>雄安区</option>\n</select>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n渲染后： --请选择城市-- 海淀区 昌平区 通州区 雄安区\n\n\n# 十一、文本域\n\n  <textarea></textarea>\n\n\n1\n\n\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"自动对焦标签（label）",frontmatter:{title:"自动对焦标签（label）",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/c75eb5/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/12.%E8%87%AA%E5%8A%A8%E5%AF%B9%E7%84%A6%E6%A0%87%E7%AD%BE%EF%BC%88label%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/01.HTML/12.自动对焦标签（label）.md",key:"v-72a20d52",path:"/pages/c75eb5/",headersStr:null,content:'# 知识点：自动对焦标签（label）\n\n<label for="sex">男</label> <input type="radio" name="sex" id="sex" />\n\n<br>\n\n<label for="text">文本：</label> <input type="text" id="text">\n\n\n1\n2\n3\n4\n5\n\n\n渲染后： 男\n\n\n文本：\n\n作用： 当点击该标签内的文本时，浏览器就会自动将焦点转到或选中对应的表单控件上，用来增加用户体验\n\n使用步骤：\n\n 1. 定义 label 标签\n 2. 为绑定控件添加对应的 id 名',normalizedContent:'# 知识点：自动对焦标签（label）\n\n<label for="sex">男</label> <input type="radio" name="sex" id="sex" />\n\n<br>\n\n<label for="text">文本：</label> <input type="text" id="text">\n\n\n1\n2\n3\n4\n5\n\n\n渲染后： 男\n\n\n文本：\n\n作用： 当点击该标签内的文本时，浏览器就会自动将焦点转到或选中对应的表单控件上，用来增加用户体验\n\n使用步骤：\n\n 1. 定义 label 标签\n 2. 为绑定控件添加对应的 id 名',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"H5 新增语义化标签 和 布局方式",frontmatter:{title:"H5 新增语义化标签 和 布局方式",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/5363f3/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/13.H5%20%E6%96%B0%E5%A2%9E%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE%20%E5%92%8C%20%E5%B8%83%E5%B1%80%E6%96%B9%E5%BC%8F.html",relativePath:"《前端》笔记《基础知识》/01.HTML/13.H5 新增语义化标签 和 布局方式.md",key:"v-6b59ecfc",path:"/pages/5363f3/",headers:[{level:2,title:"一、头部标签 --\x3e",slug:"一、头部标签",normalizedTitle:"一、头部标签 --&gt;",charIndex:null},{level:2,title:"二、导航标签",slug:"二、导航标签",normalizedTitle:"二、导航标签",charIndex:405},{level:2,title:"三、内容标签",slug:"三、内容标签",normalizedTitle:"三、内容标签",charIndex:438},{level:2,title:"四、区域标签",slug:"四、区域标签",normalizedTitle:"四、区域标签",charIndex:479},{level:2,title:"五、侧边栏标签",slug:"五、侧边栏标签",normalizedTitle:"五、侧边栏标签",charIndex:520},{level:2,title:"六、尾部标签",slug:"六、尾部标签",normalizedTitle:"六、尾部标签",charIndex:559}],headersStr:"一、头部标签 --\x3e 二、导航标签 三、内容标签 四、区域标签 五、侧边栏标签 六、尾部标签",content:'# 知识点：H5 新增语义化标签 和 布局方式\n\n<body>\n    <header>头部标签</header>\n\n    <nav>导航标签</nav>\n\n    <div class="clearfix">\n        <article>内容标签\n\n            <section>区域标签</section>\n\n        </article>\n\n        <aside>侧边栏标签</aside>\n    </div>\n\n    <footer>尾部标签</footer>\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n结构图：\n\n作用： 对 SEO 优化更加友好\n\n兼容性： IE9+\n\n应用场景： 更推荐移动端使用\n\n\n# 一、头部标签 --\x3e\n\n<header>头部标签</header>\n\n\n1\n\n\n\n# 二、导航标签\n\n<nav>导航标签</nav>\n\n\n1\n\n\n\n# 三、内容标签\n\n<article>内容标签</article>\n\n\n1\n\n\n\n# 四、区域标签\n\n<section>区域标签</section>\n\n\n1\n\n\n\n# 五、侧边栏标签\n\n<aside>侧边栏标签</aside>\n\n\n1\n\n\n\n# 六、尾部标签\n\n<footer>尾部标签</footer>\n\n\n1\n',normalizedContent:'# 知识点：h5 新增语义化标签 和 布局方式\n\n<body>\n    <header>头部标签</header>\n\n    <nav>导航标签</nav>\n\n    <div class="clearfix">\n        <article>内容标签\n\n            <section>区域标签</section>\n\n        </article>\n\n        <aside>侧边栏标签</aside>\n    </div>\n\n    <footer>尾部标签</footer>\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n结构图：\n\n作用： 对 seo 优化更加友好\n\n兼容性： ie9+\n\n应用场景： 更推荐移动端使用\n\n\n# 一、头部标签 --\x3e\n\n<header>头部标签</header>\n\n\n1\n\n\n\n# 二、导航标签\n\n<nav>导航标签</nav>\n\n\n1\n\n\n\n# 三、内容标签\n\n<article>内容标签</article>\n\n\n1\n\n\n\n# 四、区域标签\n\n<section>区域标签</section>\n\n\n1\n\n\n\n# 五、侧边栏标签\n\n<aside>侧边栏标签</aside>\n\n\n1\n\n\n\n# 六、尾部标签\n\n<footer>尾部标签</footer>\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"H5 新增多媒体标签",frontmatter:{title:"H5 新增多媒体标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/75fc79/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/14.H5%20%E6%96%B0%E5%A2%9E%E5%A4%9A%E5%AA%92%E4%BD%93%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/01.HTML/14.H5 新增多媒体标签.md",key:"v-d9d6ef6c",path:"/pages/75fc79/",headers:[{level:2,title:"一、视频标签",slug:"一、视频标签",normalizedTitle:"一、视频标签",charIndex:77},{level:2,title:"二、音频标签",slug:"二、音频标签",normalizedTitle:"二、音频标签",charIndex:311}],headersStr:"一、视频标签 二、音频标签",content:'# 知识点：H5 新增多媒体标签\n\n提示： 为了用户体验，谷歌浏览器把音频和视频自动播放禁止了\n\n> 解决方法：视频可以通过静音播放解决 --\x3e\n\n\n# 一、视频标签\n\n<video src="sucai/盾之勇者成名录.mp4" autoplay loop muted></video>\n\n\n1\n\n\n属性：\n\n 1. autoplay(视频就绪自动播放) (常用)\n 2. controls(显示播放控件)\n 3. loop(循环播放) (常用)\n 4. preload(预加载) (如果有 autoplay 属性时，该属性作废)\n 5. poster(加载时的图片)\n 6. muted(静音播放) (常用)\n\n\n# 二、音频标签\n\n<audio src="sucai/请把我记在心里.mp3" controls loop></audio>\n\n\n1\n\n\n属性：\n\n 1. autoplay(音频就绪自动播放)\n 2. controls(显示播放控件) (常用)\n 3. loop(循环播放) (常用)',normalizedContent:'# 知识点：h5 新增多媒体标签\n\n提示： 为了用户体验，谷歌浏览器把音频和视频自动播放禁止了\n\n> 解决方法：视频可以通过静音播放解决 --\x3e\n\n\n# 一、视频标签\n\n<video src="sucai/盾之勇者成名录.mp4" autoplay loop muted></video>\n\n\n1\n\n\n属性：\n\n 1. autoplay(视频就绪自动播放) (常用)\n 2. controls(显示播放控件)\n 3. loop(循环播放) (常用)\n 4. preload(预加载) (如果有 autoplay 属性时，该属性作废)\n 5. poster(加载时的图片)\n 6. muted(静音播放) (常用)\n\n\n# 二、音频标签\n\n<audio src="sucai/请把我记在心里.mp3" controls loop></audio>\n\n\n1\n\n\n属性：\n\n 1. autoplay(音频就绪自动播放)\n 2. controls(显示播放控件) (常用)\n 3. loop(循环播放) (常用)',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"H5 新增 input 类型 和 属性",frontmatter:{title:"H5 新增 input 类型 和 属性",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/20fdb7/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/01.HTML/15.H5%20%E6%96%B0%E5%A2%9E%20input%20%E7%B1%BB%E5%9E%8B%20%E5%92%8C%20%E5%B1%9E%E6%80%A7.html",relativePath:"《前端》笔记《基础知识》/01.HTML/15.H5 新增 input 类型 和 属性.md",key:"v-2cbc09ae",path:"/pages/20fdb7/",headers:[{level:2,title:"一、邮箱",slug:"一、邮箱",normalizedTitle:"一、邮箱",charIndex:181},{level:2,title:"二、地址",slug:"二、地址",normalizedTitle:"二、地址",charIndex:232},{level:2,title:"三、日期",slug:"三、日期",normalizedTitle:"三、日期",charIndex:292},{level:2,title:"四、时间",slug:"四、时间",normalizedTitle:"四、时间",charIndex:343},{level:2,title:"五、月",slug:"五、月",normalizedTitle:"五、月",charIndex:384},{level:2,title:"六、周",slug:"六、周",normalizedTitle:"六、周",charIndex:419},{level:2,title:"七、数字",slug:"七、数字",normalizedTitle:"七、数字",charIndex:459},{level:2,title:"八、手机号码",slug:"八、手机号码",normalizedTitle:"八、手机号码",charIndex:502},{level:2,title:"九、搜索框",slug:"九、搜索框",normalizedTitle:"九、搜索框",charIndex:544},{level:2,title:"十、颜色",slug:"十、颜色",normalizedTitle:"十、颜色",charIndex:588}],headersStr:"一、邮箱 二、地址 三、日期 四、时间 五、月 六、周 七、数字 八、手机号码 九、搜索框 十、颜色",content:'# 知识点：H5 新增 input 类型/属性\n\n作用： 用户只能输入对应的类型\n\n\b新增属性：\n\n 1. required：内容不能为空\n 2. placeholder：提示文本\n 3. autofocus：自动对焦\n 4. autocomplete：是否显示历史记录（no：开启。默认) (off：关闭）\n 5. multiple：允许多选文件提交\n\n\n# 一、邮箱\n\n<input type="email" required>\n\n\n1\n\n\n渲染后：\n\n\n# 二、地址\n\n<input type="url" placeholder="请输入地址">\n\n\n1\n\n\n渲染后：\n\n\n# 三、日期\n\n<input type="date" autofocus>\n\n\n1\n\n\n渲染后：\n\n\n# 四、时间\n\n<input type="time">\n\n\n1\n\n\n渲染后：\n\n\n# 五、月\n\n<input type="month">\n\n\n1\n\n\n\n# 六、周\n\n<input type="week">\n\n\n1\n\n\n渲染后：\n\n\n# 七、数字\n\n<input type="number">\n\n\n1\n\n\n渲染后：\n\n\n# 八、手机号码\n\n<input type="tel">\n\n\n1\n\n\n渲染后：\n\n\n# 九、搜索框\n\n<input type="search">\n\n\n1\n\n\n渲染后：\n\n\n# 十、颜色\n\n<input type="color">\n\n\n1\n\n\n渲染后：',normalizedContent:'# 知识点：h5 新增 input 类型/属性\n\n作用： 用户只能输入对应的类型\n\n\b新增属性：\n\n 1. required：内容不能为空\n 2. placeholder：提示文本\n 3. autofocus：自动对焦\n 4. autocomplete：是否显示历史记录（no：开启。默认) (off：关闭）\n 5. multiple：允许多选文件提交\n\n\n# 一、邮箱\n\n<input type="email" required>\n\n\n1\n\n\n渲染后：\n\n\n# 二、地址\n\n<input type="url" placeholder="请输入地址">\n\n\n1\n\n\n渲染后：\n\n\n# 三、日期\n\n<input type="date" autofocus>\n\n\n1\n\n\n渲染后：\n\n\n# 四、时间\n\n<input type="time">\n\n\n1\n\n\n渲染后：\n\n\n# 五、月\n\n<input type="month">\n\n\n1\n\n\n\n# 六、周\n\n<input type="week">\n\n\n1\n\n\n渲染后：\n\n\n# 七、数字\n\n<input type="number">\n\n\n1\n\n\n渲染后：\n\n\n# 八、手机号码\n\n<input type="tel">\n\n\n1\n\n\n渲染后：\n\n\n# 九、搜索框\n\n<input type="search">\n\n\n1\n\n\n渲染后：\n\n\n# 十、颜色\n\n<input type="color">\n\n\n1\n\n\n渲染后：',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"基础选择器",frontmatter:{title:"基础选择器",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/d8b567/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/01.%E5%9F%BA%E7%A1%80%E9%80%89%E6%8B%A9%E5%99%A8.html",relativePath:"《前端》笔记《基础知识》/02.CSS/01.基础选择器.md",key:"v-710bcb73",path:"/pages/d8b567/",headers:[{level:2,title:"一、标签选择器",slug:"一、标签选择器",normalizedTitle:"一、标签选择器",charIndex:32},{level:2,title:"二、类选择器",slug:"二、类选择器",normalizedTitle:"二、类选择器",charIndex:90},{level:2,title:"三、id 选择器",slug:"三、id-选择器",normalizedTitle:"三、id 选择器",charIndex:316},{level:2,title:"四、通配符选择器",slug:"四、通配符选择器",normalizedTitle:"四、通配符选择器",charIndex:504}],headersStr:"一、标签选择器 二、类选择器 三、id 选择器 四、通配符选择器",content:'# 知识点：基础选择器\n\n作用： 为选中的元素添加样式\n\n\n# 一、标签选择器\n\nh1 {\n    color: red;\n}\n\n\n1\n2\n3\n\n\n作用： 选中某一类标签\n\n\n# 二、类选择器\n\n作用： 选中某一类带有 class 的标签\n\n特性： 一个类可以拥有多个类名，以空格隔开\n\n * 公共类：类名前面带有 gg-，把元素相同的样式放到公共类里。节省 CSS 代码，方便统一修改\n * 独有类：元素独有的样式\n\n使用步骤：\n\n 1. 定义 class\n\n<div class="lei">类选择器</div>\n\n\n1\n\n 2. 定义 .类名\n\n.lei {\n    color: coral;\n}\n\n\n1\n2\n3\n\n\n\n# 三、id 选择器\n\n作用： 选中某一个带有 id 的标签\n\n特性： 整个 html 文档中只能存在一个相同的 id 名\n\n应用场景： 常和 JS 搭配使用\n\n使用步骤：\n\n 1. 定义 id\n\n<span id="sfz">id选择器</span>\n\n\n1\n\n 2. 定义 #id名\n\n#sfz {\n    color: blueviolet;\n}\n\n\n1\n2\n3\n\n\n\n# 四、通配符选择器\n\n* {\n    text-align: center;\n}\n\n\n1\n2\n3\n\n\n作用： 选中所有的标签\n\n提示： 不推荐使用，太消耗浏览器性能',normalizedContent:'# 知识点：基础选择器\n\n作用： 为选中的元素添加样式\n\n\n# 一、标签选择器\n\nh1 {\n    color: red;\n}\n\n\n1\n2\n3\n\n\n作用： 选中某一类标签\n\n\n# 二、类选择器\n\n作用： 选中某一类带有 class 的标签\n\n特性： 一个类可以拥有多个类名，以空格隔开\n\n * 公共类：类名前面带有 gg-，把元素相同的样式放到公共类里。节省 css 代码，方便统一修改\n * 独有类：元素独有的样式\n\n使用步骤：\n\n 1. 定义 class\n\n<div class="lei">类选择器</div>\n\n\n1\n\n 2. 定义 .类名\n\n.lei {\n    color: coral;\n}\n\n\n1\n2\n3\n\n\n\n# 三、id 选择器\n\n作用： 选中某一个带有 id 的标签\n\n特性： 整个 html 文档中只能存在一个相同的 id 名\n\n应用场景： 常和 js 搭配使用\n\n使用步骤：\n\n 1. 定义 id\n\n<span id="sfz">id选择器</span>\n\n\n1\n\n 2. 定义 #id名\n\n#sfz {\n    color: blueviolet;\n}\n\n\n1\n2\n3\n\n\n\n# 四、通配符选择器\n\n* {\n    text-align: center;\n}\n\n\n1\n2\n3\n\n\n作用： 选中所有的标签\n\n提示： 不推荐使用，太消耗浏览器性能',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"字体属性",frontmatter:{title:"字体属性",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/260170/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/02.%E5%AD%97%E4%BD%93%E5%B1%9E%E6%80%A7.html",relativePath:"《前端》笔记《基础知识》/02.CSS/02.字体属性.md",key:"v-21fe0376",path:"/pages/260170/",headers:[{level:2,title:"一、字体风格",slug:"一、字体风格",normalizedTitle:"一、字体风格",charIndex:28},{level:2,title:"二、字体粗细",slug:"二、字体粗细",normalizedTitle:"二、字体粗细",charIndex:146},{level:2,title:"三、字体大小",slug:"三、字体大小",normalizedTitle:"三、字体大小",charIndex:263},{level:2,title:"四、字体类型",slug:"四、字体类型",normalizedTitle:"四、字体类型",charIndex:296},{level:2,title:"五、字体复合",slug:"五、字体复合",normalizedTitle:"五、字体复合",charIndex:469}],headersStr:"一、字体风格 二、字体粗细 三、字体大小 四、字体类型 五、字体复合",content:'# 知识点：字体属性\n\n作用： 定义字体的样式\n\n\n# 一、字体风格\n\nfont-style: normal\n\n\n1\n\n\n值：\n\n 1. normal（标准样式）（默认值）\n 2. italic（倾斜）\n    * 说明：通常不会给文字加倾斜，而是把 em、i 标签改为不倾斜 */\n\n\n# 二、字体粗细\n\nfont-weight: 700\n\n\n1\n\n\n值：\n\n 1. normal（不加粗）（默认值)）\n 2. bold（加粗）\n 3. 100 ~ 900（400 = normal；700 = bold)（推荐）\n\n\n# 三、字体大小\n\nfont-size: 18px\n\n\n1\n\n\n\n# 四、字体类型\n\nfont-family: Arial,"Microsoft Yahei", "微软雅黑";\n\n\n1\n\n\n特性： 可以定义多个字体，如果用户没有前面的字体，则会使用下一个字体，以此类推\n\n命名规范： 多个单词组成的字体 和 中文 需要加双引号\n\n提示： 尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示 */\n\n\n# 五、字体复合\n\nfont: italic 700 28px "Microsoft Yahei"\n\n\n1\n\n\n作用： 使代码更简洁\n\n特性：\n\n 1. 必须按照 风格、粗细、大小/行高、类型 的顺序书写\n 2. 必须保留 大小 和 类型 属性，其它可以省略，否则不会生效',normalizedContent:'# 知识点：字体属性\n\n作用： 定义字体的样式\n\n\n# 一、字体风格\n\nfont-style: normal\n\n\n1\n\n\n值：\n\n 1. normal（标准样式）（默认值）\n 2. italic（倾斜）\n    * 说明：通常不会给文字加倾斜，而是把 em、i 标签改为不倾斜 */\n\n\n# 二、字体粗细\n\nfont-weight: 700\n\n\n1\n\n\n值：\n\n 1. normal（不加粗）（默认值)）\n 2. bold（加粗）\n 3. 100 ~ 900（400 = normal；700 = bold)（推荐）\n\n\n# 三、字体大小\n\nfont-size: 18px\n\n\n1\n\n\n\n# 四、字体类型\n\nfont-family: arial,"microsoft yahei", "微软雅黑";\n\n\n1\n\n\n特性： 可以定义多个字体，如果用户没有前面的字体，则会使用下一个字体，以此类推\n\n命名规范： 多个单词组成的字体 和 中文 需要加双引号\n\n提示： 尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示 */\n\n\n# 五、字体复合\n\nfont: italic 700 28px "microsoft yahei"\n\n\n1\n\n\n作用： 使代码更简洁\n\n特性：\n\n 1. 必须按照 风格、粗细、大小/行高、类型 的顺序书写\n 2. 必须保留 大小 和 类型 属性，其它可以省略，否则不会生效',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"文本属性",frontmatter:{title:"文本属性",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/504a1f/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/03.%E6%96%87%E6%9C%AC%E5%B1%9E%E6%80%A7.html",relativePath:"《前端》笔记《基础知识》/02.CSS/03.文本属性.md",key:"v-9dfb5f76",path:"/pages/504a1f/",headers:[{level:2,title:"一、字体颜色",slug:"一、字体颜色",normalizedTitle:"一、字体颜色",charIndex:27},{level:2,title:"二、文本对齐",slug:"二、文本对齐",normalizedTitle:"二、文本对齐",charIndex:141},{level:2,title:"三、文本装饰",slug:"三、文本装饰",normalizedTitle:"三、文本装饰",charIndex:228},{level:2,title:"四、文本缩进",slug:"四、文本缩进",normalizedTitle:"四、文本缩进",charIndex:349},{level:2,title:"五、行高",slug:"五、行高",normalizedTitle:"五、行高",charIndex:467}],headersStr:"一、字体颜色 二、文本对齐 三、文本装饰 四、文本缩进 五、行高",content:"# 知识点：文本属性\n\n作用： 定义文本样式\n\n\n# 一、字体颜色\n\ncolor: red;\n\n\n1\n\n\n值：\n\n 1. 预定义颜色(red)\n 2. 十六进制(#FF0000)\n 3. RGB( rgb(255,0,0) ) 或 ( rgb(100%,0%,0%) ))\n\n\n# 二、文本对齐\n\ntext-align: left\n\n\n1\n\n\n值：\n\n 1. left(左对齐)(默认)\n 2. center(居中)\n 3. right(右对齐)\n\n\n# 三、文本装饰\n\ntext-decoration: none\n\n\n1\n\n\n值：\n\n 1. none(无装饰)(默认)\n 2. underline(下划线)\n 3. overline(上划线)\n 4. line-through(删除线)\n\n\n# 四、文本缩进\n\ntext-indent: 2em\n\n\n1\n\n\n值：\n\n 1. px\n 2. em(推荐)\n    * em：是一个相对单位，相对于当前元素的文字大小，当前元素没有定义文字大小则相对父元素\n\n说明： 值可以是负数\n\n\n# 五、行高\n\nline-height: 66px;\n\n\n1\n\n\n特性： 行高 = 上间距 + 内容 + 下间距",normalizedContent:"# 知识点：文本属性\n\n作用： 定义文本样式\n\n\n# 一、字体颜色\n\ncolor: red;\n\n\n1\n\n\n值：\n\n 1. 预定义颜色(red)\n 2. 十六进制(#ff0000)\n 3. rgb( rgb(255,0,0) ) 或 ( rgb(100%,0%,0%) ))\n\n\n# 二、文本对齐\n\ntext-align: left\n\n\n1\n\n\n值：\n\n 1. left(左对齐)(默认)\n 2. center(居中)\n 3. right(右对齐)\n\n\n# 三、文本装饰\n\ntext-decoration: none\n\n\n1\n\n\n值：\n\n 1. none(无装饰)(默认)\n 2. underline(下划线)\n 3. overline(上划线)\n 4. line-through(删除线)\n\n\n# 四、文本缩进\n\ntext-indent: 2em\n\n\n1\n\n\n值：\n\n 1. px\n 2. em(推荐)\n    * em：是一个相对单位，相对于当前元素的文字大小，当前元素没有定义文字大小则相对父元素\n\n说明： 值可以是负数\n\n\n# 五、行高\n\nline-height: 66px;\n\n\n1\n\n\n特性： 行高 = 上间距 + 内容 + 下间距",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"CSS的引入方式",frontmatter:{title:"CSS的引入方式",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/bbf435/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/04.CSS%E7%9A%84%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F.html",relativePath:"《前端》笔记《基础知识》/02.CSS/04.CSS的引入方式.md",key:"v-137192e0",path:"/pages/bbf435/",headers:[{level:2,title:"一、内部样式表",slug:"一、内部样式表",normalizedTitle:"一、内部样式表",charIndex:19},{level:2,title:"二、外部样式表（推荐）",slug:"二、外部样式表-推荐",normalizedTitle:"二、外部样式表（推荐）",charIndex:127},{level:2,title:"三、行内样式表",slug:"三、行内样式表",normalizedTitle:"三、行内样式表",charIndex:268}],headersStr:"一、内部样式表 二、外部样式表（推荐） 三、行内样式表",content:'# 知识点：CSS的引入方式\n\n\n# 一、内部样式表\n\n<style>\n    .neibu {\n        color: red;\n    }\n</style>\n\n\n1\n2\n3\n4\n5\n\n\n特性： 写在 html 中的 style 标签里\n\n\n# 二、外部样式表（推荐）\n\n<link rel="stylesheet" href="sucai/index.css">\n\n\n1\n\n\n特性： 通过 link 引入，写在另一个文件中\n\n属性：\n\n 1. rel：指定链接类型（stylesheet：链接的文档是一个样式表文件）\n\n\n# 三、行内样式表\n\n<p style="color: rebeccapurple">行内样式表</p>\n\n\n1\n\n\n特性： 写在标签的 style 属性中',normalizedContent:'# 知识点：css的引入方式\n\n\n# 一、内部样式表\n\n<style>\n    .neibu {\n        color: red;\n    }\n</style>\n\n\n1\n2\n3\n4\n5\n\n\n特性： 写在 html 中的 style 标签里\n\n\n# 二、外部样式表（推荐）\n\n<link rel="stylesheet" href="sucai/index.css">\n\n\n1\n\n\n特性： 通过 link 引入，写在另一个文件中\n\n属性：\n\n 1. rel：指定链接类型（stylesheet：链接的文档是一个样式表文件）\n\n\n# 三、行内样式表\n\n<p style="color: rebeccapurple">行内样式表</p>\n\n\n1\n\n\n特性： 写在标签的 style 属性中',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"Emmet 语法",frontmatter:{title:"Emmet 语法",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/4537e1/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/05.Emmet%20%E8%AF%AD%E6%B3%95.html",relativePath:"《前端》笔记《基础知识》/02.CSS/05.Emmet 语法.md",key:"v-494c5dee",path:"/pages/4537e1/",headers:[{level:2,title:"一、快速生成HTML结构语法",slug:"一、快速生成html结构语法",normalizedTitle:"一、快速生成html结构语法",charIndex:68},{level:3,title:"（1）标签",slug:"_1-标签",normalizedTitle:"（1）标签",charIndex:87},{level:3,title:"（2）多个相同标签",slug:"_2-多个相同标签",normalizedTitle:"（2）多个相同标签",charIndex:122},{level:3,title:"（3）父子级关系的标签",slug:"_3-父子级关系的标签",normalizedTitle:"（3）父子级关系的标签",charIndex:163},{level:3,title:"（4）兄弟关系的标签",slug:"_4-兄弟关系的标签",normalizedTitle:"（4）兄弟关系的标签",charIndex:231},{level:3,title:"（5）带有类名的标签",slug:"_5-带有类名的标签",normalizedTitle:"（5）带有类名的标签",charIndex:280},{level:3,title:"（6）带有 id 的标签",slug:"_6-带有-id-的标签",normalizedTitle:"（6）带有 id 的标签",charIndex:338},{level:3,title:"（7） 生成带有顺序的",slug:"_7-生成带有顺序的",normalizedTitle:"（7） 生成带有顺序的",charIndex:395},{level:3,title:"（8）在生成的标签内部写内容",slug:"_8-在生成的标签内部写内容",normalizedTitle:"（8）在生成的标签内部写内容",charIndex:520},{level:2,title:"二、快速生成CSS样式语法",slug:"二、快速生成css样式语法",normalizedTitle:"二、快速生成css样式语法",charIndex:570},{level:2,title:"三、设置保存时格式化代码",slug:"三、设置保存时格式化代码",normalizedTitle:"三、设置保存时格式化代码",charIndex:725}],headersStr:"一、快速生成HTML结构语法 （1）标签 （2）多个相同标签 （3）父子级关系的标签 （4）兄弟关系的标签 （5）带有类名的标签 （6）带有 id 的标签 （7） 生成带有顺序的 （8）在生成的标签内部写内容 二、快速生成CSS样式语法 三、设置保存时格式化代码",content:'# 知识点：Emmet 语法\n\n特性： Vscode 内部已经集成该语法\n\n使用方法： 输入完语法后，要按 tab 才可以生成\n\n\n# 一、快速生成HTML结构语法\n\n\n# （1）标签\n\n如： div\n\n生成： <div></div>\n\n\n# （2）多个相同标签\n\n如： div*3\n\n生成： <div></div>\n\n\n# （3）父子级关系的标签\n\n如： ul > li\n\n生成：\n\n<ul>\n    <li></li>\n</ul>\n\n\n1\n2\n3\n\n\n\n# （4）兄弟关系的标签\n\n如： div+p\n\n生成： <div></div><p></p>\n\n\n# （5）带有类名的标签\n\n如： div.demo\n\n生成： <div class="demo"></div>\n\n\n# （6）带有 id 的标签\n\n如： div#demo\n\n生成： <div id="demo"></div>\n\n\n# （7） 生成带有顺序的\n\n如： div.demo$*3\n\n生成：\n\n<div class="demo1"></div>\n<div class="demo2"></div>\n<div class="demo3"></div>\n\n\n1\n2\n3\n\n\n\n# （8）在生成的标签内部写内容\n\n如： div{哈哈}\n\n生成： <div>哈哈</div>\n\n\n# 二、快速生成CSS样式语法\n\n如： w200 生成： width: 200px\n\n如： lh26px 生成： line-height: 26px;\n\n如： alii 生成： align-items\n\n如： bt 生成： border-top\n\n如： bb 生成： border-bottom\n\n...\n\n\n# 三、设置保存时格式化代码\n\n 1. 文件 ------.>【首选项】----------\x3e【设置】\n 2. 搜索emmet.include\n 3. 在 settings.json 下的【工作区设置】中添加以下语句\n\n"editor.formatOnType": true, \n"editor.formatOnSave": true\n\n\n1\n2\n',normalizedContent:'# 知识点：emmet 语法\n\n特性： vscode 内部已经集成该语法\n\n使用方法： 输入完语法后，要按 tab 才可以生成\n\n\n# 一、快速生成html结构语法\n\n\n# （1）标签\n\n如： div\n\n生成： <div></div>\n\n\n# （2）多个相同标签\n\n如： div*3\n\n生成： <div></div>\n\n\n# （3）父子级关系的标签\n\n如： ul > li\n\n生成：\n\n<ul>\n    <li></li>\n</ul>\n\n\n1\n2\n3\n\n\n\n# （4）兄弟关系的标签\n\n如： div+p\n\n生成： <div></div><p></p>\n\n\n# （5）带有类名的标签\n\n如： div.demo\n\n生成： <div class="demo"></div>\n\n\n# （6）带有 id 的标签\n\n如： div#demo\n\n生成： <div id="demo"></div>\n\n\n# （7） 生成带有顺序的\n\n如： div.demo$*3\n\n生成：\n\n<div class="demo1"></div>\n<div class="demo2"></div>\n<div class="demo3"></div>\n\n\n1\n2\n3\n\n\n\n# （8）在生成的标签内部写内容\n\n如： div{哈哈}\n\n生成： <div>哈哈</div>\n\n\n# 二、快速生成css样式语法\n\n如： w200 生成： width: 200px\n\n如： lh26px 生成： line-height: 26px;\n\n如： alii 生成： align-items\n\n如： bt 生成： border-top\n\n如： bb 生成： border-bottom\n\n...\n\n\n# 三、设置保存时格式化代码\n\n 1. 文件 ------.>【首选项】----------\x3e【设置】\n 2. 搜索emmet.include\n 3. 在 settings.json 下的【工作区设置】中添加以下语句\n\n"editor.formatontype": true, \n"editor.formatonsave": true\n\n\n1\n2\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"复合选择器",frontmatter:{title:"复合选择器",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/ece8e0/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/06.%E5%A4%8D%E5%90%88%E9%80%89%E6%8B%A9%E5%99%A8.html",relativePath:"《前端》笔记《基础知识》/02.CSS/06.复合选择器.md",key:"v-35a6c9d4",path:"/pages/ece8e0/",headers:[{level:2,title:"一、后代选择器",slug:"一、后代选择器",normalizedTitle:"一、后代选择器",charIndex:46},{level:2,title:"二、子选择器",slug:"二、子选择器",normalizedTitle:"二、子选择器",charIndex:125},{level:2,title:"三、并集选择器",slug:"三、并集选择器",normalizedTitle:"三、并集选择器",charIndex:206},{level:2,title:"四、伪类选择器",slug:"四、伪类选择器",normalizedTitle:"四、伪类选择器",charIndex:287},{level:3,title:"（一）链接伪类选择器",slug:"一-链接伪类选择器",normalizedTitle:"（一）链接伪类选择器",charIndex:315},{level:3,title:"（二） focus 选择器",slug:"二-focus-选择器",normalizedTitle:"（二） focus 选择器",charIndex:646}],headersStr:"一、后代选择器 二、子选择器 三、并集选择器 四、伪类选择器 （一）链接伪类选择器 （二） focus 选择器",content:"# 知识点：复合选择器\n\n作用： 对基本选择器进行组合形成的。为选中的元素添加样式\n\n\n# 一、后代选择器\n\n作用： 选择父元素里面的子孙\n\n语法： 空格\n\n.houdai span {\n    color: red;\n}\n\n\n1\n2\n3\n\n\n\n# 二、子选择器\n\n作用： 选择父元素里面的子元素\n\n语法： >\n\n.zi > span {\n    color: seagreen;\n}\n\n\n1\n2\n3\n\n\n\n# 三、并集选择器\n\n作用： 集体声明\n\n语法： ,\n\n.yuansu1, .yuansu2 {\n    color: sienna;\n}\n\n\n1\n2\n3\n\n\n\n# 四、伪类选择器\n\n作用： 为选择器添加特殊效果\n\n\n# （一）链接伪类选择器\n\n语法：\n\n 1. :link：未访问的链接\n 2. :visited：已访问的链接\n 3. :hover：鼠标经过\n 4. :active：按下鼠标\n\n提示： 为了减少 bug，尽量按照 :link、:visited、:hover、:active 的顺序使用\n\n例：\n\n.link:link {\n    color: skyblue;\n}\n.visited:visited {\n    color: red;\n}\n.hover:hover {\n    color: salmon;\n}\n.active:active {\n    color: sandybrown;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# （二） focus 选择器\n\n语法： :focus：获得焦点时触发\n\n应用场景： 通常搭配表单元素使用\n\n例：\n\ninput:focus { \n    background-color:yellow;\n}\n\n\n1\n2\n3\n",normalizedContent:"# 知识点：复合选择器\n\n作用： 对基本选择器进行组合形成的。为选中的元素添加样式\n\n\n# 一、后代选择器\n\n作用： 选择父元素里面的子孙\n\n语法： 空格\n\n.houdai span {\n    color: red;\n}\n\n\n1\n2\n3\n\n\n\n# 二、子选择器\n\n作用： 选择父元素里面的子元素\n\n语法： >\n\n.zi > span {\n    color: seagreen;\n}\n\n\n1\n2\n3\n\n\n\n# 三、并集选择器\n\n作用： 集体声明\n\n语法： ,\n\n.yuansu1, .yuansu2 {\n    color: sienna;\n}\n\n\n1\n2\n3\n\n\n\n# 四、伪类选择器\n\n作用： 为选择器添加特殊效果\n\n\n# （一）链接伪类选择器\n\n语法：\n\n 1. :link：未访问的链接\n 2. :visited：已访问的链接\n 3. :hover：鼠标经过\n 4. :active：按下鼠标\n\n提示： 为了减少 bug，尽量按照 :link、:visited、:hover、:active 的顺序使用\n\n例：\n\n.link:link {\n    color: skyblue;\n}\n.visited:visited {\n    color: red;\n}\n.hover:hover {\n    color: salmon;\n}\n.active:active {\n    color: sandybrown;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# （二） focus 选择器\n\n语法： :focus：获得焦点时触发\n\n应用场景： 通常搭配表单元素使用\n\n例：\n\ninput:focus { \n    background-color:yellow;\n}\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"元素显示模式",frontmatter:{title:"元素显示模式",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/50933a/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/07.%E5%85%83%E7%B4%A0%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%BC%8F.html",relativePath:"《前端》笔记《基础知识》/02.CSS/07.元素显示模式.md",key:"v-100e1a39",path:"/pages/50933a/",headers:[{level:2,title:"一、块元素",slug:"一、块元素",normalizedTitle:"一、块元素",charIndex:27},{level:2,title:"二、行内元素",slug:"二、行内元素",normalizedTitle:"二、行内元素",charIndex:134},{level:2,title:"三、行内块元素",slug:"三、行内块元素",normalizedTitle:"三、行内块元素",charIndex:255}],headersStr:"一、块元素 二、行内元素 三、行内块元素",content:"# 知识点：元素显示模式\n\n作用： 布局页面\n\n\n# 一、块元素\n\n代表标签： <div>、...\n\n特性：\n\n 1. 独占一行\n 2. 可以设置 高宽、内外边距\n 3. 宽度默认是父级的宽度\n 4. 可以存放任何元素\n\n语法： display: block\n\n\n# 二、行内元素\n\n代表标签： <span>、<a>、...\n\n特性：\n\n 1. 一行可以显示多个\n 2. 不可以设置 高宽、内外边距\n 3. 宽度默认是内容的宽度\n 4. 只能存放文本和行内元素\n\n语法： display:inline\n\n\n# 三、行内块元素\n\n代表标签： <img/>、<input/>、<td>、...\n\n特性：\n\n 1. 一行可以显示多个，但是之间会有空白间隙\n 2. 可以设置 高宽、内外边距\n 3. 宽度默认是内容的宽度\n\n语法： display: inline-block",normalizedContent:"# 知识点：元素显示模式\n\n作用： 布局页面\n\n\n# 一、块元素\n\n代表标签： <div>、...\n\n特性：\n\n 1. 独占一行\n 2. 可以设置 高宽、内外边距\n 3. 宽度默认是父级的宽度\n 4. 可以存放任何元素\n\n语法： display: block\n\n\n# 二、行内元素\n\n代表标签： <span>、<a>、...\n\n特性：\n\n 1. 一行可以显示多个\n 2. 不可以设置 高宽、内外边距\n 3. 宽度默认是内容的宽度\n 4. 只能存放文本和行内元素\n\n语法： display:inline\n\n\n# 三、行内块元素\n\n代表标签： <img/>、<input/>、<td>、...\n\n特性：\n\n 1. 一行可以显示多个，但是之间会有空白间隙\n 2. 可以设置 高宽、内外边距\n 3. 宽度默认是内容的宽度\n\n语法： display: inline-block",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"行高",frontmatter:{title:"行高",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/e33f57/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/08.%E8%A1%8C%E9%AB%98.html",relativePath:"《前端》笔记《基础知识》/02.CSS/08.行高.md",key:"v-a2f47fd2",path:"/pages/e33f57/",headersStr:null,content:"# 知识点：行高\n\n作用： 单行文本垂直居中\n\n特性：\n\n 1. 行高 等于 盒子高度，文字 居中\n 2. 行高 小于 盒子高度，文字 偏上\n 3. 行高 大于 盒子高度，文字 偏下\n\n语法： line-height: 600px",normalizedContent:"# 知识点：行高\n\n作用： 单行文本垂直居中\n\n特性：\n\n 1. 行高 等于 盒子高度，文字 居中\n 2. 行高 小于 盒子高度，文字 偏上\n 3. 行高 大于 盒子高度，文字 偏下\n\n语法： line-height: 600px",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"背景",frontmatter:{title:"背景",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/4589aa/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/09.%E8%83%8C%E6%99%AF.html",relativePath:"《前端》笔记《基础知识》/02.CSS/09.背景.md",key:"v-e7560bc2",path:"/pages/4589aa/",headers:[{level:2,title:"一、背景颜色",slug:"一、背景颜色",normalizedTitle:"一、背景颜色",charIndex:65},{level:2,title:"二、背景图片",slug:"二、背景图片",normalizedTitle:"二、背景图片",charIndex:242},{level:2,title:"三、背景平铺",slug:"三、背景平铺",normalizedTitle:"三、背景平铺",charIndex:333},{level:2,title:"四、background-position（背景图片位置）",slug:"四、background-position-背景图片位置",normalizedTitle:"四、background-position（背景图片位置）",charIndex:452},{level:2,title:"五、背景图像固定",slug:"五、背景图像固定",normalizedTitle:"五、背景图像固定",charIndex:586},{level:2,title:"六、（背景复合）",slug:"六、-背景复合",normalizedTitle:"六、（背景复合）",charIndex:678},{level:2,title:"七、（背景图像尺寸）",slug:"七、-背景图像尺寸",normalizedTitle:"七、（背景图像尺寸）",charIndex:794},{level:2,title:"八、背景线性渐变",slug:"八、背景线性渐变",normalizedTitle:"八、背景线性渐变",charIndex:939}],headersStr:"一、背景颜色 二、背景图片 三、背景平铺 四、background-position（背景图片位置） 五、背景图像固定 六、（背景复合） 七、（背景图像尺寸） 八、背景线性渐变",content:"# 知识点：背景属性\n\n应用场景： 装饰性的小图片不会使用 <img>，而是更推荐使用 背景图片，优点是非常便于控制位置\n\n\n# 一、背景颜色\n\n语法： background-color: transparent\n\n值：\n\n 1. transparent：透明色（默认）\n 2. 半透明：rgba(0, 0, 0, 0~1)\n 3. 预定义颜色\n 4. 十六进制（#FF0000）\n 5. RGB( rgb(255,0,0) ) 或 ( rgb(100%,0%,0%) ))\n\n\n# 二、背景图片\n\n语法： background-image: url(sucai/3.jpg);\n\n值：\n\n 1. none：（无背景图片）（默认）\n 2. url：图片地址\n\n\n# 三、背景平铺\n\n语法： background-repeat：repeat\n\n值：\n\n 1. repeat：纵向和横向平铺\n 2. no-repeat：不平铺\n 3. repeat-x：横向平铺\n 4. repeat-y：纵向平铺\n\n\n# 四、background-position（背景图片位置）\n\n语法： background-position: center center\n\n参数一： x 坐标 参数二： y 坐标\n\n值： 百分比、方位名词\n\n特性： 只写了一个参数，则第二个参数默认居中对齐\n\n\n# 五、背景图像固定\n\n语法： background-attachment: fixed\n\n值：\n\n 1. fixed：不跟随页面滚动（默认）\n 2. scroll：跟随页面滚动\n\n\n# 六、（背景复合）\n\n语法： background: pink url(sucai/3.jpg) repeat-y fixed right\n\n作用： 使代码更简洁\n\n特性： 一般按照 颜色、地址、平铺、固定、位置 的顺序书写\n\n\n# 七、（背景图像尺寸）\n\n语法： background-size: contain\n\n参数一： 背景图像宽度 参数二： 背景图像高度\n\n值：\n\n 1. 长度\n 2. 百分比\n 3. cover（等比例）\n 4. contain（完全适配）（图片会变形）\n 5. 图片原始尺寸（默认）\n\n\n# 八、背景线性渐变\n\n语法： background: linear-gradient(起始方向, 颜色1, 颜色2, ...)\n\n例： background: linear-gradient(top left, red, blue);",normalizedContent:"# 知识点：背景属性\n\n应用场景： 装饰性的小图片不会使用 <img>，而是更推荐使用 背景图片，优点是非常便于控制位置\n\n\n# 一、背景颜色\n\n语法： background-color: transparent\n\n值：\n\n 1. transparent：透明色（默认）\n 2. 半透明：rgba(0, 0, 0, 0~1)\n 3. 预定义颜色\n 4. 十六进制（#ff0000）\n 5. rgb( rgb(255,0,0) ) 或 ( rgb(100%,0%,0%) ))\n\n\n# 二、背景图片\n\n语法： background-image: url(sucai/3.jpg);\n\n值：\n\n 1. none：（无背景图片）（默认）\n 2. url：图片地址\n\n\n# 三、背景平铺\n\n语法： background-repeat：repeat\n\n值：\n\n 1. repeat：纵向和横向平铺\n 2. no-repeat：不平铺\n 3. repeat-x：横向平铺\n 4. repeat-y：纵向平铺\n\n\n# 四、background-position（背景图片位置）\n\n语法： background-position: center center\n\n参数一： x 坐标 参数二： y 坐标\n\n值： 百分比、方位名词\n\n特性： 只写了一个参数，则第二个参数默认居中对齐\n\n\n# 五、背景图像固定\n\n语法： background-attachment: fixed\n\n值：\n\n 1. fixed：不跟随页面滚动（默认）\n 2. scroll：跟随页面滚动\n\n\n# 六、（背景复合）\n\n语法： background: pink url(sucai/3.jpg) repeat-y fixed right\n\n作用： 使代码更简洁\n\n特性： 一般按照 颜色、地址、平铺、固定、位置 的顺序书写\n\n\n# 七、（背景图像尺寸）\n\n语法： background-size: contain\n\n参数一： 背景图像宽度 参数二： 背景图像高度\n\n值：\n\n 1. 长度\n 2. 百分比\n 3. cover（等比例）\n 4. contain（完全适配）（图片会变形）\n 5. 图片原始尺寸（默认）\n\n\n# 八、背景线性渐变\n\n语法： background: linear-gradient(起始方向, 颜色1, 颜色2, ...)\n\n例： background: linear-gradient(top left, red, blue);",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"CSS三大特性",frontmatter:{title:"CSS三大特性",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/063aff/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/10.CSS%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7.html",relativePath:"《前端》笔记《基础知识》/02.CSS/10.CSS三大特性.md",key:"v-026e57d9",path:"/pages/063aff/",headers:[{level:2,title:"一、层叠性",slug:"一、层叠性",normalizedTitle:"一、层叠性",charIndex:18},{level:2,title:"二、继承性",slug:"二、继承性",normalizedTitle:"二、继承性",charIndex:170},{level:2,title:"三、优先级",slug:"三、优先级",normalizedTitle:"三、优先级",charIndex:287}],headersStr:"一、层叠性 二、继承性 三、优先级",content:"# 知识点：CSS三大特性\n\n\n# 一、层叠性\n\n作用： 解决样式冲突的问题\n\n特性： 样式冲突时，后面的样式会层叠前面的样式\n\n例：\n\n.cdx {\n    /* 不生效 */\n    color: red;\n}\n.cdx {\n    /* 生效 */\n    color: pink;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、继承性\n\n作用： 简化代码\n\n特性：\n\n 1. 子元素继承父元素的一些样式\n 2. 只有部分属性可以被继承。如：text-，font-，line- \b开头的 和 color\n 3. 有些标签不能被继承。如：<a></a>\n\n\n# 三、优先级\n\n特性： 当同一个元素指定多个选择器，并且样式冲突时，就会有优先级的产生。只有权重高的选择器才会生效\n\n权重图：\n\n    选择器                    权重\n    1、继承、*               0,0,0,0\n    2、元素选择器             0,0,0,1\n    3、类选择器、伪类选择器     0,0,1,0\n    4、ID选择器               0,1,0,0\n    5、行内样式                1,0,0,0\n    6、!important             无穷大\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n注意： 权重并不会近位。如：0,0,0,10\n\n例：\n\n#yxj {\n   /* 生效 */\n   color: rebeccapurple;\n   /* 生效 */\n   background-color: red;\n}\n\n.yxj {\n   /* 不生效 */\n   color: red;\n   /* 生效 */\n   font-size: 20px;\n   /* 不生效 */\n   background-color: pink!important;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",normalizedContent:"# 知识点：css三大特性\n\n\n# 一、层叠性\n\n作用： 解决样式冲突的问题\n\n特性： 样式冲突时，后面的样式会层叠前面的样式\n\n例：\n\n.cdx {\n    /* 不生效 */\n    color: red;\n}\n.cdx {\n    /* 生效 */\n    color: pink;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、继承性\n\n作用： 简化代码\n\n特性：\n\n 1. 子元素继承父元素的一些样式\n 2. 只有部分属性可以被继承。如：text-，font-，line- \b开头的 和 color\n 3. 有些标签不能被继承。如：<a></a>\n\n\n# 三、优先级\n\n特性： 当同一个元素指定多个选择器，并且样式冲突时，就会有优先级的产生。只有权重高的选择器才会生效\n\n权重图：\n\n    选择器                    权重\n    1、继承、*               0,0,0,0\n    2、元素选择器             0,0,0,1\n    3、类选择器、伪类选择器     0,0,1,0\n    4、id选择器               0,1,0,0\n    5、行内样式                1,0,0,0\n    6、!important             无穷大\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n注意： 权重并不会近位。如：0,0,0,10\n\n例：\n\n#yxj {\n   /* 生效 */\n   color: rebeccapurple;\n   /* 生效 */\n   background-color: red;\n}\n\n.yxj {\n   /* 不生效 */\n   color: red;\n   /* 生效 */\n   font-size: 20px;\n   /* 不生效 */\n   background-color: pink!important;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"盒子模型（上）",frontmatter:{title:"盒子模型（上）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/eaa2b4/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/11.%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%EF%BC%88%E4%B8%8A%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/02.CSS/11.盒子模型（上）.md",key:"v-1b950d28",path:"/pages/eaa2b4/",headers:[{level:2,title:"一、border",slug:"一、border",normalizedTitle:"一、border",charIndex:104},{level:3,title:"（一）复合写法",slug:"一-复合写法",normalizedTitle:"（一）复合写法",charIndex:117},{level:3,title:"（二）单独设置一个方向",slug:"二-单独设置一个方向",normalizedTitle:"（二）单独设置一个方向",charIndex:328}],headersStr:"一、border （一）复合写法 （二）单独设置一个方向",content:"# 知识点：盒子模型\n\n原理： 把布局元素看作一个盒子，用于放置所有的html元素\n\n组成： 盒子模型 = border + content + padding + margin\n\n应用场景： 布局\n\n\n# 一、border\n\n\n# （一）复合写法\n\n语法： border: 2px solid red\n\n特性： 会影响盒子的实际大小\n\n解决方法：\n\n 1. 测量盒子大小的时候，不量边框\n 2. 测量的时候包含了边框，则需要到 width/height 中减相应的边框值\n\n参数一： 粗细 参数二： 样式\n\n 1. none：无边框（默认值）\n 2. solid：单实线\n 3. dashed：虚线\n 4. dotted：点线\n\n参数三： 颜色\n\n\n# （二）单独设置一个方向\n\n语法： border-方位名词: 2px solid red\n\n例： border-left: 2px solid red",normalizedContent:"# 知识点：盒子模型\n\n原理： 把布局元素看作一个盒子，用于放置所有的html元素\n\n组成： 盒子模型 = border + content + padding + margin\n\n应用场景： 布局\n\n\n# 一、border\n\n\n# （一）复合写法\n\n语法： border: 2px solid red\n\n特性： 会影响盒子的实际大小\n\n解决方法：\n\n 1. 测量盒子大小的时候，不量边框\n 2. 测量的时候包含了边框，则需要到 width/height 中减相应的边框值\n\n参数一： 粗细 参数二： 样式\n\n 1. none：无边框（默认值）\n 2. solid：单实线\n 3. dashed：虚线\n 4. dotted：点线\n\n参数三： 颜色\n\n\n# （二）单独设置一个方向\n\n语法： border-方位名词: 2px solid red\n\n例： border-left: 2px solid red",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"盒子模型（中）",frontmatter:{title:"盒子模型（中）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/2a4d8f/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/12.%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%EF%BC%88%E4%B8%AD%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/02.CSS/12.盒子模型（中）.md",key:"v-32eee2a7",path:"/pages/2a4d8f/",headers:[{level:2,title:"二、padding",slug:"二、padding",normalizedTitle:"二、padding",charIndex:2},{level:3,title:"（一）复合写法",slug:"一-复合写法",normalizedTitle:"（一）复合写法",charIndex:83},{level:3,title:"（二）单独设置一个方向",slug:"二-单独设置一个方向",normalizedTitle:"（二）单独设置一个方向",charIndex:255}],headersStr:"二、padding （一）复合写法 （二）单独设置一个方向",content:"# 二、padding\n\n作用： 设置边框与内容之间的距离\n\n特性： 会影响盒子的实际大小\n\n> 解决方法： 到 width/height 中减相应的内边距\n\n\n# （一）复合写法\n\npadding: 22px;\n\n\n1\n\n\n参数一： 上边距 参数二： 右边距 参数三： 下边距 参数四： 左边距\n\n值： px\n\n特性：\n\n 1. 值为 一个 时，所有参数 都为该值\n 2. 值为 两个 时，第一个值为 上下，第二个值为 左右\n 3. 值为 三个 时，第一个值为 上，第二个值为 左右，第三个值为 下\n\n\n# （二）单独设置一个方向\n\n语法： padding-方位名词\n\n例：\n\npadding-left: 222px;\n\n\n1\n",normalizedContent:"# 二、padding\n\n作用： 设置边框与内容之间的距离\n\n特性： 会影响盒子的实际大小\n\n> 解决方法： 到 width/height 中减相应的内边距\n\n\n# （一）复合写法\n\npadding: 22px;\n\n\n1\n\n\n参数一： 上边距 参数二： 右边距 参数三： 下边距 参数四： 左边距\n\n值： px\n\n特性：\n\n 1. 值为 一个 时，所有参数 都为该值\n 2. 值为 两个 时，第一个值为 上下，第二个值为 左右\n 3. 值为 三个 时，第一个值为 上，第二个值为 左右，第三个值为 下\n\n\n# （二）单独设置一个方向\n\n语法： padding-方位名词\n\n例：\n\npadding-left: 222px;\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"1.块级元素.行内元素.行内块元素 水平居中",frontmatter:{title:"1.块级元素.行内元素.行内块元素 水平居中",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/cf95ba/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/13.%E5%85%83%E7%B4%A0%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD.html",relativePath:"《前端》笔记《基础知识》/02.CSS/13.元素水平居中.md",key:"v-e14c0002",path:"/pages/cf95ba/",headers:[{level:2,title:"一、块级元素 水平居中",slug:"一、块级元素-水平居中",normalizedTitle:"一、块级元素 水平居中",charIndex:2},{level:2,title:"二、行内元素、行内块元素 水平居中",slug:"二、行内元素、行内块元素-水平居中",normalizedTitle:"二、行内元素、行内块元素 水平居中",charIndex:125}],headersStr:"一、块级元素 水平居中 二、行内元素、行内块元素 水平居中",content:"# 一、块级元素 水平居中\n\n使用步骤：\n\n 1. 为盒子指定宽度\n 2. \b设置盒子左右的外边距都为 auto\n\n例：\n\n.demo {\n    width: 400px;\n    margin: 0 auto;\n}\n\n\n1\n2\n3\n4\n\n\n\n# 二、行内元素、行内块元素 水平居中\n\n使用步骤： 为父元素添加 text-align: center",normalizedContent:"# 一、块级元素 水平居中\n\n使用步骤：\n\n 1. 为盒子指定宽度\n 2. \b设置盒子左右的外边距都为 auto\n\n例：\n\n.demo {\n    width: 400px;\n    margin: 0 auto;\n}\n\n\n1\n2\n3\n4\n\n\n\n# 二、行内元素、行内块元素 水平居中\n\n使用步骤： 为父元素添加 text-align: center",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"盒子模型（下）",frontmatter:{title:"盒子模型（下）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/dd802e/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/14.%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%EF%BC%88%E4%B8%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/02.CSS/14.盒子模型（下）.md",key:"v-4bc9bc28",path:"/pages/dd802e/",headers:[{level:2,title:"三、margin",slug:"三、margin",normalizedTitle:"三、margin",charIndex:2},{level:3,title:"（一）复合写法",slug:"一-复合写法",normalizedTitle:"（一）复合写法",charIndex:101},{level:3,title:"（二）单独设置一个方向",slug:"二-单独设置一个方向",normalizedTitle:"（二）单独设置一个方向",charIndex:288},{level:3,title:"（三）垂直外边距产生的问题",slug:"三-垂直外边距产生的问题",normalizedTitle:"（三）垂直外边距产生的问题",charIndex:346},{level:4,title:"1、相邻块元素 垂直外边距 合并",slug:"_1、相邻块元素-垂直外边距-合并",normalizedTitle:"1、相邻块元素 垂直外边距 合并",charIndex:363},{level:4,title:"2、嵌套块元素 垂直外边距 塌陷",slug:"_2、嵌套块元素-垂直外边距-塌陷",normalizedTitle:"2、嵌套块元素 垂直外边距 塌陷",charIndex:408}],headersStr:"三、margin （一）复合写法 （二）单独设置一个方向 （三）垂直外边距产生的问题 1、相邻块元素 垂直外边距 合并 2、嵌套块元素 垂直外边距 塌陷",content:"# 三、margin\n\n作用：\n\n 1. 设置盒子与盒子之间的距离\n 2. 块级盒子水平居中\n\n特性： 不会影响盒子的实际大小\n\n兼容性： 行内元素尽量只设置左右内外边距，不要设置上下内外边距\n\n\n# （一）复合写法\n\nmargin: 0 auto;\n\n\n1\n\n\n参数一： 上边距 参数二： 右边距 参数三： 下边距 参数四： 左边距\n\n值：\n\n 1. px\n 2. auto\n\n特性：\n\n 1. 值为 一个 时，所有参数 都为该值\n 2. 值为 两个 时，第一个值为 上下，第二个值为 左右\n 3. 值为 三个 时，第一个值为 上，第二个值为 左右，第三个值为 下\n\n\n# （二）单独设置一个方向\n\n语法： margin-方位名词\n\nmargin-left: 20px;\n\n\n1\n\n\n\n# （三）垂直外边距产生的问题\n\n# 1、相邻块元素 垂直外边距 合并\n\n解决方法： 尽量只给一个盒子设置 margin\n\n# 2、嵌套块元素 垂直外边距 塌陷\n\n特性： 取两个值中的最大值\n\n解决方法：\n\n 1. 为父元素定义 上边框\n 2. 为父元素定义 上内边距\n 3. 为父元素定义 overflow:hidden\n 4. 浮动、固定、绝对定位 的盒子不会有塌陷问题",normalizedContent:"# 三、margin\n\n作用：\n\n 1. 设置盒子与盒子之间的距离\n 2. 块级盒子水平居中\n\n特性： 不会影响盒子的实际大小\n\n兼容性： 行内元素尽量只设置左右内外边距，不要设置上下内外边距\n\n\n# （一）复合写法\n\nmargin: 0 auto;\n\n\n1\n\n\n参数一： 上边距 参数二： 右边距 参数三： 下边距 参数四： 左边距\n\n值：\n\n 1. px\n 2. auto\n\n特性：\n\n 1. 值为 一个 时，所有参数 都为该值\n 2. 值为 两个 时，第一个值为 上下，第二个值为 左右\n 3. 值为 三个 时，第一个值为 上，第二个值为 左右，第三个值为 下\n\n\n# （二）单独设置一个方向\n\n语法： margin-方位名词\n\nmargin-left: 20px;\n\n\n1\n\n\n\n# （三）垂直外边距产生的问题\n\n# 1、相邻块元素 垂直外边距 合并\n\n解决方法： 尽量只给一个盒子设置 margin\n\n# 2、嵌套块元素 垂直外边距 塌陷\n\n特性： 取两个值中的最大值\n\n解决方法：\n\n 1. 为父元素定义 上边框\n 2. 为父元素定义 上内边距\n 3. 为父元素定义 overflow:hidden\n 4. 浮动、固定、绝对定位 的盒子不会有塌陷问题",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"圆角边框",frontmatter:{title:"圆角边框",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/cb8da9/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/15.%E5%9C%86%E8%A7%92%E8%BE%B9%E6%A1%86.html",relativePath:"《前端》笔记《基础知识》/02.CSS/15.圆角边框.md",key:"v-5e0317de",path:"/pages/cb8da9/",headers:[{level:2,title:"（一）复合写法",slug:"一-复合写法",normalizedTitle:"（一）复合写法",charIndex:55},{level:2,title:"（二）单独设置一个方向",slug:"二-单独设置一个方向",normalizedTitle:"（二）单独设置一个方向",charIndex:124},{level:2,title:"（三）画圆",slug:"三-画圆",normalizedTitle:"（三）画圆",charIndex:208}],headersStr:"（一）复合写法 （二）单独设置一个方向 （三）画圆",content:"# 知识点：圆角边框\n\n语法： border-radius\n\n作用：\n\n 1. 画圆\n 2. 画矩形\n\n\n# （一）复合写法\n\n参数一： 左上角 参数二： 右上角 参数三： 右下角 参数四： 左下角\n\n值：\n\n 1. 数值\n 2. 百分比\n\n\n# （二）单独设置一个方向\n\n语法： border-方位名词-方位名词-radius\n\n例：\n\nborder-top-left-radius: 8px;\n\n\n1\n\n\n\n# （三）画圆\n\n使用步骤：\n\n 1. 盒子的宽高要相同\n 2. border-radius: 50%",normalizedContent:"# 知识点：圆角边框\n\n语法： border-radius\n\n作用：\n\n 1. 画圆\n 2. 画矩形\n\n\n# （一）复合写法\n\n参数一： 左上角 参数二： 右上角 参数三： 右下角 参数四： 左下角\n\n值：\n\n 1. 数值\n 2. 百分比\n\n\n# （二）单独设置一个方向\n\n语法： border-方位名词-方位名词-radius\n\n例：\n\nborder-top-left-radius: 8px;\n\n\n1\n\n\n\n# （三）画圆\n\n使用步骤：\n\n 1. 盒子的宽高要相同\n 2. border-radius: 50%",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"盒子阴影",frontmatter:{title:"盒子阴影",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/6a0c9e/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/16.%E7%9B%92%E5%AD%90%E9%98%B4%E5%BD%B1.html",relativePath:"《前端》笔记《基础知识》/02.CSS/16.盒子阴影.md",key:"v-6938b212",path:"/pages/6a0c9e/",headersStr:null,content:"# 知识点：盒子阴影\n\n语法： box-shadow\n\n例：\n\nbox-shadow: 15px 15px 10px rgba(0,0,0,.3);\n\n\n1\n\n\n参数一： 水平阴影位置（允许负值） 参数二： 垂直阴影位置（允许负值） 参数三： 模糊距离 参数四： 阴影尺寸 参数五： 阴影颜色 参数六： 外部阴影(默认)/内部阴影",normalizedContent:"# 知识点：盒子阴影\n\n语法： box-shadow\n\n例：\n\nbox-shadow: 15px 15px 10px rgba(0,0,0,.3);\n\n\n1\n\n\n参数一： 水平阴影位置（允许负值） 参数二： 垂直阴影位置（允许负值） 参数三： 模糊距离 参数四： 阴影尺寸 参数五： 阴影颜色 参数六： 外部阴影(默认)/内部阴影",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"文字阴影",frontmatter:{title:"文字阴影",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/98084a/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/17.%E6%96%87%E5%AD%97%E9%98%B4%E5%BD%B1.html",relativePath:"《前端》笔记《基础知识》/02.CSS/17.文字阴影.md",key:"v-6101dcae",path:"/pages/98084a/",headersStr:null,content:"文字阴影",normalizedContent:"文字阴影",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"传统网页布局的三种方式（上）",frontmatter:{title:"传统网页布局的三种方式（上）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/13fdc2/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/18.%E4%BC%A0%E7%BB%9F%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%8A%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/02.CSS/18.传统网页布局的三种方式（上）.md",key:"v-3a5f55aa",path:"/pages/13fdc2/",headers:[{level:2,title:"一、标准流",slug:"一、标准流",normalizedTitle:"一、标准流",charIndex:null},{level:2,title:"二、浮动（float）",slug:"二、浮动-float",normalizedTitle:"二、浮动（float）",charIndex:null},{level:2,title:"清除浮动：",slug:"清除浮动",normalizedTitle:"清除浮动：",charIndex:null},{level:3,title:"清除浮动的方法",slug:"清除浮动的方法",normalizedTitle:"清除浮动的方法",charIndex:null},{level:4,title:"（一）额外标签法",slug:"一-额外标签法",normalizedTitle:"（一）额外标签法",charIndex:null},{level:4,title:"（二）父级添加 overflow 属性",slug:"二-父级添加-overflow-属性",normalizedTitle:"（二）父级添加 overflow 属性",charIndex:null},{level:4,title:"（三）父级添加 after 伪元素",slug:"三-父级添加-after-伪元素",normalizedTitle:"（三）父级添加 after 伪元素",charIndex:null},{level:4,title:"（四）父级添加双伪元素（推荐）",slug:"四-父级添加双伪元素-推荐",normalizedTitle:"（四）父级添加双伪元素（推荐）",charIndex:null}],headersStr:"一、标准流 二、浮动（float） 清除浮动： 清除浮动的方法 （一）额外标签法 （二）父级添加 overflow 属性 （三）父级添加 after 伪元素 （四）父级添加双伪元素（推荐）",content:"额外标签法\n额外标签法\n额外标签法\n父级添加 overflow 属性\n\n父级添加 overflow 属性\n父级添加 overflow 属性\n父级添加 after 伪元素\n父级添加 after 伪元素\n父级添加 after 伪元素\n父级添加双伪元素（推荐）\n父级添加双伪元素（推荐）\n父级添加双伪元素（推荐）",normalizedContent:"额外标签法\n额外标签法\n额外标签法\n父级添加 overflow 属性\n\n父级添加 overflow 属性\n父级添加 overflow 属性\n父级添加 after 伪元素\n父级添加 after 伪元素\n父级添加 after 伪元素\n父级添加双伪元素（推荐）\n父级添加双伪元素（推荐）\n父级添加双伪元素（推荐）",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"传统网页布局的三种方式（下）",frontmatter:{title:"传统网页布局的三种方式（下）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/740e98/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/19.%E4%BC%A0%E7%BB%9F%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/02.CSS/19.传统网页布局的三种方式（下）.md",key:"v-0b9d662c",path:"/pages/740e98/",headers:[{level:2,title:"三、定位",slug:"三、定位",normalizedTitle:"三、定位",charIndex:25},{level:3,title:"（一）静态定位（默认）",slug:"一-静态定位-默认",normalizedTitle:"（一）静态定位（默认）",charIndex:124},{level:3,title:"（二）相对定位",slug:"二-相对定位",normalizedTitle:"（二）相对定位",charIndex:162},{level:3,title:"（三）绝对定位",slug:"三-绝对定位",normalizedTitle:"（三）绝对定位",charIndex:252},{level:3,title:"（四）固定定位",slug:"四-固定定位",normalizedTitle:"（四）固定定位",charIndex:386},{level:3,title:"（五）粘性定位",slug:"五-粘性定位",normalizedTitle:"（五）粘性定位",charIndex:510},{level:3,title:"（六）技巧",slug:"六-技巧",normalizedTitle:"（六）技巧",charIndex:582},{level:4,title:"1、绝对定位 的 盒子水平居中",slug:"_1、绝对定位-的-盒子水平居中",normalizedTitle:"1、绝对定位 的 盒子水平居中",charIndex:591}],headersStr:"三、定位 （一）静态定位（默认） （二）相对定位 （三）绝对定位 （四）固定定位 （五）粘性定位 （六）技巧 1、绝对定位 的 盒子水平居中",content:"# 知识点：传统网页布局的三种方式（下）\n\n\n# 三、定位\n\n语法： position: 类型\n\n作用： 让盒子自由的在某个盒子内移动 或 固定屏幕中某个位置，并且可以压住其他盒子\n\n使用步骤：\n\n 1. 定义定位模式\n 2. 定义边偏移\n\n\n# （一）静态定位（默认）\n\n语法： position: static\n\n\n# （二）相对定位\n\n语法： position: relative\n\n特性：\n\n 1. 相对于 原来的位置 进行 偏移\n 2. 保留原先位置\n\n说明： 常配合 绝对定位 使用\n\n\n# （三）绝对定位\n\n语法： position: absolute\n\n特性：\n\n 1. 相对于 最近一级带有定位的祖先元素 进行 偏移\n 2. 脱离标准流，不保留原先位置\n 3. 具有行内块元素的特性\n 4. 不会触发外边距合并\n\n说明： 常配合 绝对定位 使用\n\n\n# （四）固定定位\n\n语法： position: fixed\n\n特性：\n\n 1. 固定于浏览器可视区的位置\n 2. 相对于 浏览器可视区 进行 偏移\n 3. 脱离标准流，不保留原先位置\n 4. 具有行内块元素的特性\n 5. 不会触发外边距合并\n\n\n# （五）粘性定位\n\n语法： position: sticky\n\n特性：\n\n 1. 相对于 浏览器可视区 进行 偏移\n 2. 保留原先位置\n\n\n# （六）技巧\n\n# 1、绝对定位 的 盒子水平居中\n\n提示： 加了 绝对定位 的盒子不能使用 margin:0 auto 实现水平居中\n\n使用步骤：\n\n 1. left: 50%\n 2. margin-left: -盒子自身宽度的一半",normalizedContent:"# 知识点：传统网页布局的三种方式（下）\n\n\n# 三、定位\n\n语法： position: 类型\n\n作用： 让盒子自由的在某个盒子内移动 或 固定屏幕中某个位置，并且可以压住其他盒子\n\n使用步骤：\n\n 1. 定义定位模式\n 2. 定义边偏移\n\n\n# （一）静态定位（默认）\n\n语法： position: static\n\n\n# （二）相对定位\n\n语法： position: relative\n\n特性：\n\n 1. 相对于 原来的位置 进行 偏移\n 2. 保留原先位置\n\n说明： 常配合 绝对定位 使用\n\n\n# （三）绝对定位\n\n语法： position: absolute\n\n特性：\n\n 1. 相对于 最近一级带有定位的祖先元素 进行 偏移\n 2. 脱离标准流，不保留原先位置\n 3. 具有行内块元素的特性\n 4. 不会触发外边距合并\n\n说明： 常配合 绝对定位 使用\n\n\n# （四）固定定位\n\n语法： position: fixed\n\n特性：\n\n 1. 固定于浏览器可视区的位置\n 2. 相对于 浏览器可视区 进行 偏移\n 3. 脱离标准流，不保留原先位置\n 4. 具有行内块元素的特性\n 5. 不会触发外边距合并\n\n\n# （五）粘性定位\n\n语法： position: sticky\n\n特性：\n\n 1. 相对于 浏览器可视区 进行 偏移\n 2. 保留原先位置\n\n\n# （六）技巧\n\n# 1、绝对定位 的 盒子水平居中\n\n提示： 加了 绝对定位 的盒子不能使用 margin:0 auto 实现水平居中\n\n使用步骤：\n\n 1. left: 50%\n 2. margin-left: -盒子自身宽度的一半",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"元素的显示与隐藏",frontmatter:{title:"元素的显示与隐藏",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/b6bde1/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/20.%E5%85%83%E7%B4%A0%E7%9A%84%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F.html",relativePath:"《前端》笔记《基础知识》/02.CSS/20.元素的显示与隐藏.md",key:"v-2793d441",path:"/pages/b6bde1/",headers:[{level:2,title:"一、显示方式",slug:"一、显示方式",normalizedTitle:"一、显示方式",charIndex:19},{level:2,title:"二、可视方式",slug:"二、可视方式",normalizedTitle:"二、可视方式",charIndex:107},{level:2,title:"三、溢出方式",slug:"三、溢出方式",normalizedTitle:"三、溢出方式",charIndex:196}],headersStr:"一、显示方式 二、可视方式 三、溢出方式",content:"# 知识点：元素的显示与隐藏\n\n\n# 一、显示方式\n\n语法： display: none\n\n特性： 隐藏元素后，不保留原先位置\n\n值：\n\n 1. none：隐藏\n 2. block：显示，并转换为块级元素\n\n\n# 二、可视方式\n\n语法： visibility: visible\n\n特性： 隐藏元素后，保留原先位置\n\n值：\n\n 1. visible：可视\n 2. hidden：不可视\n\n\n# 三、溢出方式\n\n语法： overflow: visible\n\n值：\n\n 1. visible：不隐藏溢出的内容，也不添加滚动条（默认）\n 2. hidden：隐藏溢出的内容\n 3. scroll：不管是否溢出内容，总是显示滚动条\n 4. auto：溢出内容显示滚动条，不溢出不显示滚动条",normalizedContent:"# 知识点：元素的显示与隐藏\n\n\n# 一、显示方式\n\n语法： display: none\n\n特性： 隐藏元素后，不保留原先位置\n\n值：\n\n 1. none：隐藏\n 2. block：显示，并转换为块级元素\n\n\n# 二、可视方式\n\n语法： visibility: visible\n\n特性： 隐藏元素后，保留原先位置\n\n值：\n\n 1. visible：可视\n 2. hidden：不可视\n\n\n# 三、溢出方式\n\n语法： overflow: visible\n\n值：\n\n 1. visible：不隐藏溢出的内容，也不添加滚动条（默认）\n 2. hidden：隐藏溢出的内容\n 3. scroll：不管是否溢出内容，总是显示滚动条\n 4. auto：溢出内容显示滚动条，不溢出不显示滚动条",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"精灵图 字体图标",frontmatter:{title:"精灵图 字体图标",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/ccc340/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/21.%E7%B2%BE%E7%81%B5%E5%9B%BE%20%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87.html",relativePath:"《前端》笔记《基础知识》/02.CSS/21.精灵图 字体图标.md",key:"v-27ecc802",path:"/pages/ccc340/",headers:[{level:2,title:"一、精灵图",slug:"一、精灵图",normalizedTitle:"一、精灵图",charIndex:19},{level:2,title:"二、字体图标（icon）",slug:"二、字体图标-icon",normalizedTitle:"二、字体图标（icon）",charIndex:634},{level:2,title:"高级技巧",slug:"高级技巧",normalizedTitle:"高级技巧",charIndex:844},{level:3,title:"（一）循环精灵图",slug:"一-循环精灵图",normalizedTitle:"（一）循环精灵图",charIndex:853}],headersStr:"一、精灵图 二、字体图标（icon） 高级技巧 （一）循环精灵图",content:'# 知识点：精灵图 字体图标\n\n\n# 一、精灵图\n\n作用： 减少请求的发送，提高页面加载速度\n\n原理： 把多个小背景图片整合到一张大图片中\n\n缺点：\n\n 1. 图片文件较大的\n 2. 图片放大和缩小 会 失真\n 3. 图片制作完毕想要更换非常 复杂\n\n应用场景： 复杂 的小图标、装饰性的背景图片\n\nPC端 使用步骤： 定义 background-position\n\n例：\n\n.sprites {\n    width: 220px;\n    height: 54px;\n    background-image: url(sucai/sprites.png);\n    background-position: 0 -130px;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n移动端 使用步骤：\n\n 1. 把精灵图等比例缩放成原图的一半（不要保存），然后在量 x y\n 2. 定义 background-position 为等比例缩后的原图大小\n\n例：\n\n.sprites1 {\n    width: 110px;\n    height: 27px;\n    background-image: url(sucai/sprites.png);\n    background-position: 0 -66px;\n    /* 原图为 w220 h523 */\n    background-size: 110px auto;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、字体图标（icon）\n\n优点：\n\n 1. 图片文件较小\n 2. 图片放大和缩小 不会 失真\n 3. 图片制作完毕想要更换非常 简单\n\n特性： 拥有文字的特性，可以改变颜色、产生阴影、透明效果 等\n\n应用场景： 简单 的小图标\n\n使用步骤：\n\n 1. 下载： http://icomoon.io ( icomoon ) http://www.iconfont.cn/ （ 阿里 )\n 2. 引入\n 3. 追加\n\n\n# 高级技巧\n\n\n# （一）循环精灵图\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n        li {\n            list-style-type: none;\n        }\n        .box {\n            width: 250px;\n            margin: 100px auto;\n        }\n        .box li {\n            float: left;\n            width: 24px;\n            height: 24px;\n            background-color: pink;\n            margin: 15px;\n            background: url(sucai/sprite.png) no-repeat;\n        }\n    </style>\n</head>\n<body>\n    <div class="box">\n        <ul>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n        </ul>\n    </div>\n    <script>\n        // 1. 获取元素 所有的小li \n        var lis = document.querySelectorAll(\'li\');\n        for (var i = 0; i < lis.length; i++) {\n            // 让索引号 乘以 44 就是每个li 的背景y坐标  index就是我们的y坐标\n            var index = i * 44;\n            lis[i].style.backgroundPosition = \'0 -\' + index + \'px\';\n        }\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n',normalizedContent:'# 知识点：精灵图 字体图标\n\n\n# 一、精灵图\n\n作用： 减少请求的发送，提高页面加载速度\n\n原理： 把多个小背景图片整合到一张大图片中\n\n缺点：\n\n 1. 图片文件较大的\n 2. 图片放大和缩小 会 失真\n 3. 图片制作完毕想要更换非常 复杂\n\n应用场景： 复杂 的小图标、装饰性的背景图片\n\npc端 使用步骤： 定义 background-position\n\n例：\n\n.sprites {\n    width: 220px;\n    height: 54px;\n    background-image: url(sucai/sprites.png);\n    background-position: 0 -130px;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n移动端 使用步骤：\n\n 1. 把精灵图等比例缩放成原图的一半（不要保存），然后在量 x y\n 2. 定义 background-position 为等比例缩后的原图大小\n\n例：\n\n.sprites1 {\n    width: 110px;\n    height: 27px;\n    background-image: url(sucai/sprites.png);\n    background-position: 0 -66px;\n    /* 原图为 w220 h523 */\n    background-size: 110px auto;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、字体图标（icon）\n\n优点：\n\n 1. 图片文件较小\n 2. 图片放大和缩小 不会 失真\n 3. 图片制作完毕想要更换非常 简单\n\n特性： 拥有文字的特性，可以改变颜色、产生阴影、透明效果 等\n\n应用场景： 简单 的小图标\n\n使用步骤：\n\n 1. 下载： http://icomoon.io ( icomoon ) http://www.iconfont.cn/ （ 阿里 )\n 2. 引入\n 3. 追加\n\n\n# 高级技巧\n\n\n# （一）循环精灵图\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="x-ua-compatible" content="ie=edge">\n    <title>document</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n        li {\n            list-style-type: none;\n        }\n        .box {\n            width: 250px;\n            margin: 100px auto;\n        }\n        .box li {\n            float: left;\n            width: 24px;\n            height: 24px;\n            background-color: pink;\n            margin: 15px;\n            background: url(sucai/sprite.png) no-repeat;\n        }\n    </style>\n</head>\n<body>\n    <div class="box">\n        <ul>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n        </ul>\n    </div>\n    <script>\n        // 1. 获取元素 所有的小li \n        var lis = document.queryselectorall(\'li\');\n        for (var i = 0; i < lis.length; i++) {\n            // 让索引号 乘以 44 就是每个li 的背景y坐标  index就是我们的y坐标\n            var index = i * 44;\n            lis[i].style.backgroundposition = \'0 -\' + index + \'px\';\n        }\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"三角形",frontmatter:{title:"三角形",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/79ee99/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/22.%E4%B8%89%E8%A7%92%E5%BD%A2.html",relativePath:"《前端》笔记《基础知识》/02.CSS/22.三角形.md",key:"v-30b1c3f0",path:"/pages/79ee99/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"界面样式",frontmatter:{title:"界面样式",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/578107/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/23.%E7%95%8C%E9%9D%A2%E6%A0%B7%E5%BC%8F.html",relativePath:"《前端》笔记《基础知识》/02.CSS/23.界面样式.md",key:"v-474f49c4",path:"/pages/578107/",headers:[{level:2,title:"一、鼠标样式",slug:"一、鼠标样式",normalizedTitle:"一、鼠标样式",charIndex:15},{level:2,title:"二、轮廓线",slug:"二、轮廓线",normalizedTitle:"二、轮廓线",charIndex:129},{level:2,title:"三、防止拖拽文本域",slug:"三、防止拖拽文本域",normalizedTitle:"三、防止拖拽文本域",charIndex:184}],headersStr:"一、鼠标样式 二、轮廓线 三、防止拖拽文本域",content:"# 知识点：界面样式\n\n\n# 一、鼠标样式\n\n语法： cursor: default\n\n值：\n\n 1. default：光标（默认）\n 2. pointer：小手\n 3. move：移动\n 4. text：文本\n 5. not-allowed：禁止\n\n\n# 二、轮廓线\n\n语法： outline: none\n\n值： none：去掉表单对焦时的默认 蓝色轮廓线\n\n\n# 三、防止拖拽文本域\n\n语法： resize: none\n\n值： none",normalizedContent:"# 知识点：界面样式\n\n\n# 一、鼠标样式\n\n语法： cursor: default\n\n值：\n\n 1. default：光标（默认）\n 2. pointer：小手\n 3. move：移动\n 4. text：文本\n 5. not-allowed：禁止\n\n\n# 二、轮廓线\n\n语法： outline: none\n\n值： none：去掉表单对焦时的默认 蓝色轮廓线\n\n\n# 三、防止拖拽文本域\n\n语法： resize: none\n\n值： none",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"兄弟关系中，行内元素.行内块元素.文字 的垂直对齐方式",frontmatter:{title:"兄弟关系中，行内元素.行内块元素.文字 的垂直对齐方式",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/7d1983/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/24.%E5%85%83%E7%B4%A0%E7%9A%84%E5%9E%82%E7%9B%B4%E5%AF%B9%E9%BD%90%E6%96%B9%E5%BC%8F.html",relativePath:"《前端》笔记《基础知识》/02.CSS/24.元素的垂直对齐方式.md",key:"v-2d0d071f",path:"/pages/7d1983/",headersStr:null,content:"1、top(以该元素的 顶端 对齐)\n2、bottom(以该元素的 低端 对齐) 行内元素\n3、middle(以该元素的 中部 对齐)\n4、baseline(以该元素的 基线 对齐)(默认)",normalizedContent:"1、top(以该元素的 顶端 对齐)\n2、bottom(以该元素的 低端 对齐) 行内元素\n3、middle(以该元素的 中部 对齐)\n4、baseline(以该元素的 基线 对齐)(默认)",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"溢出的文字，省略号显示",frontmatter:{title:"溢出的文字，省略号显示",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/779512/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/25.%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%87%E5%AD%97%EF%BC%8C%E7%9C%81%E7%95%A5%E5%8F%B7%E6%98%BE%E7%A4%BA.html",relativePath:"《前端》笔记《基础知识》/02.CSS/25.溢出的文字，省略号显示.md",key:"v-e83702fc",path:"/pages/779512/",headers:[{level:2,title:"一、单行文本",slug:"一、单行文本",normalizedTitle:"一、单行文本",charIndex:null},{level:2,title:"二、多行文本",slug:"二、多行文本",normalizedTitle:"二、多行文本",charIndex:null}],headersStr:"一、单行文本 二、多行文本",content:"hi~ 来自猩猩的你-欢迎你\n来自猩猩的你-欢迎你来自猩猩的你-欢迎你来自猩猩的你-欢迎你",normalizedContent:"hi~ 来自猩猩的你-欢迎你\n来自猩猩的你-欢迎你来自猩猩的你-欢迎你来自猩猩的你-欢迎你",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"布局技巧",frontmatter:{title:"布局技巧",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/6b9f9b/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/26.%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7.html",relativePath:"《前端》笔记《基础知识》/02.CSS/26.布局技巧.md",key:"v-80a5e584",path:"/pages/6b9f9b/",headers:[{level:2,title:"一、相邻盒子边框合并",slug:"一、相邻盒子边框合并",normalizedTitle:"一、相邻盒子边框合并",charIndex:null},{level:2,title:"二、文字环绕",slug:"二、文字环绕",normalizedTitle:"二、文字环绕",charIndex:null},{level:2,title:"三、页码",slug:"三、页码",normalizedTitle:"三、页码",charIndex:null},{level:2,title:"四、商品价格中的三角形",slug:"四、商品价格中的三角形",normalizedTitle:"四、商品价格中的三角形",charIndex:null}],headersStr:"一、相邻盒子边框合并 二、文字环绕 三、页码 四、商品价格中的三角形",content:" * 相邻盒子边框合并 合并前\n * \n * \n * \n * \n * \n\n * 相邻盒子边框合并 合并后\n * \n * \n * \n * \n * ",normalizedContent:" * 相邻盒子边框合并 合并前\n * \n * \n * \n * \n * \n\n * 相邻盒子边框合并 合并后\n * \n * \n * \n * \n * ",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"CSS3 新增选择器",frontmatter:{title:"CSS3 新增选择器",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/e65401/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/27.CSS3%20%E6%96%B0%E5%A2%9E%E9%80%89%E6%8B%A9%E5%99%A8.html",relativePath:"《前端》笔记《基础知识》/02.CSS/27.CSS3 新增选择器.md",key:"v-c6c119ea",path:"/pages/e65401/",headers:[{level:2,title:"一、属性选择器",slug:"一、属性选择器",normalizedTitle:"一、属性选择器",charIndex:68},{level:3,title:"（一）选择具有 特定属性的",slug:"一-选择具有-特定属性的",normalizedTitle:"（一）选择具有 特定属性的",charIndex:96},{level:3,title:"（二）选择具有 特定属性、特定属性值",slug:"二-选择具有-特定属性、特定属性值",normalizedTitle:"（二）选择具有 特定属性、特定属性值",charIndex:126},{level:3,title:"（三）选择具有 特定属性、且包含某个属性值",slug:"三-选择具有-特定属性、且包含某个属性值",normalizedTitle:"（三）选择具有 特定属性、且包含某个属性值",charIndex:167},{level:3,title:"（四）选择具有 特定属性、且包含某个属性值开头",slug:"四-选择具有-特定属性、且包含某个属性值开头",normalizedTitle:"（四）选择具有 特定属性、且包含某个属性值开头",charIndex:212},{level:3,title:"（五）选择具有 特定属性、且包含某个属性值结尾",slug:"五-选择具有-特定属性、且包含某个属性值结尾",normalizedTitle:"（五）选择具有 特定属性、且包含某个属性值结尾",charIndex:259},{level:2,title:"二、结构伪类选择器",slug:"二、结构伪类选择器",normalizedTitle:"二、结构伪类选择器",charIndex:306},{level:3,title:"（一）选择父元素中，第一个子元素",slug:"一-选择父元素中-第一个子元素",normalizedTitle:"（一）选择父元素中，第一个子元素",charIndex:342},{level:3,title:"（二）选择父元素中，最后一个子元素",slug:"二-选择父元素中-最后一个子元素",normalizedTitle:"（二）选择父元素中，最后一个子元素",charIndex:382},{level:3,title:"（三）选择父元素中，某一个字元素",slug:"三-选择父元素中-某一个字元素",normalizedTitle:"（三）选择父元素中，某一个字元素",charIndex:422},{level:3,title:"（四）选择父元素中，特定类型 的第一个子元素",slug:"四-选择父元素中-特定类型-的第一个子元素",normalizedTitle:"（四）选择父元素中，特定类型 的第一个子元素",charIndex:463},{level:3,title:"（五）选择父元素中，特定类型 的最后一个子元素",slug:"五-选择父元素中-特定类型-的最后一个子元素",normalizedTitle:"（五）选择父元素中，特定类型 的最后一个子元素",charIndex:511},{level:3,title:"（六）选择父元素中，特定类型 的某一个子元素",slug:"六-选择父元素中-特定类型-的某一个子元素",normalizedTitle:"（六）选择父元素中，特定类型 的某一个子元素",charIndex:559},{level:2,title:"三、伪元素选择器",slug:"三、伪元素选择器",normalizedTitle:"三、伪元素选择器",charIndex:608},{level:3,title:"（一）子元素的最 前面 创建元素",slug:"一-子元素的最-前面-创建元素",normalizedTitle:"（一）子元素的最 前面 创建元素",charIndex:715},{level:3,title:"（二）子元素的最 后面 创建元素",slug:"二-子元素的最-后面-创建元素",normalizedTitle:"（二）子元素的最 后面 创建元素",charIndex:751}],headersStr:"一、属性选择器 （一）选择具有 特定属性的 （二）选择具有 特定属性、特定属性值 （三）选择具有 特定属性、且包含某个属性值 （四）选择具有 特定属性、且包含某个属性值开头 （五）选择具有 特定属性、且包含某个属性值结尾 二、结构伪类选择器 （一）选择父元素中，第一个子元素 （二）选择父元素中，最后一个子元素 （三）选择父元素中，某一个字元素 （四）选择父元素中，特定类型 的第一个子元素 （五）选择父元素中，特定类型 的最后一个子元素 （六）选择父元素中，特定类型 的某一个子元素 三、伪元素选择器 （一）子元素的最 前面 创建元素 （二）子元素的最 后面 创建元素",content:'# 知识点：CSS3 新增选择器\n\n权重：\n\n 1. 属性 和 结构伪类选择器 权重为 10\n 2. 伪元素选择器 权重为 1\n\n\n# 一、属性选择器\n\n作用： 根据 元素属性 选择\n\n\n# （一）选择具有 特定属性的\n\n语法： E[att]\n\n\n# （二）选择具有 特定属性、特定属性值\n\n语法： E[att="val"]\n\n\n# （三）选择具有 特定属性、且包含某个属性值\n\n语法： E[att^="val"]\n\n\n# （四）选择具有 特定属性、且包含某个属性值开头\n\n语法： E[att$="val"]\n\n\n# （五）选择具有 特定属性、且包含某个属性值结尾\n\n语法： E[att*="val"]\n\n\n# 二、结构伪类选择器\n\n作用： 根据 父元素 选择 某一个子元素\n\n\n# （一）选择父元素中，第一个子元素\n\n语法： E:first-child\n\n\n# （二）选择父元素中，最后一个子元素\n\n语法： E:last-child\n\n\n# （三）选择父元素中，某一个字元素\n\n语法： E:nth-child(n)\n\n\n# （四）选择父元素中，特定类型 的第一个子元素\n\n语法： E:first-of-type\n\n\n# （五）选择父元素中，特定类型 的最后一个子元素\n\n语法： E:last-of-type\n\n\n# （六）选择父元素中，特定类型 的某一个子元素\n\n语法： E:nth-of-type(n)\n\n\n# 三、伪元素选择器\n\n作用： 创建新标签，简化 html 结构\n\n特性：\n\n 1. 属于 行内元素\n 2. 必须定义 content 属性\n\n应用场景：\n\n 1. 字体图标\n 2. 遮罩层\n 3. 清除浮动\n\n\n# （一）子元素的最 前面 创建元素\n\n语法： E::before\n\n\n# （二）子元素的最 后面 创建元素\n\n语法： E::after',normalizedContent:'# 知识点：css3 新增选择器\n\n权重：\n\n 1. 属性 和 结构伪类选择器 权重为 10\n 2. 伪元素选择器 权重为 1\n\n\n# 一、属性选择器\n\n作用： 根据 元素属性 选择\n\n\n# （一）选择具有 特定属性的\n\n语法： e[att]\n\n\n# （二）选择具有 特定属性、特定属性值\n\n语法： e[att="val"]\n\n\n# （三）选择具有 特定属性、且包含某个属性值\n\n语法： e[att^="val"]\n\n\n# （四）选择具有 特定属性、且包含某个属性值开头\n\n语法： e[att$="val"]\n\n\n# （五）选择具有 特定属性、且包含某个属性值结尾\n\n语法： e[att*="val"]\n\n\n# 二、结构伪类选择器\n\n作用： 根据 父元素 选择 某一个子元素\n\n\n# （一）选择父元素中，第一个子元素\n\n语法： e:first-child\n\n\n# （二）选择父元素中，最后一个子元素\n\n语法： e:last-child\n\n\n# （三）选择父元素中，某一个字元素\n\n语法： e:nth-child(n)\n\n\n# （四）选择父元素中，特定类型 的第一个子元素\n\n语法： e:first-of-type\n\n\n# （五）选择父元素中，特定类型 的最后一个子元素\n\n语法： e:last-of-type\n\n\n# （六）选择父元素中，特定类型 的某一个子元素\n\n语法： e:nth-of-type(n)\n\n\n# 三、伪元素选择器\n\n作用： 创建新标签，简化 html 结构\n\n特性：\n\n 1. 属于 行内元素\n 2. 必须定义 content 属性\n\n应用场景：\n\n 1. 字体图标\n 2. 遮罩层\n 3. 清除浮动\n\n\n# （一）子元素的最 前面 创建元素\n\n语法： e::before\n\n\n# （二）子元素的最 后面 创建元素\n\n语法： e::after',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"CSS3 新增 盒子模型",frontmatter:{title:"CSS3 新增 盒子模型",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/fadfcc/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/28.CSS3%20%E6%96%B0%E5%A2%9E%20%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B.html",relativePath:"《前端》笔记《基础知识》/02.CSS/28.CSS3 新增 盒子模型.md",key:"v-19a74dac",path:"/pages/fadfcc/",headers:[{level:2,title:"一、标准盒子模型（默认）",slug:"一、标准盒子模型-默认",normalizedTitle:"一、标准盒子模型（默认）",charIndex:null},{level:2,title:"二、IE 盒子模型（怪异盒模型）",slug:"二、ie-盒子模型-怪异盒模型",normalizedTitle:"二、ie 盒子模型（怪异盒模型）",charIndex:null}],headersStr:"一、标准盒子模型（默认） 二、IE 盒子模型（怪异盒模型）",content:"传统盒模型\nH5新增盒模型",normalizedContent:"传统盒模型\nh5新增盒模型",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"过渡",frontmatter:{title:"过渡",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/d0c686/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/29.%E8%BF%87%E6%B8%A1.html",relativePath:"《前端》笔记《基础知识》/02.CSS/29.过渡.md",key:"v-2f476fe8",path:"/pages/d0c686/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"2D 转换",frontmatter:{title:"2D 转换",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/95b985/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/30.2D%20%E8%BD%AC%E6%8D%A2.html",relativePath:"《前端》笔记《基础知识》/02.CSS/30.2D 转换.md",key:"v-865baf52",path:"/pages/95b985/",headers:[{level:2,title:"一、移动",slug:"一、移动",normalizedTitle:"一、移动",charIndex:null},{level:2,title:"二、旋转",slug:"二、旋转",normalizedTitle:"二、旋转",charIndex:null},{level:2,title:"三、中心点",slug:"三、中心点",normalizedTitle:"三、中心点",charIndex:null},{level:2,title:"四、缩放",slug:"四、缩放",normalizedTitle:"四、缩放",charIndex:null},{level:2,title:"五、复合写法",slug:"五、复合写法",normalizedTitle:"五、复合写法",charIndex:null}],headersStr:"一、移动 二、旋转 三、中心点 四、缩放 五、复合写法",content:"移动\n标准流\n旋转\n中心点\n缩放\n标准流\n复合写法",normalizedContent:"移动\n标准流\n旋转\n中心点\n缩放\n标准流\n复合写法",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"动画",frontmatter:{title:"动画",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/a5058a/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/31.%E5%8A%A8%E7%94%BB.html",relativePath:"《前端》笔记《基础知识》/02.CSS/31.动画.md",key:"v-4bbf1b09",path:"/pages/a5058a/",headers:[{level:2,title:"一、逆向播放",slug:"一、逆向播放",normalizedTitle:"一、逆向播放",charIndex:null}],headersStr:"一、逆向播放",content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"3D 转换（未学）",frontmatter:{title:"3D 转换（未学）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/f28ed0/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/32.3D%20%E8%BD%AC%E6%8D%A2%EF%BC%88%E6%9C%AA%E5%AD%A6%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/02.CSS/32.3D 转换（未学）.md",key:"v-19470906",path:"/pages/f28ed0/",headersStr:null,content:"# 知识点：3D 转换\n\n属性： translate3d",normalizedContent:"# 知识点：3d 转换\n\n属性： translate3d",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"背景颜色渐变",frontmatter:{title:"背景颜色渐变",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/71e5a4/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/33.%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2%E6%B8%90%E5%8F%98.html",relativePath:"《前端》笔记《基础知识》/02.CSS/33.背景颜色渐变.md",key:"v-5ccd2f0e",path:"/pages/71e5a4/",headersStr:null,content:"\n\n",normalizedContent:"\n\n",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"图片模糊",frontmatter:{title:"图片模糊",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/8a59ec/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/34.%E5%9B%BE%E7%89%87%E6%A8%A1%E7%B3%8A.html",relativePath:"《前端》笔记《基础知识》/02.CSS/34.图片模糊.md",key:"v-14a85ffb",path:"/pages/8a59ec/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"String 对象",frontmatter:{title:"String 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/0540fa/",categories:["《前端》笔记","JS","内置对象"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/01.%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/01.String%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/03.JS/01.内置对象/01.String 对象.md",key:"v-678f65f0",path:"/pages/0540fa/",headers:[{level:2,title:"字符串的值不可改变",slug:"字符串的值不可改变",normalizedTitle:"字符串的值不可改变",charIndex:45},{level:2,title:"一、删除字符串两端空白字符",slug:"一、删除字符串两端空白字符",normalizedTitle:"一、删除字符串两端空白字符",charIndex:60},{level:2,title:"二、清除字符串 左侧 / 右侧 空白",slug:"二、清除字符串-左侧-右侧-空白",normalizedTitle:"二、清除字符串 左侧 / 右侧 空白",charIndex:79},{level:2,title:"三、获取正则批量匹配的结果",slug:"三、获取正则批量匹配的结果",normalizedTitle:"三、获取正则批量匹配的结果",charIndex:103},{level:2,title:"四、模板字符串",slug:"四、模板字符串",normalizedTitle:"四、模板字符串",charIndex:122},{level:3,title:"特性",slug:"特性-2",normalizedTitle:"特性",charIndex:37},{level:4,title:"1、允许解析变量",slug:"_1、允许解析变量",normalizedTitle:"1、允许解析变量",charIndex:149},{level:4,title:"2、允许换行",slug:"_2、允许换行",normalizedTitle:"2、允许换行",charIndex:167},{level:4,title:"3、允许调用函数",slug:"_3、允许调用函数",normalizedTitle:"3、允许调用函数",charIndex:183},{level:2,title:"五、查找指定字符是否在该字符的 头部",slug:"五、查找指定字符是否在该字符的-头部",normalizedTitle:"五、查找指定字符是否在该字符的 头部",charIndex:197},{level:2,title:"六、查找指定字符是否在该字符的 尾部",slug:"六、查找指定字符是否在该字符的-尾部",normalizedTitle:"六、查找指定字符是否在该字符的 尾部",charIndex:221},{level:2,title:"七、将指定字符串重复 n 次",slug:"七、将指定字符串重复-n-次",normalizedTitle:"七、将指定字符串重复 n 次",charIndex:245},{level:2,title:"八、字符串截取、数组截取",slug:"八、字符串截取、数组截取",normalizedTitle:"八、字符串截取、数组截取",charIndex:265},{level:2,title:"九、从前往后 查找第一个指定 字符索引 的位置",slug:"九、从前往后-查找第一个指定-字符索引-的位置",normalizedTitle:"九、从前往后 查找第一个指定 字符索引 的位置",charIndex:283},{level:2,title:"十、从后往前 查找第一个指定 字符索引 的位置",slug:"十、从后往前-查找第一个指定-字符索引-的位置",normalizedTitle:"十、从后往前 查找第一个指定 字符索引 的位置",charIndex:312},{level:2,title:"十一、返回指定索引的字符",slug:"十一、返回指定索引的字符",normalizedTitle:"十一、返回指定索引的字符",charIndex:341},{level:2,title:"十二、返回指定索引的字符ASCII码",slug:"十二、返回指定索引的字符ascii码",normalizedTitle:"十二、返回指定索引的字符ascii码",charIndex:359},{level:2,title:"十三、字符串、数组拼接",slug:"十三、字符串、数组拼接",normalizedTitle:"十三、字符串、数组拼接",charIndex:383},{level:2,title:"十四、截取字符",slug:"十四、截取字符",normalizedTitle:"十四、截取字符",charIndex:400},{level:2,title:"十五、替换字符",slug:"十五、替换字符",normalizedTitle:"十五、替换字符",charIndex:413},{level:2,title:"十六、字符串转数组",slug:"十六、字符串转数组",normalizedTitle:"十六、字符串转数组",charIndex:426},{level:2,title:"十七、字符串、数组 截取",slug:"十七、字符串、数组-截取",normalizedTitle:"十七、字符串、数组 截取",charIndex:441}],headersStr:"字符串的值不可改变 一、删除字符串两端空白字符 二、清除字符串 左侧 / 右侧 空白 三、获取正则批量匹配的结果 四、模板字符串 特性 1、允许解析变量 2、允许换行 3、允许调用函数 五、查找指定字符是否在该字符的 头部 六、查找指定字符是否在该字符的 尾部 七、将指定字符串重复 n 次 八、字符串截取、数组截取 九、从前往后 查找第一个指定 字符索引 的位置 十、从后往前 查找第一个指定 字符索引 的位置 十一、返回指定索引的字符 十二、返回指定索引的字符ASCII码 十三、字符串、数组拼接 十四、截取字符 十五、替换字符 十六、字符串转数组 十七、字符串、数组 截取",content:"# 知识点：String 对象\n\n * 知识点：String 对象\n * 特性\n   * 字符串的值不可改变\n   * 一、删除字符串两端空白字符\n   * 二、清除字符串 左侧 / 右侧 空白\n   * 三、获取正则批量匹配的结果\n   * 四、模板字符串\n     * 特性\n       * 1、允许解析变量\n       * 2、允许换行\n       * 3、允许调用函数\n   * 五、查找指定字符是否在该字符的 头部\n   * 六、查找指定字符是否在该字符的 尾部\n   * 七、将指定字符串重复 n 次\n   * 八、字符串截取、数组截取\n   * 九、从前往后 查找第一个指定 字符索引 的位置\n   * 十、从后往前 查找第一个指定 字符索引 的位置\n   * 十一、返回指定索引的字符\n   * 十二、返回指定索引的字符ASCII码\n   * 十三、字符串、数组拼接\n   * 十四、截取字符\n   * 十五、替换字符\n   * 十六、字符串转数组\n   * 十七、字符串、数组 截取\n\n\n# 特性\n\n\n# 字符串的值不可改变\n\nvar str = 'abc'\nstr = 'hello'\n\n\n1\n2\n\n\n1、虽然看上去改变了字符串的值，但其实是地址变了，原来的值依然存在于内存中\n\nvar str = '';\nfor (var i = 0; i < 10000000; i++) {\n  str += i;\n}\nconsole.log(str);\n\n\n1\n2\n3\n4\n5\n\n\n2、由于需要重复开辟内存空间，当重复创建大量字符串时，会影响性能\n\n特性： 字符串所有的方法，都不会修改字符串本身（字符串的值不可改变），操作完成会返回一个新的字符串\n\n\n# 一、删除字符串两端空白字符\n\n方法： 字符串.trim()\n\n返回值： 新字符串\n\n\n# 二、清除字符串 左侧 / 右侧 空白\n\n方法： trimStart / trimEnd\n\n原数据：\n\nlet str = '   iloveyou   ';\n\n\n1\n\n\n处理后：\n\nstr.trimStart();  // 'iloveyou   '\nstr.trimEnd();  // '   iloveyou'\n\n\n1\n2\n\n\n\n# 三、获取正则批量匹配的结果\n\n方法： matchAll\n\n需求： 获取每个电影的 名称 和 上映事件\n\n原数据：\n\nlet str =\n`<ul>\n    <li>\n        <a>电影：肖生克的救赎</a>\n        <p>上映日期: 1994-09-10</p>\n    </li>\n    <li>\n        <a>电影：阿甘正传</a>\n        <p>上映日期: 1994-07-06</p>\n    </li>\n</ul>`;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n处理后： console.log(arr)\n\n使用步骤：\n\n// （1）初始化正则\nconst reg = /<li>.*?<a>(.*?)<\\/a>.*?<p>(.*?)<\\/p>/sg\n\n// （2）调用方法\nconst result = str.matchAll(reg);\n\n// (3)方法一：\nfor(let v of result){\n    console.log(v);\n}\n\n// (3)方法二（推荐）：\nconst arr = [...result];\nconsole.log(arr);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 四、模板字符串\n\n方法： let name = \\字符串;\n\n\n# 特性\n\n# 1、允许解析变量\n\n方法： ${变量名}\n\nlet name = '张三'\nlet sayHello1 = `hello,my name is ${name}`\nconsole.log(sayHello1) // hello, my name is zhangsan\n\n\n1\n2\n3\n\n\n# 2、允许换行\n\nlet result = {\n  name: 'zhangsan',\n  age: 20,\n  sex: '男'\n}\nlet html = ` \n              <div>\n                  <span>${result.name}</span>\n                  <span>${result.age}</span>\n                  <span>${result.sex}</span>\n              </div> `\nconsole.log(html)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 3、允许调用函数\n\n方法： ${调用函数}\n\nconst sayHello2 = function () {\n  return '哈哈哈'\n}\nlet greet = `${sayHello2()}嘿嘿嘿`\nconsole.log(greet) // 哈哈哈嘿嘿嘿\n\n\n1\n2\n3\n4\n5\n\n\n\n# 五、查找指定字符是否在该字符的 头部\n\n方法： 字符串.startsWith()\n\n返回值： 布尔值（true：在；false：不在）\n\n原数据：\n\nlet str = 'Hello ECMAScript 2015'\n\n\n1\n\n\n处理后：\n\nlet r1 = str.startsWith('Hello') // true\n\n\n1\n\n\n\n# 六、查找指定字符是否在该字符的 尾部\n\n方法： 字符串.endsWith()\n\n返回值： 布尔值（true：在；false：不在）\n\n原数据：\n\nlet str = 'Hello ECMAScript 2015'\n\n\n1\n\n\n处理后：\n\nlet r2 = str.endsWith('2016')  // false\n\n\n1\n\n\n\n# 七、将指定字符串重复 n 次\n\n方法： 字符串.repeat(次数)\n\n返回值： 新字符串\n\nconsole.log('ha'.repeat(5)) // hahahahaha\n\n\n1\n\n\n\n# 八、字符串截取、数组截取\n\n作用：\n\n 1. 一个参数：从指定索引往后截取，截取时包括指定索引\n 2. 两个参数：范围截取，截取时包括第一个参数的索引，但不包括第二个参数的索引\n\n方法： 字符串.slice(索引)\n\n返回值： 新字符串/新数组\n\nlet str = '123456'.slice(1) // 23456\nlet str1 = '123456'.slice(0, 3) // 123\nlet ary = [0, 1, 2, 3, 4].slice(1, 4) // [1,2,3]\n\n\n1\n2\n3\n\n\n\n# 九、从前往后 查找第一个指定 字符索引 的位置\n\nindexOf('要查找的字符','开始的位置')\n\n特性： 查找时包括开始的位置\n\n返回值： 指定字符索引的位置；找不到返回 -1\n\nvar str = '改革春风吹满地，春天来了'\nstr.indexOf('春')  // 2\nstr.indexOf('春', 3)  // 8\n\n\n1\n2\n3\n\n\n\n# 十、从后往前 查找第一个指定 字符索引 的位置\n\nlastIndexOf('要查找的字符','开始的位置')\n\n特性： 查找时包括开始的位置\n\n返回值： 指定字符索引的位置；找不到返回 -1\n\nvar str1 = '改革春风吹满地，春天来了'\nstr.lastIndexOf('春')  // 8\n\n\n1\n2\n\n\n\n# 十一、返回指定索引的字符\n\ncharAt(指定索引)\n\n返回值： 返回指定索引的字符；没有找到则返回空\n\nvar str2 = 'andy'\nstr2.charAt(3)  // y\n\n\n1\n2\n\n\n\n# 十二、返回指定索引的字符ASCII码\n\ncharCodeAt(指定索引)\n\n返回值： 返回指定索引的字符ASCII码；没有找到则返回空\n\n使用场景： 判断用户按下的是哪个按键\n\nvar str3 = 'andy'\nstr3.charCodeAt(3)  // 121\n\n\n1\n2\n\n\n\n# 十三、字符串、数组拼接\n\nconcat(字符串, 字符串, ...)\n\n返回值： 新的字符串\n\nvar str4 = 'pi'\nvar str5 = 'nk'\n// pink\nstr4.concat(str5)\n\n\n1\n2\n3\n4\n\n\n\n# 十四、截取字符\n\nsubstr(截取的起始位置，[截取几个字符])\n\n特性： 不写参数二，默认截取起始位置后面的所有字符\n\nvar str6 = '改革春风吹满地'\nstr6.substr(2, 2)  // 春风\n\n\n1\n2\n\n\n\n# 十五、替换字符\n\nreplace('被替换的字符 或 正则表达式', '替换为的字符')\n\n特性： 只会替换第一个字符\n\n使用场景： 替换敏感词\n\nvar str7 = 'andyandy'\nstr7.replace('a', 'b')  // bndyandy\n\n\n1\n2\n\n\n正则表达式：\n\nvar text = document.querySelector('textarea')\nvar btn = document.querySelector('button')\nvar div = document.querySelector('div')\nbtn.onclick = function () {\n  div.innerHTML = text.value.replace(/激情|gay/g, '**')\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 十六、字符串转数组\n\nsplit('分隔符')\n\n返回值： 返回新数组\n\nvar str8 = 'red, pink, blue'\nstr8.split(',') // [\"red\", \" pink\", \" blue\"]\n\n\n1\n2\n\n\n\n# 十七、字符串、数组 截取\n\n方法： 数组/字符串.slice()\n\n参数一： 从哪个索引开始截取，包括当前索引 参数二： 截取到哪个索引，不包括当前索引\n\n返回值： 新字符串/新数组\n\n例：\n\nlet arr = [1500, 1200, 2000, 2100, 1800];\nlet str = '12345';\n\nlet newArr = this.arr.slice(0, 2)\nlet newStr = this.str.slice(0, 2)\nconsole.log(newArr) // [1, 2]\nconsole.log(newStr) // '12'\n\n\n1\n2\n3\n4\n5\n6\n7\n",normalizedContent:"# 知识点：string 对象\n\n * 知识点：string 对象\n * 特性\n   * 字符串的值不可改变\n   * 一、删除字符串两端空白字符\n   * 二、清除字符串 左侧 / 右侧 空白\n   * 三、获取正则批量匹配的结果\n   * 四、模板字符串\n     * 特性\n       * 1、允许解析变量\n       * 2、允许换行\n       * 3、允许调用函数\n   * 五、查找指定字符是否在该字符的 头部\n   * 六、查找指定字符是否在该字符的 尾部\n   * 七、将指定字符串重复 n 次\n   * 八、字符串截取、数组截取\n   * 九、从前往后 查找第一个指定 字符索引 的位置\n   * 十、从后往前 查找第一个指定 字符索引 的位置\n   * 十一、返回指定索引的字符\n   * 十二、返回指定索引的字符ascii码\n   * 十三、字符串、数组拼接\n   * 十四、截取字符\n   * 十五、替换字符\n   * 十六、字符串转数组\n   * 十七、字符串、数组 截取\n\n\n# 特性\n\n\n# 字符串的值不可改变\n\nvar str = 'abc'\nstr = 'hello'\n\n\n1\n2\n\n\n1、虽然看上去改变了字符串的值，但其实是地址变了，原来的值依然存在于内存中\n\nvar str = '';\nfor (var i = 0; i < 10000000; i++) {\n  str += i;\n}\nconsole.log(str);\n\n\n1\n2\n3\n4\n5\n\n\n2、由于需要重复开辟内存空间，当重复创建大量字符串时，会影响性能\n\n特性： 字符串所有的方法，都不会修改字符串本身（字符串的值不可改变），操作完成会返回一个新的字符串\n\n\n# 一、删除字符串两端空白字符\n\n方法： 字符串.trim()\n\n返回值： 新字符串\n\n\n# 二、清除字符串 左侧 / 右侧 空白\n\n方法： trimstart / trimend\n\n原数据：\n\nlet str = '   iloveyou   ';\n\n\n1\n\n\n处理后：\n\nstr.trimstart();  // 'iloveyou   '\nstr.trimend();  // '   iloveyou'\n\n\n1\n2\n\n\n\n# 三、获取正则批量匹配的结果\n\n方法： matchall\n\n需求： 获取每个电影的 名称 和 上映事件\n\n原数据：\n\nlet str =\n`<ul>\n    <li>\n        <a>电影：肖生克的救赎</a>\n        <p>上映日期: 1994-09-10</p>\n    </li>\n    <li>\n        <a>电影：阿甘正传</a>\n        <p>上映日期: 1994-07-06</p>\n    </li>\n</ul>`;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n处理后： console.log(arr)\n\n使用步骤：\n\n// （1）初始化正则\nconst reg = /<li>.*?<a>(.*?)<\\/a>.*?<p>(.*?)<\\/p>/sg\n\n// （2）调用方法\nconst result = str.matchall(reg);\n\n// (3)方法一：\nfor(let v of result){\n    console.log(v);\n}\n\n// (3)方法二（推荐）：\nconst arr = [...result];\nconsole.log(arr);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 四、模板字符串\n\n方法： let name = \\字符串;\n\n\n# 特性\n\n# 1、允许解析变量\n\n方法： ${变量名}\n\nlet name = '张三'\nlet sayhello1 = `hello,my name is ${name}`\nconsole.log(sayhello1) // hello, my name is zhangsan\n\n\n1\n2\n3\n\n\n# 2、允许换行\n\nlet result = {\n  name: 'zhangsan',\n  age: 20,\n  sex: '男'\n}\nlet html = ` \n              <div>\n                  <span>${result.name}</span>\n                  <span>${result.age}</span>\n                  <span>${result.sex}</span>\n              </div> `\nconsole.log(html)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 3、允许调用函数\n\n方法： ${调用函数}\n\nconst sayhello2 = function () {\n  return '哈哈哈'\n}\nlet greet = `${sayhello2()}嘿嘿嘿`\nconsole.log(greet) // 哈哈哈嘿嘿嘿\n\n\n1\n2\n3\n4\n5\n\n\n\n# 五、查找指定字符是否在该字符的 头部\n\n方法： 字符串.startswith()\n\n返回值： 布尔值（true：在；false：不在）\n\n原数据：\n\nlet str = 'hello ecmascript 2015'\n\n\n1\n\n\n处理后：\n\nlet r1 = str.startswith('hello') // true\n\n\n1\n\n\n\n# 六、查找指定字符是否在该字符的 尾部\n\n方法： 字符串.endswith()\n\n返回值： 布尔值（true：在；false：不在）\n\n原数据：\n\nlet str = 'hello ecmascript 2015'\n\n\n1\n\n\n处理后：\n\nlet r2 = str.endswith('2016')  // false\n\n\n1\n\n\n\n# 七、将指定字符串重复 n 次\n\n方法： 字符串.repeat(次数)\n\n返回值： 新字符串\n\nconsole.log('ha'.repeat(5)) // hahahahaha\n\n\n1\n\n\n\n# 八、字符串截取、数组截取\n\n作用：\n\n 1. 一个参数：从指定索引往后截取，截取时包括指定索引\n 2. 两个参数：范围截取，截取时包括第一个参数的索引，但不包括第二个参数的索引\n\n方法： 字符串.slice(索引)\n\n返回值： 新字符串/新数组\n\nlet str = '123456'.slice(1) // 23456\nlet str1 = '123456'.slice(0, 3) // 123\nlet ary = [0, 1, 2, 3, 4].slice(1, 4) // [1,2,3]\n\n\n1\n2\n3\n\n\n\n# 九、从前往后 查找第一个指定 字符索引 的位置\n\nindexof('要查找的字符','开始的位置')\n\n特性： 查找时包括开始的位置\n\n返回值： 指定字符索引的位置；找不到返回 -1\n\nvar str = '改革春风吹满地，春天来了'\nstr.indexof('春')  // 2\nstr.indexof('春', 3)  // 8\n\n\n1\n2\n3\n\n\n\n# 十、从后往前 查找第一个指定 字符索引 的位置\n\nlastindexof('要查找的字符','开始的位置')\n\n特性： 查找时包括开始的位置\n\n返回值： 指定字符索引的位置；找不到返回 -1\n\nvar str1 = '改革春风吹满地，春天来了'\nstr.lastindexof('春')  // 8\n\n\n1\n2\n\n\n\n# 十一、返回指定索引的字符\n\ncharat(指定索引)\n\n返回值： 返回指定索引的字符；没有找到则返回空\n\nvar str2 = 'andy'\nstr2.charat(3)  // y\n\n\n1\n2\n\n\n\n# 十二、返回指定索引的字符ascii码\n\ncharcodeat(指定索引)\n\n返回值： 返回指定索引的字符ascii码；没有找到则返回空\n\n使用场景： 判断用户按下的是哪个按键\n\nvar str3 = 'andy'\nstr3.charcodeat(3)  // 121\n\n\n1\n2\n\n\n\n# 十三、字符串、数组拼接\n\nconcat(字符串, 字符串, ...)\n\n返回值： 新的字符串\n\nvar str4 = 'pi'\nvar str5 = 'nk'\n// pink\nstr4.concat(str5)\n\n\n1\n2\n3\n4\n\n\n\n# 十四、截取字符\n\nsubstr(截取的起始位置，[截取几个字符])\n\n特性： 不写参数二，默认截取起始位置后面的所有字符\n\nvar str6 = '改革春风吹满地'\nstr6.substr(2, 2)  // 春风\n\n\n1\n2\n\n\n\n# 十五、替换字符\n\nreplace('被替换的字符 或 正则表达式', '替换为的字符')\n\n特性： 只会替换第一个字符\n\n使用场景： 替换敏感词\n\nvar str7 = 'andyandy'\nstr7.replace('a', 'b')  // bndyandy\n\n\n1\n2\n\n\n正则表达式：\n\nvar text = document.queryselector('textarea')\nvar btn = document.queryselector('button')\nvar div = document.queryselector('div')\nbtn.onclick = function () {\n  div.innerhtml = text.value.replace(/激情|gay/g, '**')\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 十六、字符串转数组\n\nsplit('分隔符')\n\n返回值： 返回新数组\n\nvar str8 = 'red, pink, blue'\nstr8.split(',') // [\"red\", \" pink\", \" blue\"]\n\n\n1\n2\n\n\n\n# 十七、字符串、数组 截取\n\n方法： 数组/字符串.slice()\n\n参数一： 从哪个索引开始截取，包括当前索引 参数二： 截取到哪个索引，不包括当前索引\n\n返回值： 新字符串/新数组\n\n例：\n\nlet arr = [1500, 1200, 2000, 2100, 1800];\nlet str = '12345';\n\nlet newarr = this.arr.slice(0, 2)\nlet newstr = this.str.slice(0, 2)\nconsole.log(newarr) // [1, 2]\nconsole.log(newstr) // '12'\n\n\n1\n2\n3\n4\n5\n6\n7\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"数值允许使用公式计算",frontmatter:{title:"数值允许使用公式计算",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/fd5bb6/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/02.CSS/35.%E6%95%B0%E5%80%BC%E5%85%81%E8%AE%B8%E4%BD%BF%E7%94%A8%E5%85%AC%E5%BC%8F%E8%AE%A1%E7%AE%97.html",relativePath:"《前端》笔记《基础知识》/02.CSS/35.数值允许使用公式计算.md",key:"v-11de8673",path:"/pages/fd5bb6/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"Object 对象",frontmatter:{title:"Object 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/c0c5ab/",categories:["《前端》笔记","JS","内置对象"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/01.%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/03.Object%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/03.JS/01.内置对象/03.Object 对象.md",key:"v-2dc61188",path:"/pages/c0c5ab/",headers:[{level:2,title:"ES5",slug:"es5",normalizedTitle:"es5",charIndex:39},{level:3,title:"（1）将属性名转换为数组",slug:"_1-将属性名转换为数组",normalizedTitle:"（1）将属性名转换为数组",charIndex:50},{level:3,title:"（2）定义属性特性",slug:"_2-定义属性特性",normalizedTitle:"（2）定义属性特性",charIndex:70},{level:2,title:"ES6",slug:"es6",normalizedTitle:"es6",charIndex:85},{level:3,title:"（1）判断两个值是否完全相等",slug:"_1-判断两个值是否完全相等",normalizedTitle:"（1）判断两个值是否完全相等",charIndex:96},{level:3,title:"（2）合并对象",slug:"_2-合并对象",normalizedTitle:"（2）合并对象",charIndex:118},{level:3,title:"（3）设置原型对象 / 获取原型对象",slug:"_3-设置原型对象-获取原型对象",normalizedTitle:"（3）设置原型对象 / 获取原型对象",charIndex:133},{level:2,title:"ES8",slug:"es8",normalizedTitle:"es8",charIndex:157},{level:3,title:"（1）获取对象所有的 键",slug:"_1-获取对象所有的-键",normalizedTitle:"（1）获取对象所有的 键",charIndex:168},{level:3,title:"（2）获取对象所有的 值",slug:"_2-获取对象所有的-值",normalizedTitle:"（2）获取对象所有的 值",charIndex:188},{level:3,title:"（3）Object.entries(对象)",slug:"_3-object-entries-对象",normalizedTitle:"（3）object.entries(对象)",charIndex:208},{level:4,title:"1、将对象转换为二维数组，一个属性对应一个数组",slug:"_1、将对象转换为二维数组-一个属性对应一个数组",normalizedTitle:"1、将对象转换为二维数组，一个属性对应一个数组",charIndex:239},{level:4,title:"2、将对象转换为 Map 数据结构",slug:"_2、将对象转换为-map-数据结构",normalizedTitle:"2、将对象转换为 map 数据结构",charIndex:272},{level:2,title:"ES10",slug:"es10",normalizedTitle:"es10",charIndex:295},{level:3,title:"（1）将二维数组转换为对象",slug:"_1-将二维数组转换为对象",normalizedTitle:"（1）将二维数组转换为对象",charIndex:307}],headersStr:"ES5 （1）将属性名转换为数组 （2）定义属性特性 ES6 （1）判断两个值是否完全相等 （2）合并对象 （3）设置原型对象 / 获取原型对象 ES8 （1）获取对象所有的 键 （2）获取对象所有的 值 （3）Object.entries(对象) 1、将对象转换为二维数组，一个属性对应一个数组 2、将对象转换为 Map 数据结构 ES10 （1）将二维数组转换为对象",content:"# 知识点：Object 对象\n\n * 知识点：Object 对象\n   * ES5\n     * （1）将属性名转换为数组\n     * （2）定义属性特性\n   * ES6\n     * （1）判断两个值是否完全相等\n     * （2）合并对象\n     * （3）设置原型对象 / 获取原型对象\n   * ES8\n     * （1）获取对象所有的 键\n     * （2）获取对象所有的 值\n     * （3）Object.entries(对象)\n       * 1、将对象转换为二维数组，一个属性对应一个数组\n       * 2、将对象转换为 Map 数据结构\n   * ES10\n     * （1）将二维数组转换为对象\n\n\n# ES5\n\n\n# （1）将属性名转换为数组\n\n方法： Object.keys(对象)\n\n特性： for...in 增强版\n\n返回值： 新数组\n\n原数据：\n\nvar obj1 = {\n    id: 1,\n    pname: '小米',\n    price: 1999,\n    num: 2000\n};\n\n\n1\n2\n3\n4\n5\n6\n\n\n处理后：\n\nvar arr = Object.keys(obj1);\nconsole.log(arr);  // ['id', 'pname', 'price', 'num']\n\n\n1\n2\n\n\n\n# （2）定义属性特性\n\n方法： Object.defineProperty(对象, 属性, {特性})\n\n特性：\n\n 1. writable（是否允许 修改 该属性）： true（允许）；false（不允许）（默认）\n 2. enumerable(是否允许 遍历 该属性)： true（允许）；false（不允许）（默认）\n 3. configurable(是否允许 删除 该属性 或 再次修改该特性)： true（允许）；false（不允许）（默认）\n\nvar obj2 = {\n    id: 1,\n    pname: '小米',\n    price: 1999\n};\n// 所有特性 不允许（默认）\nObject.defineProperty(obj2, 'address', {\n    value: '中国山东蓝翔技校xx单元',\n    // writable: false,\n    // enumerable: false,\n    // configurable: false\n});\nconsole.log(obj2);\nconsole.log(Object.keys(obj2));\n\ndelete obj2.address;\nconsole.log(obj2);\n\ndelete obj2.pname;\nconsole.log(obj2);\n\n// 所有特性 允许\n// Object.defineProperty(obj2, 'address', {\n//     value: '中国山东蓝翔技校xx单元',\n//     writable: true,\n//     enumerable: true,\n//     configurable: true\n// });\n// console.log(obj2);\n// console.log(Object.keys(obj2));\n\n// delete obj2.address;\n// console.log(obj2);\n\n// delete obj2.pname;\n// console.log(obj2);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# ES6\n\n\n# （1）判断两个值是否完全相等\n\n方法： Object.is\n\n特性： 类似于 全等，但全等用于两个 NaN 对比时返回的是 true，而 Object.is 返回的是 false\n\n返回值： （true：完全 相等）（false：不完全 相等）\n\nObject.is(120, 120);  // true\nNaN === NaN;  // true\nObject.is(NaN, NaN);  // false\n\n\n1\n2\n3\n\n\n\n# （2）合并对象\n\n方法： Object.assign\n\n特性： 如果两个对象的属性重复了，第二个参数会覆盖第一个参数的属性\n\n返回值： 新对象\n\n原数据：\n\nconst config1 = {\n    host: 'localhost',\n    port: 3306,\n    name: 'root',\n    pass: 'root',\n    test: 'test'\n};\nconst config2 = {\n    host: 'http://atguigu.com',\n    port: 33060,\n    name: 'atguigu.com',\n    pass: 'iloveyou',\n    test2: 'test2'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n处理后：\n\nObject.assign(config1, config2);\n/*\nhost: \"http://atguigu.com\"\nname: \"atguigu.com\"\npass: \"iloveyou\"\nport: 33060\ntest: \"test\"\ntest2: \"test2\"\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# （3）设置原型对象 / 获取原型对象\n\n作用： Object.setPrototypeOf / Object.getPrototypeof\n\n原数据：\n\nconst school = {\n    name: '尚硅谷'\n}\nconst cities = {\n    xiaoqu: ['北京','上海','深圳']\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n处理后：\n\nObject.setPrototypeOf(school, cities);\nconsole.log(Object.getPrototypeOf(school));\nconsole.log(school);\n\n\n1\n2\n3\n\n\n\n# ES8\n\n\n# （1）获取对象所有的 键\n\n方法： Object.keys(对象)\n\n原数据：\n\nconst school = {\n    name:\"尚硅谷\",\n    cities:['北京','上海','深圳'],\n    xueke: ['前端','Java','大数据','运维']\n};\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nObject.keys(school);  //  [\"name\", \"cities\", \"xueke\"]\n\n\n1\n\n\n\n# （2）获取对象所有的 值\n\n方法： Object.values(对象)\n\n原数据：\n\nconst school = {\n    name:\"尚硅谷\",\n    cities:['北京','上海','深圳'],\n    xueke: ['前端','Java','大数据','运维']\n};\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nObject.values(school);  // [\"尚硅谷\", ['北京','上海','深圳'], ['前端','Java','大数据','运维']]\n\n\n1\n\n\n\n# （3）Object.entries(对象)\n\n# 1、将对象转换为二维数组，一个属性对应一个数组\n\n原数据：\n\nconst school = {\n    name:\"尚硅谷\",\n    cities:['北京','上海','深圳'],\n    xueke: ['前端','Java','大数据','运维']\n};\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nObject.entries(school); // [[\"name\", \"尚硅谷\"], [\"cities\", Array(3)], [\"xueke\", Array(4)]]\n\n\n1\n\n\n# 2、将对象转换为 Map 数据结构\n\n原数据：\n\nconst school = {\n    name:\"尚硅谷\",\n    cities:['北京','上海','深圳'],\n    xueke: ['前端','Java','大数据','运维']\n};\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nconst m = new Map(Object.entries(school));\nconsole.log(m)\n\n\n1\n2\n\n\n\n# ES10\n\n\n# （1）将二维数组转换为对象\n\n方法： fromEntries\n\n原数据：\n\nlet arr = [\n    ['name','尚硅谷'],\n    ['xueke', 'Java,大数据,前端,云计算']\n]\n\n\n1\n2\n3\n4\n\n\n处理后：\n\nconst result = Object.fromEntries(arr);\nconsole.log(result);  // {name: \"尚硅谷\", xueke: \"Java,大数据,前端,云计算\"}\n\n\n1\n2\n",normalizedContent:"# 知识点：object 对象\n\n * 知识点：object 对象\n   * es5\n     * （1）将属性名转换为数组\n     * （2）定义属性特性\n   * es6\n     * （1）判断两个值是否完全相等\n     * （2）合并对象\n     * （3）设置原型对象 / 获取原型对象\n   * es8\n     * （1）获取对象所有的 键\n     * （2）获取对象所有的 值\n     * （3）object.entries(对象)\n       * 1、将对象转换为二维数组，一个属性对应一个数组\n       * 2、将对象转换为 map 数据结构\n   * es10\n     * （1）将二维数组转换为对象\n\n\n# es5\n\n\n# （1）将属性名转换为数组\n\n方法： object.keys(对象)\n\n特性： for...in 增强版\n\n返回值： 新数组\n\n原数据：\n\nvar obj1 = {\n    id: 1,\n    pname: '小米',\n    price: 1999,\n    num: 2000\n};\n\n\n1\n2\n3\n4\n5\n6\n\n\n处理后：\n\nvar arr = object.keys(obj1);\nconsole.log(arr);  // ['id', 'pname', 'price', 'num']\n\n\n1\n2\n\n\n\n# （2）定义属性特性\n\n方法： object.defineproperty(对象, 属性, {特性})\n\n特性：\n\n 1. writable（是否允许 修改 该属性）： true（允许）；false（不允许）（默认）\n 2. enumerable(是否允许 遍历 该属性)： true（允许）；false（不允许）（默认）\n 3. configurable(是否允许 删除 该属性 或 再次修改该特性)： true（允许）；false（不允许）（默认）\n\nvar obj2 = {\n    id: 1,\n    pname: '小米',\n    price: 1999\n};\n// 所有特性 不允许（默认）\nobject.defineproperty(obj2, 'address', {\n    value: '中国山东蓝翔技校xx单元',\n    // writable: false,\n    // enumerable: false,\n    // configurable: false\n});\nconsole.log(obj2);\nconsole.log(object.keys(obj2));\n\ndelete obj2.address;\nconsole.log(obj2);\n\ndelete obj2.pname;\nconsole.log(obj2);\n\n// 所有特性 允许\n// object.defineproperty(obj2, 'address', {\n//     value: '中国山东蓝翔技校xx单元',\n//     writable: true,\n//     enumerable: true,\n//     configurable: true\n// });\n// console.log(obj2);\n// console.log(object.keys(obj2));\n\n// delete obj2.address;\n// console.log(obj2);\n\n// delete obj2.pname;\n// console.log(obj2);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# es6\n\n\n# （1）判断两个值是否完全相等\n\n方法： object.is\n\n特性： 类似于 全等，但全等用于两个 nan 对比时返回的是 true，而 object.is 返回的是 false\n\n返回值： （true：完全 相等）（false：不完全 相等）\n\nobject.is(120, 120);  // true\nnan === nan;  // true\nobject.is(nan, nan);  // false\n\n\n1\n2\n3\n\n\n\n# （2）合并对象\n\n方法： object.assign\n\n特性： 如果两个对象的属性重复了，第二个参数会覆盖第一个参数的属性\n\n返回值： 新对象\n\n原数据：\n\nconst config1 = {\n    host: 'localhost',\n    port: 3306,\n    name: 'root',\n    pass: 'root',\n    test: 'test'\n};\nconst config2 = {\n    host: 'http://atguigu.com',\n    port: 33060,\n    name: 'atguigu.com',\n    pass: 'iloveyou',\n    test2: 'test2'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n处理后：\n\nobject.assign(config1, config2);\n/*\nhost: \"http://atguigu.com\"\nname: \"atguigu.com\"\npass: \"iloveyou\"\nport: 33060\ntest: \"test\"\ntest2: \"test2\"\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# （3）设置原型对象 / 获取原型对象\n\n作用： object.setprototypeof / object.getprototypeof\n\n原数据：\n\nconst school = {\n    name: '尚硅谷'\n}\nconst cities = {\n    xiaoqu: ['北京','上海','深圳']\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n处理后：\n\nobject.setprototypeof(school, cities);\nconsole.log(object.getprototypeof(school));\nconsole.log(school);\n\n\n1\n2\n3\n\n\n\n# es8\n\n\n# （1）获取对象所有的 键\n\n方法： object.keys(对象)\n\n原数据：\n\nconst school = {\n    name:\"尚硅谷\",\n    cities:['北京','上海','深圳'],\n    xueke: ['前端','java','大数据','运维']\n};\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nobject.keys(school);  //  [\"name\", \"cities\", \"xueke\"]\n\n\n1\n\n\n\n# （2）获取对象所有的 值\n\n方法： object.values(对象)\n\n原数据：\n\nconst school = {\n    name:\"尚硅谷\",\n    cities:['北京','上海','深圳'],\n    xueke: ['前端','java','大数据','运维']\n};\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nobject.values(school);  // [\"尚硅谷\", ['北京','上海','深圳'], ['前端','java','大数据','运维']]\n\n\n1\n\n\n\n# （3）object.entries(对象)\n\n# 1、将对象转换为二维数组，一个属性对应一个数组\n\n原数据：\n\nconst school = {\n    name:\"尚硅谷\",\n    cities:['北京','上海','深圳'],\n    xueke: ['前端','java','大数据','运维']\n};\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nobject.entries(school); // [[\"name\", \"尚硅谷\"], [\"cities\", array(3)], [\"xueke\", array(4)]]\n\n\n1\n\n\n# 2、将对象转换为 map 数据结构\n\n原数据：\n\nconst school = {\n    name:\"尚硅谷\",\n    cities:['北京','上海','深圳'],\n    xueke: ['前端','java','大数据','运维']\n};\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nconst m = new map(object.entries(school));\nconsole.log(m)\n\n\n1\n2\n\n\n\n# es10\n\n\n# （1）将二维数组转换为对象\n\n方法： fromentries\n\n原数据：\n\nlet arr = [\n    ['name','尚硅谷'],\n    ['xueke', 'java,大数据,前端,云计算']\n]\n\n\n1\n2\n3\n4\n\n\n处理后：\n\nconst result = object.fromentries(arr);\nconsole.log(result);  // {name: \"尚硅谷\", xueke: \"java,大数据,前端,云计算\"}\n\n\n1\n2\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"Array 对象",frontmatter:{title:"Array 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/0fe8a5/",categories:["《前端》笔记","JS","内置对象"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/01.%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/02.Array%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/03.JS/01.内置对象/02.Array 对象.md",key:"v-4892a16c",path:"/pages/0fe8a5/",headersStr:null,content:" * 一、判断该数据类型是否为某种数据类型\n * 二、判断该数据类型是否为数组\n * 三、在数组的末尾添加元素\n * 四、遍历（迭代）数组\n * 五、筛选数组\n * 六、查找数组中是否有满足条件的数组元素\n * 七、检测数组中是否包含某个元素\n * 八、将多维数组转化为低位数组 如：三维转二维，二维转一维\n * 九、flatMap（没搞懂）\n * 十、遍历（迭代）数组\n * 十一、扩展运算符\n * 十二、合并数组（将其它数组合并到 新数组 中）\n * 十三、合并数组（将其它数组合并到 目标数组 中）\n * 十四、将伪数组转换为真正的数组\n * 十五、将类或对象的属性值通过 函数处理逻辑 转换为 数组\n * 十六、查找第一个符合条件的数组元素\n * 十七、查找第一个符合条件的数组元素的 索引\n * 十八、查找数组是否包含指定的值\n * 十九、判断数组中的每一个元素对象的某个属性值是否为 true\n * 二十、循环数组中的每一项并进行累加\n * 二一、字符串、数组 截取\n * 二二、在数组的末尾添加元素\n * 二三、删除数组最后一个元素\n * 二四、在数组的开头添加元素\n * 二五、删除数组第一个元素\n * 二六、翻转数组\n * 二七、排序数组\n * 二十八、保留小数点后的几位数（四舍五入）\n\n概念： 跟 数组 有关的内置对象\n\n特性： 每个数组都有 Array 对象中的属性和方法\n\n\n# 一、判断该数据类型是否为某种数据类型\n\n语法： 数据类型 instanceof 数据类型\n\n返回值： 布尔值\n\narr instanceof Array  // true\nobj instanceof Array  // false\n\n\n1\n2\n\n\n\n# 二、判断该数据类型是否为数组\n\n方法： Array.isArray(数据类型)\n\n参数：\n\n返回值： 布尔值\n\nArray.isArray(arr)  // true\nArray.isArray(obj)  // false\n\n\n1\n2\n\n\n\n# 三、在数组的末尾添加元素\n\n方法： 数组.push()\n\n参数 N： 添加的数据\n\n返回值： 新数组的长度\n\n例：\n\nvar arr = [1, 2, 3]\narr.push(4, 'pink') // 5\nconsole.log(arr) // arr[1, 2, 3, 4, 'pink']\n\n\n1\n2\n3\n\n\n\n# 四、遍历（迭代）数组\n\n方法： 数组.forEach()\n\n参数一： 当前数组元素的 值 参数二： 当前数组元素的 索引 参数三： 当前数组元素 所在的数组\n\n返回值： undefined\n\n例：\n\nvar arr1 = [1, 2, 3];\nvar sum = 0;\narr1.forEach(function(value, index, array) {\n    sum += value;\n})\nconsole.log(sum);  // 6\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 五、筛选数组\n\n方法： 数组.filter()\n\n参数一： 函数(当前元素的 值, 索引, 所在的数组)\n\n返回值： 新的数组\n\n例： 筛选出数组中大于等于 20 的元素\n\nvar arr2 = [12, 66, 4, 88, 3, 7];\n\nvar newArr2 = arr2.filter(function(value, index) {\n    return value >= 20;\n});\nconsole.log(newArr2);  // [66, 88]\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 六、查找数组中是否有满足条件的数组元素\n\n方法： 数组.some()\n\n参数一： 函数(当前数组元素的 值, 索引, 所在的数组)\n\n返回值： 布尔值（满足条件 true；不满足条件 false）\n\n例：\n\nvar arr3 = ['red', 'pink', 'blue'];\nvar flag3 = arr3.some(function(value) {\n    return value == 'pink';\n});\nconsole.log(flag3);  // true\n\n\n1\n2\n3\n4\n5\n\n\n\n# 七、检测数组中是否包含某个元素\n\n方法： 数组.includes()\n\n参数一： 数组元素\n\n返回值： （true：包含）（false：不包含）\n\n例：\n\nconst mingzhu = ['西游记','红楼梦','三国演义','水浒传'];\n\nmingzhu.includes('西游记');  // true\nmingzhu.includes('金瓶梅');  // false\n\n\n1\n2\n3\n4\n\n\n\n# 八、将多维数组转化为低位数组 如：三维转二维，二维转一维\n\n方法： 数组.flat()\n\n参数一： 深度，默认为 1\n\n返回值： ???\n\n二维转一维：\n\nconst arr = [1,2,3,4,[5,6]];\narr.flat();  // [1, 2, 3, 4, 5, 6]\n\n\n1\n2\n\n\n三维转二维：\n\nconst arr1 = [1,2,3,4,[5,6,[7,8,9]]];\narr1.flat(2);  // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\n1\n2\n\n\n\n# 九、flatMap（没搞懂）\n\n\n# 十、遍历（迭代）数组\n\n语法： 数组.map()\n\n参数一： 当前元素的 值 参数二： 当前元素的 索引 参数三： 当前元素 所在的数组\n\n返回值： 新的数组\n\n例： 筛选出数组中元素对象所拥有的某个属性值\n\nlet arr = [1, 2, 3]\n\narr.map(item => {\n  sum += item\n})\n\nconsole.log(sum) // 6\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 十一、扩展运算符\n\n语法： ...数组/对象\n\n作用： 将数组 或 对象 转为 元素对应类型（数字转为数字型，字符串转为字符串型）\n\n例：\n\nlet ary = [1, 2, 3];\nlet str = ['1', '2', '3']\n\nconsole.log(...ary); // 1 2 3\nconsole.log(...str); // '1' '2' '3'\n\n\n1\n2\n3\n4\n5\n\n\n\n# 十二、合并数组（将其它数组合并到 新数组 中）\n\n语法： let 新数组 = [...其它数组, ...其它数组]\n\n原理： 扩展运算符\n\n例：\n\nlet ary1 = [1, 2, 3];\nlet ary2 = [3, 4, 5];\nlet ary3 = [...ary1, ...ary2];  // [1, 2, 3, 3, 4, 5]\n\n\n1\n2\n3\n\n\n\n# 十三、合并数组（将其它数组合并到 目标数组 中）\n\n语法： 目标数组.push(...其它数组)\n\n原理： 扩展运算符\n\n例：\n\nlet ary1 = [1, 2, 3];\nlet ary2 = [3, 4, 5];\nary1.push(...ary2);\nconsole.log(ary1)  // [1, 2, 3, 3, 4, 5]\n\n\n1\n2\n3\n4\n\n\n\n# 十四、将伪数组转换为真正的数组\n\nvar divs = document.getElementsByTagName('div');\nvar ary4 = [...divs];\nary4.push('a');  // push 方法只有真正的数组才可以使用\nconsole.log(ary4);  // [div, div, div, div, div, div, \"a\"]\n\n\n1\n2\n3\n4\n\n\n\n# 十五、将类或对象的属性值通过 函数处理逻辑 转换为 数组\n\n方法： Array.from(类/对象, 当前数组元素 => ...)\n\n原数组：\n\nvar arrayLike = {\n    \"0\": \"1\",\n    \"1\": \"2\",\n    \"length\": 2\n}\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nvar ary5 = Array.from(arrayLike, item => item * 2);\nconsole.log(ary5);  // [2, 4]\n\n\n1\n2\n\n\n\n# 十六、查找第一个符合条件的数组元素\n\n方法： 数组.find(当前数组元素 => 查找条件);\n\n返回值： 符合条件 返回该条件所在元素；不符合条件 返回 undefined\n\n原数组：\n\nvar ary6 = [{\n    id: 1,\n    name: '张三'\n}, {\n    id: 2,\n    name: '李四'\n}];\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n处理后：\n\nlet target = ary6.find(item => item.id == 2);\nconsole.log(target);  // { id: 2, name: '李四'}\n\n\n1\n2\n\n\n\n# 十七、查找第一个符合条件的数组元素的 索引\n\n方法： 数组.findIndex(当前数组元素 => 查找条件);\n\n返回值： 符合条件 返回该数组元素的 索引；不符合条件 返回 undefined\n\n原数组：\n\nlet ary7 = [10, 20, 50];\n\n\n1\n\n\n处理后：\n\nlet index = ary7.findIndex(item => item > 15);\nconsole.log(index);  // 1\n\n\n1\n2\n\n\n\n# 十八、查找数组是否包含指定的值\n\n方法： 数组.includes('指定值')\n\n返回值： 布尔值（true：包含；false：不包含）\n\n原数组：\n\nlet ary8 = [\"a\", \"b\", \"c\"];\n\n\n1\n\n\n处理后：\n\nlet result = ary8.includes('a')\nconsole.log(result)  // true\nresult = ary8.includes('e')\nconsole.log(result)  // false\n\n\n1\n2\n3\n4\n\n\n\n# 十九、判断数组中的每一个元素对象的某个属性值是否为 true\n\n方法： 数组.every(判断条件)\n\n参数一： 当前数组元素的 值 参数二： 当前数组元素的 索引 参数三： 当前数组元素 所在的数组\n\n返回值： （true：全部为 true）（false：有一项不为 true）\n\n是否改变原数组： 如果是通过值类型的方式修改，则不会改变，如果通过下标的方式或者通过引用类型的方式修改，则原数组会发生变化\n\n原数组：\n\nconst arr = [\n  { id: 1, name: '西瓜', state: true },\n  { id: 2, name: '榴莲', state: false },\n  { id: 3, name: '草莓', state: true },\n]\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nconst result = arr.every(item => item.state)\nconsole.log(result)  // false\n\n\n1\n2\n\n\n\n# 二十、循环数组中的每一项并进行累加\n\n方法： 数组.reduce((累加的结果, 当前循环项) => { }, 初始值)\n\n返回值： 数字类型\n\n应用场景： 累加\n\n1、把购物车数组中，已勾选的水果，总价累加起来！\n\n原数组：\n\nlet amt = 0 // 总价\n\n\n1\n\n\n处理后：\n\n// 方法一\n// arr.filter(item => item.state).forEach(item => {\n// amt += item.price * item.count\n// })\n\n// 方法二（推荐）\nconst result = arr.filter(item => item.state).reduce((amt, item) => amt += item.price * item.count, 0)\nconsole.log(result)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二一、字符串、数组 截取\n\n方法： 数组/字符串.slice()\n\n参数一： 从哪个索引开始截取，包括当前索引 参数二： 截取到哪个索引，不包括当前索引\n\n返回值： 新字符串/新数组\n\n例：\n\nlet arr = [1500, 1200, 2000, 2100, 1800];\nlet str = '12345';\n\nlet newArr = this.arr.slice(0, 2)\nlet newStr = this.str.slice(0, 2)\nconsole.log(newArr) // [1, 2]\nconsole.log(newStr) // '12'\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二二、在数组的末尾添加元素\n\n数组.push(数据, 数据, ...)\n\n返回值： 新数组的长度\n\nvar arr = [1, 2, 3]\narr.push(4, 'pink') // 5\nconsole.log(arr) // arr[1, 2, 3, 4, 'pink']\n\n\n1\n2\n3\n\n\n\n# 二三、删除数组最后一个元素\n\n数组.pop()\n\n返回值： 被删除的元素\n\narr.pop()  // 'pink'\nconsole.log(arr)  // arr[1, 2, 3, 4,]\n\n\n1\n2\n\n\n\n# 二四、在数组的开头添加元素\n\n数组.unshift(数据, 数据, ...)\n\n返回值： 新数组的长度\n\narr.unshift('red', 'purple') // 6\nconsole.log(arr) // arr['red', 'purple, 1, 2, 3, 4]\n\n\n1\n2\n\n\n\n# 二五、删除数组第一个元素\n\n数组.shift()\n\n返回值： 被删除的元素\n\narr.shift()  // 'red'\nconsole.log(arr)  // arr['purple, 1, 2, 3, 4]\n\n\n1\n2\n\n\n\n# 二六、翻转数组\n\n数组.reverse()\n\n返回值： 新数组\n\narr.reverse() // arr[4, 3, 2, 1, 'purple']\nconsole.log(arr) // arr[4, 3, 2, 1, 'purple']\n\n\n1\n2\n\n\n\n# 二七、排序数组\n\n方法： 数组.sort()\n\n返回值： 新数组\n\nvar arr1 = [1, 64, 9, 6]\narr1.sort(function (a, b) {\n  return b - a // 降序\n  // return a - b; // 升序\n})\nconsole.log(arr1) // arr[64, 9, 6, 1]\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 二十八、保留小数点后的几位数（四舍五入）\n\n方法： 数值.toFixed()\n\n参数一： 保留小数点后的几位小数\n\n返回值：",normalizedContent:" * 一、判断该数据类型是否为某种数据类型\n * 二、判断该数据类型是否为数组\n * 三、在数组的末尾添加元素\n * 四、遍历（迭代）数组\n * 五、筛选数组\n * 六、查找数组中是否有满足条件的数组元素\n * 七、检测数组中是否包含某个元素\n * 八、将多维数组转化为低位数组 如：三维转二维，二维转一维\n * 九、flatmap（没搞懂）\n * 十、遍历（迭代）数组\n * 十一、扩展运算符\n * 十二、合并数组（将其它数组合并到 新数组 中）\n * 十三、合并数组（将其它数组合并到 目标数组 中）\n * 十四、将伪数组转换为真正的数组\n * 十五、将类或对象的属性值通过 函数处理逻辑 转换为 数组\n * 十六、查找第一个符合条件的数组元素\n * 十七、查找第一个符合条件的数组元素的 索引\n * 十八、查找数组是否包含指定的值\n * 十九、判断数组中的每一个元素对象的某个属性值是否为 true\n * 二十、循环数组中的每一项并进行累加\n * 二一、字符串、数组 截取\n * 二二、在数组的末尾添加元素\n * 二三、删除数组最后一个元素\n * 二四、在数组的开头添加元素\n * 二五、删除数组第一个元素\n * 二六、翻转数组\n * 二七、排序数组\n * 二十八、保留小数点后的几位数（四舍五入）\n\n概念： 跟 数组 有关的内置对象\n\n特性： 每个数组都有 array 对象中的属性和方法\n\n\n# 一、判断该数据类型是否为某种数据类型\n\n语法： 数据类型 instanceof 数据类型\n\n返回值： 布尔值\n\narr instanceof array  // true\nobj instanceof array  // false\n\n\n1\n2\n\n\n\n# 二、判断该数据类型是否为数组\n\n方法： array.isarray(数据类型)\n\n参数：\n\n返回值： 布尔值\n\narray.isarray(arr)  // true\narray.isarray(obj)  // false\n\n\n1\n2\n\n\n\n# 三、在数组的末尾添加元素\n\n方法： 数组.push()\n\n参数 n： 添加的数据\n\n返回值： 新数组的长度\n\n例：\n\nvar arr = [1, 2, 3]\narr.push(4, 'pink') // 5\nconsole.log(arr) // arr[1, 2, 3, 4, 'pink']\n\n\n1\n2\n3\n\n\n\n# 四、遍历（迭代）数组\n\n方法： 数组.foreach()\n\n参数一： 当前数组元素的 值 参数二： 当前数组元素的 索引 参数三： 当前数组元素 所在的数组\n\n返回值： undefined\n\n例：\n\nvar arr1 = [1, 2, 3];\nvar sum = 0;\narr1.foreach(function(value, index, array) {\n    sum += value;\n})\nconsole.log(sum);  // 6\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 五、筛选数组\n\n方法： 数组.filter()\n\n参数一： 函数(当前元素的 值, 索引, 所在的数组)\n\n返回值： 新的数组\n\n例： 筛选出数组中大于等于 20 的元素\n\nvar arr2 = [12, 66, 4, 88, 3, 7];\n\nvar newarr2 = arr2.filter(function(value, index) {\n    return value >= 20;\n});\nconsole.log(newarr2);  // [66, 88]\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 六、查找数组中是否有满足条件的数组元素\n\n方法： 数组.some()\n\n参数一： 函数(当前数组元素的 值, 索引, 所在的数组)\n\n返回值： 布尔值（满足条件 true；不满足条件 false）\n\n例：\n\nvar arr3 = ['red', 'pink', 'blue'];\nvar flag3 = arr3.some(function(value) {\n    return value == 'pink';\n});\nconsole.log(flag3);  // true\n\n\n1\n2\n3\n4\n5\n\n\n\n# 七、检测数组中是否包含某个元素\n\n方法： 数组.includes()\n\n参数一： 数组元素\n\n返回值： （true：包含）（false：不包含）\n\n例：\n\nconst mingzhu = ['西游记','红楼梦','三国演义','水浒传'];\n\nmingzhu.includes('西游记');  // true\nmingzhu.includes('金瓶梅');  // false\n\n\n1\n2\n3\n4\n\n\n\n# 八、将多维数组转化为低位数组 如：三维转二维，二维转一维\n\n方法： 数组.flat()\n\n参数一： 深度，默认为 1\n\n返回值： ???\n\n二维转一维：\n\nconst arr = [1,2,3,4,[5,6]];\narr.flat();  // [1, 2, 3, 4, 5, 6]\n\n\n1\n2\n\n\n三维转二维：\n\nconst arr1 = [1,2,3,4,[5,6,[7,8,9]]];\narr1.flat(2);  // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\n1\n2\n\n\n\n# 九、flatmap（没搞懂）\n\n\n# 十、遍历（迭代）数组\n\n语法： 数组.map()\n\n参数一： 当前元素的 值 参数二： 当前元素的 索引 参数三： 当前元素 所在的数组\n\n返回值： 新的数组\n\n例： 筛选出数组中元素对象所拥有的某个属性值\n\nlet arr = [1, 2, 3]\n\narr.map(item => {\n  sum += item\n})\n\nconsole.log(sum) // 6\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 十一、扩展运算符\n\n语法： ...数组/对象\n\n作用： 将数组 或 对象 转为 元素对应类型（数字转为数字型，字符串转为字符串型）\n\n例：\n\nlet ary = [1, 2, 3];\nlet str = ['1', '2', '3']\n\nconsole.log(...ary); // 1 2 3\nconsole.log(...str); // '1' '2' '3'\n\n\n1\n2\n3\n4\n5\n\n\n\n# 十二、合并数组（将其它数组合并到 新数组 中）\n\n语法： let 新数组 = [...其它数组, ...其它数组]\n\n原理： 扩展运算符\n\n例：\n\nlet ary1 = [1, 2, 3];\nlet ary2 = [3, 4, 5];\nlet ary3 = [...ary1, ...ary2];  // [1, 2, 3, 3, 4, 5]\n\n\n1\n2\n3\n\n\n\n# 十三、合并数组（将其它数组合并到 目标数组 中）\n\n语法： 目标数组.push(...其它数组)\n\n原理： 扩展运算符\n\n例：\n\nlet ary1 = [1, 2, 3];\nlet ary2 = [3, 4, 5];\nary1.push(...ary2);\nconsole.log(ary1)  // [1, 2, 3, 3, 4, 5]\n\n\n1\n2\n3\n4\n\n\n\n# 十四、将伪数组转换为真正的数组\n\nvar divs = document.getelementsbytagname('div');\nvar ary4 = [...divs];\nary4.push('a');  // push 方法只有真正的数组才可以使用\nconsole.log(ary4);  // [div, div, div, div, div, div, \"a\"]\n\n\n1\n2\n3\n4\n\n\n\n# 十五、将类或对象的属性值通过 函数处理逻辑 转换为 数组\n\n方法： array.from(类/对象, 当前数组元素 => ...)\n\n原数组：\n\nvar arraylike = {\n    \"0\": \"1\",\n    \"1\": \"2\",\n    \"length\": 2\n}\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nvar ary5 = array.from(arraylike, item => item * 2);\nconsole.log(ary5);  // [2, 4]\n\n\n1\n2\n\n\n\n# 十六、查找第一个符合条件的数组元素\n\n方法： 数组.find(当前数组元素 => 查找条件);\n\n返回值： 符合条件 返回该条件所在元素；不符合条件 返回 undefined\n\n原数组：\n\nvar ary6 = [{\n    id: 1,\n    name: '张三'\n}, {\n    id: 2,\n    name: '李四'\n}];\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n处理后：\n\nlet target = ary6.find(item => item.id == 2);\nconsole.log(target);  // { id: 2, name: '李四'}\n\n\n1\n2\n\n\n\n# 十七、查找第一个符合条件的数组元素的 索引\n\n方法： 数组.findindex(当前数组元素 => 查找条件);\n\n返回值： 符合条件 返回该数组元素的 索引；不符合条件 返回 undefined\n\n原数组：\n\nlet ary7 = [10, 20, 50];\n\n\n1\n\n\n处理后：\n\nlet index = ary7.findindex(item => item > 15);\nconsole.log(index);  // 1\n\n\n1\n2\n\n\n\n# 十八、查找数组是否包含指定的值\n\n方法： 数组.includes('指定值')\n\n返回值： 布尔值（true：包含；false：不包含）\n\n原数组：\n\nlet ary8 = [\"a\", \"b\", \"c\"];\n\n\n1\n\n\n处理后：\n\nlet result = ary8.includes('a')\nconsole.log(result)  // true\nresult = ary8.includes('e')\nconsole.log(result)  // false\n\n\n1\n2\n3\n4\n\n\n\n# 十九、判断数组中的每一个元素对象的某个属性值是否为 true\n\n方法： 数组.every(判断条件)\n\n参数一： 当前数组元素的 值 参数二： 当前数组元素的 索引 参数三： 当前数组元素 所在的数组\n\n返回值： （true：全部为 true）（false：有一项不为 true）\n\n是否改变原数组： 如果是通过值类型的方式修改，则不会改变，如果通过下标的方式或者通过引用类型的方式修改，则原数组会发生变化\n\n原数组：\n\nconst arr = [\n  { id: 1, name: '西瓜', state: true },\n  { id: 2, name: '榴莲', state: false },\n  { id: 3, name: '草莓', state: true },\n]\n\n\n1\n2\n3\n4\n5\n\n\n处理后：\n\nconst result = arr.every(item => item.state)\nconsole.log(result)  // false\n\n\n1\n2\n\n\n\n# 二十、循环数组中的每一项并进行累加\n\n方法： 数组.reduce((累加的结果, 当前循环项) => { }, 初始值)\n\n返回值： 数字类型\n\n应用场景： 累加\n\n1、把购物车数组中，已勾选的水果，总价累加起来！\n\n原数组：\n\nlet amt = 0 // 总价\n\n\n1\n\n\n处理后：\n\n// 方法一\n// arr.filter(item => item.state).foreach(item => {\n// amt += item.price * item.count\n// })\n\n// 方法二（推荐）\nconst result = arr.filter(item => item.state).reduce((amt, item) => amt += item.price * item.count, 0)\nconsole.log(result)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二一、字符串、数组 截取\n\n方法： 数组/字符串.slice()\n\n参数一： 从哪个索引开始截取，包括当前索引 参数二： 截取到哪个索引，不包括当前索引\n\n返回值： 新字符串/新数组\n\n例：\n\nlet arr = [1500, 1200, 2000, 2100, 1800];\nlet str = '12345';\n\nlet newarr = this.arr.slice(0, 2)\nlet newstr = this.str.slice(0, 2)\nconsole.log(newarr) // [1, 2]\nconsole.log(newstr) // '12'\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二二、在数组的末尾添加元素\n\n数组.push(数据, 数据, ...)\n\n返回值： 新数组的长度\n\nvar arr = [1, 2, 3]\narr.push(4, 'pink') // 5\nconsole.log(arr) // arr[1, 2, 3, 4, 'pink']\n\n\n1\n2\n3\n\n\n\n# 二三、删除数组最后一个元素\n\n数组.pop()\n\n返回值： 被删除的元素\n\narr.pop()  // 'pink'\nconsole.log(arr)  // arr[1, 2, 3, 4,]\n\n\n1\n2\n\n\n\n# 二四、在数组的开头添加元素\n\n数组.unshift(数据, 数据, ...)\n\n返回值： 新数组的长度\n\narr.unshift('red', 'purple') // 6\nconsole.log(arr) // arr['red', 'purple, 1, 2, 3, 4]\n\n\n1\n2\n\n\n\n# 二五、删除数组第一个元素\n\n数组.shift()\n\n返回值： 被删除的元素\n\narr.shift()  // 'red'\nconsole.log(arr)  // arr['purple, 1, 2, 3, 4]\n\n\n1\n2\n\n\n\n# 二六、翻转数组\n\n数组.reverse()\n\n返回值： 新数组\n\narr.reverse() // arr[4, 3, 2, 1, 'purple']\nconsole.log(arr) // arr[4, 3, 2, 1, 'purple']\n\n\n1\n2\n\n\n\n# 二七、排序数组\n\n方法： 数组.sort()\n\n返回值： 新数组\n\nvar arr1 = [1, 64, 9, 6]\narr1.sort(function (a, b) {\n  return b - a // 降序\n  // return a - b; // 升序\n})\nconsole.log(arr1) // arr[64, 9, 6, 1]\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 二十八、保留小数点后的几位数（四舍五入）\n\n方法： 数值.tofixed()\n\n参数一： 保留小数点后的几位小数\n\n返回值：",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"Math 对象",frontmatter:{title:"Math 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/d76ef8/",categories:["《前端》笔记","JS","内置对象"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/01.%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/04.Math%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/03.JS/01.内置对象/04.Math 对象.md",key:"v-1c57a748",path:"/pages/d76ef8/",headers:[{level:2,title:"一、解决浮点数运算误差的问题",slug:"一、解决浮点数运算误差的问题",normalizedTitle:"一、解决浮点数运算误差的问题",charIndex:35},{level:2,title:"二、检测一个数值是否为有限数",slug:"二、检测一个数值是否为有限数",normalizedTitle:"二、检测一个数值是否为有限数",charIndex:55},{level:2,title:"三、检测一个数值是否为 NaN",slug:"三、检测一个数值是否为-nan",normalizedTitle:"三、检测一个数值是否为 nan",charIndex:75},{level:2,title:"四、字符串转整数 / 字符串转浮点数",slug:"四、字符串转整数-字符串转浮点数",normalizedTitle:"四、字符串转整数 / 字符串转浮点数",charIndex:96},{level:2,title:"五、判断一个数是否为整数",slug:"五、判断一个数是否为整数",normalizedTitle:"五、判断一个数是否为整数",charIndex:120},{level:2,title:"六、将数字的小数部分抹掉",slug:"六、将数字的小数部分抹掉",normalizedTitle:"六、将数字的小数部分抹掉",charIndex:138},{level:2,title:"七、判断一个数到底为正数 负数 还是零",slug:"七、判断一个数到底为正数-负数-还是零",normalizedTitle:"七、判断一个数到底为正数 负数 还是零",charIndex:156},{level:2,title:"八、向下取整",slug:"八、向下取整",normalizedTitle:"八、向下取整",charIndex:181},{level:2,title:"九、向上取整",slug:"九、向上取整",normalizedTitle:"九、向上取整",charIndex:193},{level:2,title:"十、四舍五入版 就近取整 注意 -3.5 结果是 -3",slug:"十、四舍五入版-就近取整-注意-3-5-结果是-3",normalizedTitle:"十、四舍五入版 就近取整 注意 -3.5 结果是 -3",charIndex:205},{level:2,title:"十一、绝对值",slug:"十一、绝对值",normalizedTitle:"十一、绝对值",charIndex:238},{level:2,title:"十二、求最大和最小值",slug:"十二、求最大和最小值",normalizedTitle:"十二、求最大和最小值",charIndex:250},{level:2,title:"十三、随机数",slug:"十三、随机数",normalizedTitle:"十三、随机数",charIndex:266},{level:2,title:"十四、保留小数点后两位（四舍五入）",slug:"十四、保留小数点后两位-四舍五入",normalizedTitle:"十四、保留小数点后两位（四舍五入）",charIndex:278}],headersStr:"一、解决浮点数运算误差的问题 二、检测一个数值是否为有限数 三、检测一个数值是否为 NaN 四、字符串转整数 / 字符串转浮点数 五、判断一个数是否为整数 六、将数字的小数部分抹掉 七、判断一个数到底为正数 负数 还是零 八、向下取整 九、向上取整 十、四舍五入版 就近取整 注意 -3.5 结果是 -3 十一、绝对值 十二、求最大和最小值 十三、随机数 十四、保留小数点后两位（四舍五入）",content:"# 知识点：Math 对象\n\n * 知识点：Math 对象\n   * 一、解决浮点数运算误差的问题\n   * 二、检测一个数值是否为有限数\n   * 三、检测一个数值是否为 NaN\n   * 四、字符串转整数 / 字符串转浮点数\n   * 五、判断一个数是否为整数\n   * 六、将数字的小数部分抹掉\n   * 七、判断一个数到底为正数 负数 还是零\n   * 八、向下取整\n   * 九、向上取整\n   * 十、四舍五入版 就近取整 注意 -3.5 结果是 -3\n   * 十一、绝对值\n   * 十二、求最大和最小值\n   * 十三、随机数\n   * 十四、保留小数点后两位（四舍五入）\n * demo\n\n进制表达式：\n\nlet b = 0b1010;  0b  二进制：10\nlet o = 0o777;   0o  八进制：511\nlet d = 100;     100 十进制：100\nlet x = 0xff;    0x  十六进制：255\n\n\n1\n2\n3\n4\n\n\n\n# 一、解决浮点数运算误差的问题\n\nNumber.EPSILON\n\n作用： JavaScript 表示最小精度，当两个数进行比较如果精度小于最小精度则这两个数相等，如 50.2元 和 50元 如果小于最小精度，则它们相等\n\nlet num = 0.1 + 0.2;\nconsole.log(num);  // 0.30000000000000004\n\nfunction equal(a, b){\n    // 当 a 和 b 两个数的差值小于 最小精度，则这两个数相等\n    if(Math.abs(a-b) < Number.EPSILON){\n        return true;\n    }else{\n        return false;\n    }\n}\nconsole.log(equal(0.1 + 0.2, 0.3))  // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 二、检测一个数值是否为有限数\n\nNumber.isFinite\n\n返回值： （true：有限数）（false：无限数）\n\nNumber.isFinite(100);  // true\nNumber.isFinite(100/0);  // false\nNumber.isFinite(Infinity);  // false\n\n\n1\n2\n3\n\n\n\n# 三、检测一个数值是否为 NaN\n\nNumber.isNaN\n\n返回值： （true：是）（false：不是）\n\nNumber.isNaN(123);  // false\n\n\n1\n\n\n\n# 四、字符串转整数 / 字符串转浮点数\n\nNumber.parseInt / Number.parseFloat\n\nNumber.parseInt('5211314love');  // 5211314\nNumber.parseFloat('3.1415926神奇');  // 3.1415926\n\n\n1\n2\n\n\n\n# 五、判断一个数是否为整数\n\nNumber.isInteger\n\nNumber.isInteger(5);  // true\nNumber.isInteger(2.5);  // false\n\n\n1\n2\n\n\n\n# 六、将数字的小数部分抹掉\n\nMath.trunc\n\nMath.trunc(3.5);  // 3\n\n\n1\n\n\n\n# 七、判断一个数到底为正数 负数 还是零\n\nMath.sign\n\n返回值： （正数：1）（负数：-1）（零：0）\n\nMath.sign(100);  // 1\nMath.sign(-20000);  // -1\nMath.sign(0);  // 0\n\n\n1\n2\n3\n\n\n\n# 八、向下取整\n\nMath.floor()\n\nconsole.log(Math.floor(1.1));  // 1\nconsole.log(Math.floor(1.9));  // 1\n\n\n1\n2\n\n\n\n# 九、向上取整\n\nMath.ceil()\n\nconsole.log(Math.ceil(1.1));  // 2\nconsole.log(Math.ceil(1.9));  // 2\n\n\n1\n2\n\n\n\n# 十、四舍五入版 就近取整 注意 -3.5 结果是 -3\n\nMath.round()\n\nconsole.log(Math.round(1.1));  // 1\nconsole.log(Math.round(1.5));  // 2\nconsole.log(Math.round(1.9));  // 2\nconsole.log(Math.round(-1.1));  // -1\nconsole.log(Math.round(-1.5));  // -1\n\n\n1\n2\n3\n4\n5\n\n\n\n# 十一、绝对值\n\nMath.abs()\n\nconsole.log(Math.abs(1));  // 1\nconsole.log(Math.abs(-1));  // 1\nconsole.log(Math.abs('-1'));  // 隐式转换 会把字符串型 -1 转换为数字型\nconsole.log(Math.abs('pink'));  // NaN\n\n\n1\n2\n3\n4\n\n\n\n# 十二、求最大和最小值\n\nMath.max()/Math.min()\n\nconsole.log(Math.max(1, 99, 3));  // 99\nconsole.log(Math.min(1, 99, 3));  // 1\n\n\n1\n2\n\n\n\n# 十三、随机数\n\nrandom()\n\n作用： 得到一个两数之间的随机整数，包括两个数在内\n\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 十四、保留小数点后两位（四舍五入）\n\n方法： toFixed()\n\n参数一： 保留小数点后几位\n\n返回值： 新字符串（2.45）\n\n例：\n\nlet num = 2.446242342;\nnum = num.toFixed(2);  // 输出结果为 2.45\n\n\n1\n2\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>数值扩展</title>\n</head>\n<body>\n    <script>\n        // 知识点：Math 方法扩展\n\n        // （1）Number.EPSILON\n            // 作用：JavaScript 表示最小精度，当两个数进行比较如果精度小于最小精度则这两个数相等，如 50.2元 和 50元 如果小于最小精度，则它们相等\n            // 应用场景：解决浮点数运算误差的问题\n            let num = 0.1 + 0.2;\n            console.log(num);  // 0.30000000000000004\n\n            function equal(a, b){\n                // 当 a 和 b 两个数的差值小于 最小精度，则这两个数相等\n                if(Math.abs(a-b) < Number.EPSILON){\n                    return true;\n                }else{\n                    return false;\n                }\n            }\n            console.log(equal(0.1 + 0.2, 0.3))  // true\n\n        // （2）进制表达式\n            // let b = 0b1010;  // 0b  二进制：10\n            // let o = 0o777;   // 0o  八进制：511\n            // let d = 100;     // 100 十进制：100\n            // let x = 0xff;    // 0x  十六进制：255\n\n        // 2. Number.isFinite\n            // 作用：检测一个数值是否为有限数\n            // 返回值：（true：有限数）（false：无限数）\n            Number.isFinite(100);  // true\n            Number.isFinite(100/0);  // false\n            Number.isFinite(Infinity);  // false\n        \n        // 3. Number.isNaN \n            // 作用：检测一个数值是否为 NaN\n            // 返回值：（true：是）（false：不是）\n            Number.isNaN(123);  // false\n\n        // 4. Number.parseInt / Number.parseFloat\n            // 作用：字符串转整数 / 字符串转浮点数\n            Number.parseInt('5211314love');  // 5211314\n            Number.parseFloat('3.1415926神奇');  // 3.1415926\n\n        // 5. Number.isInteger \n            // 作用：判断一个数是否为整数\n            Number.isInteger(5);  // true\n            Number.isInteger(2.5);  // false\n\n        // 6. Math.trunc\n            // 作用：将数字的小数部分抹掉  \n            Math.trunc(3.5);  // 3\n\n        // 7. Math.sign\n            // 作用：判断一个数到底为正数 负数 还是零\n            // 返回值：（正数：1）（负数：-1）（零：0）\n            Math.sign(100);  // 1\n            Math.sign(-20000);  // -1\n            Math.sign(0);  // 0\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n",normalizedContent:"# 知识点：math 对象\n\n * 知识点：math 对象\n   * 一、解决浮点数运算误差的问题\n   * 二、检测一个数值是否为有限数\n   * 三、检测一个数值是否为 nan\n   * 四、字符串转整数 / 字符串转浮点数\n   * 五、判断一个数是否为整数\n   * 六、将数字的小数部分抹掉\n   * 七、判断一个数到底为正数 负数 还是零\n   * 八、向下取整\n   * 九、向上取整\n   * 十、四舍五入版 就近取整 注意 -3.5 结果是 -3\n   * 十一、绝对值\n   * 十二、求最大和最小值\n   * 十三、随机数\n   * 十四、保留小数点后两位（四舍五入）\n * demo\n\n进制表达式：\n\nlet b = 0b1010;  0b  二进制：10\nlet o = 0o777;   0o  八进制：511\nlet d = 100;     100 十进制：100\nlet x = 0xff;    0x  十六进制：255\n\n\n1\n2\n3\n4\n\n\n\n# 一、解决浮点数运算误差的问题\n\nnumber.epsilon\n\n作用： javascript 表示最小精度，当两个数进行比较如果精度小于最小精度则这两个数相等，如 50.2元 和 50元 如果小于最小精度，则它们相等\n\nlet num = 0.1 + 0.2;\nconsole.log(num);  // 0.30000000000000004\n\nfunction equal(a, b){\n    // 当 a 和 b 两个数的差值小于 最小精度，则这两个数相等\n    if(math.abs(a-b) < number.epsilon){\n        return true;\n    }else{\n        return false;\n    }\n}\nconsole.log(equal(0.1 + 0.2, 0.3))  // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 二、检测一个数值是否为有限数\n\nnumber.isfinite\n\n返回值： （true：有限数）（false：无限数）\n\nnumber.isfinite(100);  // true\nnumber.isfinite(100/0);  // false\nnumber.isfinite(infinity);  // false\n\n\n1\n2\n3\n\n\n\n# 三、检测一个数值是否为 nan\n\nnumber.isnan\n\n返回值： （true：是）（false：不是）\n\nnumber.isnan(123);  // false\n\n\n1\n\n\n\n# 四、字符串转整数 / 字符串转浮点数\n\nnumber.parseint / number.parsefloat\n\nnumber.parseint('5211314love');  // 5211314\nnumber.parsefloat('3.1415926神奇');  // 3.1415926\n\n\n1\n2\n\n\n\n# 五、判断一个数是否为整数\n\nnumber.isinteger\n\nnumber.isinteger(5);  // true\nnumber.isinteger(2.5);  // false\n\n\n1\n2\n\n\n\n# 六、将数字的小数部分抹掉\n\nmath.trunc\n\nmath.trunc(3.5);  // 3\n\n\n1\n\n\n\n# 七、判断一个数到底为正数 负数 还是零\n\nmath.sign\n\n返回值： （正数：1）（负数：-1）（零：0）\n\nmath.sign(100);  // 1\nmath.sign(-20000);  // -1\nmath.sign(0);  // 0\n\n\n1\n2\n3\n\n\n\n# 八、向下取整\n\nmath.floor()\n\nconsole.log(math.floor(1.1));  // 1\nconsole.log(math.floor(1.9));  // 1\n\n\n1\n2\n\n\n\n# 九、向上取整\n\nmath.ceil()\n\nconsole.log(math.ceil(1.1));  // 2\nconsole.log(math.ceil(1.9));  // 2\n\n\n1\n2\n\n\n\n# 十、四舍五入版 就近取整 注意 -3.5 结果是 -3\n\nmath.round()\n\nconsole.log(math.round(1.1));  // 1\nconsole.log(math.round(1.5));  // 2\nconsole.log(math.round(1.9));  // 2\nconsole.log(math.round(-1.1));  // -1\nconsole.log(math.round(-1.5));  // -1\n\n\n1\n2\n3\n4\n5\n\n\n\n# 十一、绝对值\n\nmath.abs()\n\nconsole.log(math.abs(1));  // 1\nconsole.log(math.abs(-1));  // 1\nconsole.log(math.abs('-1'));  // 隐式转换 会把字符串型 -1 转换为数字型\nconsole.log(math.abs('pink'));  // nan\n\n\n1\n2\n3\n4\n\n\n\n# 十二、求最大和最小值\n\nmath.max()/math.min()\n\nconsole.log(math.max(1, 99, 3));  // 99\nconsole.log(math.min(1, 99, 3));  // 1\n\n\n1\n2\n\n\n\n# 十三、随机数\n\nrandom()\n\n作用： 得到一个两数之间的随机整数，包括两个数在内\n\nfunction getrandomintinclusive(min, max) {\n    min = math.ceil(min);\n    max = math.floor(max);\n    return math.floor(math.random() * (max - min + 1)) + min;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 十四、保留小数点后两位（四舍五入）\n\n方法： tofixed()\n\n参数一： 保留小数点后几位\n\n返回值： 新字符串（2.45）\n\n例：\n\nlet num = 2.446242342;\nnum = num.tofixed(2);  // 输出结果为 2.45\n\n\n1\n2\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>数值扩展</title>\n</head>\n<body>\n    <script>\n        // 知识点：math 方法扩展\n\n        // （1）number.epsilon\n            // 作用：javascript 表示最小精度，当两个数进行比较如果精度小于最小精度则这两个数相等，如 50.2元 和 50元 如果小于最小精度，则它们相等\n            // 应用场景：解决浮点数运算误差的问题\n            let num = 0.1 + 0.2;\n            console.log(num);  // 0.30000000000000004\n\n            function equal(a, b){\n                // 当 a 和 b 两个数的差值小于 最小精度，则这两个数相等\n                if(math.abs(a-b) < number.epsilon){\n                    return true;\n                }else{\n                    return false;\n                }\n            }\n            console.log(equal(0.1 + 0.2, 0.3))  // true\n\n        // （2）进制表达式\n            // let b = 0b1010;  // 0b  二进制：10\n            // let o = 0o777;   // 0o  八进制：511\n            // let d = 100;     // 100 十进制：100\n            // let x = 0xff;    // 0x  十六进制：255\n\n        // 2. number.isfinite\n            // 作用：检测一个数值是否为有限数\n            // 返回值：（true：有限数）（false：无限数）\n            number.isfinite(100);  // true\n            number.isfinite(100/0);  // false\n            number.isfinite(infinity);  // false\n        \n        // 3. number.isnan \n            // 作用：检测一个数值是否为 nan\n            // 返回值：（true：是）（false：不是）\n            number.isnan(123);  // false\n\n        // 4. number.parseint / number.parsefloat\n            // 作用：字符串转整数 / 字符串转浮点数\n            number.parseint('5211314love');  // 5211314\n            number.parsefloat('3.1415926神奇');  // 3.1415926\n\n        // 5. number.isinteger \n            // 作用：判断一个数是否为整数\n            number.isinteger(5);  // true\n            number.isinteger(2.5);  // false\n\n        // 6. math.trunc\n            // 作用：将数字的小数部分抹掉  \n            math.trunc(3.5);  // 3\n\n        // 7. math.sign\n            // 作用：判断一个数到底为正数 负数 还是零\n            // 返回值：（正数：1）（负数：-1）（零：0）\n            math.sign(100);  // 1\n            math.sign(-20000);  // -1\n            math.sign(0);  // 0\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"Date 对象",frontmatter:{title:"Date 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/43f52a/",categories:["《前端》笔记","JS","内置对象"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/01.%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/05.Date%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/03.JS/01.内置对象/05.Date 对象.md",key:"v-c3d2be30",path:"/pages/43f52a/",headers:[{level:2,title:"内置对象",slug:"内置对象",normalizedTitle:"内置对象",charIndex:35},{level:3,title:"（一）返回当前时间",slug:"一-返回当前时间",normalizedTitle:"（一）返回当前时间",charIndex:47},{level:3,title:"（二）获取 年",slug:"二-获取-年",normalizedTitle:"（二）获取 年",charIndex:64},{level:3,title:"（三）获取 月",slug:"三-获取-月",normalizedTitle:"（三）获取 月",charIndex:79},{level:3,title:"（四）获取 日",slug:"四-获取-日",normalizedTitle:"（四）获取 日",charIndex:94},{level:3,title:"（五）获取 星期",slug:"五-获取-星期",normalizedTitle:"（五）获取 星期",charIndex:109},{level:3,title:"（六）获取 时",slug:"六-获取-时",normalizedTitle:"（六）获取 时",charIndex:125},{level:3,title:"（七）获取 分",slug:"七-获取-分",normalizedTitle:"（七）获取 分",charIndex:140},{level:3,title:"（一）获取 秒",slug:"一-获取-秒",normalizedTitle:"（一）获取 秒",charIndex:155}],headersStr:"内置对象 （一）返回当前时间 （二）获取 年 （三）获取 月 （四）获取 日 （五）获取 星期 （六）获取 时 （七）获取 分 （一）获取 秒",content:"# 知识点：Date 对象\n\n * 知识点：Date 对象\n   * 内置对象\n     * （一）返回当前时间\n     * （二）获取 年\n     * （三）获取 月\n     * （四）获取 日\n     * （五）获取 星期\n     * （六）获取 时\n     * （七）获取 分\n     * （一）获取 秒\n\n概念： 跟 日期 有关的内置对象\n\n特性： Date 是构造函数，需要实例化才可以使用\n\n\n# 内置对象\n\n\n# （一）返回当前时间\n\nnew Date()\n\nvar data = new Date()\nDate();\nTue Jul 20 2021 23:38:45 GMT+0800 (中国标准时间)\n\n\n1\n2\n3\n\n\n\n# （二）获取 年\n\ndata.getFullYear();\n\n\n# （三）获取 月\n\ndata.getMonth();\n\n\n# （四）获取 日\n\ndata.getDay();\n\n\n# （五）获取 星期\n\ndata.getDay();\n\n特性： 周日为 0\n\n\n# （六）获取 时\n\ndata.getHours();\n\n\n# （七）获取 分\n\ndata.getMinutes();\n\n\n# （一）获取 秒\n\ndata.getSeconds();",normalizedContent:"# 知识点：date 对象\n\n * 知识点：date 对象\n   * 内置对象\n     * （一）返回当前时间\n     * （二）获取 年\n     * （三）获取 月\n     * （四）获取 日\n     * （五）获取 星期\n     * （六）获取 时\n     * （七）获取 分\n     * （一）获取 秒\n\n概念： 跟 日期 有关的内置对象\n\n特性： date 是构造函数，需要实例化才可以使用\n\n\n# 内置对象\n\n\n# （一）返回当前时间\n\nnew date()\n\nvar data = new date()\ndate();\ntue jul 20 2021 23:38:45 gmt+0800 (中国标准时间)\n\n\n1\n2\n3\n\n\n\n# （二）获取 年\n\ndata.getfullyear();\n\n\n# （三）获取 月\n\ndata.getmonth();\n\n\n# （四）获取 日\n\ndata.getday();\n\n\n# （五）获取 星期\n\ndata.getday();\n\n特性： 周日为 0\n\n\n# （六）获取 时\n\ndata.gethours();\n\n\n# （七）获取 分\n\ndata.getminutes();\n\n\n# （一）获取 秒\n\ndata.getseconds();",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"变量",frontmatter:{title:"变量",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/e096ae/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/01.%E5%8F%98%E9%87%8F.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/01.变量.md",key:"v-185d5124",path:"/pages/e096ae/",headersStr:null,content:"# 知识点：变量\n\n特性：\n\n 1. 只声明 不赋值：undefied\n 2. 不声明 不赋值 直接使用：报错\n 3. 不声明 只赋值：全局变量\n\n同时声明多个变量：\n\nvar age = 18, name = 'zs', sex = 2;\n\n\n1\n",normalizedContent:"# 知识点：变量\n\n特性：\n\n 1. 只声明 不赋值：undefied\n 2. 不声明 不赋值 直接使用：报错\n 3. 不声明 只赋值：全局变量\n\n同时声明多个变量：\n\nvar age = 18, name = 'zs', sex = 2;\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"简单数据类型",frontmatter:{title:"简单数据类型",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/afa7e5/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/02.%E7%AE%80%E5%8D%95%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/02.简单数据类型.md",key:"v-3d69e8c7",path:"/pages/afa7e5/",headers:[{level:2,title:"一、Number 数字",slug:"一、number-数字",normalizedTitle:"一、number 数字",charIndex:17},{level:2,title:"二、Boolean 布尔",slug:"二、boolean-布尔",normalizedTitle:"二、boolean 布尔",charIndex:169},{level:2,title:"三、String 字符串",slug:"三、string-字符串",normalizedTitle:"三、string 字符串",charIndex:236},{level:3,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:260},{level:4,title:"1、获取字符串长度",slug:"_1、获取字符串长度",normalizedTitle:"1、获取字符串长度",charIndex:266},{level:2,title:"四、Undefined",slug:"四、undefined",normalizedTitle:"四、undefined",charIndex:362},{level:2,title:"五、Null",slug:"五、null",normalizedTitle:"五、null",charIndex:458},{level:2,title:"判断数据类型",slug:"判断数据类型",normalizedTitle:"判断数据类型",charIndex:530},{level:3,title:"（一）判断变量是否为非数字类型",slug:"一-判断变量是否为非数字类型",normalizedTitle:"（一）判断变量是否为非数字类型",charIndex:541},{level:3,title:"（二）判断变量的数据类型",slug:"二-判断变量的数据类型",normalizedTitle:"（二）判断变量的数据类型",charIndex:682},{level:2,title:"数据类型转换",slug:"数据类型转换",normalizedTitle:"数据类型转换",charIndex:1060},{level:3,title:"（一）转 字符串",slug:"一-转-字符串",normalizedTitle:"（一）转 字符串",charIndex:1071},{level:4,title:"1、数据类型.toString()",slug:"_1、数据类型-tostring",normalizedTitle:"1、数据类型.tostring()",charIndex:1083},{level:4,title:"2、String(数据类型)  -- 强制转换",slug:"_2、string-数据类型-强制转换",normalizedTitle:"2、string(数据类型)  -- 强制转换",charIndex:null},{level:4,title:'3、隐式转换（"" + 数据类型）（推荐）',slug:"_3、隐式转换-数据类型-推荐",normalizedTitle:"3、隐式转换（&quot;&quot; + 数据类型）（推荐）",charIndex:null},{level:3,title:"（二）转 布尔",slug:"二-转-布尔",normalizedTitle:"（二）转 布尔",charIndex:1315},{level:4,title:"1、Boolean(数据类型)",slug:"_1、boolean-数据类型",normalizedTitle:"1、boolean(数据类型)",charIndex:1326}],headersStr:'一、Number 数字 二、Boolean 布尔 三、String 字符串 方法 1、获取字符串长度 四、Undefined 五、Null 判断数据类型 （一）判断变量是否为非数字类型 （二）判断变量的数据类型 数据类型转换 （一）转 字符串 1、数据类型.toString() 2、String(数据类型)  -- 强制转换 3、隐式转换（"" + 数据类型）（推荐） （二）转 布尔 1、Boolean(数据类型)',content:'# 知识点：简单数据类型\n\n\n# 一、Number 数字\n\n值： 数值\n\n特性： \b浮点数有精度问题，不要用于运算\n\n例：\n\nconsole.log(0.1 + 0.2);  // 0.30000000000000004\nconsole.log(0.07 * 100);  // 7.000000000000001\n\n\n1\n2\n\n\n\n# 二、Boolean 布尔\n\n值：\n\n 1. true\n 2. false\n\n特性： true 代表 1，false 代表 0\n\n\n# 三、String 字符串\n\n值： ""\n\n\n# 方法\n\n# 1、获取字符串长度\n\n语法： length()\n\n例：\n\nvar strMsg = "我是帅气多金的程序猿！";\nalert(strMsg.length); // 11\n\n\n1\n2\n\n\n\n# 四、Undefined\n\n值： Undefined\n\n特性：\n\n 1. Undefined + 字符串 = Undefined字符串\n 2. Undefined + 数字 = NaN\n\n\n# 五、Null\n\n值： 空/null\n\n特性：\n\n 1. null + 字符串 = null字符串\n 2. null + 数字 = 数字\n\n\n# 判断数据类型\n\n\n# （一）判断变量是否为非数字类型\n\n方法： isNaN()\n\n值：\n\n 1. true：不是数字类型\n 2. false：是数字类型\n\n例：\n\nvar usrName = "andy";\nconsole.log(isNaN(usrName)); // true\n\n\n1\n2\n\n\n\n# （二）判断变量的数据类型\n\n方法： typeof 变量\n\n例：\n\nvar demon1 = 100;\nconsole.log(typeof demon1);  // number\n  \nvar demon2 = true;\nconsole.log(typeof demon2);  // boolean\n  \nvar demon3 = \'字符串\';\nconsole.log(typeof demon3);  //string\n\nvar demon4 = undefined;\nconsole.log(typeof demon4);  //undefined\n\nvar demon5 = null;\nconsole.log(typeof demon5);  // object\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 数据类型转换\n\n\n# （一）转 字符串\n\n# 1、数据类型.toString()\n\n# 2、String(数据类型) -- 强制转换\n\n# 3、隐式转换（"" + 数据类型）（推荐）\n\n例：\n\nvar num = 10;\nconsole.log(num.toString() + 1);    // 101\nconsole.log(String(num) + 1);       // 101\nconsole.log(num + \'1\');             // 101\n\n\n1\n2\n3\n4\n\n\n\n# （二）转 布尔\n\n# 1、Boolean(数据类型)\n\n特性： 只有 0、NaN、null、undefined 会被转为 false，其余为 true\n\n例：\n\n    console.log(Boolean(null));  // false\n\n\n1\n',normalizedContent:'# 知识点：简单数据类型\n\n\n# 一、number 数字\n\n值： 数值\n\n特性： \b浮点数有精度问题，不要用于运算\n\n例：\n\nconsole.log(0.1 + 0.2);  // 0.30000000000000004\nconsole.log(0.07 * 100);  // 7.000000000000001\n\n\n1\n2\n\n\n\n# 二、boolean 布尔\n\n值：\n\n 1. true\n 2. false\n\n特性： true 代表 1，false 代表 0\n\n\n# 三、string 字符串\n\n值： ""\n\n\n# 方法\n\n# 1、获取字符串长度\n\n语法： length()\n\n例：\n\nvar strmsg = "我是帅气多金的程序猿！";\nalert(strmsg.length); // 11\n\n\n1\n2\n\n\n\n# 四、undefined\n\n值： undefined\n\n特性：\n\n 1. undefined + 字符串 = undefined字符串\n 2. undefined + 数字 = nan\n\n\n# 五、null\n\n值： 空/null\n\n特性：\n\n 1. null + 字符串 = null字符串\n 2. null + 数字 = 数字\n\n\n# 判断数据类型\n\n\n# （一）判断变量是否为非数字类型\n\n方法： isnan()\n\n值：\n\n 1. true：不是数字类型\n 2. false：是数字类型\n\n例：\n\nvar usrname = "andy";\nconsole.log(isnan(usrname)); // true\n\n\n1\n2\n\n\n\n# （二）判断变量的数据类型\n\n方法： typeof 变量\n\n例：\n\nvar demon1 = 100;\nconsole.log(typeof demon1);  // number\n  \nvar demon2 = true;\nconsole.log(typeof demon2);  // boolean\n  \nvar demon3 = \'字符串\';\nconsole.log(typeof demon3);  //string\n\nvar demon4 = undefined;\nconsole.log(typeof demon4);  //undefined\n\nvar demon5 = null;\nconsole.log(typeof demon5);  // object\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 数据类型转换\n\n\n# （一）转 字符串\n\n# 1、数据类型.tostring()\n\n# 2、string(数据类型) -- 强制转换\n\n# 3、隐式转换（"" + 数据类型）（推荐）\n\n例：\n\nvar num = 10;\nconsole.log(num.tostring() + 1);    // 101\nconsole.log(string(num) + 1);       // 101\nconsole.log(num + \'1\');             // 101\n\n\n1\n2\n3\n4\n\n\n\n# （二）转 布尔\n\n# 1、boolean(数据类型)\n\n特性： 只有 0、nan、null、undefined 会被转为 false，其余为 true\n\n例：\n\n    console.log(boolean(null));  // false\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"运算符",frontmatter:{title:"运算符",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/2e7ca5/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/03.%E8%BF%90%E7%AE%97%E7%AC%A6.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/03.运算符.md",key:"v-b84a47b4",path:"/pages/2e7ca5/",headers:[{level:2,title:"一、递增/递减",slug:"一、递增-递减",normalizedTitle:"一、递增/递减",charIndex:14},{level:3,title:"（一）前置 递增/递减",slug:"一-前置-递增-递减",normalizedTitle:"（一）前置 递增/递减",charIndex:37},{level:3,title:"（二）后置 递增/递减（常用）",slug:"二-后置-递增-递减-常用",normalizedTitle:"（二）后置 递增/递减（常用）",charIndex:131},{level:2,title:"二、比较运算符",slug:"二、比较运算符",normalizedTitle:"二、比较运算符",charIndex:367},{level:2,title:"三、逻辑运算符",slug:"三、逻辑运算符",normalizedTitle:"三、逻辑运算符",charIndex:421},{level:3,title:"（一）&&（与）",slug:"一-与",normalizedTitle:"（一）&amp;&amp;（与）",charIndex:null},{level:3,title:"（二）||（或）",slug:"二-或",normalizedTitle:"（二）||（或）",charIndex:522},{level:3,title:"（三）!（非）",slug:"三-非",normalizedTitle:"（三）!（非）",charIndex:608},{level:3,title:"短路运算（逻辑中断）",slug:"短路运算-逻辑中断",normalizedTitle:"短路运算（逻辑中断）",charIndex:662},{level:4,title:"1、&&",slug:"_1、",normalizedTitle:"1、&amp;&amp;",charIndex:null},{level:4,title:"2、||",slug:"_2、",normalizedTitle:"2、||",charIndex:901},{level:2,title:"四、赋值运算符",slug:"四、赋值运算符",normalizedTitle:"四、赋值运算符",charIndex:1103}],headersStr:"一、递增/递减 （一）前置 递增/递减 （二）后置 递增/递减（常用） 二、比较运算符 三、逻辑运算符 （一）&&（与） （二）||（或） （三）!（非） 短路运算（逻辑中断） 1、&& 2、|| 四、赋值运算符",content:"# 知识点：运算符\n\n\n# 一、递增/递减\n\n作用： 简化代码量\n\n\n# （一）前置 递增/递减\n\n作用： 先 自加/减，后 返回值\n\n例：\n\nvar num1 = 10;\nconsole.log(++num1 + 10);  // 21\n\n\n1\n2\n\n\n\n# （二）后置 递增/递减（常用）\n\n作用： 先 返回值，后 自加/减\n\n例：\n\n    var num2 = 10;\n    console.log(num2++ + 10); // 20\n    \n    // 特性：单独使用时，前置 和 后置 效果一样\n    var num3 = 20;\n    console.log(++num3);    // 21\n    console.log(num3++);    // 21\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二、比较运算符\n\n返回值： 布尔\n\n=： 赋值 ==： 比较 值 ===： 比较 值 和 数据类型\n\n\n# 三、逻辑运算符\n\n\n# （一）&&（与）\n\n特性： 只要有一个为 false，则结果为 false\n\n例：\n\nvar res1 = 2 > 1 && 3 < 1;  // false\n\n\n1\n\n\n\n# （二）||（或）\n\n特性： 只要有一个为 true，则结果为 true\n\n例：\n\nvar res2 = 2 > 1 || 3 < 1;  // true\n\n\n1\n\n\n\n# （三）!（非）\n\n特性： 取反\n\nvar res3 = !true;  // fales\n\n\n1\n\n\n\n# 短路运算（逻辑中断）\n\n作用： 当确定结果时,就不再继续运算右边的表达式\n\n# 1、&&\n\n特性：\n\n 1. 第一个表达式的值为 真，则返回 表达式2\n 2. 第一个表达式的值为 假，则返回 表达式1\n\n例：\n\nconsole.log( 123 && 456 );        // 456\nconsole.log( 0 && 456 );          // 0\nconsole.log(123 && 456 && 789);   // 789\n\n\n1\n2\n3\n\n\n# 2、||\n\n特性：\n\n 1. 第一个表达式的值为 真，则返回 表达式1\n 2. 第一个表达式的值为 假，则返回 表达式2\n\n例：\n\nconsole.log( 123 || 456 );        // 123\nconsole.log( 0 || 456 );          // 456\nconsole.log(123 || 456 || 789);   // 123\n\n\n1\n2\n3\n\n\n\n# 四、赋值运算符\n\n作用： 简化代码\n\n语法：\n\n 1. +=\n 2. -=\n 3. *=\n 4. /=\n 5. %=\n\n例：\n\nvar age = 10;\nconsole.log(age += 20); // 30\n\n\n1\n2\n",normalizedContent:"# 知识点：运算符\n\n\n# 一、递增/递减\n\n作用： 简化代码量\n\n\n# （一）前置 递增/递减\n\n作用： 先 自加/减，后 返回值\n\n例：\n\nvar num1 = 10;\nconsole.log(++num1 + 10);  // 21\n\n\n1\n2\n\n\n\n# （二）后置 递增/递减（常用）\n\n作用： 先 返回值，后 自加/减\n\n例：\n\n    var num2 = 10;\n    console.log(num2++ + 10); // 20\n    \n    // 特性：单独使用时，前置 和 后置 效果一样\n    var num3 = 20;\n    console.log(++num3);    // 21\n    console.log(num3++);    // 21\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二、比较运算符\n\n返回值： 布尔\n\n=： 赋值 ==： 比较 值 ===： 比较 值 和 数据类型\n\n\n# 三、逻辑运算符\n\n\n# （一）&&（与）\n\n特性： 只要有一个为 false，则结果为 false\n\n例：\n\nvar res1 = 2 > 1 && 3 < 1;  // false\n\n\n1\n\n\n\n# （二）||（或）\n\n特性： 只要有一个为 true，则结果为 true\n\n例：\n\nvar res2 = 2 > 1 || 3 < 1;  // true\n\n\n1\n\n\n\n# （三）!（非）\n\n特性： 取反\n\nvar res3 = !true;  // fales\n\n\n1\n\n\n\n# 短路运算（逻辑中断）\n\n作用： 当确定结果时,就不再继续运算右边的表达式\n\n# 1、&&\n\n特性：\n\n 1. 第一个表达式的值为 真，则返回 表达式2\n 2. 第一个表达式的值为 假，则返回 表达式1\n\n例：\n\nconsole.log( 123 && 456 );        // 456\nconsole.log( 0 && 456 );          // 0\nconsole.log(123 && 456 && 789);   // 789\n\n\n1\n2\n3\n\n\n# 2、||\n\n特性：\n\n 1. 第一个表达式的值为 真，则返回 表达式1\n 2. 第一个表达式的值为 假，则返回 表达式2\n\n例：\n\nconsole.log( 123 || 456 );        // 123\nconsole.log( 0 || 456 );          // 456\nconsole.log(123 || 456 || 789);   // 123\n\n\n1\n2\n3\n\n\n\n# 四、赋值运算符\n\n作用： 简化代码\n\n语法：\n\n 1. +=\n 2. -=\n 3. *=\n 4. /=\n 5. %=\n\n例：\n\nvar age = 10;\nconsole.log(age += 20); // 30\n\n\n1\n2\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"流程控制.循环语句",frontmatter:{title:"流程控制.循环语句",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/a27b88/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/05.%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/05.流程控制-循环语句.md",key:"v-69f0e27d",path:"/pages/a27b88/",headers:[{level:2,title:"一、for",slug:"一、for",normalizedTitle:"一、for",charIndex:59},{level:2,title:"二、双重 for",slug:"二、双重-for",normalizedTitle:"二、双重 for",charIndex:406},{level:2,title:"三、whilde",slug:"三、whilde",normalizedTitle:"三、whilde",charIndex:664},{level:2,title:"四、do whilde",slug:"四、do-whilde",normalizedTitle:"四、do whilde",charIndex:889},{level:2,title:"关键字：",slug:"关键字",normalizedTitle:"关键字：",charIndex:1092},{level:3,title:"（一）continue",slug:"一-continue",normalizedTitle:"（一）continue",charIndex:1101},{level:3,title:"（二）break",slug:"二-break",normalizedTitle:"（二）break",charIndex:1304}],headersStr:"一、for 二、双重 for 三、whilde 四、do whilde 关键字： （一）continue （二）break",content:"# 知识点：流程控制-循环语句\n\n作用： 重复执行\n\n调试： 常配合 断点调试 和 watch监视 调试代码\n\n\n# 一、for\n\n语法： for(计数器; 条件表达式; 操作表达式 ){ 循环体 }\n\n例：\n\n// 循环不同的代码，配合 if \n    for (var i = 1; i <= 100; i++) {\n        if (i == 1) {\n            console.log('这个人今年1岁了， 它出生了');\n        } else if (i == 100) {\n            console.log('这个人今年100岁了，它死了');\n        } else {\n            console.log('这个人今年' + i + '岁了');\n        }\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 二、双重 for\n\n提示：通常外层负责行，内层负责列\n\n    var star = '';\n    for (var j = 1; j <= 5; j++) {\n        for (var i = 1; i <= 5; i++) {\n            star += '☆'\n        }\n        // 每次满 5个星星 就 加一次换行\n        star += '\\n'\n    }\n    console.log(star);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 三、whilde\n\n特性：\n\n 1. 先进行判断，后执行循环体\n 2. 判断条件通常为 不等于\n\n应用场景： 判断 用户名、密码 是否正确；提示框；\n\nvar message = prompt('请输入密码');\nwhile (message !== '12345') {\n  alert('密码错误,请重新输入');\n  message = prompt('请输入密码');\n}\nalert('密码正确');\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 四、do whilde\n\n特性： 先执行一遍循环体，在进行判断\n\ndo {\n    var message = prompt('请输入密码');\n    if (message != '12345') {\n        alert('密码错误，请重新输入');\n    }\n} while (message != '12345')\nalert('登录成功');\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 关键字：\n\n\n# （一）continue\n\n作用： 跳过本次循环\n\n应用场景： 通常搭配 if 使用\n\n例：\n\nfor (var i = 1; i <= 5; i++) {\n  if (i == 3) {\n    console.log('这个包子有虫子，扔掉');\n    continue;\n  }\n  console.log('我正在吃第' + i + '个包子呢');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# （二）break\n\n作用： 跳出循环语句\n\n应用场景： 通常搭配 if 使用\n\n例：\n\nfor (var i = 1; i <= 5; i++) {\n  if (i == 3) {\n    break;\n  }\n  console.log('我正在吃第' + i + '个包子呢');\n}\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"# 知识点：流程控制-循环语句\n\n作用： 重复执行\n\n调试： 常配合 断点调试 和 watch监视 调试代码\n\n\n# 一、for\n\n语法： for(计数器; 条件表达式; 操作表达式 ){ 循环体 }\n\n例：\n\n// 循环不同的代码，配合 if \n    for (var i = 1; i <= 100; i++) {\n        if (i == 1) {\n            console.log('这个人今年1岁了， 它出生了');\n        } else if (i == 100) {\n            console.log('这个人今年100岁了，它死了');\n        } else {\n            console.log('这个人今年' + i + '岁了');\n        }\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 二、双重 for\n\n提示：通常外层负责行，内层负责列\n\n    var star = '';\n    for (var j = 1; j <= 5; j++) {\n        for (var i = 1; i <= 5; i++) {\n            star += '☆'\n        }\n        // 每次满 5个星星 就 加一次换行\n        star += '\\n'\n    }\n    console.log(star);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 三、whilde\n\n特性：\n\n 1. 先进行判断，后执行循环体\n 2. 判断条件通常为 不等于\n\n应用场景： 判断 用户名、密码 是否正确；提示框；\n\nvar message = prompt('请输入密码');\nwhile (message !== '12345') {\n  alert('密码错误,请重新输入');\n  message = prompt('请输入密码');\n}\nalert('密码正确');\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 四、do whilde\n\n特性： 先执行一遍循环体，在进行判断\n\ndo {\n    var message = prompt('请输入密码');\n    if (message != '12345') {\n        alert('密码错误，请重新输入');\n    }\n} while (message != '12345')\nalert('登录成功');\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 关键字：\n\n\n# （一）continue\n\n作用： 跳过本次循环\n\n应用场景： 通常搭配 if 使用\n\n例：\n\nfor (var i = 1; i <= 5; i++) {\n  if (i == 3) {\n    console.log('这个包子有虫子，扔掉');\n    continue;\n  }\n  console.log('我正在吃第' + i + '个包子呢');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# （二）break\n\n作用： 跳出循环语句\n\n应用场景： 通常搭配 if 使用\n\n例：\n\nfor (var i = 1; i <= 5; i++) {\n  if (i == 3) {\n    break;\n  }\n  console.log('我正在吃第' + i + '个包子呢');\n}\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"流程控制.分支语句",frontmatter:{title:"流程控制.分支语句",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/1f470c/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/04.%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6-%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/04.流程控制-分支语句.md",key:"v-04aa42cb",path:"/pages/1f470c/",headers:[{level:2,title:"一、分支语句",slug:"一、分支语句",normalizedTitle:"一、分支语句",charIndex:20},{level:3,title:"（一）单分支",slug:"一-单分支",normalizedTitle:"（一）单分支",charIndex:40},{level:3,title:"（二）双分支",slug:"二-双分支",normalizedTitle:"（二）双分支",charIndex:165},{level:3,title:"（三）（多分支）",slug:"三-多分支",normalizedTitle:"（三）（多分支）",charIndex:331},{level:3,title:"（四）三元表达式",slug:"四-三元表达式",normalizedTitle:"（四）三元表达式",charIndex:664},{level:3,title:"（五）switch",slug:"五-switch",normalizedTitle:"（五）switch",charIndex:783},{level:3,title:"if else if 和 switch 的区别",slug:"if-else-if-和-switch-的区别",normalizedTitle:"if else if 和 switch 的区别",charIndex:1078}],headersStr:"一、分支语句 （一）单分支 （二）双分支 （三）（多分支） （四）三元表达式 （五）switch if else if 和 switch 的区别",content:"# 知识点：流程控制-分支语句\n\n\n# 一、分支语句\n\n作用： 多选一\n\n\n# （一）单分支\n\n语法： if\n\n例：\n\nvar usrAge = prompt('请输入您的年龄：');\nif(usrAge >= 18){\n    alert('您的年龄合法，欢迎来天际网吧享受学习的乐趣！');\n}\n\n\n1\n2\n3\n4\n\n\n\n# （二）双分支\n\n语法： if else\n\n例：\n\nif (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {\n    alert(\"这个年份是闰年\");\n} else { // 剩下的是平年\n    alert(\"这个年份是平年\");\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （三）（多分支）\n\n语法： if else if\n\n例：\n\nvar score = prompt('请您输入分数:');\nif (score >= 90) {\n    alert('宝贝，你是我的骄傲');\n} else if (score >= 80) {\n    alert('宝贝，你已经很出色了');\n} else if (score >= 70) {\n    alert('你要继续加油喽');\n} else if (score >= 60) {\n    alert('孩子，你很危险');\n} else {\n    alert('熊孩子，我不想和你说话，我只想用鞭子和你说话');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# （四）三元表达式\n\n语法： 表达式1 ? 表达式2 : 表达式3;\n\n作用： if else 的简写\n\n特性：\n\n 1. 表达式1 为 true ，则返回 表达式2 的值\n 2. 表达式1 为 false，则返回 表达式3 的值\n\n\n# （五）switch\n\n特性： 匹配的选项必须全等\n\ncase： 选项 break： 跳出 switch\n\n例：\n\nvar fruit = prompt('请您输入查询的水果:');\nswitch (fruit) {\n  case '苹果':\n      alert('苹果的价格是 3.5/斤');\n      break;\n  \n  case '榴莲':\n      alert('榴莲的价格是 35/斤');\n      break;\n      \n  default:\n  alert('没有此水果');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# if else if 和 switch 的区别\n\n 1. if else 适合 范围性 的判断\n 2. switch 适合 准确性 的判断\n 3. switch 进行条件判断后直接执行到程序的条件语句，效率更高。而 if…else 语句有几种条件，就得判断多少次",normalizedContent:"# 知识点：流程控制-分支语句\n\n\n# 一、分支语句\n\n作用： 多选一\n\n\n# （一）单分支\n\n语法： if\n\n例：\n\nvar usrage = prompt('请输入您的年龄：');\nif(usrage >= 18){\n    alert('您的年龄合法，欢迎来天际网吧享受学习的乐趣！');\n}\n\n\n1\n2\n3\n4\n\n\n\n# （二）双分支\n\n语法： if else\n\n例：\n\nif (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {\n    alert(\"这个年份是闰年\");\n} else { // 剩下的是平年\n    alert(\"这个年份是平年\");\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （三）（多分支）\n\n语法： if else if\n\n例：\n\nvar score = prompt('请您输入分数:');\nif (score >= 90) {\n    alert('宝贝，你是我的骄傲');\n} else if (score >= 80) {\n    alert('宝贝，你已经很出色了');\n} else if (score >= 70) {\n    alert('你要继续加油喽');\n} else if (score >= 60) {\n    alert('孩子，你很危险');\n} else {\n    alert('熊孩子，我不想和你说话，我只想用鞭子和你说话');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# （四）三元表达式\n\n语法： 表达式1 ? 表达式2 : 表达式3;\n\n作用： if else 的简写\n\n特性：\n\n 1. 表达式1 为 true ，则返回 表达式2 的值\n 2. 表达式1 为 false，则返回 表达式3 的值\n\n\n# （五）switch\n\n特性： 匹配的选项必须全等\n\ncase： 选项 break： 跳出 switch\n\n例：\n\nvar fruit = prompt('请您输入查询的水果:');\nswitch (fruit) {\n  case '苹果':\n      alert('苹果的价格是 3.5/斤');\n      break;\n  \n  case '榴莲':\n      alert('榴莲的价格是 35/斤');\n      break;\n      \n  default:\n  alert('没有此水果');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# if else if 和 switch 的区别\n\n 1. if else 适合 范围性 的判断\n 2. switch 适合 准确性 的判断\n 3. switch 进行条件判断后直接执行到程序的条件语句，效率更高。而 if…else 语句有几种条件，就得判断多少次",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"数组",frontmatter:{title:"数组",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/694e8e/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/06.%E6%95%B0%E7%BB%84.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/06.数组.md",key:"v-24191ab8",path:"/pages/694e8e/",headers:[{level:2,title:"获取数组元素",slug:"获取数组元素",normalizedTitle:"获取数组元素",charIndex:193},{level:2,title:"获取所有的数组元素",slug:"获取所有的数组元素",normalizedTitle:"获取所有的数组元素",charIndex:263},{level:2,title:"获取数组长度",slug:"获取数组长度",normalizedTitle:"获取数组长度",charIndex:438},{level:2,title:"新增数组元素",slug:"新增数组元素",normalizedTitle:"新增数组元素",charIndex:464},{level:2,title:"案例（详解 ppt）",slug:"案例-详解-ppt",normalizedTitle:"案例（详解 ppt）",charIndex:519},{level:2,title:"伪数组",slug:"伪数组",normalizedTitle:"伪数组",charIndex:619}],headersStr:"获取数组元素 获取所有的数组元素 获取数组长度 新增数组元素 案例（详解 ppt） 伪数组",content:"# 知识点：数组\n\n作用： 存储多个数据\n\n数组元素： 数组中的每个数据\n\n创建方式： 1、 利用 new 创建数组\n\nvar arr1 = new Array();\n\n\n1\n\n\n2、利用 数组字面量 创建数组（推荐）\n\nvar arr2 = [];\n\n\n1\n\n\n特性： 可以存放不同类型的数据\n\nvar arrStus = ['小白',12,true,28.9];\n\n\n1\n\n\n\n# 获取数组元素\n\n方法： arr[索引]\n\n特性： 每个元素都有自己的索引号，索引号从 0 开始\n\narrStus[1];\n\n\n1\n\n\n\n# 获取所有的数组元素\n\n传统方法：\n\narrStus[0];\narrStus[1];\narrStus[2];\narrStus[3];\n\n\n1\n2\n3\n4\n\n\n遍历方法：\n\n// 这里的 i 被当作索引号\nfor(var i = 0; i < arrStus.length; i++){\n    arrStus[i];\n}\n\n\n1\n2\n3\n4\n\n\n\n# 获取数组长度\n\n方法： 数组.length\n\n\n# 新增数组元素\n\n方法： 添加新的索引号\n\n例：\n\narrStus[4] = 'pink';\n\n\n1\n\n\n\n# 案例（详解 ppt）\n\n 1. 获取数组中的最大值\n 2. 将数组转换为字符串\n 3. 将数组转换为分割字符串\n 4. 筛选数组\n 5. 删除指定数组元素\n 6. 翻转数组\n 7. 数组排序\n\n\n# 伪数组\n\n特性：\n\n 1. 拥有数组的某些 方法 和 属性，如 length\n 2. 不具有数组的 push , pop 等方法",normalizedContent:"# 知识点：数组\n\n作用： 存储多个数据\n\n数组元素： 数组中的每个数据\n\n创建方式： 1、 利用 new 创建数组\n\nvar arr1 = new array();\n\n\n1\n\n\n2、利用 数组字面量 创建数组（推荐）\n\nvar arr2 = [];\n\n\n1\n\n\n特性： 可以存放不同类型的数据\n\nvar arrstus = ['小白',12,true,28.9];\n\n\n1\n\n\n\n# 获取数组元素\n\n方法： arr[索引]\n\n特性： 每个元素都有自己的索引号，索引号从 0 开始\n\narrstus[1];\n\n\n1\n\n\n\n# 获取所有的数组元素\n\n传统方法：\n\narrstus[0];\narrstus[1];\narrstus[2];\narrstus[3];\n\n\n1\n2\n3\n4\n\n\n遍历方法：\n\n// 这里的 i 被当作索引号\nfor(var i = 0; i < arrstus.length; i++){\n    arrstus[i];\n}\n\n\n1\n2\n3\n4\n\n\n\n# 获取数组长度\n\n方法： 数组.length\n\n\n# 新增数组元素\n\n方法： 添加新的索引号\n\n例：\n\narrstus[4] = 'pink';\n\n\n1\n\n\n\n# 案例（详解 ppt）\n\n 1. 获取数组中的最大值\n 2. 将数组转换为字符串\n 3. 将数组转换为分割字符串\n 4. 筛选数组\n 5. 删除指定数组元素\n 6. 翻转数组\n 7. 数组排序\n\n\n# 伪数组\n\n特性：\n\n 1. 拥有数组的某些 方法 和 属性，如 length\n 2. 不具有数组的 push , pop 等方法",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"函数",frontmatter:{title:"函数",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/0158db/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/07.%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/07.函数.md",key:"v-67f8971c",path:"/pages/0158db/",headers:[{level:2,title:"命名函数",slug:"命名函数",normalizedTitle:"命名函数",charIndex:34},{level:2,title:"匿名函数",slug:"匿名函数",normalizedTitle:"匿名函数",charIndex:157},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:274},{level:2,title:"arguments 内置对象",slug:"arguments-内置对象",normalizedTitle:"arguments 内置对象",charIndex:464},{level:2,title:"返回函数中的数据（返回值）",slug:"返回函数中的数据-返回值",normalizedTitle:"返回函数中的数据（返回值）",charIndex:653},{level:2,title:"各函数中 this 的指向",slug:"各函数中-this-的指向",normalizedTitle:"各函数中 this 的指向",charIndex:907},{level:3,title:"（一）普通函数",slug:"一-普通函数",normalizedTitle:"（一）普通函数",charIndex:925},{level:3,title:"（二）构造函数",slug:"二-构造函数",normalizedTitle:"（二）构造函数",charIndex:1006},{level:3,title:"（三）绑定事件函数",slug:"三-绑定事件函数",normalizedTitle:"（三）绑定事件函数",charIndex:1195},{level:3,title:"（四）定时器函数",slug:"四-定时器函数",normalizedTitle:"（四）定时器函数",charIndex:1329},{level:3,title:"（五）立即执行函数",slug:"五-立即执行函数",normalizedTitle:"（五）立即执行函数",charIndex:1414}],headersStr:"命名函数 匿名函数 参数 arguments 内置对象 返回函数中的数据（返回值） 各函数中 this 的指向 （一）普通函数 （二）构造函数 （三）绑定事件函数 （四）定时器函数 （五）立即执行函数",content:"# 知识点： 函数\n\n作用： 封装可被重复调用执行的代码块\n\n\n# 命名函数\n\n特性： 调用既可以放到声明函数的前面，也可以放到声明函数的后面\n\n声明：\n\nfunction pink1(){\n    console.log('pink1');\n}\n\n\n1\n2\n3\n\n\n调用：\n\npink1();\n\n\n1\n\n\n\n# 匿名函数\n\n特性： 调用只能放到声明函数的后面\n\n声明：\n\nvar pink2 = function () {\n    console.log('pink2');\n}\n\n\n1\n2\n3\n\n\n调用：\n\npink2();\n\n\n1\n\n\n\n# 参数\n\n作用： 把外面的数据传递给函数使用\n\n实参： 调用时括号里的参数。作用：将数据传递给形参 形参： 声明时括号里的参数。作用：接收实参传递过来的数据\n\nfunction demon1(num1, num2) {\n    var sum = num1 + num2\n    console.log(sum);\n}\ndemon1(1, 1);\n\n\n1\n2\n3\n4\n5\n\n\n\n# arguments 内置对象\n\n作用： 存储实参传递过来的所有参数\n\n特性： 伪数组\n\n应用场景： 当不知道实参有多少个的时候使用\n\n例：\n\nfunction demon2() {\n    var sum = arguments[0] + arguments[1];\n    console.log(sum);\n}\ndemon2(2, 2);\n\n\n1\n2\n3\n4\n5\n\n\n\n# 返回函数中的数据（返回值）\n\n方法： return 数据\n\n特性：\n\n 1. return 会结束函数的执行\n 2. 函数没有 return 时，会返回 undefined\n\n例：\n\nfunction demon3() {\n    var age = 18;\n    console.log(age);\n    return age;\n    console.log('return 后面的代码不会执行。我是不会被执行的');\n}\nvar zs = demon3;\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 各函数中 this 的指向\n\n\n# （一）普通函数\n\nfunction fn() {\n   console.log(this);  // window\n}\nfn();\n\n\n1\n2\n3\n4\n\n\n\n# （二）构造函数\n\nfunction Star() {\n   console.log(this); // 实例对象\n   this.fangFa = function () {\n       console.log(this); // 实例对象\n   } \n}\nvar ldh = new Star();\nldh.fangFa();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# （三）绑定事件函数\n\nvar btn = document.querySelector('button')\nbtn.onclick = function () {\n   console.log(this);  // 绑定该事件的元素\n}\n\n\n1\n2\n3\n4\n\n\n\n# （四）定时器函数\n\nsetTimeout(function () {\n   console.log(this);  // window\n});\n\n\n1\n2\n3\n\n\n\n# （五）立即执行函数\n\n特性： 立即执行函数前面要有分号，不然会报错\n\n(function(){\n   console.log(this);  // window\n}())\n\n\n1\n2\n3\n",normalizedContent:"# 知识点： 函数\n\n作用： 封装可被重复调用执行的代码块\n\n\n# 命名函数\n\n特性： 调用既可以放到声明函数的前面，也可以放到声明函数的后面\n\n声明：\n\nfunction pink1(){\n    console.log('pink1');\n}\n\n\n1\n2\n3\n\n\n调用：\n\npink1();\n\n\n1\n\n\n\n# 匿名函数\n\n特性： 调用只能放到声明函数的后面\n\n声明：\n\nvar pink2 = function () {\n    console.log('pink2');\n}\n\n\n1\n2\n3\n\n\n调用：\n\npink2();\n\n\n1\n\n\n\n# 参数\n\n作用： 把外面的数据传递给函数使用\n\n实参： 调用时括号里的参数。作用：将数据传递给形参 形参： 声明时括号里的参数。作用：接收实参传递过来的数据\n\nfunction demon1(num1, num2) {\n    var sum = num1 + num2\n    console.log(sum);\n}\ndemon1(1, 1);\n\n\n1\n2\n3\n4\n5\n\n\n\n# arguments 内置对象\n\n作用： 存储实参传递过来的所有参数\n\n特性： 伪数组\n\n应用场景： 当不知道实参有多少个的时候使用\n\n例：\n\nfunction demon2() {\n    var sum = arguments[0] + arguments[1];\n    console.log(sum);\n}\ndemon2(2, 2);\n\n\n1\n2\n3\n4\n5\n\n\n\n# 返回函数中的数据（返回值）\n\n方法： return 数据\n\n特性：\n\n 1. return 会结束函数的执行\n 2. 函数没有 return 时，会返回 undefined\n\n例：\n\nfunction demon3() {\n    var age = 18;\n    console.log(age);\n    return age;\n    console.log('return 后面的代码不会执行。我是不会被执行的');\n}\nvar zs = demon3;\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 各函数中 this 的指向\n\n\n# （一）普通函数\n\nfunction fn() {\n   console.log(this);  // window\n}\nfn();\n\n\n1\n2\n3\n4\n\n\n\n# （二）构造函数\n\nfunction star() {\n   console.log(this); // 实例对象\n   this.fangfa = function () {\n       console.log(this); // 实例对象\n   } \n}\nvar ldh = new star();\nldh.fangfa();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# （三）绑定事件函数\n\nvar btn = document.queryselector('button')\nbtn.onclick = function () {\n   console.log(this);  // 绑定该事件的元素\n}\n\n\n1\n2\n3\n4\n\n\n\n# （四）定时器函数\n\nsettimeout(function () {\n   console.log(this);  // window\n});\n\n\n1\n2\n3\n\n\n\n# （五）立即执行函数\n\n特性： 立即执行函数前面要有分号，不然会报错\n\n(function(){\n   console.log(this);  // window\n}())\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"作用域",frontmatter:{title:"作用域",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/c5cfa4/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/08.%E4%BD%9C%E7%94%A8%E5%9F%9F.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/08.作用域.md",key:"v-9c809024",path:"/pages/c5cfa4/",headers:[{level:2,title:"一、全局作用域",slug:"一、全局作用域",normalizedTitle:"一、全局作用域",charIndex:30},{level:2,title:"二、函数作用域（函数作用域）",slug:"二、函数作用域-函数作用域",normalizedTitle:"二、函数作用域（函数作用域）",charIndex:139},{level:3,title:"三、块级作用域",slug:"三、块级作用域",normalizedTitle:"三、块级作用域",charIndex:223},{level:2,title:"作用域链",slug:"作用域链",normalizedTitle:"作用域链",charIndex:266}],headersStr:"一、全局作用域 二、函数作用域（函数作用域） 三、块级作用域 作用域链",content:"# 知识点：作用域\n\n作用： 某个标识符的可用范围\n\n\n# 一、全局作用域\n\n使用方法： 在 最外层函数 中声明的标识符，在任何作用域中都可以使用 特性： 1、占内存。只有在浏览器关闭时才会销毁，因此比较占内存 2、自动声明。未定义直接赋值的变量会自动声明为全局作用域\n\n\n# 二、函数作用域（函数作用域）\n\n使用方法： 在 函数 中声明的标识符，只能在当前作用域中使用\n\n特性： 1、节省内存。代码运行结束时，就会销毁，因此很节省内存\n\n\n# 三、块级作用域\n\n概念： 在 花括号 中声明的标识符，只能在当前作用域中使用\n\n\n# 作用域链\n\n概念： 当作用域中嵌套作用域就会产生作用域链\n\n作用： 防止标识符命名冲突。内层的作用域可以访问外层的作用域，外层的作用域不可以访问内层的作用域",normalizedContent:"# 知识点：作用域\n\n作用： 某个标识符的可用范围\n\n\n# 一、全局作用域\n\n使用方法： 在 最外层函数 中声明的标识符，在任何作用域中都可以使用 特性： 1、占内存。只有在浏览器关闭时才会销毁，因此比较占内存 2、自动声明。未定义直接赋值的变量会自动声明为全局作用域\n\n\n# 二、函数作用域（函数作用域）\n\n使用方法： 在 函数 中声明的标识符，只能在当前作用域中使用\n\n特性： 1、节省内存。代码运行结束时，就会销毁，因此很节省内存\n\n\n# 三、块级作用域\n\n概念： 在 花括号 中声明的标识符，只能在当前作用域中使用\n\n\n# 作用域链\n\n概念： 当作用域中嵌套作用域就会产生作用域链\n\n作用： 防止标识符命名冲突。内层的作用域可以访问外层的作用域，外层的作用域不可以访问内层的作用域",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"对象",frontmatter:{title:"对象",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/343cbb/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/10.%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/10.对象.md",key:"v-032bad36",path:"/pages/343cbb/",headers:[{level:2,title:"创建",slug:"创建",normalizedTitle:"创建",charIndex:39},{level:3,title:"（1）字面量",slug:"_1-字面量",normalizedTitle:"（1）字面量",charIndex:46},{level:3,title:"（2）new",slug:"_2-new",normalizedTitle:"（2）new",charIndex:80},{level:3,title:"（3）构造函数",slug:"_3-构造函数",normalizedTitle:"（3）构造函数",charIndex:242},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:796},{level:2,title:"调用对象属性",slug:"调用对象属性",normalizedTitle:"调用对象属性",charIndex:933},{level:3,title:"（1）对象.属性名",slug:"_1-对象-属性名",normalizedTitle:"（1）对象.属性名",charIndex:944},{level:3,title:"（2）对象['属性名']",slug:"_2-对象-属性名",normalizedTitle:"（2）对象['属性名']",charIndex:976},{level:2,title:"调用对象方法",slug:"调用对象方法",normalizedTitle:"调用对象方法",charIndex:1014},{level:2,title:"遍历对象属性",slug:"遍历对象属性",normalizedTitle:"遍历对象属性",charIndex:1077}],headersStr:"创建 （1）字面量 （2）new （3）构造函数 初始化 调用对象属性 （1）对象.属性名 （2）对象['属性名'] 调用对象方法 遍历对象属性",content:"# 对象\n\n作用： 存储某一个相关信息 概念： 对象由属性和方法组成\n\n\n# 创建\n\n\n# （1）字面量\n\nvar demon1 = {};\n\n\n1\n\n\n\n# （2）new\n\nvar demon2 = new Object;\n\n\n1\n\n\n概念： new 在执行时会做四件事情\n\n 1. 在内存中创建一个新的空对象\n 2. 让 this 指向这个新的对象\n 3. 执行构造函数里面的代码，给这个新对象添加属性和方法\n 4. 返回这个新对象（所以构造函数里面不需要return）\n\n\n# （3）构造函数\n\n作用： 将属性和方法赋值给一个新的对象（实例化对象）\n\n特性：\n\n 1. 为属性和方法前面添加 this\n 2. 赋值给一个新的对象时，必须搭配 new 使用\n\n概念：\n\n 1. 将属性和方法赋值给一个新的对象的过程叫做 实例化\n 2. 被构造函数赋值的新对象，叫实例\n\n静态成员： 构造函数 中的属性和方法 实例成员： 实例 中的属性和方法\n\n例：\n\nfunction Person(name, age, sex) {\n  this.name = name;\n  this.age = age;\n  this.sex = sex;\n  this.sayHi = function() {\n    alert('我的名字叫：' + this.name + '，年龄：' + this.age + '，性别：' + this.sex);\n  }\n}\nvar bigbai = new Person('大白', 100, '男');\nvar smallbai = new Person('小白', 21, '男');\nconsole.log(bigbai.name);\nconsole.log(smallbai.name);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 初始化\n\nvar demon4 = {\n  name : 'pink',\n  age : 18,\n  sex : '男',\n  sayHi : function(){\n    console.log('大家好');\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 调用对象属性\n\n\n# （1）对象.属性名\n\ndemon4.age;\n\n\n1\n\n\n\n# （2）对象['属性名']\n\ndemon4['age'];\n\n\n1\n\n\n\n# 调用对象方法\n\n概念： 对象中的函数被称为方法\n\n语法： 对象.方法名()\n\ndemon4.sayHi()\n\n\n1\n\n\n\n# 遍历对象属性\n\n方法： for (变量 in 对象名字) { 代码体 }\n\nfor (var k in demon4) {\n    console.log(k);\n    console.log(demon4[k]);\n}\n\n\n1\n2\n3\n4\n\n\n特性：\n\n 1. k：属性名\n 2. obj[k]：属性值",normalizedContent:"# 对象\n\n作用： 存储某一个相关信息 概念： 对象由属性和方法组成\n\n\n# 创建\n\n\n# （1）字面量\n\nvar demon1 = {};\n\n\n1\n\n\n\n# （2）new\n\nvar demon2 = new object;\n\n\n1\n\n\n概念： new 在执行时会做四件事情\n\n 1. 在内存中创建一个新的空对象\n 2. 让 this 指向这个新的对象\n 3. 执行构造函数里面的代码，给这个新对象添加属性和方法\n 4. 返回这个新对象（所以构造函数里面不需要return）\n\n\n# （3）构造函数\n\n作用： 将属性和方法赋值给一个新的对象（实例化对象）\n\n特性：\n\n 1. 为属性和方法前面添加 this\n 2. 赋值给一个新的对象时，必须搭配 new 使用\n\n概念：\n\n 1. 将属性和方法赋值给一个新的对象的过程叫做 实例化\n 2. 被构造函数赋值的新对象，叫实例\n\n静态成员： 构造函数 中的属性和方法 实例成员： 实例 中的属性和方法\n\n例：\n\nfunction person(name, age, sex) {\n  this.name = name;\n  this.age = age;\n  this.sex = sex;\n  this.sayhi = function() {\n    alert('我的名字叫：' + this.name + '，年龄：' + this.age + '，性别：' + this.sex);\n  }\n}\nvar bigbai = new person('大白', 100, '男');\nvar smallbai = new person('小白', 21, '男');\nconsole.log(bigbai.name);\nconsole.log(smallbai.name);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 初始化\n\nvar demon4 = {\n  name : 'pink',\n  age : 18,\n  sex : '男',\n  sayhi : function(){\n    console.log('大家好');\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 调用对象属性\n\n\n# （1）对象.属性名\n\ndemon4.age;\n\n\n1\n\n\n\n# （2）对象['属性名']\n\ndemon4['age'];\n\n\n1\n\n\n\n# 调用对象方法\n\n概念： 对象中的函数被称为方法\n\n语法： 对象.方法名()\n\ndemon4.sayhi()\n\n\n1\n\n\n\n# 遍历对象属性\n\n方法： for (变量 in 对象名字) { 代码体 }\n\nfor (var k in demon4) {\n    console.log(k);\n    console.log(demon4[k]);\n}\n\n\n1\n2\n3\n4\n\n\n特性：\n\n 1. k：属性名\n 2. obj[k]：属性值",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"预解析",frontmatter:{title:"预解析",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/d7e404/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/09.%E9%A2%84%E8%A7%A3%E6%9E%90.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/09.预解析.md",key:"v-117acedb",path:"/pages/d7e404/",headers:[{level:2,title:"一、变量预解析（变量提升）",slug:"一、变量预解析-变量提升",normalizedTitle:"一、变量预解析（变量提升）",charIndex:74},{level:2,title:"二、函数预解析（函数提升）",slug:"二、函数预解析-函数提升",normalizedTitle:"二、函数预解析（函数提升）",charIndex:157},{level:2,title:"案例一",slug:"案例一",normalizedTitle:"案例一",charIndex:264},{level:2,title:"案例二",slug:"案例二",normalizedTitle:"案例二",charIndex:368},{level:2,title:"案例三",slug:"案例三",normalizedTitle:"案例三",charIndex:494},{level:2,title:"案例四",slug:"案例四",normalizedTitle:"案例四",charIndex:632}],headersStr:"一、变量预解析（变量提升） 二、函数预解析（函数提升） 案例一 案例二 案例三 案例四",content:"# 知识点：预解析\n\n概念： JS 解析器在执行代码前会进行预解析，把代码中的 var 和 function 声明放到内存中，进行提前声明\n\n\n# 一、变量预解析（变量提升）\n\n特性： 将 变量 声明提升到当前作用域的最上面\n\nconsole.log(num);\nvar num = 10;\n\n\n1\n2\n\n\n\n# 二、函数预解析（函数提升）\n\n特性： 将 函数 声明提升到当前作用域的最上面\n\nfn();\nvar fn = function() {\n console.log('想不到吧');\n}\n\n\n1\n2\n3\n4\n\n\n\n# 案例一\n\nvar num = 10;\nfun();\nfunction fun() {\n    console.log(num);\n    var num = 20;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 案例二\n\nvar num = 10;\nfunction fn(){\n    console.log(num);\n    var num = 20;\n    console.log(num);\n} \nfn();\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 案例三\n\nvar a = 18;\nf1();\nfunction f1() {\n    var b = 9;\n    console.log(a);\n    console.log(b);\n    var a = '123';\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 案例四\n\nf1();\nconsole.log(c);\nconsole.log(b);\nconsole.log(a);\nfunction f1() {\n    var a = b = c = 9;\n    console.log(a);\n    console.log(b);\n    console.log(c);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n",normalizedContent:"# 知识点：预解析\n\n概念： js 解析器在执行代码前会进行预解析，把代码中的 var 和 function 声明放到内存中，进行提前声明\n\n\n# 一、变量预解析（变量提升）\n\n特性： 将 变量 声明提升到当前作用域的最上面\n\nconsole.log(num);\nvar num = 10;\n\n\n1\n2\n\n\n\n# 二、函数预解析（函数提升）\n\n特性： 将 函数 声明提升到当前作用域的最上面\n\nfn();\nvar fn = function() {\n console.log('想不到吧');\n}\n\n\n1\n2\n3\n4\n\n\n\n# 案例一\n\nvar num = 10;\nfun();\nfunction fun() {\n    console.log(num);\n    var num = 20;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 案例二\n\nvar num = 10;\nfunction fn(){\n    console.log(num);\n    var num = 20;\n    console.log(num);\n} \nfn();\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 案例三\n\nvar a = 18;\nf1();\nfunction f1() {\n    var b = 9;\n    console.log(a);\n    console.log(b);\n    var a = '123';\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 案例四\n\nf1();\nconsole.log(c);\nconsole.log(b);\nconsole.log(a);\nfunction f1() {\n    var a = b = c = 9;\n    console.log(a);\n    console.log(b);\n    console.log(c);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"内置对象",frontmatter:{title:"内置对象",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/50ebc9/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/11.%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/11.内置对象.md",key:"v-1ede3c6e",path:"/pages/50ebc9/",headersStr:null,content:"# 知识点：内置对象\n\n概念： js 自带的对象，主要提供一些属性和方法供开发者使用\n\n作用： 提高开发效率\n\n如何快速了解内置对象：\n\n 1. 作用\n 2. 参数\n 3. 返回值\n 4. 通过 demo 进行测试",normalizedContent:"# 知识点：内置对象\n\n概念： js 自带的对象，主要提供一些属性和方法供开发者使用\n\n作用： 提高开发效率\n\n如何快速了解内置对象：\n\n 1. 作用\n 2. 参数\n 3. 返回值\n 4. 通过 demo 进行测试",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"基本包装类型",frontmatter:{title:"基本包装类型",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/ae5250/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/16.%E5%9F%BA%E6%9C%AC%E5%8C%85%E8%A3%85%E7%B1%BB%E5%9E%8B.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/16.基本包装类型.md",key:"v-573fc67a",path:"/pages/ae5250/",headersStr:null,content:"# 知识点：基本包装类型\n\n作用： 让简单数据类型可以使用复杂数据类型的属性和方法\n\nvar str = 'andy';\nconsole.log(str.length);\n\n\n1\n2\n",normalizedContent:"# 知识点：基本包装类型\n\n作用： 让简单数据类型可以使用复杂数据类型的属性和方法\n\nvar str = 'andy';\nconsole.log(str.length);\n\n\n1\n2\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"值类型.引用类型.堆.栈",frontmatter:{title:"值类型.引用类型.堆.栈",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/1866b2/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/17.%E5%80%BC%E7%B1%BB%E5%9E%8B-%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B-%E5%A0%86-%E6%A0%88.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/17.值类型-引用类型-堆-栈.md",key:"v-3d3320b8",path:"/pages/1866b2/",headers:[{level:2,title:"一、值类型",slug:"一、值类型",normalizedTitle:"一、值类型",charIndex:23},{level:2,title:"二、引用类型",slug:"二、引用类型",normalizedTitle:"二、引用类型",charIndex:109},{level:2,title:"三、堆",slug:"三、堆",normalizedTitle:"三、堆",charIndex:216},{level:2,title:"四、栈",slug:"四、栈",normalizedTitle:"四、栈",charIndex:255}],headersStr:"一、值类型 二、引用类型 三、堆 四、栈",content:"# 知识点：值类型、引用类型、堆、栈\n\n\n# 一、值类型\n\n特性：\n\n 1. 简单数据类型 存储的是 值本身，因此也叫做 值类型\n 2. 把简单数据类型赋值给一个变量时，修改这个新的变量 不会影响 原数据类型\n\n\n# 二、引用类型\n\n特性：\n\n 1. 复杂数据类型 存储的是 地址，因此也叫做 引用类型\n 2. 把复杂数据类型赋值给一个变量时，修改这个新的变量 会影响 原数据类型\n\n概念： 内存中有 堆 和 栈 两大空间\n\n\n# 三、堆\n\n特性： 用于存放 简单数据类型，由操作系统自动分配释放空间\n\n\n# 四、栈\n\n特性： 用于存放 复杂数据类型，地址放在堆中，数据放在栈中，由程序员分配释放空间，如果程序员不释放，则由垃圾回收机制回收",normalizedContent:"# 知识点：值类型、引用类型、堆、栈\n\n\n# 一、值类型\n\n特性：\n\n 1. 简单数据类型 存储的是 值本身，因此也叫做 值类型\n 2. 把简单数据类型赋值给一个变量时，修改这个新的变量 不会影响 原数据类型\n\n\n# 二、引用类型\n\n特性：\n\n 1. 复杂数据类型 存储的是 地址，因此也叫做 引用类型\n 2. 把复杂数据类型赋值给一个变量时，修改这个新的变量 会影响 原数据类型\n\n概念： 内存中有 堆 和 栈 两大空间\n\n\n# 三、堆\n\n特性： 用于存放 简单数据类型，由操作系统自动分配释放空间\n\n\n# 四、栈\n\n特性： 用于存放 复杂数据类型，地址放在堆中，数据放在栈中，由程序员分配释放空间，如果程序员不释放，则由垃圾回收机制回收",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"扩展",frontmatter:{title:"扩展",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/56958f/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/19.%E6%89%A9%E5%B1%95.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/19.扩展.md",key:"v-22561b66",path:"/pages/56958f/",headers:[{level:2,title:"一、标识符",slug:"一、标识符",normalizedTitle:"一、标识符",charIndex:13},{level:2,title:"二、数组元素",slug:"二、数组元素",normalizedTitle:"二、数组元素",charIndex:49},{level:2,title:"三、方法",slug:"三、方法",normalizedTitle:"三、方法",charIndex:74}],headersStr:"一、标识符 二、数组元素 三、方法",content:"# 知识点：扩展\n\n\n# 一、标识符\n\n概念： 开发人员为变量、属性、函数、参数取的名字\n\n\n# 二、数组元素\n\n概念： 数组中的每个数据\n\n\n# 三、方法\n\n概念： 对象中的函数被称为方法",normalizedContent:"# 知识点：扩展\n\n\n# 一、标识符\n\n概念： 开发人员为变量、属性、函数、参数取的名字\n\n\n# 二、数组元素\n\n概念： 数组中的每个数据\n\n\n# 三、方法\n\n概念： 对象中的函数被称为方法",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"对象合并",frontmatter:{title:"对象合并",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/d3e812/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/02.ES1~ES4/18.%E5%AF%B9%E8%B1%A1%E5%90%88%E5%B9%B6.html",relativePath:"《前端》笔记《基础知识》/03.JS/02.ES1~ES4/18.对象合并.md",key:"v-55199d82",path:"/pages/d3e812/",headersStr:null,content:"# 知识点：对象合并\n\n作用： 将其它对象，合并到目标对象中\n\n特性： 只能拷贝简单数据类型，赋值数据类型拷贝的是地址\n\nvar obj = {\n    id: 1,\n    name: 'andy',\n    msg: {\n        age: 18\n    }\n};\nvar o = {};\n\nfor (var k in obj) {\n    o[k] = obj[k];\n}\nconsole.log(o);\no.msg.age = 20;\nconsole.log(obj);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",normalizedContent:"# 知识点：对象合并\n\n作用： 将其它对象，合并到目标对象中\n\n特性： 只能拷贝简单数据类型，赋值数据类型拷贝的是地址\n\nvar obj = {\n    id: 1,\n    name: 'andy',\n    msg: {\n        age: 18\n    }\n};\nvar o = {};\n\nfor (var k in obj) {\n    o[k] = obj[k];\n}\nconsole.log(o);\no.msg.age = 20;\nconsole.log(obj);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"编程思想",frontmatter:{title:"编程思想",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/8ac83f/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/01.%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/01.编程思想.md",key:"v-8f9513da",path:"/pages/8ac83f/",headers:[{level:2,title:"（1）面向过程 思想（pop）",slug:"_1-面向过程-思想-pop",normalizedTitle:"（1）面向过程 思想（pop）",charIndex:15},{level:2,title:"（2）面向对象 思想（opp）",slug:"_2-面向对象-思想-opp",normalizedTitle:"（2）面向对象 思想（opp）",charIndex:114}],headersStr:"（1）面向过程 思想（pop） （2）面向对象 思想（opp）",content:"# 知识点：编程思想\n\n\n# （1）面向过程 思想（pop）\n\n概念： 分析出解决问题所需的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个的依次调用\n\n特性： 性能比面向对象高，适合跟硬件联系很紧密的东西\n\n\n# （2）面向对象 思想（opp）\n\n概念： 把事务分解成为一个个对象，然后由对象之间分工与合作\n\n优点： 易维护、易复用、易扩展\n\n三大特性： 封装性、继承性、多态性\n\n对象（特指）\n\n类（范指）\n\n思维特点：\n\n 1. 将抽象的属性和方法封装成一个类\n 2. 对类进行实例化，获取对象",normalizedContent:"# 知识点：编程思想\n\n\n# （1）面向过程 思想（pop）\n\n概念： 分析出解决问题所需的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个的依次调用\n\n特性： 性能比面向对象高，适合跟硬件联系很紧密的东西\n\n\n# （2）面向对象 思想（opp）\n\n概念： 把事务分解成为一个个对象，然后由对象之间分工与合作\n\n优点： 易维护、易复用、易扩展\n\n三大特性： 封装性、继承性、多态性\n\n对象（特指）\n\n类（范指）\n\n思维特点：\n\n 1. 将抽象的属性和方法封装成一个类\n 2. 对类进行实例化，获取对象",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"类操作",frontmatter:{title:"类操作",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/cf3234/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/02.%E7%B1%BB%E6%93%8D%E4%BD%9C.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/02.类操作.md",key:"v-61bdd60c",path:"/pages/cf3234/",headers:[{level:2,title:"一、创建 类",slug:"一、创建-类",normalizedTitle:"一、创建 类",charIndex:136},{level:2,title:"二、创建 属性",slug:"二、创建-属性",normalizedTitle:"二、创建 属性",charIndex:184},{level:2,title:"三、创建 方法",slug:"三、创建-方法",normalizedTitle:"三、创建 方法",charIndex:340},{level:2,title:"四、实例化对象",slug:"四、实例化对象",normalizedTitle:"四、实例化对象",charIndex:554}],headersStr:"一、创建 类 二、创建 属性 三、创建 方法 四、实例化对象",content:"# 知识点：类操作\n\n类的本质：\n\n 1. 类的所有方法都定义在类的prototype属性上\n 2. 类创建的实例,里面也有__proto__ 指向类的prototype原型对象\n 3. 类其实是 组合继承 的简洁写法\n\n作用： 抽象对象的公共部分，泛指某一大类\n\n\n# 一、创建 类\n\n方法： class 类名 {}\n\nclass Star {}\n\n\n1\n\n\n\n# 二、创建 属性\n\n特性： 类名开头字母大写\n\nconstructor： 构造函数\n\nclass Star {\n  constructor(uname, age) {\n      this.uname = uname;\n      this.age = age;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 三、创建 方法\n\n方法： 写在 constructor 的下面\n\n特性： 类中的所有函数不需要加 function\n\nclass Star {\n  constructor(uname, age) {\n    this.uname = uname;\n    this.age = age;\n  }\n  sing() {\n    console.log('我唱歌');\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 四、实例化对象\n\n方法： var xx = new 类名();\n\nvar ldh = new Star('刘德华', 18);\nvar zxy = new Star('张学友', 20);\n\nconsole.log(ldh);\nconsole.log(ldh.sing());\n\nconsole.log(zxy);\nconsole.log(zxy.sing());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 类的本质：\n            // 1、类的所有方法都定义在类的prototype属性上\n            // 2、类创建的实例,里面也有__proto__ 指向类的prototype原型对象\n            // 3、类其实是 组合继承 的简洁写法\n\n        // 作用：抽象对象的公共部分，泛指某一大类\n        // （1）创建 类\n        // 方法：class 类名 {}\n            // class Star {}\n\n        // （2）创建 属性\n        // 特性：\n            // 1、类名开头字母大写\n        // constructor：构造函数\n            // class Star {\n            //     constructor(uname, age) {\n            //         this.uname = uname;\n            //         this.age = age;\n            //     }\n            // }\n\n        // （3）创建 方法\n        // 方法：写在 constructor 的下面\n        // 特性：类中的所有函数不需要加 function\n            class Star {\n                constructor(uname, age) {\n                    this.uname = uname;\n                    this.age = age;\n                }\n                sing() {\n                    console.log('我唱歌');\n                }\n            }\n\n        // （4）实例化对象\n        // 方法：var xx = new 类名();\n            var ldh = new Star('刘德华', 18);\n            var zxy = new Star('张学友', 20);\n\n            console.log(ldh);\n            console.log(ldh.sing());\n\n            console.log(zxy);\n            console.log(zxy.sing());\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n",normalizedContent:"# 知识点：类操作\n\n类的本质：\n\n 1. 类的所有方法都定义在类的prototype属性上\n 2. 类创建的实例,里面也有__proto__ 指向类的prototype原型对象\n 3. 类其实是 组合继承 的简洁写法\n\n作用： 抽象对象的公共部分，泛指某一大类\n\n\n# 一、创建 类\n\n方法： class 类名 {}\n\nclass star {}\n\n\n1\n\n\n\n# 二、创建 属性\n\n特性： 类名开头字母大写\n\nconstructor： 构造函数\n\nclass star {\n  constructor(uname, age) {\n      this.uname = uname;\n      this.age = age;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 三、创建 方法\n\n方法： 写在 constructor 的下面\n\n特性： 类中的所有函数不需要加 function\n\nclass star {\n  constructor(uname, age) {\n    this.uname = uname;\n    this.age = age;\n  }\n  sing() {\n    console.log('我唱歌');\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 四、实例化对象\n\n方法： var xx = new 类名();\n\nvar ldh = new star('刘德华', 18);\nvar zxy = new star('张学友', 20);\n\nconsole.log(ldh);\nconsole.log(ldh.sing());\n\nconsole.log(zxy);\nconsole.log(zxy.sing());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 类的本质：\n            // 1、类的所有方法都定义在类的prototype属性上\n            // 2、类创建的实例,里面也有__proto__ 指向类的prototype原型对象\n            // 3、类其实是 组合继承 的简洁写法\n\n        // 作用：抽象对象的公共部分，泛指某一大类\n        // （1）创建 类\n        // 方法：class 类名 {}\n            // class star {}\n\n        // （2）创建 属性\n        // 特性：\n            // 1、类名开头字母大写\n        // constructor：构造函数\n            // class star {\n            //     constructor(uname, age) {\n            //         this.uname = uname;\n            //         this.age = age;\n            //     }\n            // }\n\n        // （3）创建 方法\n        // 方法：写在 constructor 的下面\n        // 特性：类中的所有函数不需要加 function\n            class star {\n                constructor(uname, age) {\n                    this.uname = uname;\n                    this.age = age;\n                }\n                sing() {\n                    console.log('我唱歌');\n                }\n            }\n\n        // （4）实例化对象\n        // 方法：var xx = new 类名();\n            var ldh = new star('刘德华', 18);\n            var zxy = new star('张学友', 20);\n\n            console.log(ldh);\n            console.log(ldh.sing());\n\n            console.log(zxy);\n            console.log(zxy.sing());\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"类继承",frontmatter:{title:"类继承",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/6d01f9/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/03.%E7%B1%BB%E7%BB%A7%E6%89%BF.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/03.类继承.md",key:"v-793c8bd7",path:"/pages/6d01f9/",headers:[{level:2,title:"一、继承属性",slug:"一、继承属性",normalizedTitle:"一、继承属性",charIndex:298},{level:2,title:"二、继承方法",slug:"二、继承方法",normalizedTitle:"二、继承方法",charIndex:414}],headersStr:"一、继承属性 二、继承方法",content:"# 知识点：类继承\n\n作用： 子类继承父类的属性和方法\n\n语法： class 子类名 extends 父类名 {}\n\nsuper 关键字： 父类\n\nclass Father {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    sum() {\n        console.log(this.x + this.y);\n    }\n    say() {\n        console.log('继承方法');\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 一、继承属性\n\n方法： super\n\nclass Son extends Father {\n    constructor(x, y) {\n        super(x, y);\n    }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 二、继承方法\n\n方法： class 子类 extends 父类 {}\n\n特性： 子类有和父类都有该方法时，只使用子类的\n\nclass Son extends Father {\n    say() {\n        console.log('子类有和父类都有该方法时，只使用子类的');\n        super.say();  // 使用父类方法\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\nvar son = new Son(1, 2);\nvar son1 = new Son(11, 22);\nson.x;  // 1\nson.say();  // 继承方法\n\n\n1\n2\n3\n4\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 作用：子类继承父类的属性和方法\n        // 语法：class 子类名 extends 父类名 {}\n        // super 关键字：父类\n\n            class Father {\n                constructor(x, y) {\n                    this.x = x;\n                    this.y = y;\n                }\n                sum() {\n                    console.log(this.x + this.y);\n                }\n                say() {\n                    console.log('继承方法');\n                }\n            }\n\n            // （1）继承属性\n            // 方法：super\n                // class Son extends Father {\n                //     constructor(x, y) {\n                //         super(x, y);\n                //     }\n                // }\n\n            // （2）继承方法\n            // 方法：class 子类 extends 父类 {}\n            // 特性：子类有和父类都有该方法时，只使用子类的\n                // class Son extends Father {}\n\n                class Son extends Father {\n                    say() {\n                        console.log('子类有和父类都有该方法时，只使用子类的');\n                        super.say();  // 使用父类方法\n                    }\n                }\n\n            var son = new Son(1, 2);\n            var son1 = new Son(11, 22);\n            son.x;  // 1\n            son.say();  // 继承方法\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n",normalizedContent:"# 知识点：类继承\n\n作用： 子类继承父类的属性和方法\n\n语法： class 子类名 extends 父类名 {}\n\nsuper 关键字： 父类\n\nclass father {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    sum() {\n        console.log(this.x + this.y);\n    }\n    say() {\n        console.log('继承方法');\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 一、继承属性\n\n方法： super\n\nclass son extends father {\n    constructor(x, y) {\n        super(x, y);\n    }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 二、继承方法\n\n方法： class 子类 extends 父类 {}\n\n特性： 子类有和父类都有该方法时，只使用子类的\n\nclass son extends father {\n    say() {\n        console.log('子类有和父类都有该方法时，只使用子类的');\n        super.say();  // 使用父类方法\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\nvar son = new son(1, 2);\nvar son1 = new son(11, 22);\nson.x;  // 1\nson.say();  // 继承方法\n\n\n1\n2\n3\n4\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 作用：子类继承父类的属性和方法\n        // 语法：class 子类名 extends 父类名 {}\n        // super 关键字：父类\n\n            class father {\n                constructor(x, y) {\n                    this.x = x;\n                    this.y = y;\n                }\n                sum() {\n                    console.log(this.x + this.y);\n                }\n                say() {\n                    console.log('继承方法');\n                }\n            }\n\n            // （1）继承属性\n            // 方法：super\n                // class son extends father {\n                //     constructor(x, y) {\n                //         super(x, y);\n                //     }\n                // }\n\n            // （2）继承方法\n            // 方法：class 子类 extends 父类 {}\n            // 特性：子类有和父类都有该方法时，只使用子类的\n                // class son extends father {}\n\n                class son extends father {\n                    say() {\n                        console.log('子类有和父类都有该方法时，只使用子类的');\n                        super.say();  // 使用父类方法\n                    }\n                }\n\n            var son = new son(1, 2);\n            var son1 = new son(11, 22);\n            son.x;  // 1\n            son.say();  // 继承方法\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"this 指向问题",frontmatter:{title:"this 指向问题",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/69c9b4/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/04.this%20%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/04.this 指向问题.md",key:"v-ea406466",path:"/pages/69c9b4/",headersStr:null,content:"# 知识点：this 指向问题\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <button>点击</button>\n    <script>\n        // （1）让方法里的 this 指向 构造函数里的 this\n        // 方法：\n        var that;  // 1、在全局声明 that\n\n        class Star {\n            constructor(uname, age) {\n                that = this;  // 2、在构造函数中把 this 存储到 that 中\n                \n                this.uname = uname;\n                this.age = age;\n\n                // （2）方法被事件调用时，方法里的 this 指向绑定事件的元素\n                this.btn = document.querySelector('button');\n                this.btn.onclick = this.sing;   // <button>点击</button>\n            }\n            sing() {\n                console.log(this);\n\n                console.log(that.uname);  // 3、使用 that 来访问 构造函数中的属性\n            }\n        }\n        var ldh = new Star('刘德华');\n        ldh.sing();\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n",normalizedContent:"# 知识点：this 指向问题\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <button>点击</button>\n    <script>\n        // （1）让方法里的 this 指向 构造函数里的 this\n        // 方法：\n        var that;  // 1、在全局声明 that\n\n        class star {\n            constructor(uname, age) {\n                that = this;  // 2、在构造函数中把 this 存储到 that 中\n                \n                this.uname = uname;\n                this.age = age;\n\n                // （2）方法被事件调用时，方法里的 this 指向绑定事件的元素\n                this.btn = document.queryselector('button');\n                this.btn.onclick = this.sing;   // <button>点击</button>\n            }\n            sing() {\n                console.log(this);\n\n                console.log(that.uname);  // 3、使用 that 来访问 构造函数中的属性\n            }\n        }\n        var ldh = new star('刘德华');\n        ldh.sing();\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"动态创建元素",frontmatter:{title:"动态创建元素",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/b5e584/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/05.%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%85%83%E7%B4%A0.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/05.动态创建元素.md",key:"v-81ebc028",path:"/pages/b5e584/",headersStr:null,content:"# 知识点：动态创建元素\n\n方法： 元素.insertAdjacentHTML('位置', 元素);\n\n创建的位置：\n\n 1. 'beforebegin'（当前元素的前面）\n 2. 'afterend'（当前元素的后面）\n 3. 'afterbegin'（当前元素内的最前面）\n 4. 'beforeend'（当前元素内的最后面）\n\n特性：\n\n 1. 解决 appendChild 不能添加元素的问题\n 2. 替代了 innerHTML\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <p>---</p>\n    <p>---</p>\n    <ul>\n        <li>1</li>\n        <li>2</li>\n        <li>3</li>\n        <li>4</li>\n        <li>5</li>\n        <li>6</li>\n    </ul>\n    <p>---</p>\n    <p>---</p>\n    <script>\n        // 方法：元素.insertAdjacentHTML('位置', 元素);\n            // 创建的位置：\n                // 1、'beforebegin'（当前元素的前面）\n                // 2、'afterend'（当前元素的后面）\n                // 3、'afterbegin'（当前元素内的最前面）\n                // 4、'beforeend'（当前元素内的最后面）\n        // 特性：\n            // 1、解决 appendChild 不能添加元素的问题\n            // 2、替代了 innerHTML\n        var ul = document.querySelector('ul');\n        var li = '<li class=\"liactive\"><span>新选项卡</span><span class=\"iconfont icon-guanbi\"></span></li>';\n        ul.insertAdjacentHTML('beforebegin', li);\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n",normalizedContent:"# 知识点：动态创建元素\n\n方法： 元素.insertadjacenthtml('位置', 元素);\n\n创建的位置：\n\n 1. 'beforebegin'（当前元素的前面）\n 2. 'afterend'（当前元素的后面）\n 3. 'afterbegin'（当前元素内的最前面）\n 4. 'beforeend'（当前元素内的最后面）\n\n特性：\n\n 1. 解决 appendchild 不能添加元素的问题\n 2. 替代了 innerhtml\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <p>---</p>\n    <p>---</p>\n    <ul>\n        <li>1</li>\n        <li>2</li>\n        <li>3</li>\n        <li>4</li>\n        <li>5</li>\n        <li>6</li>\n    </ul>\n    <p>---</p>\n    <p>---</p>\n    <script>\n        // 方法：元素.insertadjacenthtml('位置', 元素);\n            // 创建的位置：\n                // 1、'beforebegin'（当前元素的前面）\n                // 2、'afterend'（当前元素的后面）\n                // 3、'afterbegin'（当前元素内的最前面）\n                // 4、'beforeend'（当前元素内的最后面）\n        // 特性：\n            // 1、解决 appendchild 不能添加元素的问题\n            // 2、替代了 innerhtml\n        var ul = document.queryselector('ul');\n        var li = '<li class=\"liactive\"><span>新选项卡</span><span class=\"iconfont icon-guanbi\"></span></li>';\n        ul.insertadjacenthtml('beforebegin', li);\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"原型对象 与 对象原型",frontmatter:{title:"原型对象 与 对象原型",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/0ba950/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/06.%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1%20%E4%B8%8E%20%E5%AF%B9%E8%B1%A1%E5%8E%9F%E5%9E%8B.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/06.原型对象 与 对象原型.md",key:"v-5e8004ea",path:"/pages/0ba950/",headers:[{level:2,title:"一、原型对象（prototype）",slug:"一、原型对象-prototype",normalizedTitle:"一、原型对象（prototype）",charIndex:22},{level:2,title:"二、对象原型：_proto_",slug:"二、对象原型-proto",normalizedTitle:"二、对象原型：<em>proto</em>",charIndex:null},{level:3,title:"原型链",slug:"原型链",normalizedTitle:"原型链",charIndex:919}],headersStr:"一、原型对象（prototype） 二、对象原型：_proto_ 原型链",content:"# 知识点：原型对象 与 对象原型\n\n\n# 一、原型对象（prototype）\n\n概念： 每个构造函数都有一个 prototype 属性，这个属性就是原型，因为是一个对象，也叫原型对象\n\n作用： 1、节约内存。在构造函数中创建的方法，使用时指向的是不同的地址，而通过原型创建的方法指向的是相同的地址 例：\n\n-- 在构造函数中创建方法\nfunction Person(name, age) {\n  this.name = name\n  this.age = age\n  this.eat = function () {\n    console.log(\"吃饭\")\n  }\n}\nvar per1 = new Person(\"小明\", 18)\nvar per2 = new Person(\"小红\", 20)\n\nper1.eat() // 吃饭\nper2.eat() // 吃饭\n\nconsole.log(per1 === per2) // false\nconsole.log(per1.eat === per2.eat) // false。地址不同\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n-- 在原型中创建方法\nfunction Person(name, age) {\n    this.name = name\n    this.age = age\n}\nPerson.prototype.eat = function () { //将eat方法添加到Person的原型中\n    console.log(\"恰饭\")\n} \nvar per1 = new Person(\"小明\", 18)\nvar per2 = new Person(\"小红\", 20)\n\nper1.eat() // 恰饭\nper2.eat() // 恰饭\n\nconsole.log(per1 === per2) // false\nconsole.log(per1.eat === per2.eat) // true。地址相同\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n2、共享方法。因为原型链的关系，所有实例都可以访问原型上的方法\n\n3、扩展内置对象。可以在内置对象中添加属性、方法。如 Array.prototype.属性/方法、Object.prototype.属性/方法\n\n特性： prototype 里的 this 指向实例\n\n// 让 prototype 里的 this 指向构造函数：1、2、3\n    var that;  // 1、在全局声明 that\n    function Star(uname, age) {\n        that = this;  // 2、在构造函数中把 this 存储到 that 中\n        this.uname = uname;\n        this.age = age;\n        this.haha = function() {\n            console.log('我会唱歌');\n\n        }\n    }\n    Star.prototype.sing = function() {\n        console.log('我会唱歌');\n        console.log(this);\n        console.log(that.uname);  // 3、使用 that 来访问 构造函数中的属性\n    }\n    var ldh = new Star('刘德华', 18);\n    var zxy = new Star('张学友', 19);\n    console.log(ldh.haha === zxy.haha);  // false 不指向同一个地址\n    console.log(ldh.sing === zxy.sing);  // true 指向同一个地址\n    ldh.sing();\n    zxy.sing();\n\n    // constructor\n    // 作用：\n        // 1、指向构造函数本身\n        // 2、记录该对象引用哪个构造函数\n        // 3、让原型对象重新指回原来的构造函数（常用）\n            // 作用：解决添加多个方法，导致覆盖原构造函数的问题\n            Star.prototype = {\n                constructor: Star,\n                sing1: function () { console.log(1); },\n                sing2: function () { console.log(2); },\n                sing3: function () { console.log(3); }\n            }\n            console.log(Star.prototype);\n\n    // 特性：每个原型对象自带一个 constructor\n    console.log(Star.prototype.constructor);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# 二、对象原型：proto\n\n作用： 访问原型对象\n\n特性：\n\n 1. 非标准，开发中不可以使用\n 2. 每个实例自带一个对象原型\n\nconsole.log(ldh.__proto__);\nconsole.log(zxy.__proto__);\n\n\n1\n2\n\n\n\n# 原型链\n\n概念：\n\n 1. 通过 proto 查找成员的路线，就叫原型链\n 2. 构造函数的 proto 指向 Object.prototype，Object.prototype 指向 null\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // （1）原型对象：prototype\n        // 作用：\n            // 1、解决 构造函数每创建一个方法，就要开辟一个新空间，导致浪费内存的问题\n            // 2、共享方法；共享属性存放在构造函数中\n            // 3、扩展内置对象，内置方法都是放在 prototype 中（Array.prototype.xxx = function(){}）\n        // 解决方法：将方法存放在原型对象中\n        // 原理：每个构造函数都自带一个原型对象，原型对象中的方法，所有实例都可以访问，并且实例访问的都是同一个地址\n        // 特性：prototype 里的 this 指向实例\n        // 让 prototype 里的 this 指向构造函数：1、2、3\n            var that;  // 1、在全局声明 that\n            function Star(uname, age) {\n                that = this;  // 2、在构造函数中把 this 存储到 that 中\n                this.uname = uname;\n                this.age = age;\n                this.haha = function() {\n                    console.log('我会唱歌');\n\n                }\n            }\n            Star.prototype.sing = function() {\n                console.log('我会唱歌');\n                console.log(this);\n                console.log(that.uname);  // 3、使用 that 来访问 构造函数中的属性\n            }\n            var ldh = new Star('刘德华', 18);\n            var zxy = new Star('张学友', 19);\n            console.log(ldh.haha === zxy.haha);  // false 不指向同一个地址\n            console.log(ldh.sing === zxy.sing);  // true 指向同一个地址\n            ldh.sing();\n            zxy.sing();\n\n            // constructor\n            // 作用：\n                // 1、指向构造函数本身\n                // 2、记录该对象引用哪个构造函数\n                // 3、让原型对象重新指回原来的构造函数（常用）\n                    // 作用：解决添加多个方法，导致覆盖原构造函数的问题\n                    Star.prototype = {\n                        constructor: Star,\n                        sing1: function () { console.log(1); },\n                        sing2: function () { console.log(2); },\n                        sing3: function () { console.log(3); }\n                    }\n                    console.log(Star.prototype);\n\n            // 特性：每个原型对象自带一个 constructor\n            console.log(Star.prototype.constructor);\n            \n\n        // （2）对象原型：__proto__\n        // 作用：访问原型对象\n        // 特性：\n            // 1、非标准，开发中不可以使用\n            // 2、每个实例自带一个对象原型\n        console.log(ldh.__proto__);\n        console.log(zxy.__proto__);\n\n            // 原型链\n            // 概念：\n                // 1、通过 __proto__ 查找成员的路线，就叫原型链\n                // 2、构造函数的 __proto__ 指向 Object.prototype，Object.prototype 指向 null\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n",normalizedContent:"# 知识点：原型对象 与 对象原型\n\n\n# 一、原型对象（prototype）\n\n概念： 每个构造函数都有一个 prototype 属性，这个属性就是原型，因为是一个对象，也叫原型对象\n\n作用： 1、节约内存。在构造函数中创建的方法，使用时指向的是不同的地址，而通过原型创建的方法指向的是相同的地址 例：\n\n-- 在构造函数中创建方法\nfunction person(name, age) {\n  this.name = name\n  this.age = age\n  this.eat = function () {\n    console.log(\"吃饭\")\n  }\n}\nvar per1 = new person(\"小明\", 18)\nvar per2 = new person(\"小红\", 20)\n\nper1.eat() // 吃饭\nper2.eat() // 吃饭\n\nconsole.log(per1 === per2) // false\nconsole.log(per1.eat === per2.eat) // false。地址不同\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n-- 在原型中创建方法\nfunction person(name, age) {\n    this.name = name\n    this.age = age\n}\nperson.prototype.eat = function () { //将eat方法添加到person的原型中\n    console.log(\"恰饭\")\n} \nvar per1 = new person(\"小明\", 18)\nvar per2 = new person(\"小红\", 20)\n\nper1.eat() // 恰饭\nper2.eat() // 恰饭\n\nconsole.log(per1 === per2) // false\nconsole.log(per1.eat === per2.eat) // true。地址相同\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n2、共享方法。因为原型链的关系，所有实例都可以访问原型上的方法\n\n3、扩展内置对象。可以在内置对象中添加属性、方法。如 array.prototype.属性/方法、object.prototype.属性/方法\n\n特性： prototype 里的 this 指向实例\n\n// 让 prototype 里的 this 指向构造函数：1、2、3\n    var that;  // 1、在全局声明 that\n    function star(uname, age) {\n        that = this;  // 2、在构造函数中把 this 存储到 that 中\n        this.uname = uname;\n        this.age = age;\n        this.haha = function() {\n            console.log('我会唱歌');\n\n        }\n    }\n    star.prototype.sing = function() {\n        console.log('我会唱歌');\n        console.log(this);\n        console.log(that.uname);  // 3、使用 that 来访问 构造函数中的属性\n    }\n    var ldh = new star('刘德华', 18);\n    var zxy = new star('张学友', 19);\n    console.log(ldh.haha === zxy.haha);  // false 不指向同一个地址\n    console.log(ldh.sing === zxy.sing);  // true 指向同一个地址\n    ldh.sing();\n    zxy.sing();\n\n    // constructor\n    // 作用：\n        // 1、指向构造函数本身\n        // 2、记录该对象引用哪个构造函数\n        // 3、让原型对象重新指回原来的构造函数（常用）\n            // 作用：解决添加多个方法，导致覆盖原构造函数的问题\n            star.prototype = {\n                constructor: star,\n                sing1: function () { console.log(1); },\n                sing2: function () { console.log(2); },\n                sing3: function () { console.log(3); }\n            }\n            console.log(star.prototype);\n\n    // 特性：每个原型对象自带一个 constructor\n    console.log(star.prototype.constructor);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# 二、对象原型：proto\n\n作用： 访问原型对象\n\n特性：\n\n 1. 非标准，开发中不可以使用\n 2. 每个实例自带一个对象原型\n\nconsole.log(ldh.__proto__);\nconsole.log(zxy.__proto__);\n\n\n1\n2\n\n\n\n# 原型链\n\n概念：\n\n 1. 通过 proto 查找成员的路线，就叫原型链\n 2. 构造函数的 proto 指向 object.prototype，object.prototype 指向 null\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // （1）原型对象：prototype\n        // 作用：\n            // 1、解决 构造函数每创建一个方法，就要开辟一个新空间，导致浪费内存的问题\n            // 2、共享方法；共享属性存放在构造函数中\n            // 3、扩展内置对象，内置方法都是放在 prototype 中（array.prototype.xxx = function(){}）\n        // 解决方法：将方法存放在原型对象中\n        // 原理：每个构造函数都自带一个原型对象，原型对象中的方法，所有实例都可以访问，并且实例访问的都是同一个地址\n        // 特性：prototype 里的 this 指向实例\n        // 让 prototype 里的 this 指向构造函数：1、2、3\n            var that;  // 1、在全局声明 that\n            function star(uname, age) {\n                that = this;  // 2、在构造函数中把 this 存储到 that 中\n                this.uname = uname;\n                this.age = age;\n                this.haha = function() {\n                    console.log('我会唱歌');\n\n                }\n            }\n            star.prototype.sing = function() {\n                console.log('我会唱歌');\n                console.log(this);\n                console.log(that.uname);  // 3、使用 that 来访问 构造函数中的属性\n            }\n            var ldh = new star('刘德华', 18);\n            var zxy = new star('张学友', 19);\n            console.log(ldh.haha === zxy.haha);  // false 不指向同一个地址\n            console.log(ldh.sing === zxy.sing);  // true 指向同一个地址\n            ldh.sing();\n            zxy.sing();\n\n            // constructor\n            // 作用：\n                // 1、指向构造函数本身\n                // 2、记录该对象引用哪个构造函数\n                // 3、让原型对象重新指回原来的构造函数（常用）\n                    // 作用：解决添加多个方法，导致覆盖原构造函数的问题\n                    star.prototype = {\n                        constructor: star,\n                        sing1: function () { console.log(1); },\n                        sing2: function () { console.log(2); },\n                        sing3: function () { console.log(3); }\n                    }\n                    console.log(star.prototype);\n\n            // 特性：每个原型对象自带一个 constructor\n            console.log(star.prototype.constructor);\n            \n\n        // （2）对象原型：__proto__\n        // 作用：访问原型对象\n        // 特性：\n            // 1、非标准，开发中不可以使用\n            // 2、每个实例自带一个对象原型\n        console.log(ldh.__proto__);\n        console.log(zxy.__proto__);\n\n            // 原型链\n            // 概念：\n                // 1、通过 __proto__ 查找成员的路线，就叫原型链\n                // 2、构造函数的 __proto__ 指向 object.prototype，object.prototype 指向 null\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"ES6前的继承方式",frontmatter:{title:"ES6前的继承方式",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/00734f/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/07.ES6%E5%89%8D%E7%9A%84%E7%BB%A7%E6%89%BF%E6%96%B9%E5%BC%8F.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/07.ES6前的继承方式.md",key:"v-3d873ab8",path:"/pages/00734f/",headers:[{level:2,title:"一、继承属性",slug:"一、继承属性",normalizedTitle:"一、继承属性",charIndex:556},{level:2,title:"二、继承方法",slug:"二、继承方法",normalizedTitle:"二、继承方法",charIndex:747}],headersStr:"一、继承属性 二、继承方法",content:"# 知识点：ES6前的继承方式\n\n面向对象编程的方法：\n\n * ES6 之前：构造函数 + 原型（组合继承）\n * ES6 之后：类\n\n方法： 函数.call(this 的指向, 参数, 参数, ...)\n\n作用：\n\n 1. 修改 this 的指向，并调用该函数\n 2. 继承属性和方法\n\nfunction fn (x, y) {\n  console.log(this);  // {name: 'andy'}\n  console.log(this.name);  // andy\n  console.log(x + y);  // 3\n}\n\nvar o = { name: 'andy' }\nfn.call(o, 1, 2)\n\n// ----------------------------------------------\n\nfunction Father(uname, age) {\n    this.uname = uname;\n    this.age = age;\n}\nFather.prototype.money = function() {\n    console.log(100);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 一、继承属性\n\n方法： 使用 call() 把父构造函数的 this 指向子构造函数\n\nfunction Son(uname, age, score) {\n    Father.call(this, uname, age);\n    this.score = score;\n}\nvar son = new Son('刘德华', 18, 100);\n\n\n1\n2\n3\n4\n5\n\n\n\n# 二、继承方法\n\n方法一（不推荐）： 把 父原型对象 赋值给 子原型对象\n\n缺点： 当修改子原型对象时，会影响父原型对象，因为使用的都是同一个地址\n\nSon.prototype = Father.prototype;\nvar son1 = new Son('张学友', 20, 200);\nson1.money();\n\n\n1\n2\n3\n\n\n方法二（推荐）： 把 父实例 赋值给 子原型对象，这样子原型对象里的方法只会添加到父实例里，不会影响父原型对象\n\nSon.prototype = new Father();\n// 将 构造函数 重新指回 子构造函数\nSon.prototype.constructor = Son;\nvar son2 = new Son('张学友', 20, 200);\nson2.money();\n\n\n1\n2\n3\n4\n5\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 面向对象编程的方法：\n            // ES6 之前：构造函数 + 原型（组合继承）\n            // ES6 之后：类\n        // 方法：函数.call(this 的指向, 参数, 参数, ...)\n        // 作用：\n            // 1、修改 this 的指向，并调用该函数\n            // 2、继承属性和方法\n        \n            function fn (x, y) {\n                console.log(this);  // {name: 'andy'}\n                console.log(this.name);  // andy\n                console.log(x + y);  // 3\n            }\n\n            var o = { name: 'andy' }\n            fn.call(o, 1, 2)\n\n        // ----------------------------------------------\n        function Father(uname, age) {\n            this.uname = uname;\n            this.age = age;\n        }\n        Father.prototype.money = function() {\n            console.log(100);\n        }\n        // （1）继承属性\n        // 方法：使用 call() 把父构造函数的 this 指向子构造函数\n        function Son(uname, age, score) {\n            Father.call(this, uname, age);\n            this.score = score;\n        }\n        var son = new Son('刘德华', 18, 100);\n\n        // （2）继承方法\n        // 方法一（不推荐）：把 父原型对象 赋值给 子原型对象\n        // 缺点：当修改子原型对象时，会影响父原型对象，因为使用的都是同一个地址\n        Son.prototype = Father.prototype;\n        var son1 = new Son('张学友', 20, 200);\n        son1.money();\n\n        // 方法二（推荐）：把 父实例 赋值给 子原型对象，这样子原型对象里的方法只会添加到父实例里，不会影响父原型对象\n        Son.prototype = new Father();\n        // 将 构造函数 重新指回 子构造函数\n        Son.prototype.constructor = Son;\n        var son2 = new Son('张学友', 20, 200);\n        son2.money();\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n",normalizedContent:"# 知识点：es6前的继承方式\n\n面向对象编程的方法：\n\n * es6 之前：构造函数 + 原型（组合继承）\n * es6 之后：类\n\n方法： 函数.call(this 的指向, 参数, 参数, ...)\n\n作用：\n\n 1. 修改 this 的指向，并调用该函数\n 2. 继承属性和方法\n\nfunction fn (x, y) {\n  console.log(this);  // {name: 'andy'}\n  console.log(this.name);  // andy\n  console.log(x + y);  // 3\n}\n\nvar o = { name: 'andy' }\nfn.call(o, 1, 2)\n\n// ----------------------------------------------\n\nfunction father(uname, age) {\n    this.uname = uname;\n    this.age = age;\n}\nfather.prototype.money = function() {\n    console.log(100);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 一、继承属性\n\n方法： 使用 call() 把父构造函数的 this 指向子构造函数\n\nfunction son(uname, age, score) {\n    father.call(this, uname, age);\n    this.score = score;\n}\nvar son = new son('刘德华', 18, 100);\n\n\n1\n2\n3\n4\n5\n\n\n\n# 二、继承方法\n\n方法一（不推荐）： 把 父原型对象 赋值给 子原型对象\n\n缺点： 当修改子原型对象时，会影响父原型对象，因为使用的都是同一个地址\n\nson.prototype = father.prototype;\nvar son1 = new son('张学友', 20, 200);\nson1.money();\n\n\n1\n2\n3\n\n\n方法二（推荐）： 把 父实例 赋值给 子原型对象，这样子原型对象里的方法只会添加到父实例里，不会影响父原型对象\n\nson.prototype = new father();\n// 将 构造函数 重新指回 子构造函数\nson.prototype.constructor = son;\nvar son2 = new son('张学友', 20, 200);\nson2.money();\n\n\n1\n2\n3\n4\n5\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 面向对象编程的方法：\n            // es6 之前：构造函数 + 原型（组合继承）\n            // es6 之后：类\n        // 方法：函数.call(this 的指向, 参数, 参数, ...)\n        // 作用：\n            // 1、修改 this 的指向，并调用该函数\n            // 2、继承属性和方法\n        \n            function fn (x, y) {\n                console.log(this);  // {name: 'andy'}\n                console.log(this.name);  // andy\n                console.log(x + y);  // 3\n            }\n\n            var o = { name: 'andy' }\n            fn.call(o, 1, 2)\n\n        // ----------------------------------------------\n        function father(uname, age) {\n            this.uname = uname;\n            this.age = age;\n        }\n        father.prototype.money = function() {\n            console.log(100);\n        }\n        // （1）继承属性\n        // 方法：使用 call() 把父构造函数的 this 指向子构造函数\n        function son(uname, age, score) {\n            father.call(this, uname, age);\n            this.score = score;\n        }\n        var son = new son('刘德华', 18, 100);\n\n        // （2）继承方法\n        // 方法一（不推荐）：把 父原型对象 赋值给 子原型对象\n        // 缺点：当修改子原型对象时，会影响父原型对象，因为使用的都是同一个地址\n        son.prototype = father.prototype;\n        var son1 = new son('张学友', 20, 200);\n        son1.money();\n\n        // 方法二（推荐）：把 父实例 赋值给 子原型对象，这样子原型对象里的方法只会添加到父实例里，不会影响父原型对象\n        son.prototype = new father();\n        // 将 构造函数 重新指回 子构造函数\n        son.prototype.constructor = son;\n        var son2 = new son('张学友', 20, 200);\n        son2.money();\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"改变函数内 this 指向的方法",frontmatter:{title:"改变函数内 this 指向的方法",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/503e00/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/08.%E6%94%B9%E5%8F%98%E5%87%BD%E6%95%B0%E5%86%85%20this%20%E6%8C%87%E5%90%91%E7%9A%84%E6%96%B9%E6%B3%95.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/08.改变函数内 this 指向的方法.md",key:"v-1f938945",path:"/pages/503e00/",headers:[{level:2,title:"一、call()",slug:"一、call",normalizedTitle:"一、call()",charIndex:27},{level:2,title:"二、apply()",slug:"二、apply",normalizedTitle:"二、apply()",charIndex:329},{level:2,title:"三、bind()",slug:"三、bind",normalizedTitle:"三、bind()",charIndex:565}],headersStr:"一、call() 二、apply() 三、bind()",content:"# 知识点：改变函数内 this 指向的方法\n\n\n# 一、call()\n\n作用： 1、修改 this 的指向，并调用 this 所在的函数 2、继承 this 指向对象的属性和方法\n\n参数一： this 指向的对象 参数N： 调用 this 所在函数的参数\n\nfunction fn1 (x, y) {\n    console.log(this);  // {name: 'andy'}\n    console.log(this.name);  // andy\n    console.log(x + y);  // 3\n}\nvar o1 = { name: 'andy' }\nfn1.call(o1, 1, 2)\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二、apply()\n\n作用： 1、修改 this 的指向，并调用 this 所在的函数 2、让数组可以使用数学内置对象里的方法\n\n参数一： 数组 参数N： 调用 this 所在函数的参数\n\nvar arr = [1, 66, 3, 99, 4];\nvar max = Math.max.apply(Math, arr);\nvar min = Math.min.apply(Math, arr);\nconsole.log(max, min);\n\n\n1\n2\n3\n4\n\n\n\n# 三、bind()\n\n作用： 1、修改 this 的指向，不会调用 this 所在的函数 2、改变定时器中 this 的指向\n\n参数一： this 指向的对象 参数N： 调用 this 所在函数的参数\n\nvar btns = document.querySelectorAll('button');\nfor (var i = 0; i < btns.length; i++) {\n    btns[i].onclick = function() {\n        this.disabled = true;\n        setTimeout(function() {\n            this.disabled = false;\n        }.bind(this), 2000);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# demo\n```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <button>点击</button>\n    <button>点击</button>\n    <button>点击</button>\n    <script>\n        // （1）call()\n        // 方法：函数.call(this 的指向, 参数, 参数, ...)\n        // 作用：\n            // 1、修改 this 的指向，并调用该函数\n            // 2、继承属性和方法\n        function fn1 (x, y) {\n            console.log(this);  // {name: 'andy'}\n            console.log(this.name);  // andy\n            console.log(x + y);  // 3\n        }\n        var o1 = { name: 'andy' }\n        fn1.call(o1, 1, 2)\n\n        // （2）apply()\n        // 方法：函数.apply(this 的指向, 参数, 参数, ...)\n        // 作用：\n            // 1、修改 this 的指向，并调用该函数\n            // 2、让数组可以使用数学内置对象里的方法\n        // 特性：参数必须是数组\n        var arr = [1, 66, 3, 99, 4];\n        var max = Math.max.apply(Math, arr);\n        var min = Math.min.apply(Math, arr);\n        console.log(max, min);\n\n        // （3）bind()\n        // 方法：函数.bind(this 的指向, 参数, 参数, ...)\n        // 作用：\n            // 1、修改 this 的指向，不会 调用该函数\n            // 2、改变定时器中 this 的指向\n        var btns = document.querySelectorAll('button');\n        for (var i = 0; i < btns.length; i++) {\n            btns[i].onclick = function() {\n                this.disabled = true;\n                setTimeout(function() {\n                    this.disabled = false;\n                }.bind(this), 2000);\n            }\n        }\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n",normalizedContent:"# 知识点：改变函数内 this 指向的方法\n\n\n# 一、call()\n\n作用： 1、修改 this 的指向，并调用 this 所在的函数 2、继承 this 指向对象的属性和方法\n\n参数一： this 指向的对象 参数n： 调用 this 所在函数的参数\n\nfunction fn1 (x, y) {\n    console.log(this);  // {name: 'andy'}\n    console.log(this.name);  // andy\n    console.log(x + y);  // 3\n}\nvar o1 = { name: 'andy' }\nfn1.call(o1, 1, 2)\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二、apply()\n\n作用： 1、修改 this 的指向，并调用 this 所在的函数 2、让数组可以使用数学内置对象里的方法\n\n参数一： 数组 参数n： 调用 this 所在函数的参数\n\nvar arr = [1, 66, 3, 99, 4];\nvar max = math.max.apply(math, arr);\nvar min = math.min.apply(math, arr);\nconsole.log(max, min);\n\n\n1\n2\n3\n4\n\n\n\n# 三、bind()\n\n作用： 1、修改 this 的指向，不会调用 this 所在的函数 2、改变定时器中 this 的指向\n\n参数一： this 指向的对象 参数n： 调用 this 所在函数的参数\n\nvar btns = document.queryselectorall('button');\nfor (var i = 0; i < btns.length; i++) {\n    btns[i].onclick = function() {\n        this.disabled = true;\n        settimeout(function() {\n            this.disabled = false;\n        }.bind(this), 2000);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# demo\n```html\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <button>点击</button>\n    <button>点击</button>\n    <button>点击</button>\n    <script>\n        // （1）call()\n        // 方法：函数.call(this 的指向, 参数, 参数, ...)\n        // 作用：\n            // 1、修改 this 的指向，并调用该函数\n            // 2、继承属性和方法\n        function fn1 (x, y) {\n            console.log(this);  // {name: 'andy'}\n            console.log(this.name);  // andy\n            console.log(x + y);  // 3\n        }\n        var o1 = { name: 'andy' }\n        fn1.call(o1, 1, 2)\n\n        // （2）apply()\n        // 方法：函数.apply(this 的指向, 参数, 参数, ...)\n        // 作用：\n            // 1、修改 this 的指向，并调用该函数\n            // 2、让数组可以使用数学内置对象里的方法\n        // 特性：参数必须是数组\n        var arr = [1, 66, 3, 99, 4];\n        var max = math.max.apply(math, arr);\n        var min = math.min.apply(math, arr);\n        console.log(max, min);\n\n        // （3）bind()\n        // 方法：函数.bind(this 的指向, 参数, 参数, ...)\n        // 作用：\n            // 1、修改 this 的指向，不会 调用该函数\n            // 2、改变定时器中 this 的指向\n        var btns = document.queryselectorall('button');\n        for (var i = 0; i < btns.length; i++) {\n            btns[i].onclick = function() {\n                this.disabled = true;\n                settimeout(function() {\n                    this.disabled = false;\n                }.bind(this), 2000);\n            }\n        }\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"严格模式",frontmatter:{title:"严格模式",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/f82327/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/09.%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/09.严格模式.md",key:"v-7ee3851e",path:"/pages/f82327/",headers:[{level:2,title:"一、开启 脚本 严格模式",slug:"一、开启-脚本-严格模式",normalizedTitle:"一、开启 脚本 严格模式",charIndex:123},{level:2,title:"二、开启 函数 严格模式",slug:"二、开启-函数-严格模式",normalizedTitle:"二、开启 函数 严格模式",charIndex:288}],headersStr:"一、开启 脚本 严格模式 二、开启 函数 严格模式",content:"# 知识点：严格模式\n\n作用：\n\n 1. 消除了 Javascript 语法的一些不合理、不严谨之处，减少了一些怪异行为\n 2. 消除代码运行的一些不安全之处，保证代码运行的安全\n 3. 提高编译器效率，增加运行速度\n 4. 禁用保留字\n\n\n# 一、开启 脚本 严格模式\n\n使用步骤： 在 script 标签内的最上面添加 'use strict'\n\n特性： 有的 script 基本是严格模式，有的 script 脚本是正常模式，这样不利于文件合并，所以可以将整个脚本文件 放在一个立即执行的匿名函数之中。这样独立创建一个作用域而不影响其他 script 脚本文件\n\n\n# 二、开启 函数 严格模式\n\n使用步骤： 在 函数 内的最上面添加 'use strict'\n\nfunction fn(){\n    \"use strict\"\n}\n\n(function () {\n    'use strict'\n    // 规则：\n    // 变量\n        // 1、变量必须声明才可以使用\n        // 2、禁止删除已声明的变量\n    \n    // this 指向\n        // 1、全局作用域中的 this 不再指向 window，而是指向 undefined\n        // 2、定时器中的 this 还是指向 window\n\n    // 函数\n        // 1、不允许在 for、if 里声明函数\n    \n})()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 作用：\n            // 1、消除了 Javascript 语法的一些不合理、不严谨之处，减少了一些怪异行为\n            // 2、消除代码运行的一些不安全之处，保证代码运行的安全\n            // 3、提高编译器效率，增加运行速度\n            // 4、禁用保留字\n\n        // （1）开启 脚本 严格模式：在 script 标签内的最上面添加 'use strict'\n            // 特性：有的 script 基本是严格模式，有的 script 脚本是正常模式，这样不利于文件合并，所以可以将整个脚本文件 放在一个立即执行的匿名函数之中。这样独立创建一个作用域而不影响其他 script 脚本文件\n\n        // （2）开启 函数 严格模式：在 函数 内的最上面添加 'use strict'\n        function fn(){\n            \"use strict\"\n        }\n\n        (function () {\n            'use strict'\n            // 规则：\n            // 变量\n                // 1、变量必须声明才可以使用\n                // 2、禁止删除已声明的变量\n            \n            // this 指向\n                // 1、全局作用域中的 this 不再指向 window，而是指向 undefined\n                // 2、定时器中的 this 还是指向 window\n\n            // 函数\n                // 1、不允许在 for、if 里声明函数\n            \n        })()\n        \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n",normalizedContent:"# 知识点：严格模式\n\n作用：\n\n 1. 消除了 javascript 语法的一些不合理、不严谨之处，减少了一些怪异行为\n 2. 消除代码运行的一些不安全之处，保证代码运行的安全\n 3. 提高编译器效率，增加运行速度\n 4. 禁用保留字\n\n\n# 一、开启 脚本 严格模式\n\n使用步骤： 在 script 标签内的最上面添加 'use strict'\n\n特性： 有的 script 基本是严格模式，有的 script 脚本是正常模式，这样不利于文件合并，所以可以将整个脚本文件 放在一个立即执行的匿名函数之中。这样独立创建一个作用域而不影响其他 script 脚本文件\n\n\n# 二、开启 函数 严格模式\n\n使用步骤： 在 函数 内的最上面添加 'use strict'\n\nfunction fn(){\n    \"use strict\"\n}\n\n(function () {\n    'use strict'\n    // 规则：\n    // 变量\n        // 1、变量必须声明才可以使用\n        // 2、禁止删除已声明的变量\n    \n    // this 指向\n        // 1、全局作用域中的 this 不再指向 window，而是指向 undefined\n        // 2、定时器中的 this 还是指向 window\n\n    // 函数\n        // 1、不允许在 for、if 里声明函数\n    \n})()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 作用：\n            // 1、消除了 javascript 语法的一些不合理、不严谨之处，减少了一些怪异行为\n            // 2、消除代码运行的一些不安全之处，保证代码运行的安全\n            // 3、提高编译器效率，增加运行速度\n            // 4、禁用保留字\n\n        // （1）开启 脚本 严格模式：在 script 标签内的最上面添加 'use strict'\n            // 特性：有的 script 基本是严格模式，有的 script 脚本是正常模式，这样不利于文件合并，所以可以将整个脚本文件 放在一个立即执行的匿名函数之中。这样独立创建一个作用域而不影响其他 script 脚本文件\n\n        // （2）开启 函数 严格模式：在 函数 内的最上面添加 'use strict'\n        function fn(){\n            \"use strict\"\n        }\n\n        (function () {\n            'use strict'\n            // 规则：\n            // 变量\n                // 1、变量必须声明才可以使用\n                // 2、禁止删除已声明的变量\n            \n            // this 指向\n                // 1、全局作用域中的 this 不再指向 window，而是指向 undefined\n                // 2、定时器中的 this 还是指向 window\n\n            // 函数\n                // 1、不允许在 for、if 里声明函数\n            \n        })()\n        \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"高阶函数",frontmatter:{title:"高阶函数",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/89f470/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/10.%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/10.高阶函数.md",key:"v-d1cc4f68",path:"/pages/89f470/",headers:[{level:2,title:"一、把函数作为参数（如：回调函数）",slug:"一、把函数作为参数-如-回调函数",normalizedTitle:"一、把函数作为参数（如：回调函数）",charIndex:30},{level:2,title:"二、将函数作为返回值输出",slug:"二、将函数作为返回值输出",normalizedTitle:"二、将函数作为返回值输出",charIndex:104}],headersStr:"一、把函数作为参数（如：回调函数） 二、将函数作为返回值输出",content:'# 知识点：高阶函数\n\n以下两种语法被称为高阶函数\n\n\n# 一、把函数作为参数（如：回调函数）\n\nfunction fn (callback) {}\nfn(function() {})\n\n\n1\n2\n\n\n\n# 二、将函数作为返回值输出\n\nfunction fn () {\n    return function () {}\n}\nfn()\n\n\n1\n2\n3\n4\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 以下两种语法被称为高阶函数\n\n        // （1）把函数作为参数  如：回调函数\n        function fn (callback) {}\n        fn(function() {})\n\n        // （2）将函数作为返回值输出\n        function fn () {\n            return function () {}\n        }\n        fn()\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 知识点：高阶函数\n\n以下两种语法被称为高阶函数\n\n\n# 一、把函数作为参数（如：回调函数）\n\nfunction fn (callback) {}\nfn(function() {})\n\n\n1\n2\n\n\n\n# 二、将函数作为返回值输出\n\nfunction fn () {\n    return function () {}\n}\nfn()\n\n\n1\n2\n3\n4\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 以下两种语法被称为高阶函数\n\n        // （1）把函数作为参数  如：回调函数\n        function fn (callback) {}\n        fn(function() {})\n\n        // （2）将函数作为返回值输出\n        function fn () {\n            return function () {}\n        }\n        fn()\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"闭包",frontmatter:{title:"闭包",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/1a51f6/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/11.%E9%97%AD%E5%8C%85.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/11.闭包.md",key:"v-541f945e",path:"/pages/1a51f6/",headersStr:null,content:'# 知识点：闭包\n\n作用： 让一个作用域使用另外一个函数内部的局部变量\n\n闭包函数： 被使用的变量，变量声明所在的函数\n\n特性： 当闭包变量被使用时，就会产生闭包\n\n闭包调试：\n\n 1. 为调用闭包函数设置断点\n 2. 观察 Scope（作用域）选项\n 3. 里面有两个参数：（glocal 全局作用域 ）（local 局部作用域）\n 4. 当闭包变量被使用时，会出现 closure（闭包）参数，说明产生了闭包\n 5. closure 参数后面的是 闭包函数。如果是匿名函数 则不会显示\n\n例一：\n\nfunction fn1() {\n  var num = 10;\n  function fun() {\n      console.log(num);  // 闭包产生\n  }\n  fun();\n}\nfn1();  // 打断点\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n例二：\n\nfunction fn2() {\n  var num = 10;\n  return function() {\n      console.log(num);\n  }\n}\nvar f = fn2();\nf();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 作用一：让一个作用域使用另外一个函数内部的局部变量\n        // 闭包函数：被使用的变量，变量声明所在的函数\n        // 特性：当闭包变量被使用时，就会产生闭包\n\n        // 闭包调试：\n            // 1、为调用闭包函数设置断点\n            // 2、观察 Scope（作用域）选项\n            // 3、里面有两个参数：（glocal 全局作用域 ）（local 局部作用域）\n            // 4、当闭包变量被使用时，会出现 closure（闭包）参数，说明产生了闭包\n            // 5、closure 参数后面的是 闭包函数。如果是匿名函数 则不会显示\n\n        // 例一：\n            function fn1() {\n                var num = 10;\n                function fun() {\n                    console.log(num);  // 闭包产生\n                }\n                fun();\n            }\n            fn1();  // 打断点\n\n        // 例二：\n            function fn2() {\n                var num = 10;\n                return function() {\n                    console.log(num);\n                }\n            }\n            var f = fn2();\n            f();\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n',normalizedContent:'# 知识点：闭包\n\n作用： 让一个作用域使用另外一个函数内部的局部变量\n\n闭包函数： 被使用的变量，变量声明所在的函数\n\n特性： 当闭包变量被使用时，就会产生闭包\n\n闭包调试：\n\n 1. 为调用闭包函数设置断点\n 2. 观察 scope（作用域）选项\n 3. 里面有两个参数：（glocal 全局作用域 ）（local 局部作用域）\n 4. 当闭包变量被使用时，会出现 closure（闭包）参数，说明产生了闭包\n 5. closure 参数后面的是 闭包函数。如果是匿名函数 则不会显示\n\n例一：\n\nfunction fn1() {\n  var num = 10;\n  function fun() {\n      console.log(num);  // 闭包产生\n  }\n  fun();\n}\nfn1();  // 打断点\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n例二：\n\nfunction fn2() {\n  var num = 10;\n  return function() {\n      console.log(num);\n  }\n}\nvar f = fn2();\nf();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 作用一：让一个作用域使用另外一个函数内部的局部变量\n        // 闭包函数：被使用的变量，变量声明所在的函数\n        // 特性：当闭包变量被使用时，就会产生闭包\n\n        // 闭包调试：\n            // 1、为调用闭包函数设置断点\n            // 2、观察 scope（作用域）选项\n            // 3、里面有两个参数：（glocal 全局作用域 ）（local 局部作用域）\n            // 4、当闭包变量被使用时，会出现 closure（闭包）参数，说明产生了闭包\n            // 5、closure 参数后面的是 闭包函数。如果是匿名函数 则不会显示\n\n        // 例一：\n            function fn1() {\n                var num = 10;\n                function fun() {\n                    console.log(num);  // 闭包产生\n                }\n                fun();\n            }\n            fn1();  // 打断点\n\n        // 例二：\n            function fn2() {\n                var num = 10;\n                return function() {\n                    console.log(num);\n                }\n            }\n            var f = fn2();\n            f();\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"递归函数",frontmatter:{title:"递归函数",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/f42fc9/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/12.%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/12.递归函数.md",key:"v-57d497d3",path:"/pages/f42fc9/",headersStr:null,content:"# 知识点：递归函数\n\n递归函数： 函数内部自己调用自己，这个函数就是递归函数\n\n作用： 和 for 循环效果一样\n\n使用方法： 每调用一次，就会在内存中开辟一个空间，容易发生栈溢出，必须要搭配 退出条件 和 return 使用\n\n使用场景： 对象合并中的深拷贝\n\nvar num = 1;\nfunction fn() {\n    console.log('我要打印6句话');\n    if (num == 6) {\n        return;\n    }\n    num++;\n    fn();\n}\nfn();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 递归函数：函数内部自己调用自己，这个函数就是递归函数\n        // 作用：和 for 循环效果一样\n        // 使用方法：每调用一次，就会在内存中开辟一个空间，容易发生栈溢出，必须要搭配 退出条件 和 return 使用\n        // 使用场景：对象合并中的深拷贝\n        var num = 1;\n        function fn() {\n            console.log('我要打印6句话');\n            if (num == 6) {\n                return;\n            }\n            num++;\n            fn();\n        }\n        fn();\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n",normalizedContent:"# 知识点：递归函数\n\n递归函数： 函数内部自己调用自己，这个函数就是递归函数\n\n作用： 和 for 循环效果一样\n\n使用方法： 每调用一次，就会在内存中开辟一个空间，容易发生栈溢出，必须要搭配 退出条件 和 return 使用\n\n使用场景： 对象合并中的深拷贝\n\nvar num = 1;\nfunction fn() {\n    console.log('我要打印6句话');\n    if (num == 6) {\n        return;\n    }\n    num++;\n    fn();\n}\nfn();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 递归函数：函数内部自己调用自己，这个函数就是递归函数\n        // 作用：和 for 循环效果一样\n        // 使用方法：每调用一次，就会在内存中开辟一个空间，容易发生栈溢出，必须要搭配 退出条件 和 return 使用\n        // 使用场景：对象合并中的深拷贝\n        var num = 1;\n        function fn() {\n            console.log('我要打印6句话');\n            if (num == 6) {\n                return;\n            }\n            num++;\n            fn();\n        }\n        fn();\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"对象合并",frontmatter:{title:"对象合并",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/dc63c0/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/13.%E5%AF%B9%E8%B1%A1%E5%90%88%E5%B9%B6.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/13.对象合并.md",key:"v-9337bd9c",path:"/pages/dc63c0/",headers:[{level:2,title:"一、浅拷贝",slug:"一、浅拷贝",normalizedTitle:"一、浅拷贝",charIndex:144},{level:2,title:"二、深拷贝",slug:"二、深拷贝",normalizedTitle:"二、深拷贝",charIndex:299}],headersStr:"一、浅拷贝 二、深拷贝",content:"# 知识点：对象合并\n\n作用： 将其它对象，合并到目标对象中\n\nvar obj = {\n    id: 1,\n    name: 'andy',\n    msg: {\n        age: 18\n    }\n};\nvar o = {};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 一、浅拷贝\n\n方法： Object.assign(目标对象, 其他对象)\n\n特性： 只能拷贝简单数据类型，赋值数据类型拷贝的是地址\n\nObject.assign(o, obj);\nconsole.log(o);\no.msg.age = 20;\nconsole.log(obj);\n\n\n1\n2\n3\n4\n\n\n\n# 二、深拷贝\n\n方法： Object.assign(目标对象, 其他对象)\n\n特性： 完全拷贝\n\n原理： 递归函数\n\nfunction deepCopy(newobj, oldobj) {\n    for (var k in oldobj) {\n        var item = oldobj[k];\n        if (item instanceof Array) {\n            newobj[k] = [];\n            deepCopy(newobj[k], item)\n        } else if (item instanceof Object) {\n            newobj[k] = {};\n            deepCopy(newobj[k], item)\n        } else {\n            newobj[k] = item;\n        }\n    }\n}\ndeepCopy(o, obj);\nconsole.log(o);\n\nvar arr = [];\nconsole.log(arr instanceof Object);\no.msg.age = 20;\nconsole.log(obj);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 知识点：对象合并\n        // 作用：将其它对象，合并到目标对象中\n\n        var obj = {\n                id: 1,\n                name: 'andy',\n                msg: {\n                    age: 18\n                }\n            };\n            var o = {};\n\n        // （1）浅拷贝\n        // 方法：Object.assign(目标对象, 其他对象)\n        // 特性：只能拷贝简单数据类型，赋值数据类型拷贝的是地址\n            \n            // Object.assign(o, obj);\n            // console.log(o);\n            // o.msg.age = 20;\n            // console.log(obj);\n\n        // （2）深拷贝\n        // 方法：Object.assign(目标对象, 其他对象)\n        // 特性：完全拷贝\n        // 原理：递归函数\n            function deepCopy(newobj, oldobj) {\n                for (var k in oldobj) {\n                    var item = oldobj[k];\n                    if (item instanceof Array) {\n                        newobj[k] = [];\n                        deepCopy(newobj[k], item)\n                    } else if (item instanceof Object) {\n                        newobj[k] = {};\n                        deepCopy(newobj[k], item)\n                    } else {\n                        newobj[k] = item;\n                    }\n                }\n            }\n            deepCopy(o, obj);\n            console.log(o);\n\n            var arr = [];\n            console.log(arr instanceof Object);\n            o.msg.age = 20;\n            console.log(obj);\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n",normalizedContent:"# 知识点：对象合并\n\n作用： 将其它对象，合并到目标对象中\n\nvar obj = {\n    id: 1,\n    name: 'andy',\n    msg: {\n        age: 18\n    }\n};\nvar o = {};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 一、浅拷贝\n\n方法： object.assign(目标对象, 其他对象)\n\n特性： 只能拷贝简单数据类型，赋值数据类型拷贝的是地址\n\nobject.assign(o, obj);\nconsole.log(o);\no.msg.age = 20;\nconsole.log(obj);\n\n\n1\n2\n3\n4\n\n\n\n# 二、深拷贝\n\n方法： object.assign(目标对象, 其他对象)\n\n特性： 完全拷贝\n\n原理： 递归函数\n\nfunction deepcopy(newobj, oldobj) {\n    for (var k in oldobj) {\n        var item = oldobj[k];\n        if (item instanceof array) {\n            newobj[k] = [];\n            deepcopy(newobj[k], item)\n        } else if (item instanceof object) {\n            newobj[k] = {};\n            deepcopy(newobj[k], item)\n        } else {\n            newobj[k] = item;\n        }\n    }\n}\ndeepcopy(o, obj);\nconsole.log(o);\n\nvar arr = [];\nconsole.log(arr instanceof object);\no.msg.age = 20;\nconsole.log(obj);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 知识点：对象合并\n        // 作用：将其它对象，合并到目标对象中\n\n        var obj = {\n                id: 1,\n                name: 'andy',\n                msg: {\n                    age: 18\n                }\n            };\n            var o = {};\n\n        // （1）浅拷贝\n        // 方法：object.assign(目标对象, 其他对象)\n        // 特性：只能拷贝简单数据类型，赋值数据类型拷贝的是地址\n            \n            // object.assign(o, obj);\n            // console.log(o);\n            // o.msg.age = 20;\n            // console.log(obj);\n\n        // （2）深拷贝\n        // 方法：object.assign(目标对象, 其他对象)\n        // 特性：完全拷贝\n        // 原理：递归函数\n            function deepcopy(newobj, oldobj) {\n                for (var k in oldobj) {\n                    var item = oldobj[k];\n                    if (item instanceof array) {\n                        newobj[k] = [];\n                        deepcopy(newobj[k], item)\n                    } else if (item instanceof object) {\n                        newobj[k] = {};\n                        deepcopy(newobj[k], item)\n                    } else {\n                        newobj[k] = item;\n                    }\n                }\n            }\n            deepcopy(o, obj);\n            console.log(o);\n\n            var arr = [];\n            console.log(arr instanceof object);\n            o.msg.age = 20;\n            console.log(obj);\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"正则表达式",frontmatter:{title:"正则表达式",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/6eb750/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/03.ES5%E3%80%81ES6/14.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",relativePath:"《前端》笔记《基础知识》/03.JS/03.ES5、ES6/14.正则表达式.md",key:"v-8fed28fc",path:"/pages/6eb750/",headers:[{level:2,title:"一、创建",slug:"一、创建",normalizedTitle:"一、创建",charIndex:143},{level:3,title:"（一）通过 构造函数",slug:"一-通过-构造函数",normalizedTitle:"（一）通过 构造函数",charIndex:152},{level:3,title:"（二）通过 字面量：var 变量名 = /表达式/（推荐）",slug:"二-通过-字面量-var-变量名-表达式-推荐",normalizedTitle:"（二）通过 字面量：var 变量名 = /表达式/（推荐）",charIndex:290},{level:2,title:"二、表达式.test('字符串')",slug:"二、表达式-test-字符串",normalizedTitle:"二、表达式.test('字符串')",charIndex:341},{level:2,title:"三、元字符",slug:"三、元字符",normalizedTitle:"三、元字符",charIndex:481},{level:3,title:"（1）边界符",slug:"_1-边界符",normalizedTitle:"（1）边界符",charIndex:512},{level:3,title:"（2）包含符",slug:"_2-包含符",normalizedTitle:"（2）包含符",charIndex:564},{level:3,title:"（3）不包含符",slug:"_3-不包含符",normalizedTitle:"（3）不包含符",charIndex:593},{level:3,title:"（4）范围符",slug:"_4-范围符",normalizedTitle:"（4）范围符",charIndex:625},{level:3,title:"（5）量词符符",slug:"_5-量词符符",normalizedTitle:"（5）量词符符",charIndex:652},{level:2,title:"四、预定义类",slug:"四、预定义类",normalizedTitle:"四、预定义类",charIndex:823},{level:2,title:"五、替换",slug:"五、替换",normalizedTitle:"五、替换",charIndex:1077}],headersStr:"一、创建 （一）通过 构造函数 （二）通过 字面量：var 变量名 = /表达式/（推荐） 二、表达式.test('字符串') 三、元字符 （1）边界符 （2）包含符 （3）不包含符 （4）范围符 （5）量词符符 四、预定义类 五、替换",content:"# 知识点： 正则表达式\n\n作用： 匹配字符串中字符组合的规则\n\n使用场景：\n\n 1. 匹配： 表单验证\n 2. 替换： 敏感词\n 3. 提取： 从字符串中获取指定部分\n\n方法： 通常使用已经写好的正则表达式：http://c.runoob.com/front-end/854\n\n\n# 一、创建\n\n\n# （一）通过 构造函数\n\nvar 变量名 = new RegExp(/表达式/[特性])\n\n特性：\n\n 1. g： 全局匹配\n 2. i： 忽略大小写\n 3. gi： 全局匹配 + 忽略大小写\n\nvar regexp = new RegExp(/123/);\n\n\n1\n\n\n\n# （二）通过 字面量：var 变量名 = /表达式/（推荐）\n\nvar rg = /123/;\n\n\n# 二、表达式.test('字符串')\n\n作用： 检测字符串是否符合正则表达式要求的规范\n\n返回值： 布尔值（true：符合；false：不符合）\n\nconsole.log(rg.test(123));\nconsole.log(rg.test('abc'));\n\n\n1\n2\n\n\n\n# 三、元字符\n\n概念： 正则表达式中具有特殊意义的字符\n\n\n# （1）边界符\n\n^： 必须以某个字符开始\n\n$： 必须以某个字符结束\n\n^ 加 $： 精准匹配\n\n\n# （2）包含符\n\n[]： 包含一系列字符串中的一个\n\n\n# （3）不包含符\n\n[^]： 不包含一系列字符串中的一个\n\n\n# （4）范围符\n\n-： a-z、A-Z、0-9\n\n\n# （5）量词符符\n\n作用： 规定字符出现的次数\n\n*： 至少出现 0 次以上 +： 至少出现 1 次以上 ?： 出现1次 或 出现0次; 相对于 1 || 0 {n}： 重复 n 次 {n,}： 重复 n 次以上 {n,n}： 重复 n 次以上，并且小于等于 n 次（注意逗号后面不跟空格） (){n}： 让括号里面的字符重复 n 次\n\n\n# 四、预定义类\n\n\\d： 匹配 0 ~ 9 之间的任意数字。 相当于 [0-9] \\D： 匹配 0 ~ 9 以外的任意数字。 相当于 [^0-9] \\w： 匹配 任意 字母、数字、下划线。 相当于[A-Za-z0-9_] \\W： 匹配 任意 字母、数字、下划线 以外的字符。 相当于[^A-Za-z0-9_] \\s： 匹配 空格（包括 换行符、制表符、空格符 等）。 相当于[\\t\\r\\n\\v\\f] \\s： 匹配 空格（包括 换行符、制表符、空格符 等）之外的字符。 相当于[^\\t\\r\\n\\v\\f]\n\n\n# 五、替换\n\n方法： 字符串.replace(表达式, 替换为的字符);\n\n返回值： 新字符串\n\nvar text = document.querySelector('textarea');\nvar btn = document.querySelector('button');\nvar div = document.querySelector('div');\nbtn.onclick = function() {\n    div.innerHTML = text.value.replace(/激情|gay/g, '**');\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <textarea name=\"\" id=\"message\"></textarea> <button>提交</button>\n    <div></div>\n    <script>\n        // 知识点：正则表达式\n        // 作用：匹配字符串中字符组合的规则\n        // 使用场景：\n            // 1、匹配：表单验证\n            // 2、替换：敏感词\n            // 2、提取：从字符串中获取指定部分\n        // 方法：通常使用已经写好的正则表达式：http://c.runoob.com/front-end/854\n\n        // （1）创建\n            // 方法一：通过 构造函数： var 变量名 = new RegExp(/表达式/[特性])\n                // 特性：1、g：全局匹配  2、i：忽略大小写  3、gi：全局匹配 + 忽略大小写\n            var regexp = new RegExp(/123/);\n\n            // 方法二（推荐）：通过 字面量：var 变量名 = /表达式/;\n            var rg = /123/;\n\n        // （2）表达式.test('字符串')\n            // 作用：检测字符串是否符合正则表达式要求的规范\n            // 返回值：布尔值（true：符合；false：不符合）\n            console.log(rg.test(123));\n            console.log(rg.test('abc'));\n\n\n        /* （3）元字符\n            概念：正则表达式中具有特殊意义的字符\n\n                1、边界符\n                    ^：必须以某个字符开始\n                    $：必须以某个字符结束\n                    ^ 加 $：精准匹配\n\n                2、包含符\n                    []：包含一系列字符串中的一个\n\n                3、不包含符\n                    [^]：不包含一系列字符串中的一个\n\n                4、范围符\n                    -：a-z、A-Z、0-9\n                \n                5、量词符符\n                    // 作用：规定字符出现的次数\n                    *：至少出现 0 次以上\n                    +：至少出现 1 次以上\n                    ?：出现1次 或 出现0次; 相对于 1 || 0\n                    {n}：重复 n 次\n                    {n,}：重复 n 次以上\n                    {n,n}：重复 n 次以上，并且小于等于 n 次（注意逗号后面不跟空格）\n                    (){n}：让括号里面的字符重复 n 次\n        */\n\n        /* \n        （4）预定义类\n            \\d：匹配 0 ~ 9 之间的任意数字。 相当于 [0-9]\n            \\D：匹配 0 ~ 9 以外的任意数字。 相当于 [^0-9]\n            \\w：匹配 任意 字母、数字、下划线。 相当于[A-Za-z0-9_]\n            \\W：匹配 任意 字母、数字、下划线 以外的字符。 相当于[^A-Za-z0-9_]\n            \\s：匹配 空格（包括 换行符、制表符、空格符 等）。 相当于[\\t\\r\\n\\v\\f]\n            \\s：匹配 空格（包括 换行符、制表符、空格符 等）之外的字符。 相当于[^\\t\\r\\n\\v\\f]\n        */\n\n        // （5）替换\n        // 方法：字符串.replace(表达式, 替换为的字符);\n        // 返回值：新字符串\n        var text = document.querySelector('textarea');\n        var btn = document.querySelector('button');\n        var div = document.querySelector('div');\n        btn.onclick = function() {\n            div.innerHTML = text.value.replace(/激情|gay/g, '**');\n        }\n            \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n",normalizedContent:"# 知识点： 正则表达式\n\n作用： 匹配字符串中字符组合的规则\n\n使用场景：\n\n 1. 匹配： 表单验证\n 2. 替换： 敏感词\n 3. 提取： 从字符串中获取指定部分\n\n方法： 通常使用已经写好的正则表达式：http://c.runoob.com/front-end/854\n\n\n# 一、创建\n\n\n# （一）通过 构造函数\n\nvar 变量名 = new regexp(/表达式/[特性])\n\n特性：\n\n 1. g： 全局匹配\n 2. i： 忽略大小写\n 3. gi： 全局匹配 + 忽略大小写\n\nvar regexp = new regexp(/123/);\n\n\n1\n\n\n\n# （二）通过 字面量：var 变量名 = /表达式/（推荐）\n\nvar rg = /123/;\n\n\n# 二、表达式.test('字符串')\n\n作用： 检测字符串是否符合正则表达式要求的规范\n\n返回值： 布尔值（true：符合；false：不符合）\n\nconsole.log(rg.test(123));\nconsole.log(rg.test('abc'));\n\n\n1\n2\n\n\n\n# 三、元字符\n\n概念： 正则表达式中具有特殊意义的字符\n\n\n# （1）边界符\n\n^： 必须以某个字符开始\n\n$： 必须以某个字符结束\n\n^ 加 $： 精准匹配\n\n\n# （2）包含符\n\n[]： 包含一系列字符串中的一个\n\n\n# （3）不包含符\n\n[^]： 不包含一系列字符串中的一个\n\n\n# （4）范围符\n\n-： a-z、a-z、0-9\n\n\n# （5）量词符符\n\n作用： 规定字符出现的次数\n\n*： 至少出现 0 次以上 +： 至少出现 1 次以上 ?： 出现1次 或 出现0次; 相对于 1 || 0 {n}： 重复 n 次 {n,}： 重复 n 次以上 {n,n}： 重复 n 次以上，并且小于等于 n 次（注意逗号后面不跟空格） (){n}： 让括号里面的字符重复 n 次\n\n\n# 四、预定义类\n\n\\d： 匹配 0 ~ 9 之间的任意数字。 相当于 [0-9] \\d： 匹配 0 ~ 9 以外的任意数字。 相当于 [^0-9] \\w： 匹配 任意 字母、数字、下划线。 相当于[a-za-z0-9_] \\w： 匹配 任意 字母、数字、下划线 以外的字符。 相当于[^a-za-z0-9_] \\s： 匹配 空格（包括 换行符、制表符、空格符 等）。 相当于[\\t\\r\\n\\v\\f] \\s： 匹配 空格（包括 换行符、制表符、空格符 等）之外的字符。 相当于[^\\t\\r\\n\\v\\f]\n\n\n# 五、替换\n\n方法： 字符串.replace(表达式, 替换为的字符);\n\n返回值： 新字符串\n\nvar text = document.queryselector('textarea');\nvar btn = document.queryselector('button');\nvar div = document.queryselector('div');\nbtn.onclick = function() {\n    div.innerhtml = text.value.replace(/激情|gay/g, '**');\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <textarea name=\"\" id=\"message\"></textarea> <button>提交</button>\n    <div></div>\n    <script>\n        // 知识点：正则表达式\n        // 作用：匹配字符串中字符组合的规则\n        // 使用场景：\n            // 1、匹配：表单验证\n            // 2、替换：敏感词\n            // 2、提取：从字符串中获取指定部分\n        // 方法：通常使用已经写好的正则表达式：http://c.runoob.com/front-end/854\n\n        // （1）创建\n            // 方法一：通过 构造函数： var 变量名 = new regexp(/表达式/[特性])\n                // 特性：1、g：全局匹配  2、i：忽略大小写  3、gi：全局匹配 + 忽略大小写\n            var regexp = new regexp(/123/);\n\n            // 方法二（推荐）：通过 字面量：var 变量名 = /表达式/;\n            var rg = /123/;\n\n        // （2）表达式.test('字符串')\n            // 作用：检测字符串是否符合正则表达式要求的规范\n            // 返回值：布尔值（true：符合；false：不符合）\n            console.log(rg.test(123));\n            console.log(rg.test('abc'));\n\n\n        /* （3）元字符\n            概念：正则表达式中具有特殊意义的字符\n\n                1、边界符\n                    ^：必须以某个字符开始\n                    $：必须以某个字符结束\n                    ^ 加 $：精准匹配\n\n                2、包含符\n                    []：包含一系列字符串中的一个\n\n                3、不包含符\n                    [^]：不包含一系列字符串中的一个\n\n                4、范围符\n                    -：a-z、a-z、0-9\n                \n                5、量词符符\n                    // 作用：规定字符出现的次数\n                    *：至少出现 0 次以上\n                    +：至少出现 1 次以上\n                    ?：出现1次 或 出现0次; 相对于 1 || 0\n                    {n}：重复 n 次\n                    {n,}：重复 n 次以上\n                    {n,n}：重复 n 次以上，并且小于等于 n 次（注意逗号后面不跟空格）\n                    (){n}：让括号里面的字符重复 n 次\n        */\n\n        /* \n        （4）预定义类\n            \\d：匹配 0 ~ 9 之间的任意数字。 相当于 [0-9]\n            \\d：匹配 0 ~ 9 以外的任意数字。 相当于 [^0-9]\n            \\w：匹配 任意 字母、数字、下划线。 相当于[a-za-z0-9_]\n            \\w：匹配 任意 字母、数字、下划线 以外的字符。 相当于[^a-za-z0-9_]\n            \\s：匹配 空格（包括 换行符、制表符、空格符 等）。 相当于[\\t\\r\\n\\v\\f]\n            \\s：匹配 空格（包括 换行符、制表符、空格符 等）之外的字符。 相当于[^\\t\\r\\n\\v\\f]\n        */\n\n        // （5）替换\n        // 方法：字符串.replace(表达式, 替换为的字符);\n        // 返回值：新字符串\n        var text = document.queryselector('textarea');\n        var btn = document.queryselector('button');\n        var div = document.queryselector('div');\n        btn.onclick = function() {\n            div.innerhtml = text.value.replace(/激情|gay/g, '**');\n        }\n            \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"ES6 标准入门（作用：阮一峰）",frontmatter:{title:"ES6 标准入门（作用：阮一峰）",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/e52e53/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/00.ES6%20%E6%A0%87%E5%87%86%E5%85%A5%E9%97%A8%EF%BC%88%E4%BD%9C%E7%94%A8%EF%BC%9A%E9%98%AE%E4%B8%80%E5%B3%B0%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/00.ES6 标准入门（作用：阮一峰）.md",key:"v-0ddd240e",path:"/pages/e52e53/",headersStr:null,content:"ES6 标准入门（作用：阮一峰）：https://es6.ruanyifeng.com/#README",normalizedContent:"es6 标准入门（作用：阮一峰）：https://es6.ruanyifeng.com/#readme",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"Symbol 数据结构",frontmatter:{title:"Symbol 数据结构",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/5d4860/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/03.Symbol%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/03.Symbol 数据结构.md",key:"v-4191bdea",path:"/pages/5d4860/",headers:[{level:2,title:"一、创建 Symbol",slug:"一、创建-symbol",normalizedTitle:"一、创建 symbol",charIndex:148},{level:2,title:"二、初始化 Symbol",slug:"二、初始化-symbol",normalizedTitle:"二、初始化 symbol",charIndex:238},{level:2,title:"三、创建 Symbol.for",slug:"三、创建-symbol-for",normalizedTitle:"三、创建 symbol.for",charIndex:370},{level:2,title:"四、应用场景",slug:"四、应用场景",normalizedTitle:"四、应用场景",charIndex:579},{level:3,title:"（一）给对象添加 属性 和 方法",slug:"一-给对象添加-属性-和-方法",normalizedTitle:"（一）给对象添加 属性 和 方法",charIndex:590},{level:2,title:"五、常用内置属性：",slug:"五、常用内置属性",normalizedTitle:"五、常用内置属性：",charIndex:1454},{level:3,title:"（一）Symbol.hasInstance",slug:"一-symbol-hasinstance",normalizedTitle:"（一）symbol.hasinstance",charIndex:1488}],headersStr:"一、创建 Symbol 二、初始化 Symbol 三、创建 Symbol.for 四、应用场景 （一）给对象添加 属性 和 方法 五、常用内置属性： （一）Symbol.hasInstance",content:'# 知识点：Symbol 数据结构\n\n作用： 表示独一无二的值\n\n特性：\n\n 1. 类似字符串类型\n 2. 解决命名冲突问题\n 3. 无法和其它数据进行运算\n 4. Symbol 定义的对象属性不能使用 for...in 进行遍历，但是可以使用 Reflect.ownKeys 进行遍历\n\n\n# 一、创建 Symbol\n\nlet s = Symbol();\nconsole.log(s, typeof s);  // Symbol() "symbol"\n\n\n1\n2\n\n\n\n# 二、初始化 Symbol\n\n特性： 内容一样，但是内部的 ID 不一样\n\nlet s2 = Symbol(\'尚硅谷\');\nlet s3 = Symbol(\'尚硅谷\');\nconsole.log(s2 === s3);  // false\n\n\n1\n2\n3\n\n\n\n# 三、创建 Symbol.for\n\n特性： 内容一样，指向的都是同一个 ID\n\nlet s4 = Symbol.for(\'尚硅谷\');\nlet s5 = Symbol.for(\'尚硅谷\');\nconsole.log(s4 === s5);  // true\n\n\n1\n2\n3\n\n\n不能与其他数据进行运算：\n\nlet result = s5 + 100;\nlet result = s5 > 100;\n\n\n1\n2\n\n\n\n# 四、应用场景\n\n\n# （一）给对象添加 属性 和 方法\n\n作用： 解决使用传统方法，会覆盖原有 属性或方法的 问题\n\nlet game = {\n   name:\'俄罗斯方块\',\n   up: function(){},\n   down: function(){}\n};\n// 传统方法：\n   // game.up = function () {\n   //     console.log("我可以改变形状");\n   // }\n\n// Symbol 方法一：\n   let methods = {\n       up: Symbol(),\n       down: Symbol()\n   };\n\n   game[methods.up] = function(){\n       console.log("我可以改变形状");\n   }\n\n   game[methods.down] = function(){\n       console.log("我可以快速下降!!");\n   }\n\n   // 这样 game 对象里面就多了两个 Symbol 方法，且不会覆盖原来的 up 方法\n   console.log(game);\n\n// Symbol 方法二（推荐）：\n   let youxi = {\n       name:"狼人杀",\n       [Symbol(\'say\')]: function(){\n           console.log("我可以发言")\n       },\n       [Symbol(\'zibao\')]: function(){\n           console.log(\'我可以自爆\');\n       }\n   }\n\n   console.log(youxi)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# 五、常用内置属性：\n\n特性： 只有在特点的场景下，才会执行\n\n\n# （一）Symbol.hasInstance\n\n作用： 当其他对象使用 instanceof 运算符，判断是否为该对象的实例时，会调用这个方法\n\n应用场景： 自定义检测类型\n\nclass Person{\nstatic [Symbol.hasInstance](param){\n       console.log(param);\n       console.log("我被用来检测类型了");\n       return false;   // 自定义 true/false\n   }\n}\n\nlet o = {};\n\nconsole.log(o instanceof Person);\n\nconst arr = [1,2,3];\nconst arr2 = [4,5,6];\narr2[Symbol.isConcatSpreadable] = false;\nconsole.log(arr.concat(arr2));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>symbol</title>\n</head>\n<body>\n    <script>\n        // 知识点：Symbol 数据结构\n        // 作用：表示独一无二的值\n        // 特性：\n            // 1、类似字符串类型\n            // 2、解决命名冲突问题\n            // 3、无法和其它数据进行运算\n            // 4、Symbol 定义的对象属性不能使用 for...in 进行遍历，但是可以使用 Reflect.ownKeys 进行遍历\n\n        // 创建 Symbol\n        let s = Symbol();\n        console.log(s, typeof s);  // Symbol() "symbol"\n\n        // 初始化 Symbol\n            // 特性：内容一样，但是内部的 ID 不一样\n        let s2 = Symbol(\'尚硅谷\');\n        let s3 = Symbol(\'尚硅谷\');\n        console.log(s2 === s3);  // false\n\n        // 创建 Symbol.for \n            // 特性：内容一样，指向的都是同一个 ID\n        let s4 = Symbol.for(\'尚硅谷\');\n        let s5 = Symbol.for(\'尚硅谷\');\n        console.log(s4 === s5);  // true\n\n        // 不能与其他数据进行运算\n        //    let result = s5 + 100;\n        //    let result = s5 > 100;\n\n        // 应用场景：\n            // 给对象添加 属性 和 方法\n\n                // 作用：解决使用传统方法，会覆盖原有 属性或方法的 问题\n                \n                let game = {\n                    name:\'俄罗斯方块\',\n                    up: function(){},\n                    down: function(){}\n                };\n                // 传统方法：\n                    // game.up = function () {\n                    //     console.log("我可以改变形状");\n                    // }\n\n                // Symbol 方法一：\n                    let methods = {\n                        up: Symbol(),\n                        down: Symbol()\n                    };\n\n                    game[methods.up] = function(){\n                        console.log("我可以改变形状");\n                    }\n\n                    game[methods.down] = function(){\n                        console.log("我可以快速下降!!");\n                    }\n\n                    // 这样 game 对象里面就多了两个 Symbol 方法，且不会覆盖原来的 up 方法\n                    console.log(game);\n                \n                // Symbol 方法二（推荐）：\n                    let youxi = {\n                        name:"狼人杀",\n                        [Symbol(\'say\')]: function(){\n                            console.log("我可以发言")\n                        },\n                        [Symbol(\'zibao\')]: function(){\n                            console.log(\'我可以自爆\');\n                        }\n                    }\n\n                    console.log(youxi)\n\n        // 常用内置属性：\n            // 特性：只有在特点的场景下，才会执行\n\n            // （1）Symbol.hasInstance\n                // 作用：当其他对象使用 instanceof 运算符，判断是否为该对象的实例时，会调用这个方法\n                // 应用场景：自定义检测类型\n\n                class Person{\n                static [Symbol.hasInstance](param){\n                        console.log(param);\n                        console.log("我被用来检测类型了");\n                        return false;   // 自定义 true/false\n                    }\n                }\n\n                let o = {};\n\n                console.log(o instanceof Person);\n\n                const arr = [1,2,3];\n                const arr2 = [4,5,6];\n                arr2[Symbol.isConcatSpreadable] = false;\n                console.log(arr.concat(arr2));\n\n    <\/script>\n</body>\n</html> \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n',normalizedContent:'# 知识点：symbol 数据结构\n\n作用： 表示独一无二的值\n\n特性：\n\n 1. 类似字符串类型\n 2. 解决命名冲突问题\n 3. 无法和其它数据进行运算\n 4. symbol 定义的对象属性不能使用 for...in 进行遍历，但是可以使用 reflect.ownkeys 进行遍历\n\n\n# 一、创建 symbol\n\nlet s = symbol();\nconsole.log(s, typeof s);  // symbol() "symbol"\n\n\n1\n2\n\n\n\n# 二、初始化 symbol\n\n特性： 内容一样，但是内部的 id 不一样\n\nlet s2 = symbol(\'尚硅谷\');\nlet s3 = symbol(\'尚硅谷\');\nconsole.log(s2 === s3);  // false\n\n\n1\n2\n3\n\n\n\n# 三、创建 symbol.for\n\n特性： 内容一样，指向的都是同一个 id\n\nlet s4 = symbol.for(\'尚硅谷\');\nlet s5 = symbol.for(\'尚硅谷\');\nconsole.log(s4 === s5);  // true\n\n\n1\n2\n3\n\n\n不能与其他数据进行运算：\n\nlet result = s5 + 100;\nlet result = s5 > 100;\n\n\n1\n2\n\n\n\n# 四、应用场景\n\n\n# （一）给对象添加 属性 和 方法\n\n作用： 解决使用传统方法，会覆盖原有 属性或方法的 问题\n\nlet game = {\n   name:\'俄罗斯方块\',\n   up: function(){},\n   down: function(){}\n};\n// 传统方法：\n   // game.up = function () {\n   //     console.log("我可以改变形状");\n   // }\n\n// symbol 方法一：\n   let methods = {\n       up: symbol(),\n       down: symbol()\n   };\n\n   game[methods.up] = function(){\n       console.log("我可以改变形状");\n   }\n\n   game[methods.down] = function(){\n       console.log("我可以快速下降!!");\n   }\n\n   // 这样 game 对象里面就多了两个 symbol 方法，且不会覆盖原来的 up 方法\n   console.log(game);\n\n// symbol 方法二（推荐）：\n   let youxi = {\n       name:"狼人杀",\n       [symbol(\'say\')]: function(){\n           console.log("我可以发言")\n       },\n       [symbol(\'zibao\')]: function(){\n           console.log(\'我可以自爆\');\n       }\n   }\n\n   console.log(youxi)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# 五、常用内置属性：\n\n特性： 只有在特点的场景下，才会执行\n\n\n# （一）symbol.hasinstance\n\n作用： 当其他对象使用 instanceof 运算符，判断是否为该对象的实例时，会调用这个方法\n\n应用场景： 自定义检测类型\n\nclass person{\nstatic [symbol.hasinstance](param){\n       console.log(param);\n       console.log("我被用来检测类型了");\n       return false;   // 自定义 true/false\n   }\n}\n\nlet o = {};\n\nconsole.log(o instanceof person);\n\nconst arr = [1,2,3];\nconst arr2 = [4,5,6];\narr2[symbol.isconcatspreadable] = false;\nconsole.log(arr.concat(arr2));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# demo\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>symbol</title>\n</head>\n<body>\n    <script>\n        // 知识点：symbol 数据结构\n        // 作用：表示独一无二的值\n        // 特性：\n            // 1、类似字符串类型\n            // 2、解决命名冲突问题\n            // 3、无法和其它数据进行运算\n            // 4、symbol 定义的对象属性不能使用 for...in 进行遍历，但是可以使用 reflect.ownkeys 进行遍历\n\n        // 创建 symbol\n        let s = symbol();\n        console.log(s, typeof s);  // symbol() "symbol"\n\n        // 初始化 symbol\n            // 特性：内容一样，但是内部的 id 不一样\n        let s2 = symbol(\'尚硅谷\');\n        let s3 = symbol(\'尚硅谷\');\n        console.log(s2 === s3);  // false\n\n        // 创建 symbol.for \n            // 特性：内容一样，指向的都是同一个 id\n        let s4 = symbol.for(\'尚硅谷\');\n        let s5 = symbol.for(\'尚硅谷\');\n        console.log(s4 === s5);  // true\n\n        // 不能与其他数据进行运算\n        //    let result = s5 + 100;\n        //    let result = s5 > 100;\n\n        // 应用场景：\n            // 给对象添加 属性 和 方法\n\n                // 作用：解决使用传统方法，会覆盖原有 属性或方法的 问题\n                \n                let game = {\n                    name:\'俄罗斯方块\',\n                    up: function(){},\n                    down: function(){}\n                };\n                // 传统方法：\n                    // game.up = function () {\n                    //     console.log("我可以改变形状");\n                    // }\n\n                // symbol 方法一：\n                    let methods = {\n                        up: symbol(),\n                        down: symbol()\n                    };\n\n                    game[methods.up] = function(){\n                        console.log("我可以改变形状");\n                    }\n\n                    game[methods.down] = function(){\n                        console.log("我可以快速下降!!");\n                    }\n\n                    // 这样 game 对象里面就多了两个 symbol 方法，且不会覆盖原来的 up 方法\n                    console.log(game);\n                \n                // symbol 方法二（推荐）：\n                    let youxi = {\n                        name:"狼人杀",\n                        [symbol(\'say\')]: function(){\n                            console.log("我可以发言")\n                        },\n                        [symbol(\'zibao\')]: function(){\n                            console.log(\'我可以自爆\');\n                        }\n                    }\n\n                    console.log(youxi)\n\n        // 常用内置属性：\n            // 特性：只有在特点的场景下，才会执行\n\n            // （1）symbol.hasinstance\n                // 作用：当其他对象使用 instanceof 运算符，判断是否为该对象的实例时，会调用这个方法\n                // 应用场景：自定义检测类型\n\n                class person{\n                static [symbol.hasinstance](param){\n                        console.log(param);\n                        console.log("我被用来检测类型了");\n                        return false;   // 自定义 true/false\n                    }\n                }\n\n                let o = {};\n\n                console.log(o instanceof person);\n\n                const arr = [1,2,3];\n                const arr2 = [4,5,6];\n                arr2[symbol.isconcatspreadable] = false;\n                console.log(arr.concat(arr2));\n\n    <\/script>\n</body>\n</html> \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"Set 数据结构",frontmatter:{title:"Set 数据结构",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/0f905a/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/04.Set%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/04.Set 数据结构.md",key:"v-7eb4aa00",path:"/pages/0f905a/",headers:[{level:2,title:"一、常用属性",slug:"一、常用属性",normalizedTitle:"一、常用属性",charIndex:217},{level:3,title:"（一）获取 成员个数",slug:"一-获取-成员个数",normalizedTitle:"（一）获取 成员个数",charIndex:228},{level:2,title:"二、常用方法",slug:"二、常用方法",normalizedTitle:"二、常用方法",charIndex:265},{level:3,title:"（一）添加 set 元素",slug:"一-添加-set-元素",normalizedTitle:"（一）添加 set 元素",charIndex:299},{level:3,title:"（二）删除 set 元素",slug:"二-删除-set-元素",normalizedTitle:"（二）删除 set 元素",charIndex:375},{level:3,title:"（三）查找 set 元素",slug:"三-查找-set-元素",normalizedTitle:"（三）查找 set 元素",charIndex:432},{level:3,title:"（四）删除所有 set 元素",slug:"四-删除所有-set-元素",normalizedTitle:"（四）删除所有 set 元素",charIndex:535},{level:3,title:"（五）遍历 set 元素",slug:"五-遍历-set-元素",normalizedTitle:"（五）遍历 set 元素",charIndex:589},{level:2,title:"三、应用场景",slug:"三、应用场景",normalizedTitle:"三、应用场景",charIndex:688},{level:3,title:"（一）数组去重",slug:"一-数组去重",normalizedTitle:"（一）数组去重",charIndex:744},{level:3,title:"（二）交集（两个数组中，都存在的成员）",slug:"二-交集-两个数组中-都存在的成员",normalizedTitle:"（二）交集（两个数组中，都存在的成员）",charIndex:814},{level:3,title:"（三）并集（合并两个数组中的成员，并去重）",slug:"三-并集-合并两个数组中的成员-并去重",normalizedTitle:"（三）并集（合并两个数组中的成员，并去重）",charIndex:944},{level:3,title:"（四）差集（两个数组中，只有一个数组存在这个成员）",slug:"四-差集-两个数组中-只有一个数组存在这个成员",normalizedTitle:"（四）差集（两个数组中，只有一个数组存在这个成员）",charIndex:1043}],headersStr:"一、常用属性 （一）获取 成员个数 二、常用方法 （一）添加 set 元素 （二）删除 set 元素 （三）查找 set 元素 （四）删除所有 set 元素 （五）遍历 set 元素 三、应用场景 （一）数组去重 （二）交集（两个数组中，都存在的成员） （三）并集（合并两个数组中的成员，并去重） （四）差集（两个数组中，只有一个数组存在这个成员）",content:'# 知识点：Set 数据结构\n\n作用： 类似数组，但成员是唯一的\n\n特性：\n\n 1. 成员有重复的，会被删除\n 2. 本身是一个对象\n\n创建： const 常量名 = new Set();\n\nconst s = new Set();\n\n\n1\n\n\n初始化： const 常量名 = new Set([set元素, set元素, ...]);\n\nconst set = new Set([1, 2, 3, 4, 4])\n\n\n1\n\n\n\n# 一、常用属性\n\n\n# （一）获取 成员个数\n\n  s.size;  // 4\n\n\n1\n\n\n\n# 二、常用方法\n\nconst s1 = new Set();\n\n\n# （一）添加 set 元素\n\n方法： set数据.add()\n\n特性： 允许链式编程\n\ns.add(1).add(2).add(3);\n\n\n1\n\n\n\n# （二）删除 set 元素\n\n方法： set数据.delete(元素)\n\ns.delete(2)\n\n\n1\n\n\n\n# （三）查找 set 元素\n\n方法： set数据.has(元素)\n\n返回值： 布尔值（true：存在；false：不存在）\n\nconsole.log(s.has(1));  // true\n\n\n1\n\n\n\n# （四）删除所有 set 元素\n\n方法： set数据.clear()\n\ns.clear()\n\n\n1\n\n\n\n# （五）遍历 set 元素\n\n方法： set数据.forEach(当前 set 元素 => 函数体)\n\ns.forEach(value => console.log(value))\n\n\n1\n\n\n\n# 三、应用场景\n\nlet arr = [1, 2, 3, 4, 5, 4, 3, 2, 1];\n\n\n1\n\n\n\n# （一）数组去重\n\nlet result = [...new Set(arr)];  // [1, 2, 3, 4, 5]\n\n\n1\n\n\n\n# （二）交集（两个数组中，都存在的成员）\n\nlet arr1 = [4, 5, 6, 7];\nlet result1 = result.filter(item => new Set(arr1).has(item));  // [4, 5]\n\n\n1\n2\n\n\n\n# （三）并集（合并两个数组中的成员，并去重）\n\nlet union = [new Set([...arr, ...arr1])]  // [1, 2, 3, 4, 5, 6, 7]\n\n\n1\n\n\n\n# （四）差集（两个数组中，只有一个数组存在这个成员）\n\nlet a1 = [1, 2, 3, 4, 5];\nlet a2 = [3, 4, 5, 6, 7];\n// 求 a1 的差集\nlet diff = [...new Set(a1)].filter(item => !(new Set(a2).has(item)))\nconsole.log(diff);  // [1, 2]\n\n\n1\n2\n3\n4\n5\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>集合</title>\n</head>\n<body>\n    <script>\n    // 知识点：Set 数据结构\n\n    // 作用：类似数组，但成员是唯一的\n    // 特性：\n        // 1、成员有重复的，会被删除\n        // 2、本身是一个对象\n\n    // 创建：const 常量名 = new Set();\n    const s = new Set();\n\n    // 初始化：const 常量名 = new Set([set元素, set元素, ...]);\n    const set = new Set([1, 2, 3, 4, 4])\n\n    // 常用属性：\n\n        // 获取 成员个数\n        s.size;  // 4\n\n    // 常用方法：\n\n        const s1 = new Set();\n\n        // （1）添加 set 元素\n        // 方法：set数据.add()\n        // 特性：允许链式编程\n        s.add(1).add(2).add(3);\n\n        // （2）删除 set 元素\n        // 方法：set数据.delete(元素)\n        s.delete(2)\n\n        // （3）查找 set 元素\n        // 方法：set数据.has(元素)\n        // 返回值：布尔值（true：存在；false：不存在）\n        console.log(s.has(1));  // true\n\n        // （4）删除所有 set 元素\n        // 方法：set数据.clear()\n        // s.clear()\n\n        // （5）遍历 set 元素\n        // 方法：set数据.forEach(当前 set 元素 => 函数体)\n        s.forEach(value => console.log(value))\n\n    // --------------------------------------------\n\n        let arr = [1, 2, 3, 4, 5, 4, 3, 2, 1];\n\n        // （1）数组去重\n        let result = [...new Set(arr)];  // [1, 2, 3, 4, 5]\n\n        // （2）交集（两个数组中，都存在的成员）\n        let arr1 = [4, 5, 6, 7];\n        let result1 = result.filter(item => new Set(arr1).has(item));  // [4, 5]\n        \n        // （3）并集（合并两个数组中的成员，并去重）\n        let union = [new Set([...arr, ...arr1])]  // [1, 2, 3, 4, 5, 6, 7]\n\n        // （4）差集（两个数组中，只有一个数组存在这个成员）\n        let a1 = [1, 2, 3, 4, 5];\n        let a2 = [3, 4, 5, 6, 7];\n        // 求 a1 的差集\n        let diff = [...new Set(a1)].filter(item => !(new Set(a2).has(item)))\n        console.log(diff);  // [1, 2]\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n',normalizedContent:'# 知识点：set 数据结构\n\n作用： 类似数组，但成员是唯一的\n\n特性：\n\n 1. 成员有重复的，会被删除\n 2. 本身是一个对象\n\n创建： const 常量名 = new set();\n\nconst s = new set();\n\n\n1\n\n\n初始化： const 常量名 = new set([set元素, set元素, ...]);\n\nconst set = new set([1, 2, 3, 4, 4])\n\n\n1\n\n\n\n# 一、常用属性\n\n\n# （一）获取 成员个数\n\n  s.size;  // 4\n\n\n1\n\n\n\n# 二、常用方法\n\nconst s1 = new set();\n\n\n# （一）添加 set 元素\n\n方法： set数据.add()\n\n特性： 允许链式编程\n\ns.add(1).add(2).add(3);\n\n\n1\n\n\n\n# （二）删除 set 元素\n\n方法： set数据.delete(元素)\n\ns.delete(2)\n\n\n1\n\n\n\n# （三）查找 set 元素\n\n方法： set数据.has(元素)\n\n返回值： 布尔值（true：存在；false：不存在）\n\nconsole.log(s.has(1));  // true\n\n\n1\n\n\n\n# （四）删除所有 set 元素\n\n方法： set数据.clear()\n\ns.clear()\n\n\n1\n\n\n\n# （五）遍历 set 元素\n\n方法： set数据.foreach(当前 set 元素 => 函数体)\n\ns.foreach(value => console.log(value))\n\n\n1\n\n\n\n# 三、应用场景\n\nlet arr = [1, 2, 3, 4, 5, 4, 3, 2, 1];\n\n\n1\n\n\n\n# （一）数组去重\n\nlet result = [...new set(arr)];  // [1, 2, 3, 4, 5]\n\n\n1\n\n\n\n# （二）交集（两个数组中，都存在的成员）\n\nlet arr1 = [4, 5, 6, 7];\nlet result1 = result.filter(item => new set(arr1).has(item));  // [4, 5]\n\n\n1\n2\n\n\n\n# （三）并集（合并两个数组中的成员，并去重）\n\nlet union = [new set([...arr, ...arr1])]  // [1, 2, 3, 4, 5, 6, 7]\n\n\n1\n\n\n\n# （四）差集（两个数组中，只有一个数组存在这个成员）\n\nlet a1 = [1, 2, 3, 4, 5];\nlet a2 = [3, 4, 5, 6, 7];\n// 求 a1 的差集\nlet diff = [...new set(a1)].filter(item => !(new set(a2).has(item)))\nconsole.log(diff);  // [1, 2]\n\n\n1\n2\n3\n4\n5\n\n\n\n# demo\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>集合</title>\n</head>\n<body>\n    <script>\n    // 知识点：set 数据结构\n\n    // 作用：类似数组，但成员是唯一的\n    // 特性：\n        // 1、成员有重复的，会被删除\n        // 2、本身是一个对象\n\n    // 创建：const 常量名 = new set();\n    const s = new set();\n\n    // 初始化：const 常量名 = new set([set元素, set元素, ...]);\n    const set = new set([1, 2, 3, 4, 4])\n\n    // 常用属性：\n\n        // 获取 成员个数\n        s.size;  // 4\n\n    // 常用方法：\n\n        const s1 = new set();\n\n        // （1）添加 set 元素\n        // 方法：set数据.add()\n        // 特性：允许链式编程\n        s.add(1).add(2).add(3);\n\n        // （2）删除 set 元素\n        // 方法：set数据.delete(元素)\n        s.delete(2)\n\n        // （3）查找 set 元素\n        // 方法：set数据.has(元素)\n        // 返回值：布尔值（true：存在；false：不存在）\n        console.log(s.has(1));  // true\n\n        // （4）删除所有 set 元素\n        // 方法：set数据.clear()\n        // s.clear()\n\n        // （5）遍历 set 元素\n        // 方法：set数据.foreach(当前 set 元素 => 函数体)\n        s.foreach(value => console.log(value))\n\n    // --------------------------------------------\n\n        let arr = [1, 2, 3, 4, 5, 4, 3, 2, 1];\n\n        // （1）数组去重\n        let result = [...new set(arr)];  // [1, 2, 3, 4, 5]\n\n        // （2）交集（两个数组中，都存在的成员）\n        let arr1 = [4, 5, 6, 7];\n        let result1 = result.filter(item => new set(arr1).has(item));  // [4, 5]\n        \n        // （3）并集（合并两个数组中的成员，并去重）\n        let union = [new set([...arr, ...arr1])]  // [1, 2, 3, 4, 5, 6, 7]\n\n        // （4）差集（两个数组中，只有一个数组存在这个成员）\n        let a1 = [1, 2, 3, 4, 5];\n        let a2 = [3, 4, 5, 6, 7];\n        // 求 a1 的差集\n        let diff = [...new set(a1)].filter(item => !(new set(a2).has(item)))\n        console.log(diff);  // [1, 2]\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"Map 数据结构",frontmatter:{title:"Map 数据结构",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/0490bf/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/05.Map%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/05.Map 数据结构.md",key:"v-2846b740",path:"/pages/0490bf/",headers:[{level:2,title:"一、创建 Map",slug:"一、创建-map",normalizedTitle:"一、创建 map",charIndex:69},{level:2,title:"二、添加成员",slug:"二、添加成员",normalizedTitle:"二、添加成员",charIndex:107},{level:2,title:"三、方法",slug:"三、方法",normalizedTitle:"三、方法",charIndex:236},{level:3,title:"（一）属性个数",slug:"一-属性个数",normalizedTitle:"（一）属性个数",charIndex:245},{level:3,title:"（二）删除属性",slug:"二-删除属性",normalizedTitle:"（二）删除属性",charIndex:277},{level:3,title:"（三）获取属性值",slug:"三-获取属性值",normalizedTitle:"（三）获取属性值",charIndex:313},{level:3,title:"（四）清空属性",slug:"四-清空属性",normalizedTitle:"（四）清空属性",charIndex:365},{level:3,title:"（五）遍历",slug:"五-遍历",normalizedTitle:"（五）遍历",charIndex:394}],headersStr:"一、创建 Map 二、添加成员 三、方法 （一）属性个数 （二）删除属性 （三）获取属性值 （四）清空属性 （五）遍历",content:"# 知识点：Map 数据结构\n\n特性：\n\n 1. 类似对象，但属性名不限于字符串，任何类型都可以作为属性\n 2. 本身是一个对象\n\n\n# 一、创建 Map\n\nlet m = new Map();\n\n\n1\n\n\n\n# 二、添加成员\n\n对象作为属性名\n\nlet key = {\n  school : 'ATGUIGU'\n};\nm.set(key, ['北京','上海','深圳']); // 'ATGUIGU': ['北京','上海','深圳']\n\n\n1\n2\n3\n4\n\n\n\n# 三、方法\n\n\n# （一）属性个数\n\nm.size;  // 1\n\n\n1\n\n\n\n# （二）删除属性\n\nm.delete('name');\n\n\n1\n\n\n\n# （三）获取属性值\n\nm.get(key);  // ['北京','上海','深圳']\n\n\n1\n\n\n\n# （四）清空属性\n\nm.clear();\n\n\n1\n\n\n\n# （五）遍历\n\nfor(let v of m){\n  console.log(v);\n}\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Map</title>\n</head>\n<body>\n    <script>\n        // 知识点：Map 数据结构\n        // 特性：\n            // 1、类似对象，但属性名不限于字符串，任何类型都可以作为属性\n            // 2、本身是一个对象\n\n        // 创建 Map\n            let m = new Map();\n\n        // 添加成员\n\n            // 对象作为属性名\n            let key = {\n                school : 'ATGUIGU'\n            };\n            m.set(key, ['北京','上海','深圳']); // 'ATGUIGU': ['北京','上海','深圳']\n\n        // 属性个数\n            m.size;  // 1\n\n        // 删除属性\n            // m.delete('name');\n\n        // 获取属性值\n            m.get(key);  // ['北京','上海','深圳']\n\n        // 清空属性\n            // m.clear();\n\n        //遍历\n            for(let v of m){\n                console.log(v);\n            }\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n",normalizedContent:"# 知识点：map 数据结构\n\n特性：\n\n 1. 类似对象，但属性名不限于字符串，任何类型都可以作为属性\n 2. 本身是一个对象\n\n\n# 一、创建 map\n\nlet m = new map();\n\n\n1\n\n\n\n# 二、添加成员\n\n对象作为属性名\n\nlet key = {\n  school : 'atguigu'\n};\nm.set(key, ['北京','上海','深圳']); // 'atguigu': ['北京','上海','深圳']\n\n\n1\n2\n3\n4\n\n\n\n# 三、方法\n\n\n# （一）属性个数\n\nm.size;  // 1\n\n\n1\n\n\n\n# （二）删除属性\n\nm.delete('name');\n\n\n1\n\n\n\n# （三）获取属性值\n\nm.get(key);  // ['北京','上海','深圳']\n\n\n1\n\n\n\n# （四）清空属性\n\nm.clear();\n\n\n1\n\n\n\n# （五）遍历\n\nfor(let v of m){\n  console.log(v);\n}\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>map</title>\n</head>\n<body>\n    <script>\n        // 知识点：map 数据结构\n        // 特性：\n            // 1、类似对象，但属性名不限于字符串，任何类型都可以作为属性\n            // 2、本身是一个对象\n\n        // 创建 map\n            let m = new map();\n\n        // 添加成员\n\n            // 对象作为属性名\n            let key = {\n                school : 'atguigu'\n            };\n            m.set(key, ['北京','上海','深圳']); // 'atguigu': ['北京','上海','深圳']\n\n        // 属性个数\n            m.size;  // 1\n\n        // 删除属性\n            // m.delete('name');\n\n        // 获取属性值\n            m.get(key);  // ['北京','上海','深圳']\n\n        // 清空属性\n            // m.clear();\n\n        //遍历\n            for(let v of m){\n                console.log(v);\n            }\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"新增关键字",frontmatter:{title:"新增关键字",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/852835/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/06.%E6%96%B0%E5%A2%9E%E5%85%B3%E9%94%AE%E5%AD%97.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/06.新增关键字.md",key:"v-764d3585",path:"/pages/852835/",headers:[{level:2,title:"一、let",slug:"一、let",normalizedTitle:"一、let",charIndex:16},{level:2,title:"二、const",slug:"二、const",normalizedTitle:"二、const",charIndex:721}],headersStr:"一、let 二、const",content:"# 知识点：新增关键字\n\n\n# 一、let\n\n作用： 变量声明\n\n特性： 1、具有块级作用域。在花括号中使用 let 声明的变量，才具有块级作用域\n\nif (true) {\n    let num1 = 100;\n}\nconsole.log(num1);  // 报错\n\n\n1\n2\n3\n4\n\n\n2、不存在变量提升\n\nconsole.log(num2);  // 报错\nlet num2 = 100;\n\n\n1\n2\n\n\n3、不能重复声明变量，解决变量污染问题\n\nlet num3 = 1;\nlet num3 = 2;  // 报错\n\n\n1\n2\n\n\n4、不影响作用域链\n\n{\n    let num4 = 1;\n    function fn () {\n        console.log(num4);  // 1\n    }\n    fn();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n案例：\n\nlet items = document.getElementsByClassName('item');\n// for(var i = 0;i<items.length;i++){  // 会报错，因为这个 i 是声明在全局中的，当执行点击事情的时候 i 已经循环完了\nfor(let i = 0;i<items.length;i++){\n    items[i].onclick = function(){\n        // this.style.background = 'pink';\n        items[i].style.background = 'pink';\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、const\n\n作用： 常量声明\n\n特性： 1、简单数据类型不可修改\n\nconst school = '你好';\nschool = '哈哈';  // 报错\n\n\n1\n2\n\n\n2、复杂数据类型 不可修改地址。也就是 可以修改值，但是不能重新赋值，更推荐用 const 声明 数组 和 对象\n\nconst team = ['UZI', 'MLXG', 'MING', 'Letme']\nteam.push =('Meiko')\n\n\n1\n2\n\n\n3、具有块级作用域\n\n4、声明时，必须赋值\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n    <link crossorigin=\"anonymous\" href=\"https://cdn.bootcss.com/twitter-bootstrap/3.3.7/css/bootstrap.min.css\"\n        rel=\"stylesheet\">\n    <style>\n        .item {\n            width: 100px;\n            height: 50px;\n            border: solid 1px rgb(42, 156, 156);\n            float: left;\n            margin-right: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h2 class=\"page-header\">点击切换颜色</h2>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n    </div>\n    <script>\n        // 知识点：新增关键字\n\n        // （1）let\n        // 作用：变量声明\n\n        // 特性：\n\n            // 1、具有块级作用域。在花括号中使用 let 声明的变量，才具有块级作用域\n                // if (true) {\n                //     let num1 = 100;\n                // }\n                // console.log(num1);  // 报错\n\n            // 2、不存在变量提升\n                // console.log(num2);  // 报错\n                // let num2 = 100;\n                \n            // 3、不能重复声明变量，解决变量污染问题\n                // let num3 = 1;\n                // let num3 = 2;  // 报错\n\n            // 4、不影响作用域链\n                // {\n                //     let num4 = 1;\n                //     function fn () {\n                //         console.log(num4);  // 1\n                //     }\n                //     fn();\n                // }\n        \n        // 案例：\n\n            let items = document.getElementsByClassName('item');\n            // for(var i = 0;i<items.length;i++){  // 会报错，因为这个 i 是声明在全局中的，当执行点击事情的时候 i 已经循环完了\n            for(let i = 0;i<items.length;i++){\n                items[i].onclick = function(){\n                    // this.style.background = 'pink';\n                    items[i].style.background = 'pink';\n                }\n            }\n\n        \n        \n        // （2）const\n        // 作用：常量声明\n        // 特性：\n            // 1、简单数据类型不可修改\n                const school = '你好';\n                school = '哈哈';  // 报错\n\n            // 2、复杂数据类型 不可修改地址。也就是 可以修改值，但是不能重新赋值，更推荐用 const 声明 数组 和 对象\n                const team = ['UZI', 'MLXG', 'MING', 'Letme']\n                team.push =('Meiko')\n                \n            // 3、具有块级作用域\n\n            // 4、声明时，必须赋值\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n",normalizedContent:"# 知识点：新增关键字\n\n\n# 一、let\n\n作用： 变量声明\n\n特性： 1、具有块级作用域。在花括号中使用 let 声明的变量，才具有块级作用域\n\nif (true) {\n    let num1 = 100;\n}\nconsole.log(num1);  // 报错\n\n\n1\n2\n3\n4\n\n\n2、不存在变量提升\n\nconsole.log(num2);  // 报错\nlet num2 = 100;\n\n\n1\n2\n\n\n3、不能重复声明变量，解决变量污染问题\n\nlet num3 = 1;\nlet num3 = 2;  // 报错\n\n\n1\n2\n\n\n4、不影响作用域链\n\n{\n    let num4 = 1;\n    function fn () {\n        console.log(num4);  // 1\n    }\n    fn();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n案例：\n\nlet items = document.getelementsbyclassname('item');\n// for(var i = 0;i<items.length;i++){  // 会报错，因为这个 i 是声明在全局中的，当执行点击事情的时候 i 已经循环完了\nfor(let i = 0;i<items.length;i++){\n    items[i].onclick = function(){\n        // this.style.background = 'pink';\n        items[i].style.background = 'pink';\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、const\n\n作用： 常量声明\n\n特性： 1、简单数据类型不可修改\n\nconst school = '你好';\nschool = '哈哈';  // 报错\n\n\n1\n2\n\n\n2、复杂数据类型 不可修改地址。也就是 可以修改值，但是不能重新赋值，更推荐用 const 声明 数组 和 对象\n\nconst team = ['uzi', 'mlxg', 'ming', 'letme']\nteam.push =('meiko')\n\n\n1\n2\n\n\n3、具有块级作用域\n\n4、声明时，必须赋值\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n    <link crossorigin=\"anonymous\" href=\"https://cdn.bootcss.com/twitter-bootstrap/3.3.7/css/bootstrap.min.css\"\n        rel=\"stylesheet\">\n    <style>\n        .item {\n            width: 100px;\n            height: 50px;\n            border: solid 1px rgb(42, 156, 156);\n            float: left;\n            margin-right: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h2 class=\"page-header\">点击切换颜色</h2>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n    </div>\n    <script>\n        // 知识点：新增关键字\n\n        // （1）let\n        // 作用：变量声明\n\n        // 特性：\n\n            // 1、具有块级作用域。在花括号中使用 let 声明的变量，才具有块级作用域\n                // if (true) {\n                //     let num1 = 100;\n                // }\n                // console.log(num1);  // 报错\n\n            // 2、不存在变量提升\n                // console.log(num2);  // 报错\n                // let num2 = 100;\n                \n            // 3、不能重复声明变量，解决变量污染问题\n                // let num3 = 1;\n                // let num3 = 2;  // 报错\n\n            // 4、不影响作用域链\n                // {\n                //     let num4 = 1;\n                //     function fn () {\n                //         console.log(num4);  // 1\n                //     }\n                //     fn();\n                // }\n        \n        // 案例：\n\n            let items = document.getelementsbyclassname('item');\n            // for(var i = 0;i<items.length;i++){  // 会报错，因为这个 i 是声明在全局中的，当执行点击事情的时候 i 已经循环完了\n            for(let i = 0;i<items.length;i++){\n                items[i].onclick = function(){\n                    // this.style.background = 'pink';\n                    items[i].style.background = 'pink';\n                }\n            }\n\n        \n        \n        // （2）const\n        // 作用：常量声明\n        // 特性：\n            // 1、简单数据类型不可修改\n                const school = '你好';\n                school = '哈哈';  // 报错\n\n            // 2、复杂数据类型 不可修改地址。也就是 可以修改值，但是不能重新赋值，更推荐用 const 声明 数组 和 对象\n                const team = ['uzi', 'mlxg', 'ming', 'letme']\n                team.push =('meiko')\n                \n            // 3、具有块级作用域\n\n            // 4、声明时，必须赋值\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"解构赋值",frontmatter:{title:"解构赋值",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/42f9bb/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/07.%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/07.解构赋值.md",key:"v-6e2ea5e0",path:"/pages/42f9bb/",headers:[{level:2,title:"一、数组解构",slug:"一、数组解构",normalizedTitle:"一、数组解构",charIndex:46},{level:2,title:"二、对象解构",slug:"二、对象解构",normalizedTitle:"二、对象解构",charIndex:159}],headersStr:"一、数组解构 二、对象解构",content:"# 知识点：解构赋值\n\n作用： 从 数组 或 对象 中提取对应的值，进行声明并赋值\n\n\n# 一、数组解构\n\nlet [a, b, c] = [1, 2, 3];\nconsole.log(a)  // 1\nconsole.log(b)  // 2\nconsole.log(c)  // 3\n\n\n1\n2\n3\n4\n\n\n\n# 二、对象解构\n\n新变量名 和 对象属性名 相同：\n\nlet person = { name: 'zhangsan', age: 20 };\nlet { name, age } = person;\nconsole.log(name);  // 'zhangsan'\nconsole.log(age);  // 20\n\n\n1\n2\n3\n4\n\n\n自定义新变量名：\n\nlet person = {name: 'lisi', age: 30, sex: '男'};\nlet {name: myName, age: Age, sex: Sex} = person;\nconsole.log(myName)  // 'lisi'\nconsole.log(Age)  // 30\nconsole.log(Sex)  // '男'\n\n\n1\n2\n3\n4\n5\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 知识点：解构赋值\n        // 作用：从 数组 或 对象 中提取对应的值，进行声明并赋值\n\n        // （1）数组解构\n        let [a, b, c] = [1, 2, 3];\n        console.log(a)  // 1\n        console.log(b)  // 2\n        console.log(c)  // 3\n\n        // （2）对象解构\n\n        // 新变量名 和 对象属性名 相同\n        let person = { name: 'zhangsan', age: 20 };\n        let { name, age } = person;\n        console.log(name);  // 'zhangsan'\n        console.log(age);  // 20\n\n        // 自定义新变量名\n        // let person = {name: 'lisi', age: 30, sex: '男'};\n\t\t// let {name: myName, age: Age, sex: Sex} = person;\n\t\t// console.log(myName)  // 'lisi'\n\t\t// console.log(Age)  // 30\n        // console.log(Sex)  // '男'\n        \n        \n\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n",normalizedContent:"# 知识点：解构赋值\n\n作用： 从 数组 或 对象 中提取对应的值，进行声明并赋值\n\n\n# 一、数组解构\n\nlet [a, b, c] = [1, 2, 3];\nconsole.log(a)  // 1\nconsole.log(b)  // 2\nconsole.log(c)  // 3\n\n\n1\n2\n3\n4\n\n\n\n# 二、对象解构\n\n新变量名 和 对象属性名 相同：\n\nlet person = { name: 'zhangsan', age: 20 };\nlet { name, age } = person;\nconsole.log(name);  // 'zhangsan'\nconsole.log(age);  // 20\n\n\n1\n2\n3\n4\n\n\n自定义新变量名：\n\nlet person = {name: 'lisi', age: 30, sex: '男'};\nlet {name: myname, age: age, sex: sex} = person;\nconsole.log(myname)  // 'lisi'\nconsole.log(age)  // 30\nconsole.log(sex)  // '男'\n\n\n1\n2\n3\n4\n5\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 知识点：解构赋值\n        // 作用：从 数组 或 对象 中提取对应的值，进行声明并赋值\n\n        // （1）数组解构\n        let [a, b, c] = [1, 2, 3];\n        console.log(a)  // 1\n        console.log(b)  // 2\n        console.log(c)  // 3\n\n        // （2）对象解构\n\n        // 新变量名 和 对象属性名 相同\n        let person = { name: 'zhangsan', age: 20 };\n        let { name, age } = person;\n        console.log(name);  // 'zhangsan'\n        console.log(age);  // 20\n\n        // 自定义新变量名\n        // let person = {name: 'lisi', age: 30, sex: '男'};\n\t\t// let {name: myname, age: age, sex: sex} = person;\n\t\t// console.log(myname)  // 'lisi'\n\t\t// console.log(age)  // 30\n        // console.log(sex)  // '男'\n        \n        \n\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"模板字符串",frontmatter:{title:"模板字符串",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/4211fe/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/08.%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/08.模板字符串.md",key:"v-63015344",path:"/pages/4211fe/",headersStr:null,content:'# 知识点：模板字符串\n\n语法： ``\n\n特性： 1、允许使用换行符\n\nlet str = `\n    你好\n    模板字符串\n`\n\n\n1\n2\n3\n4\n\n\n2、变量拼接 语法： ${变量}\n\nlet nihao = \'你好\'\nlet out = `${nihao}模板字符串` // 你好模板字符串\n\n\n1\n2\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width initial-scale=1 maximum-scale=1 minimum-scale=1 user-scalable=no">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 知识点：模板字符串\n\n        // 语法：``\n        // 特性：\n            // 1、允许使用换行符\n            let str = `\n                你好\n                模板字符串\n            `\n\n            // 2、变量拼接\n            // 语法：${变量}\n            let nihao = \'你好\'\n            let out = `${nihao}模板字符串` // 你好模板字符串\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',normalizedContent:'# 知识点：模板字符串\n\n语法： ``\n\n特性： 1、允许使用换行符\n\nlet str = `\n    你好\n    模板字符串\n`\n\n\n1\n2\n3\n4\n\n\n2、变量拼接 语法： ${变量}\n\nlet nihao = \'你好\'\nlet out = `${nihao}模板字符串` // 你好模板字符串\n\n\n1\n2\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width initial-scale=1 maximum-scale=1 minimum-scale=1 user-scalable=no">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 知识点：模板字符串\n\n        // 语法：``\n        // 特性：\n            // 1、允许使用换行符\n            let str = `\n                你好\n                模板字符串\n            `\n\n            // 2、变量拼接\n            // 语法：${变量}\n            let nihao = \'你好\'\n            let out = `${nihao}模板字符串` // 你好模板字符串\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"对象的简化写法",frontmatter:{title:"对象的简化写法",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/19fa1b/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/09.%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%AE%80%E5%8C%96%E5%86%99%E6%B3%95.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/09.对象的简化写法.md",key:"v-3500fbae",path:"/pages/19fa1b/",headersStr:null,content:"# 知识点：对象的简化写法\n\n作用：\n\n 1. 当属性名和属性值里的变量名相同时，允许只写属性名\n 2. 允许省略 :function\n\nlet name = '尚硅谷'\nlet change = function () {\n    console.log('我们可以改变你');\n}\n\n\n1\n2\n3\n4\n\n\n简化写法：\n\nconst school = {\n    name,\n    change,\n    improve () {\n        console.log('我们可以提高你的技能');\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n相当于：\n\nconst school = {\n    name: name,\n    change: change,\n    improve: function () {\n        console.log('我们可以提高你的技能');\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 知识点：对象的简化写法\n        // 作用：\n            // 1、当属性名和属性值里的变量名相同时，允许只写属性名\n            // 2、允许省略 :function\n\n        let name = '尚硅谷'\n        let change = function () {\n            console.log('我们可以改变你');\n        }\n\n        // 简化写法：\n        const school = {\n            name,\n            change,\n            improve () {\n                console.log('我们可以提高你的技能');\n            }\n        }\n\n        // 相当于：\n        const school = {\n            name: name,\n            change: change,\n            improve: function () {\n                console.log('我们可以提高你的技能');\n            }\n        }\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n",normalizedContent:"# 知识点：对象的简化写法\n\n作用：\n\n 1. 当属性名和属性值里的变量名相同时，允许只写属性名\n 2. 允许省略 :function\n\nlet name = '尚硅谷'\nlet change = function () {\n    console.log('我们可以改变你');\n}\n\n\n1\n2\n3\n4\n\n\n简化写法：\n\nconst school = {\n    name,\n    change,\n    improve () {\n        console.log('我们可以提高你的技能');\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n相当于：\n\nconst school = {\n    name: name,\n    change: change,\n    improve: function () {\n        console.log('我们可以提高你的技能');\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 知识点：对象的简化写法\n        // 作用：\n            // 1、当属性名和属性值里的变量名相同时，允许只写属性名\n            // 2、允许省略 :function\n\n        let name = '尚硅谷'\n        let change = function () {\n            console.log('我们可以改变你');\n        }\n\n        // 简化写法：\n        const school = {\n            name,\n            change,\n            improve () {\n                console.log('我们可以提高你的技能');\n            }\n        }\n\n        // 相当于：\n        const school = {\n            name: name,\n            change: change,\n            improve: function () {\n                console.log('我们可以提高你的技能');\n            }\n        }\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"允许给函数形参设置默认值",frontmatter:{title:"允许给函数形参设置默认值",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/21b19d/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/11.%E5%85%81%E8%AE%B8%E7%BB%99%E5%87%BD%E6%95%B0%E5%BD%A2%E5%8F%82%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E5%80%BC.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/11.允许给函数形参设置默认值.md",key:"v-0f924778",path:"/pages/21b19d/",headers:[{level:2,title:"搭配解构赋值使用",slug:"搭配解构赋值使用",normalizedTitle:"搭配解构赋值使用",charIndex:200},{level:2,title:"搭配解构赋值使用",slug:"搭配解构赋值使用-2",normalizedTitle:"搭配解构赋值使用",charIndex:200}],headersStr:"搭配解构赋值使用 搭配解构赋值使用",content:"# 知识点：允许给函数形参设置默认值\n\n特性： 采用默认值的这个形参 必须放在 没有设置默认值参数 的后面\n\n如果用户不传 c 这个参数，则默认采用 10：\n\nlet fn = (a, b, c = 10) => {\n    console.log(a);\n    console.log(b);\n    console.log(c);\n}\nfn(1, 2);\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 搭配解构赋值使用\n\n作用： 无需初始化变量\n\n传统方法：\n\nlet connect = (options) => {\n    let host = options.host;\n    let username = options.username;\n    let password = options.password;\n    let port = options.port\n}\nconnect({\n    host: 'localhost',\n    username: 'root',\n    password: 'root',\n    port: 3306\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 搭配解构赋值使用\n\nlet connect = ({host='127.0.0.1', username, password, port}) => {\n    console.log(host);  // localhost\n}\nconnect({\n    // host: 'localhost',\n    username: 'root',\n    password: 'root',\n    port: 3306\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width initial-scale=1 maximum-scale=1 minimum-scale=1 user-scalable=no\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 知识点：允许给函数形参设置默认值\n            // 特性：采用默认值的这个形参 必须放在 没有设置默认值参数 的后面\n            // 如果用户不传 c 这个参数，则默认采用 10\n        let fn = (a, b, c = 10) => {\n            console.log(a);\n            console.log(b);\n            console.log(c);\n        }\n        fn(1, 2);\n\n        // 搭配解构赋值使用\n            // 作用：无需初始化变量\n            \n            // 传统方法：\n                // let connect = (options) => {\n                //     let host = options.host;\n                //     let username = options.username;\n                //     let password = options.password;\n                //     let port = options.port\n                // }\n                // connect({\n                //     host: 'localhost',\n                //     username: 'root',\n                //     password: 'root',\n                //     port: 3306\n                // })\n\n            // 搭配解构赋值使用\n                let connect = ({host='127.0.0.1', username, password, port}) => {\n                    console.log(host);  // localhost\n                }\n                connect({\n                    // host: 'localhost',\n                    username: 'root',\n                    password: 'root',\n                    port: 3306\n                })\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n",normalizedContent:"# 知识点：允许给函数形参设置默认值\n\n特性： 采用默认值的这个形参 必须放在 没有设置默认值参数 的后面\n\n如果用户不传 c 这个参数，则默认采用 10：\n\nlet fn = (a, b, c = 10) => {\n    console.log(a);\n    console.log(b);\n    console.log(c);\n}\nfn(1, 2);\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 搭配解构赋值使用\n\n作用： 无需初始化变量\n\n传统方法：\n\nlet connect = (options) => {\n    let host = options.host;\n    let username = options.username;\n    let password = options.password;\n    let port = options.port\n}\nconnect({\n    host: 'localhost',\n    username: 'root',\n    password: 'root',\n    port: 3306\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 搭配解构赋值使用\n\nlet connect = ({host='127.0.0.1', username, password, port}) => {\n    console.log(host);  // localhost\n}\nconnect({\n    // host: 'localhost',\n    username: 'root',\n    password: 'root',\n    port: 3306\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width initial-scale=1 maximum-scale=1 minimum-scale=1 user-scalable=no\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 知识点：允许给函数形参设置默认值\n            // 特性：采用默认值的这个形参 必须放在 没有设置默认值参数 的后面\n            // 如果用户不传 c 这个参数，则默认采用 10\n        let fn = (a, b, c = 10) => {\n            console.log(a);\n            console.log(b);\n            console.log(c);\n        }\n        fn(1, 2);\n\n        // 搭配解构赋值使用\n            // 作用：无需初始化变量\n            \n            // 传统方法：\n                // let connect = (options) => {\n                //     let host = options.host;\n                //     let username = options.username;\n                //     let password = options.password;\n                //     let port = options.port\n                // }\n                // connect({\n                //     host: 'localhost',\n                //     username: 'root',\n                //     password: 'root',\n                //     port: 3306\n                // })\n\n            // 搭配解构赋值使用\n                let connect = ({host='127.0.0.1', username, password, port}) => {\n                    console.log(host);  // localhost\n                }\n                connect({\n                    // host: 'localhost',\n                    username: 'root',\n                    password: 'root',\n                    port: 3306\n                })\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"箭头函数",frontmatter:{title:"箭头函数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/03f6ce/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/10.%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/10.箭头函数.md",key:"v-5fc7eefb",path:"/pages/03f6ce/",headers:[{level:2,title:"箭头函数不适用的场景",slug:"箭头函数不适用的场景",normalizedTitle:"箭头函数不适用的场景",charIndex:669},{level:3,title:"（1）事件回调（如果使用箭头函数，this 将不在指向 事件绑定的元素，而是指向 这个事件定义位置中的 this）",slug:"_1-事件回调-如果使用箭头函数-this-将不在指向-事件绑定的元素-而是指向-这个事件定义位置中的-this",normalizedTitle:"（1）事件回调（如果使用箭头函数，this 将不在指向 事件绑定的元素，而是指向 这个事件定义位置中的 this）",charIndex:684},{level:3,title:"（2）对象的方法（如果使用箭头函数，this 将不在指向 这个对象，而是指向 这个对象定义位置中的 this）",slug:"_2-对象的方法-如果使用箭头函数-this-将不在指向-这个对象-而是指向-这个对象定义位置中的-this",normalizedTitle:"（2）对象的方法（如果使用箭头函数，this 将不在指向 这个对象，而是指向 这个对象定义位置中的 this）",charIndex:961},{level:3,title:"（3）不能作为构造函数",slug:"_3-不能作为构造函数",normalizedTitle:"（3）不能作为构造函数",charIndex:1101},{level:3,title:"（4）不能使用 arguments 变量",slug:"_4-不能使用-arguments-变量",normalizedTitle:"（4）不能使用 arguments 变量",charIndex:1264},{level:2,title:"应用场景",slug:"应用场景",normalizedTitle:"应用场景",charIndex:1389}],headersStr:"箭头函数不适用的场景 （1）事件回调（如果使用箭头函数，this 将不在指向 事件绑定的元素，而是指向 这个事件定义位置中的 this） （2）对象的方法（如果使用箭头函数，this 将不在指向 这个对象，而是指向 这个对象定义位置中的 this） （3）不能作为构造函数 （4）不能使用 arguments 变量 应用场景",content:'# 知识点：箭头函数\n\n作用： 简化函数定义的语法\n\n语法： (参数, 参数, ...) => { 函数体 }\n\n创建：\n\nconst fn1 = () => {\n    console.log(123)\n}\nfn1();\n\n\n1\n2\n3\n4\n\n\n特性： 1、函数体中只有一句代码 并且代码的执行结果就是函数的返回值（return 必须省略） 函数体大括号可以省略\n\nconst sum2 = (n1, n2) => n1 + n2;\t \nconst result = sum2(10, 20);\nconsole.log(result)\n\n\n1\n2\n3\n\n\n2、形参只有一个，形参外侧的小括号也是可以省略的\n\nconst fn3 = v => {\n    console.log(v);;\n}\nfn3(20)\n\n\n1\n2\n3\n4\n\n\n3、箭头函数没有自己的 this，this 指向箭头函数定义位置中的 this\n\nfunction fn4 () {\n    console.log(this);\n    return () => {\n        console.log(this)\n    }\n}\nvar fn5 = fn4();  // window\nfn5();  // window\n\nconst obj = {name: \'zhangsan\'};\nconst resFn = fn4.call(obj);  // obj\nresFn();  // obj\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 箭头函数不适用的场景\n\n\n# （1）事件回调（如果使用箭头函数，this 将不在指向 事件绑定的元素，而是指向 这个事件定义位置中的 this）\n\nad.addEventListener("click", function(){\n    setTimeout(() => {\n        console.log(this);  // <div id="ad" style="background: pink;"></div>\n        this.style.background = \'pink\';\n    }, 2000);\n});\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （2）对象的方法（如果使用箭头函数，this 将不在指向 这个对象，而是指向 这个对象定义位置中的 this）\n\nvar obj = {\n    getName: function () {\n        this.name;\n    }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （3）不能作为构造函数\n\nlet Person = (name, age) => {\n    this.name = name;\n    this.age = age;\n}\nlet me = new Person(\'xiao\', 30);\nconsole.log(me);  // 报错\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （4）不能使用 arguments 变量\n\narguments 变量：用于保存实参\nlet fn = () => {\n    console.log(arguments);  // 报错\n}\nfn(1, 2, 3)\n\n\n1\n2\n3\n4\n5\n\n\n\n# 应用场景\n\n需求： 点击 div 2s 后颜色变成『粉色』\n\n传统方法：\n\nlet ad = document.getElementById(\'ad\');\nad.addEventListener("click", function(){\n    // 保存 this 的值\n    let _this = this;\n    setTimeout(function () {\n        console.log(this);  // window\n        _this.style.background = \'pink\';\n    }, 2000);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n箭头函数：\n\nlet ad = document.getElementById(\'ad\');\nad.addEventListener("click", function(){\n    setTimeout(() => {\n        console.log(this);  // <div id="ad" style="background: pink;"></div>\n        this.style.background = \'pink\';\n    }, 2000);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <style>\n        div {\n            width: 200px;\n            height: 200px;\n            background: #58a;\n        }\n    </style>\n</head>\n<body>\n    <div id="ad"></div>\n    <script>\n        // 知识点：箭头函数\n        // 作用：简化函数定义的语法\n        // 语法：(参数, 参数, ...) => { 函数体 }\n\n        // 创建\n        const fn1 = () => {\n\t\t\tconsole.log(123)\n\t\t}\n\t\tfn1();\n        \n        // 特性：\n            // 1、函数体中只有一句代码 并且代码的执行结果就是函数的返回值（return 必须省略） 函数体大括号可以省略\n            const sum2 = (n1, n2) => n1 + n2;\t \n            const result = sum2(10, 20);\n            console.log(result)\n\n            // 2、形参只有一个，形参外侧的小括号也是可以省略的\n                const fn3 = v => {\n                    console.log(v);;\n                }\n                fn3(20)\n            \n            // 3、箭头函数没有自己的 this，this 指向箭头函数定义位置中的 this\n                function fn4 () {\n                    console.log(this);\n                    return () => {\n                        console.log(this)\n                    }\n                }\n                var fn5 = fn4();  // window\n                fn5();  // window\n\n                const obj = {name: \'zhangsan\'};\n                const resFn = fn4.call(obj);  // obj\n                resFn();  // obj\n            \n        // 箭头函数不适用的场景：\n            // （1）事件回调（如果使用箭头函数，this 将不在指向 事件绑定的元素，而是指向 这个事件定义位置中的 this）\n                ad.addEventListener("click", function(){\n                    setTimeout(() => {\n                        console.log(this);  // <div id="ad" style="background: pink;"></div>\n                        this.style.background = \'pink\';\n                    }, 2000);\n                });\n\n            // （2）对象的方法（如果使用箭头函数，this 将不在指向 这个对象，而是指向 这个对象定义位置中的 this）\n            var obj = {\n                getName: function () {\n                    this.name;\n                }\n            }\n\n            // （3）不能作为构造函数\n                // let Person = (name, age) => {\n                //     this.name = name;\n                //     this.age = age;\n                // }\n                // let me = new Person(\'xiao\', 30);\n                // console.log(me);  // 报错\n\n            // （4）不能使用 arguments 变量\n                // arguments 变量：用于保存实参\n                // let fn = () => {\n                //     console.log(arguments);  // 报错\n                // }\n                // fn(1, 2, 3)\n\n\n        // 应用场景：\n            // 需求：点击 div 2s 后颜色变成『粉色』\n\n            // 传统方法：\n                // let ad = document.getElementById(\'ad\');\n                // ad.addEventListener("click", function(){\n                //     //保存 this 的值\n                //     let _this = this;\n                //     setTimeout(function () {\n                //         console.log(this);  // window\n                //         _this.style.background = \'pink\';\n                //     }, 2000);\n                // });\n\n            // 箭头函数：\n                let ad = document.getElementById(\'ad\');\n                ad.addEventListener("click", function(){\n                    setTimeout(() => {\n                        console.log(this);  // <div id="ad" style="background: pink;"></div>\n                        this.style.background = \'pink\';\n                    }, 2000);\n                });\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n',normalizedContent:'# 知识点：箭头函数\n\n作用： 简化函数定义的语法\n\n语法： (参数, 参数, ...) => { 函数体 }\n\n创建：\n\nconst fn1 = () => {\n    console.log(123)\n}\nfn1();\n\n\n1\n2\n3\n4\n\n\n特性： 1、函数体中只有一句代码 并且代码的执行结果就是函数的返回值（return 必须省略） 函数体大括号可以省略\n\nconst sum2 = (n1, n2) => n1 + n2;\t \nconst result = sum2(10, 20);\nconsole.log(result)\n\n\n1\n2\n3\n\n\n2、形参只有一个，形参外侧的小括号也是可以省略的\n\nconst fn3 = v => {\n    console.log(v);;\n}\nfn3(20)\n\n\n1\n2\n3\n4\n\n\n3、箭头函数没有自己的 this，this 指向箭头函数定义位置中的 this\n\nfunction fn4 () {\n    console.log(this);\n    return () => {\n        console.log(this)\n    }\n}\nvar fn5 = fn4();  // window\nfn5();  // window\n\nconst obj = {name: \'zhangsan\'};\nconst resfn = fn4.call(obj);  // obj\nresfn();  // obj\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 箭头函数不适用的场景\n\n\n# （1）事件回调（如果使用箭头函数，this 将不在指向 事件绑定的元素，而是指向 这个事件定义位置中的 this）\n\nad.addeventlistener("click", function(){\n    settimeout(() => {\n        console.log(this);  // <div id="ad" style="background: pink;"></div>\n        this.style.background = \'pink\';\n    }, 2000);\n});\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （2）对象的方法（如果使用箭头函数，this 将不在指向 这个对象，而是指向 这个对象定义位置中的 this）\n\nvar obj = {\n    getname: function () {\n        this.name;\n    }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （3）不能作为构造函数\n\nlet person = (name, age) => {\n    this.name = name;\n    this.age = age;\n}\nlet me = new person(\'xiao\', 30);\nconsole.log(me);  // 报错\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （4）不能使用 arguments 变量\n\narguments 变量：用于保存实参\nlet fn = () => {\n    console.log(arguments);  // 报错\n}\nfn(1, 2, 3)\n\n\n1\n2\n3\n4\n5\n\n\n\n# 应用场景\n\n需求： 点击 div 2s 后颜色变成『粉色』\n\n传统方法：\n\nlet ad = document.getelementbyid(\'ad\');\nad.addeventlistener("click", function(){\n    // 保存 this 的值\n    let _this = this;\n    settimeout(function () {\n        console.log(this);  // window\n        _this.style.background = \'pink\';\n    }, 2000);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n箭头函数：\n\nlet ad = document.getelementbyid(\'ad\');\nad.addeventlistener("click", function(){\n    settimeout(() => {\n        console.log(this);  // <div id="ad" style="background: pink;"></div>\n        this.style.background = \'pink\';\n    }, 2000);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <style>\n        div {\n            width: 200px;\n            height: 200px;\n            background: #58a;\n        }\n    </style>\n</head>\n<body>\n    <div id="ad"></div>\n    <script>\n        // 知识点：箭头函数\n        // 作用：简化函数定义的语法\n        // 语法：(参数, 参数, ...) => { 函数体 }\n\n        // 创建\n        const fn1 = () => {\n\t\t\tconsole.log(123)\n\t\t}\n\t\tfn1();\n        \n        // 特性：\n            // 1、函数体中只有一句代码 并且代码的执行结果就是函数的返回值（return 必须省略） 函数体大括号可以省略\n            const sum2 = (n1, n2) => n1 + n2;\t \n            const result = sum2(10, 20);\n            console.log(result)\n\n            // 2、形参只有一个，形参外侧的小括号也是可以省略的\n                const fn3 = v => {\n                    console.log(v);;\n                }\n                fn3(20)\n            \n            // 3、箭头函数没有自己的 this，this 指向箭头函数定义位置中的 this\n                function fn4 () {\n                    console.log(this);\n                    return () => {\n                        console.log(this)\n                    }\n                }\n                var fn5 = fn4();  // window\n                fn5();  // window\n\n                const obj = {name: \'zhangsan\'};\n                const resfn = fn4.call(obj);  // obj\n                resfn();  // obj\n            \n        // 箭头函数不适用的场景：\n            // （1）事件回调（如果使用箭头函数，this 将不在指向 事件绑定的元素，而是指向 这个事件定义位置中的 this）\n                ad.addeventlistener("click", function(){\n                    settimeout(() => {\n                        console.log(this);  // <div id="ad" style="background: pink;"></div>\n                        this.style.background = \'pink\';\n                    }, 2000);\n                });\n\n            // （2）对象的方法（如果使用箭头函数，this 将不在指向 这个对象，而是指向 这个对象定义位置中的 this）\n            var obj = {\n                getname: function () {\n                    this.name;\n                }\n            }\n\n            // （3）不能作为构造函数\n                // let person = (name, age) => {\n                //     this.name = name;\n                //     this.age = age;\n                // }\n                // let me = new person(\'xiao\', 30);\n                // console.log(me);  // 报错\n\n            // （4）不能使用 arguments 变量\n                // arguments 变量：用于保存实参\n                // let fn = () => {\n                //     console.log(arguments);  // 报错\n                // }\n                // fn(1, 2, 3)\n\n\n        // 应用场景：\n            // 需求：点击 div 2s 后颜色变成『粉色』\n\n            // 传统方法：\n                // let ad = document.getelementbyid(\'ad\');\n                // ad.addeventlistener("click", function(){\n                //     //保存 this 的值\n                //     let _this = this;\n                //     settimeout(function () {\n                //         console.log(this);  // window\n                //         _this.style.background = \'pink\';\n                //     }, 2000);\n                // });\n\n            // 箭头函数：\n                let ad = document.getelementbyid(\'ad\');\n                ad.addeventlistener("click", function(){\n                    settimeout(() => {\n                        console.log(this);  // <div id="ad" style="background: pink;"></div>\n                        this.style.background = \'pink\';\n                    }, 2000);\n                });\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"rest 参数",frontmatter:{title:"rest 参数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/09f22c/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/12.rest%20%E5%8F%82%E6%95%B0.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/12.rest 参数.md",key:"v-5e8d290a",path:"/pages/09f22c/",headersStr:null,content:'# 知识点：rest 参数\n\n作用： 用于获取函数的实参，替代了 ES5 的 arguments\n\n特性：\n\n 1. arguments 是以 对象 的形式存储，rest 是以 数组 的形式存储\n 2. 如果有别的参数，rest 参数必须放在最后\n\n优点： 允许使用数组方法\n\n语法： 在形参里使用 ...标识符\n\nfunction fn(a, b, ...args){\n    console.log(a);\n    console.log(b);\n    console.log(args);  // [3, 4, 5, 6]\n}\nfn(1,2,3,4,5,6);\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>rest参数</title>\n</head>\n<body>\n    <script>\n        // 知识点：rest 参数\n        // 作用：用于获取函数的实参，替代了 ES5 的 arguments\n        // 特性：\n            // 1、arguments 是以 对象 的形式存储，rest 是以 数组 的形式存储\n            // 2、如果有别的参数，rest 参数必须放在最后\n        // 优点：允许使用数组方法\n        // 语法：在形参里使用 ...标识符\n\n        function fn(a, b, ...args){\n            console.log(a);\n            console.log(b);\n            console.log(args);  // [3, 4, 5, 6]\n        }\n        fn(1,2,3,4,5,6);\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n',normalizedContent:'# 知识点：rest 参数\n\n作用： 用于获取函数的实参，替代了 es5 的 arguments\n\n特性：\n\n 1. arguments 是以 对象 的形式存储，rest 是以 数组 的形式存储\n 2. 如果有别的参数，rest 参数必须放在最后\n\n优点： 允许使用数组方法\n\n语法： 在形参里使用 ...标识符\n\nfunction fn(a, b, ...args){\n    console.log(a);\n    console.log(b);\n    console.log(args);  // [3, 4, 5, 6]\n}\nfn(1,2,3,4,5,6);\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# demo\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>rest参数</title>\n</head>\n<body>\n    <script>\n        // 知识点：rest 参数\n        // 作用：用于获取函数的实参，替代了 es5 的 arguments\n        // 特性：\n            // 1、arguments 是以 对象 的形式存储，rest 是以 数组 的形式存储\n            // 2、如果有别的参数，rest 参数必须放在最后\n        // 优点：允许使用数组方法\n        // 语法：在形参里使用 ...标识符\n\n        function fn(a, b, ...args){\n            console.log(a);\n            console.log(b);\n            console.log(args);  // [3, 4, 5, 6]\n        }\n        fn(1,2,3,4,5,6);\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"扩展运算符",frontmatter:{title:"扩展运算符",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/cce582/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/13.%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/13.扩展运算符.md",key:"v-cde6b3b2",path:"/pages/cce582/",headers:[{level:2,title:"应用场景",slug:"应用场景",normalizedTitle:"应用场景",charIndex:270},{level:3,title:"（一）数组合并",slug:"一-数组合并",normalizedTitle:"（一）数组合并",charIndex:279},{level:3,title:"（二）数组的克隆（浅拷贝）",slug:"二-数组的克隆-浅拷贝",normalizedTitle:"（二）数组的克隆（浅拷贝）",charIndex:517},{level:3,title:"（三）将伪数组转为真正的数组",slug:"三-将伪数组转为真正的数组",normalizedTitle:"（三）将伪数组转为真正的数组",charIndex:651}],headersStr:"应用场景 （一）数组合并 （二）数组的克隆（浅拷贝） （三）将伪数组转为真正的数组",content:"# 知识点：扩展运算符\n\n语法： 在实参里使用 ...数组名\n\n作用： 将 数组 转换为逗号分隔的 参数序列\n\n// 声明一个数组 ...\nconst tfboys = ['易烊千玺','王源','王俊凯'];\n\n// 声明一个函数\nfunction chunwan(){\n    console.log(arguments);  // '易烊千玺','王源','王俊凯'\n}\n\nchunwan(...tfboys);  // 相当于：chunwan('易烊千玺','王源','王俊凯')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 应用场景\n\n\n# （一）数组合并\n\nconst kuaizi = ['王太利','肖央'];\nconst fenghuang = ['曾毅','玲花'];\n// onst zxmzf = kuaizi.concat(fenghuang);  // 传统方法\nconst zxmzf = [...kuaizi, ...fenghuang];  // 扩展运算符\nconsole.log(zxmzf);  // [\"王太利\", \"肖央\", \"曾毅\", \"玲花\"]\n\n\n1\n2\n3\n4\n5\n\n\n\n# （二）数组的克隆（浅拷贝）\n\nconst sanzhihua = ['E','G','M'];\nconst sanyecao = [...sanzhihua];//  ['E','G','M']\nconsole.log(sanyecao);\n\n\n1\n2\n3\n\n\n\n# （三）将伪数组转为真正的数组\n\nconst divs = document.querySelectorAll('div');\nconst divArr = [...divs];\nconsole.log(divArr);\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>扩展运算符</title>\n</head>\n<body>\n    <script>\n        // 知识点：扩展运算符\n        // 语法：在实参里使用 ...数组名\n\n        // 作用：将 数组 转换为逗号分隔的 参数序列\n        //声明一个数组 ...\n        const tfboys = ['易烊千玺','王源','王俊凯'];\n\n        // 声明一个函数\n        function chunwan(){\n            console.log(arguments);  // '易烊千玺','王源','王俊凯'\n        }\n\n        chunwan(...tfboys);\n        // 相当于：chunwan('易烊千玺','王源','王俊凯')\n\n        // 应用场景：\n\n            // (1)数组合并：\n                const kuaizi = ['王太利','肖央'];\n                const fenghuang = ['曾毅','玲花'];\n                // onst zxmzf = kuaizi.concat(fenghuang);  // 传统方法\n                const zxmzf = [...kuaizi, ...fenghuang];  // 扩展运算符\n                console.log(zxmzf);  // [\"王太利\", \"肖央\", \"曾毅\", \"玲花\"]\n\n            // (2)数组的克隆（浅拷贝）\n                const sanzhihua = ['E','G','M'];\n                const sanyecao = [...sanzhihua];//  ['E','G','M']\n                console.log(sanyecao);\n\n            // (3)将伪数组转为真正的数组\n                const divs = document.querySelectorAll('div');\n                const divArr = [...divs];\n                console.log(divArr);\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n",normalizedContent:"# 知识点：扩展运算符\n\n语法： 在实参里使用 ...数组名\n\n作用： 将 数组 转换为逗号分隔的 参数序列\n\n// 声明一个数组 ...\nconst tfboys = ['易烊千玺','王源','王俊凯'];\n\n// 声明一个函数\nfunction chunwan(){\n    console.log(arguments);  // '易烊千玺','王源','王俊凯'\n}\n\nchunwan(...tfboys);  // 相当于：chunwan('易烊千玺','王源','王俊凯')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 应用场景\n\n\n# （一）数组合并\n\nconst kuaizi = ['王太利','肖央'];\nconst fenghuang = ['曾毅','玲花'];\n// onst zxmzf = kuaizi.concat(fenghuang);  // 传统方法\nconst zxmzf = [...kuaizi, ...fenghuang];  // 扩展运算符\nconsole.log(zxmzf);  // [\"王太利\", \"肖央\", \"曾毅\", \"玲花\"]\n\n\n1\n2\n3\n4\n5\n\n\n\n# （二）数组的克隆（浅拷贝）\n\nconst sanzhihua = ['e','g','m'];\nconst sanyecao = [...sanzhihua];//  ['e','g','m']\nconsole.log(sanyecao);\n\n\n1\n2\n3\n\n\n\n# （三）将伪数组转为真正的数组\n\nconst divs = document.queryselectorall('div');\nconst divarr = [...divs];\nconsole.log(divarr);\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>扩展运算符</title>\n</head>\n<body>\n    <script>\n        // 知识点：扩展运算符\n        // 语法：在实参里使用 ...数组名\n\n        // 作用：将 数组 转换为逗号分隔的 参数序列\n        //声明一个数组 ...\n        const tfboys = ['易烊千玺','王源','王俊凯'];\n\n        // 声明一个函数\n        function chunwan(){\n            console.log(arguments);  // '易烊千玺','王源','王俊凯'\n        }\n\n        chunwan(...tfboys);\n        // 相当于：chunwan('易烊千玺','王源','王俊凯')\n\n        // 应用场景：\n\n            // (1)数组合并：\n                const kuaizi = ['王太利','肖央'];\n                const fenghuang = ['曾毅','玲花'];\n                // onst zxmzf = kuaizi.concat(fenghuang);  // 传统方法\n                const zxmzf = [...kuaizi, ...fenghuang];  // 扩展运算符\n                console.log(zxmzf);  // [\"王太利\", \"肖央\", \"曾毅\", \"玲花\"]\n\n            // (2)数组的克隆（浅拷贝）\n                const sanzhihua = ['e','g','m'];\n                const sanyecao = [...sanzhihua];//  ['e','g','m']\n                console.log(sanyecao);\n\n            // (3)将伪数组转为真正的数组\n                const divs = document.queryselectorall('div');\n                const divarr = [...divs];\n                console.log(divarr);\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"迭代器",frontmatter:{title:"迭代器",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/5d5497/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/14.%E8%BF%AD%E4%BB%A3%E5%99%A8.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/14.迭代器.md",key:"v-56b31338",path:"/pages/5d5497/",headers:[{level:2,title:"部署 Iterator 接口",slug:"部署-iterator-接口",normalizedTitle:"部署 iterator 接口",charIndex:374},{level:2,title:"应用场景",slug:"应用场景",normalizedTitle:"应用场景",charIndex:948}],headersStr:"部署 Iterator 接口 应用场景",content:"# 知识点：迭代器\n\n作用： 遍历自定义数据\n\n特性： 遍历 Iterator接口 部署的数据\n\n以下数据自带 Iterator接口：\n\n 1. Array\n 2. String\n 3. Set\n 4. Map\n\nconst xiyou = ['唐僧','孙悟空','猪八戒','沙僧'];\n\n// for...of\n// 作用：遍历 Iterator接口 部署的数据\n// 特性：v 的值为 键值\nfor(let v of xiyou){\n    console.log(v);\n}\n\n// for...in\n// 特性：v 的值为 键名（数组的键名就是索引）\n// for(let v of xiyou){\n//     console.log(v);\n// }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 部署 Iterator 接口\n\n（1）使用 Symbol.iterator 创建一个指针对象，指向当前数据结构的第一个成员\n\n提示： 因为 xiyou 已经有指针对象了，无需创建，直接调用即可\n\nlet iterator = xiyou[Symbol.iterator]();\n\n\n1\n\n\n（2）调用 next 方法指针指向第一个成员，再次调用 next 方法指针指向第二个成员，以此类推直到最后一个成员\n\n  // done：是否继续循环（false：继续循环）（true：停止循环）\nconsole.log(iterator.next());  // {value: \"唐僧\", done: false}\nconsole.log(iterator.next());  // {value: \"孙悟空\", done: false}\nconsole.log(iterator.next());  // {value: \"猪八戒\", done: false}\nconsole.log(iterator.next());  // {value: \"沙僧\", done: false}\nconsole.log(iterator.next());  // {value: undefined, done: true}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 应用场景\n\n需求： 遍历对象中的 stus 属性\n\n提示： 使用 banji.stus.forEach() 也可以遍历，但这不符合面向对象思想\n\nconst banji = {\n  name: \"终极一班\",\n  stus: [\n      'xiaoming',\n      'xiaoning',\n      'xiaotian',\n      'knight'\n  ],\n  // （1）使用 [Symbol.iterator]() 创建一个指针对象，指向当前数据结构的第一个成员\n  [Symbol.iterator]() {\n      let index = 0;\n      let _this = this;\n      // （2）返回指针对象性\n      return {\n          // （3）创建 next 方法\n          next: function () {\n              if (index < _this.stus.length) {\n                  const result = { value: _this.stus[index], done: false };\n                  index++;\n                  return result;\n              }else{\n                  return {value: undefined, done: true};\n              }\n          }\n      };\n  }\n}\n\nfor (let v of banji) {\n  console.log(v);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>迭代器</title>\n</head>\n<body>\n    <script>\n        // 知识点：迭代器\n        // 作用：遍历自定义数据\n        // 特性：遍历 Iterator接口 部署的数据\n        \n        // 以下数据自带 Iterator接口\n            // 1、Array\n            // 2、String\n            // 3、Set\n            // 4、Map\n\n        const xiyou = ['唐僧','孙悟空','猪八戒','沙僧'];\n\n        // for...of\n        // 作用：遍历 Iterator接口 部署的数据\n        // 特性：v 的值为 键值\n        for(let v of xiyou){\n            console.log(v);\n        }\n\n        // for...in\n        // 特性：v 的值为 键名（数组的键名就是索引）\n        // for(let v of xiyou){\n        //     console.log(v);\n        // }\n\n        // 部署 Iterator 接口\n\n            // （1）使用 [Symbol.iterator]() 创建一个指针对象，指向当前数据结构的第一个成员\n            // 提示：因为 xiyou 已经有指针对象了，无需创建，直接调用即可\n            let iterator = xiyou[Symbol.iterator]();\n\n\n            // （2）调用 next 方法指针指向第一个成员，再次调用 next 方法指针指向第二个成员，以此类推直到最后一个成员\n                // done：是否继续循环（false：继续循环）（true：停止循环）\n            console.log(iterator.next());  // {value: \"唐僧\", done: false}\n            console.log(iterator.next());  // {value: \"孙悟空\", done: false}\n            console.log(iterator.next());  // {value: \"猪八戒\", done: false}\n            console.log(iterator.next());  // {value: \"沙僧\", done: false}\n            console.log(iterator.next());  // {value: undefined, done: true}\n\n        // 应用场景：\n            // 需求：遍历对象中的 stus 属性\n            // 提示：使用 banji.stus.forEach() 也可以遍历，但这不符合面向对象思想\n\n            const banji = {\n                name: \"终极一班\",\n                stus: [\n                    'xiaoming',\n                    'xiaoning',\n                    'xiaotian',\n                    'knight'\n                ],\n                // （1）使用 [Symbol.iterator]() 创建一个指针对象，指向当前数据结构的第一个成员\n                [Symbol.iterator]() {\n                    let index = 0;\n                    let _this = this;\n                    // （2）返回指针对象性\n                    return {\n                        // （3）创建 next 方法\n                        next: function () {\n                            if (index < _this.stus.length) {\n                                const result = { value: _this.stus[index], done: false };\n                                index++;\n                                return result;\n                            }else{\n                                return {value: undefined, done: true};\n                            }\n                        }\n                    };\n                }\n            }\n\n            for (let v of banji) {\n                console.log(v);\n            }\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n",normalizedContent:"# 知识点：迭代器\n\n作用： 遍历自定义数据\n\n特性： 遍历 iterator接口 部署的数据\n\n以下数据自带 iterator接口：\n\n 1. array\n 2. string\n 3. set\n 4. map\n\nconst xiyou = ['唐僧','孙悟空','猪八戒','沙僧'];\n\n// for...of\n// 作用：遍历 iterator接口 部署的数据\n// 特性：v 的值为 键值\nfor(let v of xiyou){\n    console.log(v);\n}\n\n// for...in\n// 特性：v 的值为 键名（数组的键名就是索引）\n// for(let v of xiyou){\n//     console.log(v);\n// }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 部署 iterator 接口\n\n（1）使用 symbol.iterator 创建一个指针对象，指向当前数据结构的第一个成员\n\n提示： 因为 xiyou 已经有指针对象了，无需创建，直接调用即可\n\nlet iterator = xiyou[symbol.iterator]();\n\n\n1\n\n\n（2）调用 next 方法指针指向第一个成员，再次调用 next 方法指针指向第二个成员，以此类推直到最后一个成员\n\n  // done：是否继续循环（false：继续循环）（true：停止循环）\nconsole.log(iterator.next());  // {value: \"唐僧\", done: false}\nconsole.log(iterator.next());  // {value: \"孙悟空\", done: false}\nconsole.log(iterator.next());  // {value: \"猪八戒\", done: false}\nconsole.log(iterator.next());  // {value: \"沙僧\", done: false}\nconsole.log(iterator.next());  // {value: undefined, done: true}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 应用场景\n\n需求： 遍历对象中的 stus 属性\n\n提示： 使用 banji.stus.foreach() 也可以遍历，但这不符合面向对象思想\n\nconst banji = {\n  name: \"终极一班\",\n  stus: [\n      'xiaoming',\n      'xiaoning',\n      'xiaotian',\n      'knight'\n  ],\n  // （1）使用 [symbol.iterator]() 创建一个指针对象，指向当前数据结构的第一个成员\n  [symbol.iterator]() {\n      let index = 0;\n      let _this = this;\n      // （2）返回指针对象性\n      return {\n          // （3）创建 next 方法\n          next: function () {\n              if (index < _this.stus.length) {\n                  const result = { value: _this.stus[index], done: false };\n                  index++;\n                  return result;\n              }else{\n                  return {value: undefined, done: true};\n              }\n          }\n      };\n  }\n}\n\nfor (let v of banji) {\n  console.log(v);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>迭代器</title>\n</head>\n<body>\n    <script>\n        // 知识点：迭代器\n        // 作用：遍历自定义数据\n        // 特性：遍历 iterator接口 部署的数据\n        \n        // 以下数据自带 iterator接口\n            // 1、array\n            // 2、string\n            // 3、set\n            // 4、map\n\n        const xiyou = ['唐僧','孙悟空','猪八戒','沙僧'];\n\n        // for...of\n        // 作用：遍历 iterator接口 部署的数据\n        // 特性：v 的值为 键值\n        for(let v of xiyou){\n            console.log(v);\n        }\n\n        // for...in\n        // 特性：v 的值为 键名（数组的键名就是索引）\n        // for(let v of xiyou){\n        //     console.log(v);\n        // }\n\n        // 部署 iterator 接口\n\n            // （1）使用 [symbol.iterator]() 创建一个指针对象，指向当前数据结构的第一个成员\n            // 提示：因为 xiyou 已经有指针对象了，无需创建，直接调用即可\n            let iterator = xiyou[symbol.iterator]();\n\n\n            // （2）调用 next 方法指针指向第一个成员，再次调用 next 方法指针指向第二个成员，以此类推直到最后一个成员\n                // done：是否继续循环（false：继续循环）（true：停止循环）\n            console.log(iterator.next());  // {value: \"唐僧\", done: false}\n            console.log(iterator.next());  // {value: \"孙悟空\", done: false}\n            console.log(iterator.next());  // {value: \"猪八戒\", done: false}\n            console.log(iterator.next());  // {value: \"沙僧\", done: false}\n            console.log(iterator.next());  // {value: undefined, done: true}\n\n        // 应用场景：\n            // 需求：遍历对象中的 stus 属性\n            // 提示：使用 banji.stus.foreach() 也可以遍历，但这不符合面向对象思想\n\n            const banji = {\n                name: \"终极一班\",\n                stus: [\n                    'xiaoming',\n                    'xiaoning',\n                    'xiaotian',\n                    'knight'\n                ],\n                // （1）使用 [symbol.iterator]() 创建一个指针对象，指向当前数据结构的第一个成员\n                [symbol.iterator]() {\n                    let index = 0;\n                    let _this = this;\n                    // （2）返回指针对象性\n                    return {\n                        // （3）创建 next 方法\n                        next: function () {\n                            if (index < _this.stus.length) {\n                                const result = { value: _this.stus[index], done: false };\n                                index++;\n                                return result;\n                            }else{\n                                return {value: undefined, done: true};\n                            }\n                        }\n                    };\n                }\n            }\n\n            for (let v of banji) {\n                console.log(v);\n            }\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"生成器函数",frontmatter:{title:"生成器函数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/56c527/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/15.%E7%94%9F%E6%88%90%E5%99%A8%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/15.生成器函数.md",key:"v-42973d83",path:"/pages/56c527/",headers:[{level:2,title:"应用场景",slug:"应用场景",normalizedTitle:"应用场景",charIndex:35},{level:3,title:"（1）需求：1s 后控制台输出 111  2s后输出 222  3s后输出 333",slug:"_1-需求-1s-后控制台输出-111-2s后输出-222-3s后输出-333",normalizedTitle:"（1）需求：1s 后控制台输出 111  2s后输出 222  3s后输出 333",charIndex:1806},{level:3,title:"（2）依次获取 用户数据  订单数据  商品数据",slug:"_2-依次获取-用户数据-订单数据-商品数据",normalizedTitle:"（2）依次获取 用户数据  订单数据  商品数据",charIndex:2850}],headersStr:"应用场景 （1）需求：1s 后控制台输出 111  2s后输出 222  3s后输出 333 （2）依次获取 用户数据  订单数据  商品数据",content:"# 知识点：生成器函数\n\n作用： 实现异步编程，解决回调地狱\n\n\n# 应用场景\n\n\n# （1）需求：1s 后控制台输出 111 2s后输出 222 3s后输出 333\n\nfunction one(){\n    setTimeout(()=>{\n        console.log(111);\n        iterator.next();\n    },1000)\n}\n\nfunction two(){\n    setTimeout(()=>{\n        console.log(222);\n        iterator.next();\n    },2000)\n}\n\nfunction three(){\n    setTimeout(()=>{\n        console.log(333);\n        iterator.next();\n    },3000)\n}\n\nfunction * gen(){\n    // yield 暂停符\n    // 生成器函数名.next() 的作用是执行 yield 这一段的代码\n\n    console.log(1);\n    yield one();    // 从 yield 到最顶部的距离是一段\n\n    console.log(1);\n    yield two();    // 从 yield 到是上一个 yield 的距离是一段\n\n    console.log(1);\n    yield three();\n}\n\n//调用生成器函数\nlet iterator = gen();\niterator.next();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n# （2）依次获取 用户数据 订单数据 商品数据\n\nfunction getUsers(){\n    setTimeout(()=>{\n        let data = '用户数据';\n        // 调用 next 方法, 传入数据\n        iterator1.next(data);\n    }, 1000);\n}\n\nfunction getOrders(){\n    setTimeout(()=>{\n        let data = '订单数据';\n        iterator1.next(data);\n    }, 1000)\n}\n\nfunction getGoods(){\n    setTimeout(()=>{\n        let data = '商品数据';\n        iterator1.next(data);\n    }, 1000)\n}\n\nfunction * gen1(){\n    // 接收 iterator1.next(数据) 传递过来的数据\n    let users = yield getUsers();\n    let orders = yield getOrders();\n    let goods = yield getGoods();\n}\n\n//调用生成器函数\nlet iterator1 = gen1();\niterator1.next();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>生成器函数实例</title>\n</head>\n\n<body>\n    <script>\n        // 知识点：生成器函数\n\n        // 作用：实现异步编程，解决回调地狱\n\n        // 应用场景：\n            // （1）需求：1s 后控制台输出 111  2s后输出 222  3s后输出 333\n\n            function one(){\n                setTimeout(()=>{\n                    console.log(111);\n                    iterator.next();\n                },1000)\n            }\n\n            function two(){\n                setTimeout(()=>{\n                    console.log(222);\n                    iterator.next();\n                },2000)\n            }\n\n            function three(){\n                setTimeout(()=>{\n                    console.log(333);\n                    iterator.next();\n                },3000)\n            }\n\n            function * gen(){\n                // yield 暂停符\n                // 生成器函数名.next() 的作用是执行 yield 这一段的代码\n\n                console.log(1);\n                yield one();    // 从 yield 到最顶部的距离是一段\n\n                console.log(1);\n                yield two();    // 从 yield 到是上一个 yield 的距离是一段\n\n                console.log(1);\n                yield three();\n            }\n\n            //调用生成器函数\n            let iterator = gen();\n            iterator.next();\n\n            // （2）依次获取 用户数据  订单数据  商品数据 \n\n                function getUsers(){\n                    setTimeout(()=>{\n                        let data = '用户数据';\n                        // 调用 next 方法, 传入数据\n                        iterator1.next(data);\n                    }, 1000);\n                }\n\n                function getOrders(){\n                    setTimeout(()=>{\n                        let data = '订单数据';\n                        iterator1.next(data);\n                    }, 1000)\n                }\n\n                function getGoods(){\n                    setTimeout(()=>{\n                        let data = '商品数据';\n                        iterator1.next(data);\n                    }, 1000)\n                }\n\n                function * gen1(){\n                    // 接收 iterator1.next(数据) 传递过来的数据\n                    let users = yield getUsers();\n                    let orders = yield getOrders();\n                    let goods = yield getGoods();\n                }\n\n                //调用生成器函数\n                let iterator1 = gen1();\n                iterator1.next();\n\n    <\/script>\n</body>\n\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n",normalizedContent:"# 知识点：生成器函数\n\n作用： 实现异步编程，解决回调地狱\n\n\n# 应用场景\n\n\n# （1）需求：1s 后控制台输出 111 2s后输出 222 3s后输出 333\n\nfunction one(){\n    settimeout(()=>{\n        console.log(111);\n        iterator.next();\n    },1000)\n}\n\nfunction two(){\n    settimeout(()=>{\n        console.log(222);\n        iterator.next();\n    },2000)\n}\n\nfunction three(){\n    settimeout(()=>{\n        console.log(333);\n        iterator.next();\n    },3000)\n}\n\nfunction * gen(){\n    // yield 暂停符\n    // 生成器函数名.next() 的作用是执行 yield 这一段的代码\n\n    console.log(1);\n    yield one();    // 从 yield 到最顶部的距离是一段\n\n    console.log(1);\n    yield two();    // 从 yield 到是上一个 yield 的距离是一段\n\n    console.log(1);\n    yield three();\n}\n\n//调用生成器函数\nlet iterator = gen();\niterator.next();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n# （2）依次获取 用户数据 订单数据 商品数据\n\nfunction getusers(){\n    settimeout(()=>{\n        let data = '用户数据';\n        // 调用 next 方法, 传入数据\n        iterator1.next(data);\n    }, 1000);\n}\n\nfunction getorders(){\n    settimeout(()=>{\n        let data = '订单数据';\n        iterator1.next(data);\n    }, 1000)\n}\n\nfunction getgoods(){\n    settimeout(()=>{\n        let data = '商品数据';\n        iterator1.next(data);\n    }, 1000)\n}\n\nfunction * gen1(){\n    // 接收 iterator1.next(数据) 传递过来的数据\n    let users = yield getusers();\n    let orders = yield getorders();\n    let goods = yield getgoods();\n}\n\n//调用生成器函数\nlet iterator1 = gen1();\niterator1.next();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>生成器函数实例</title>\n</head>\n\n<body>\n    <script>\n        // 知识点：生成器函数\n\n        // 作用：实现异步编程，解决回调地狱\n\n        // 应用场景：\n            // （1）需求：1s 后控制台输出 111  2s后输出 222  3s后输出 333\n\n            function one(){\n                settimeout(()=>{\n                    console.log(111);\n                    iterator.next();\n                },1000)\n            }\n\n            function two(){\n                settimeout(()=>{\n                    console.log(222);\n                    iterator.next();\n                },2000)\n            }\n\n            function three(){\n                settimeout(()=>{\n                    console.log(333);\n                    iterator.next();\n                },3000)\n            }\n\n            function * gen(){\n                // yield 暂停符\n                // 生成器函数名.next() 的作用是执行 yield 这一段的代码\n\n                console.log(1);\n                yield one();    // 从 yield 到最顶部的距离是一段\n\n                console.log(1);\n                yield two();    // 从 yield 到是上一个 yield 的距离是一段\n\n                console.log(1);\n                yield three();\n            }\n\n            //调用生成器函数\n            let iterator = gen();\n            iterator.next();\n\n            // （2）依次获取 用户数据  订单数据  商品数据 \n\n                function getusers(){\n                    settimeout(()=>{\n                        let data = '用户数据';\n                        // 调用 next 方法, 传入数据\n                        iterator1.next(data);\n                    }, 1000);\n                }\n\n                function getorders(){\n                    settimeout(()=>{\n                        let data = '订单数据';\n                        iterator1.next(data);\n                    }, 1000)\n                }\n\n                function getgoods(){\n                    settimeout(()=>{\n                        let data = '商品数据';\n                        iterator1.next(data);\n                    }, 1000)\n                }\n\n                function * gen1(){\n                    // 接收 iterator1.next(数据) 传递过来的数据\n                    let users = yield getusers();\n                    let orders = yield getorders();\n                    let goods = yield getgoods();\n                }\n\n                //调用生成器函数\n                let iterator1 = gen1();\n                iterator1.next();\n\n    <\/script>\n</body>\n\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"Promise 对象",frontmatter:{title:"Promise 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/ccc78e/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/16.Promise%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/16.Promise 对象.md",key:"v-6c8595c2",path:"/pages/ccc78e/",headersStr:null,content:"详见 node 中的 13-promise 对象（中）.js",normalizedContent:"详见 node 中的 13-promise 对象（中）.js",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"class 类",frontmatter:{title:"class 类",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/9426cc/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/17.class%20%E7%B1%BB.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/17.class 类.md",key:"v-10a0089e",path:"/pages/9426cc/",headersStr:null,content:"详见 02-类操作.html 和 03-类继承.html",normalizedContent:"详见 02-类操作.html 和 03-类继承.html",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"模块化开发",frontmatter:{title:"模块化开发",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/4508e1/",categories:["《前端》笔记","JS","ES6"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/04.ES6/18.%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91.html",relativePath:"《前端》笔记《基础知识》/03.JS/04.ES6/18.模块化开发.md",key:"v-2e23dfa6",path:"/pages/4508e1/",headersStr:null,content:"详见 node 02-模块化开发.html",normalizedContent:"详见 node 02-模块化开发.html",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"指数操作符",frontmatter:{title:"指数操作符",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/38cec0/",categories:["《前端》笔记","JS","ES7"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/05.ES7/01.%E6%8C%87%E6%95%B0%E6%93%8D%E4%BD%9C%E7%AC%A6.html",relativePath:"《前端》笔记《基础知识》/03.JS/05.ES7/01.指数操作符.md",key:"v-cc2b9d6e",path:"/pages/38cec0/",headersStr:null,content:'# 知识点：指数操作符\n\n作用： 幂运算\n\n语法： **\n\n特性： 和 Math.pow 作用一样\n\n// 计算 2 的 10次方\n2 ** 10;  // 1024\nMath.pow(2, 10);  // 1024\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 知识点：指数操作符\n        // 作用：幂运算\n        // 语法：**\n        // 特性：和 Math.pow 作用一样\n\n        // 计算 2 的 10次方\n        2 ** 10;  // 1024\n        Math.pow(2, 10);  // 1024\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 知识点：指数操作符\n\n作用： 幂运算\n\n语法： **\n\n特性： 和 math.pow 作用一样\n\n// 计算 2 的 10次方\n2 ** 10;  // 1024\nmath.pow(2, 10);  // 1024\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 知识点：指数操作符\n        // 作用：幂运算\n        // 语法：**\n        // 特性：和 math.pow 作用一样\n\n        // 计算 2 的 10次方\n        2 ** 10;  // 1024\n        math.pow(2, 10);  // 1024\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"async & await 异步函数",frontmatter:{title:"async & await 异步函数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/491e5c/",categories:["《前端》笔记","JS","ES8"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/06.ES8/01.async%20&%20await%20%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《基础知识》/03.JS/06.ES8/01.async & await 异步函数.md",key:"v-9dac741a",path:"/pages/491e5c/",headersStr:null,content:"详见 node 中的 14-async & await 异步函数（下）.js",normalizedContent:"详见 node 中的 14-async & await 异步函数（下）.js",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"剩余参数",frontmatter:{title:"剩余参数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/103edd/",categories:["《前端》笔记","JS","ES9"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/07.ES9/01.%E5%89%A9%E4%BD%99%E5%8F%82%E6%95%B0.html",relativePath:"《前端》笔记《基础知识》/03.JS/07.ES9/01.剩余参数.md",key:"v-0f1d6620",path:"/pages/103edd/",headers:[{level:2,title:"使用场景",slug:"使用场景",normalizedTitle:"使用场景",charIndex:51},{level:3,title:"（1）函数形参",slug:"_1-函数形参",normalizedTitle:"（1）函数形参",charIndex:60},{level:3,title:"（2）数组解构",slug:"_2-数组解构",normalizedTitle:"（2）数组解构",charIndex:398},{level:3,title:"（3）对象合并",slug:"_3-对象合并",normalizedTitle:"（3）对象合并",charIndex:563}],headersStr:"使用场景 （1）函数形参 （2）数组解构 （3）对象合并",content:"# 知识点：剩余参数\n\n作用： 将一个不确定数量的参数表示为一个数组\n\n语法： ...变量名\n\n\n# 使用场景\n\n\n# （1）函数形参\n\nfunction sum1 (first, ...args) {\nconsole.log(first); // 10\nconsole.log(args); // [20, 30] \n}\nsum1(10, 20, 30)\n\nconst sum2 = (...args) => {\n    let total = 0;\n    args.forEach(item => total += item);\n    return total;\n};\nconsole.log(sum2(10, 20));  // 30\nconsole.log(sum2(10, 20, 30));  // 60\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# （2）数组解构\n\nlet ary1 = ['张三' , '李四', '王五'];\nlet [s1, ...s2] = ary1;\nconsole.log(s1)  // '张三'\nconsole.log(s2[0]);  // '李四'\nconsole.log(s2[1]);  // '王五'\n\n\n1\n2\n3\n4\n5\n\n\n\n# （3）对象合并\n\nconst skillOne = {\n    q: '天音波'\n}\nconst skillTwo = {\n    w: '金钟罩'\n}\nconst skillThree = {\n    e: '天雷破'\n}\nconst mangseng = {...skillOne, ...skillTwo, ...skillThree};  // {q: \"天音波\", w: \"金钟罩\", e: \"天雷破\"}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 知识点：剩余参数\n        // 作用：将一个不确定数量的参数表示为一个数组\n        // 语法：...变量名\n        // 使用场景：\n\n            // 函数形参：\n                function sum1 (first, ...args) {\n                console.log(first); // 10\n                console.log(args); // [20, 30] \n                }\n                sum1(10, 20, 30)\n\n                const sum2 = (...args) => {\n                    let total = 0;\n                    args.forEach(item => total += item);\n                    return total;\n                };\n                console.log(sum2(10, 20));  // 30\n                console.log(sum2(10, 20, 30));  // 60\n\n            // 数组解构：\n                let ary1 = ['张三' , '李四', '王五'];\n                let [s1, ...s2] = ary1;\n                console.log(s1)  // '张三'\n                console.log(s2[0]);  // '李四'\n                console.log(s2[1]);  // '王五'\n\n            // 对象合并：\n                const skillOne = {\n                    q: '天音波'\n                }\n                const skillTwo = {\n                    w: '金钟罩'\n                }\n                const skillThree = {\n                    e: '天雷破'\n                }\n                const mangseng = {...skillOne, ...skillTwo, ...skillThree};  // {q: \"天音波\", w: \"金钟罩\", e: \"天雷破\"}\n                \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n",normalizedContent:"# 知识点：剩余参数\n\n作用： 将一个不确定数量的参数表示为一个数组\n\n语法： ...变量名\n\n\n# 使用场景\n\n\n# （1）函数形参\n\nfunction sum1 (first, ...args) {\nconsole.log(first); // 10\nconsole.log(args); // [20, 30] \n}\nsum1(10, 20, 30)\n\nconst sum2 = (...args) => {\n    let total = 0;\n    args.foreach(item => total += item);\n    return total;\n};\nconsole.log(sum2(10, 20));  // 30\nconsole.log(sum2(10, 20, 30));  // 60\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# （2）数组解构\n\nlet ary1 = ['张三' , '李四', '王五'];\nlet [s1, ...s2] = ary1;\nconsole.log(s1)  // '张三'\nconsole.log(s2[0]);  // '李四'\nconsole.log(s2[1]);  // '王五'\n\n\n1\n2\n3\n4\n5\n\n\n\n# （3）对象合并\n\nconst skillone = {\n    q: '天音波'\n}\nconst skilltwo = {\n    w: '金钟罩'\n}\nconst skillthree = {\n    e: '天雷破'\n}\nconst mangseng = {...skillone, ...skilltwo, ...skillthree};  // {q: \"天音波\", w: \"金钟罩\", e: \"天雷破\"}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>document</title>\n</head>\n<body>\n    <script>\n        // 知识点：剩余参数\n        // 作用：将一个不确定数量的参数表示为一个数组\n        // 语法：...变量名\n        // 使用场景：\n\n            // 函数形参：\n                function sum1 (first, ...args) {\n                console.log(first); // 10\n                console.log(args); // [20, 30] \n                }\n                sum1(10, 20, 30)\n\n                const sum2 = (...args) => {\n                    let total = 0;\n                    args.foreach(item => total += item);\n                    return total;\n                };\n                console.log(sum2(10, 20));  // 30\n                console.log(sum2(10, 20, 30));  // 60\n\n            // 数组解构：\n                let ary1 = ['张三' , '李四', '王五'];\n                let [s1, ...s2] = ary1;\n                console.log(s1)  // '张三'\n                console.log(s2[0]);  // '李四'\n                console.log(s2[1]);  // '王五'\n\n            // 对象合并：\n                const skillone = {\n                    q: '天音波'\n                }\n                const skilltwo = {\n                    w: '金钟罩'\n                }\n                const skillthree = {\n                    e: '天雷破'\n                }\n                const mangseng = {...skillone, ...skilltwo, ...skillthree};  // {q: \"天音波\", w: \"金钟罩\", e: \"天雷破\"}\n                \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1,readingShow:"top"},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-254cd896",path:"/tags/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"正则扩展.命名捕获分组",frontmatter:{title:"正则扩展.命名捕获分组",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/72fe75/",categories:["《前端》笔记","JS","ES9"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/07.ES9/02.%E6%AD%A3%E5%88%99%E6%89%A9%E5%B1%95-%E5%91%BD%E5%90%8D%E6%8D%95%E8%8E%B7%E5%88%86%E7%BB%84.html",relativePath:"《前端》笔记《基础知识》/03.JS/07.ES9/02.正则扩展-命名捕获分组.md",key:"v-0d61cd4d",path:"/pages/72fe75/",headers:[{level:2,title:"传统提取",slug:"传统提取",normalizedTitle:"传统提取",charIndex:168},{level:2,title:"命名捕获分组（推荐）",slug:"命名捕获分组-推荐",normalizedTitle:"命名捕获分组（推荐）",charIndex:620}],headersStr:"传统提取 命名捕获分组（推荐）",content:'# 知识点：正则扩展-命名捕获分组\n\n语法： (.*)\n\n作用： 提取\n\n语法： (?<标识符>.*)\n\n作用： 命名捕获分组\n\n特性： 标识符存放在 groups 对象中\n\n需求： 提取 url 与 内容\n\nlet str = \'<a href="http://www.atguigu.com">尚硅谷</a>\';\n\n\n1\n\n\n\n# 传统提取\n\n    // 创建正则规则\n    const reg = /<a href="(.*)">(.*)<\\/a>/;\n\n    // exec：执行匹配\n    const result = reg.exec(str);\n\n    // [0]：匹配的结果\n    // [1]：提取第一个 (.*)\n    // [2]：提取第二个 (.*)\n    // ...\n    result;  // ["<a href=\\"http://www.atguigu.com\\">尚硅谷</a>", "http://www.atguigu.com", "尚硅谷"]\n    result[0];  // <a href=\\"http://www.atguigu.com\\">尚硅谷</a>\n    result[1];  // http://www.atguigu.com\n    result[2];  // 尚硅谷\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 命名捕获分组（推荐）\n\n    const reg1 = /<a href="(?<url>.*)">(?<text>.*)<\\/a>/;\n\n    const result1 = reg1.exec(str);\n    \n    result1[0];  // <a href="http://www.atguigu.com">尚硅谷</a>\n    result1.groups.url;  // http://www.atguigu.com\n    result1.groups.text;  // 尚硅谷\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="en">\n\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>正则扩展-命名捕获分组</title>\n</head>\n\n<body>\n    <script>\n        // 知识点：正则扩展-命名捕获分组\n\n        // 语法：(.*)\n        // 作用：提取\n\n        // 语法：(?<标识符>.*)\n        // 作用：命名捕获分组\n        // 特性：标识符存放在 groups 对象中\n\n        // 需求：提取 url 与 内容\n        let str = \'<a href="http://www.atguigu.com">尚硅谷</a>\';\n\n        // 传统提取：\n            // 创建正则规则\n            const reg = /<a href="(.*)">(.*)<\\/a>/;\n\n            // exec：执行匹配\n            const result = reg.exec(str);\n\n            // [0]：匹配的结果\n            // [1]：提取第一个 (.*)\n            // [2]：提取第二个 (.*)\n            // ...\n            result;  // ["<a href=\\"http://www.atguigu.com\\">尚硅谷</a>", "http://www.atguigu.com", "尚硅谷"]\n            result[0];  // <a href=\\"http://www.atguigu.com\\">尚硅谷</a>\n            result[1];  // http://www.atguigu.com\n            result[2];  // 尚硅谷\n\n        // 命名捕获分组（推荐）：\n            const reg1 = /<a href="(?<url>.*)">(?<text>.*)<\\/a>/;\n\n            const result1 = reg1.exec(str);\n            \n            result1[0];  // <a href="http://www.atguigu.com">尚硅谷</a>\n            result1.groups.url;  // http://www.atguigu.com\n            result1.groups.text;  // 尚硅谷\n    <\/script>\n</body>\n\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n',normalizedContent:'# 知识点：正则扩展-命名捕获分组\n\n语法： (.*)\n\n作用： 提取\n\n语法： (?<标识符>.*)\n\n作用： 命名捕获分组\n\n特性： 标识符存放在 groups 对象中\n\n需求： 提取 url 与 内容\n\nlet str = \'<a href="http://www.atguigu.com">尚硅谷</a>\';\n\n\n1\n\n\n\n# 传统提取\n\n    // 创建正则规则\n    const reg = /<a href="(.*)">(.*)<\\/a>/;\n\n    // exec：执行匹配\n    const result = reg.exec(str);\n\n    // [0]：匹配的结果\n    // [1]：提取第一个 (.*)\n    // [2]：提取第二个 (.*)\n    // ...\n    result;  // ["<a href=\\"http://www.atguigu.com\\">尚硅谷</a>", "http://www.atguigu.com", "尚硅谷"]\n    result[0];  // <a href=\\"http://www.atguigu.com\\">尚硅谷</a>\n    result[1];  // http://www.atguigu.com\n    result[2];  // 尚硅谷\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 命名捕获分组（推荐）\n\n    const reg1 = /<a href="(?<url>.*)">(?<text>.*)<\\/a>/;\n\n    const result1 = reg1.exec(str);\n    \n    result1[0];  // <a href="http://www.atguigu.com">尚硅谷</a>\n    result1.groups.url;  // http://www.atguigu.com\n    result1.groups.text;  // 尚硅谷\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!doctype html>\n<html lang="en">\n\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>正则扩展-命名捕获分组</title>\n</head>\n\n<body>\n    <script>\n        // 知识点：正则扩展-命名捕获分组\n\n        // 语法：(.*)\n        // 作用：提取\n\n        // 语法：(?<标识符>.*)\n        // 作用：命名捕获分组\n        // 特性：标识符存放在 groups 对象中\n\n        // 需求：提取 url 与 内容\n        let str = \'<a href="http://www.atguigu.com">尚硅谷</a>\';\n\n        // 传统提取：\n            // 创建正则规则\n            const reg = /<a href="(.*)">(.*)<\\/a>/;\n\n            // exec：执行匹配\n            const result = reg.exec(str);\n\n            // [0]：匹配的结果\n            // [1]：提取第一个 (.*)\n            // [2]：提取第二个 (.*)\n            // ...\n            result;  // ["<a href=\\"http://www.atguigu.com\\">尚硅谷</a>", "http://www.atguigu.com", "尚硅谷"]\n            result[0];  // <a href=\\"http://www.atguigu.com\\">尚硅谷</a>\n            result[1];  // http://www.atguigu.com\n            result[2];  // 尚硅谷\n\n        // 命名捕获分组（推荐）：\n            const reg1 = /<a href="(?<url>.*)">(?<text>.*)<\\/a>/;\n\n            const result1 = reg1.exec(str);\n            \n            result1[0];  // <a href="http://www.atguigu.com">尚硅谷</a>\n            result1.groups.url;  // http://www.atguigu.com\n            result1.groups.text;  // 尚硅谷\n    <\/script>\n</body>\n\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"正则扩展.正向断言 与 方向断言",frontmatter:{title:"正则扩展.正向断言 与 方向断言",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/a55b0e/",categories:["《前端》笔记","JS","ES9"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/07.ES9/03.%E6%AD%A3%E5%88%99%E6%89%A9%E5%B1%95-%E6%AD%A3%E5%90%91%E6%96%AD%E8%A8%80%20%E4%B8%8E%20%E6%96%B9%E5%90%91%E6%96%AD%E8%A8%80.html",relativePath:"《前端》笔记《基础知识》/03.JS/07.ES9/03.正则扩展-正向断言 与 方向断言.md",key:"v-186941b8",path:"/pages/a55b0e/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 17:22:48"},{title:"Symbol 方法",frontmatter:{title:"Symbol 方法",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/ae5e45/",categories:["《前端》笔记","JS","ES10"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/08.ES10/01.Symbol%20%E6%96%B9%E6%B3%95.html",relativePath:"《前端》笔记《基础知识》/03.JS/08.ES10/01.Symbol 方法.md",key:"v-ef989612",path:"/pages/ae5e45/",headers:[{level:2,title:"一、description",slug:"一、description",normalizedTitle:"一、description",charIndex:22}],headersStr:"一、description",content:'# 知识点：Symbol 方法扩展\n\n\n# 一、description\n\n作用： 获取 Symbol 字符串描述\n\nlet s = Symbol(\'尚硅谷\');\n\ns.description;  // 尚硅谷\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Symbol.prototype.description</title>\n</head>\n<body>\n    <script>\n        // 知识点：Symbol 方法扩展\n        \n        // （1）description\n        // 作用：获取 Symbol 字符串描述\n        let s = Symbol(\'尚硅谷\');\n\n        s.description;  // 尚硅谷\n    <\/script>\n</body>\n\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 知识点：symbol 方法扩展\n\n\n# 一、description\n\n作用： 获取 symbol 字符串描述\n\nlet s = symbol(\'尚硅谷\');\n\ns.description;  // 尚硅谷\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>symbol.prototype.description</title>\n</head>\n<body>\n    <script>\n        // 知识点：symbol 方法扩展\n        \n        // （1）description\n        // 作用：获取 symbol 字符串描述\n        let s = symbol(\'尚硅谷\');\n\n        s.description;  // 尚硅谷\n    <\/script>\n</body>\n\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"正则扩展.dotAll模式（搞不懂，重新学）",frontmatter:{title:"正则扩展.dotAll模式（搞不懂，重新学）",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/452524/",categories:["《前端》笔记","JS","ES9"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/07.ES9/04.%E6%AD%A3%E5%88%99%E6%89%A9%E5%B1%95-dotAll%E6%A8%A1%E5%BC%8F%EF%BC%88%E6%90%9E%E4%B8%8D%E6%87%82%EF%BC%8C%E9%87%8D%E6%96%B0%E5%AD%A6%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/03.JS/07.ES9/04.正则扩展-dotAll模式（搞不懂，重新学）.md",key:"v-dd6b4b16",path:"/pages/452524/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 17:22:48"},{title:"私有属性",frontmatter:{title:"私有属性",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/7d3e07/",categories:["《前端》笔记","JS","ES11"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/09.ES11/01.%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7.html",relativePath:"《前端》笔记《基础知识》/03.JS/09.ES11/01.私有属性.md",key:"v-4486926a",path:"/pages/7d3e07/",headersStr:null,content:"# 知识点：私有属性\n\n作用： 对属性的封装，不可被外部操作\n\n特性： 属性分 公有属性 和 私有属性，常用的属性就是公有属性\n\n公有属性： 可被 外部操作\n\n私有属性： 不可被 外部操作\n\n使用步骤： 在属性名前面加上 # ，就变为私有属性了\n\nclass Person{\n    // 公有属性\n    name;\n    // 私有属性\n    #age;\n    #weight;\n    // 构造方法\n    constructor(name, age, weight){\n        this.name = name;\n        this.#age = age;\n        this.#weight = weight;\n    }\n    intro(){\n        this.name;  // 晓红\n        this.#age;  // 18\n    }\n}\n//实例化\nconst girl = new Person('晓红', 18, '45kg');\ngirl.name;  // 晓红\ngirl.#age;  // 报错，无法访问，只能在类里面访问\ngirl.intro();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>私有属性</title>\n</head>\n<body>\n    <script>\n        // 知识点：私有属性\n        \n        // 作用：对属性的封装，不可被外部操作\n        // 特性：属性分 公有属性 和 私有属性，常用的属性就是公有属性\n        // 公有属性：可被 外部操作\n        // 私有属性：不可被 外部操作\n        // 使用步骤：在属性名前面加上 # ，就变为私有属性了\n\n        class Person{\n            // 公有属性\n            name;\n            // 私有属性\n            #age;\n            #weight;\n            // 构造方法\n            constructor(name, age, weight){\n                this.name = name;\n                this.#age = age;\n                this.#weight = weight;\n            }\n            intro(){\n                this.name;  // 晓红\n                this.#age;  // 18\n            }\n        }\n        //实例化\n        const girl = new Person('晓红', 18, '45kg');\n        girl.name;  // 晓红\n        girl.#age;  // 报错，无法访问，只能在类里面访问\n        girl.intro();\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n",normalizedContent:"# 知识点：私有属性\n\n作用： 对属性的封装，不可被外部操作\n\n特性： 属性分 公有属性 和 私有属性，常用的属性就是公有属性\n\n公有属性： 可被 外部操作\n\n私有属性： 不可被 外部操作\n\n使用步骤： 在属性名前面加上 # ，就变为私有属性了\n\nclass person{\n    // 公有属性\n    name;\n    // 私有属性\n    #age;\n    #weight;\n    // 构造方法\n    constructor(name, age, weight){\n        this.name = name;\n        this.#age = age;\n        this.#weight = weight;\n    }\n    intro(){\n        this.name;  // 晓红\n        this.#age;  // 18\n    }\n}\n//实例化\nconst girl = new person('晓红', 18, '45kg');\ngirl.name;  // 晓红\ngirl.#age;  // 报错，无法访问，只能在类里面访问\ngirl.intro();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>私有属性</title>\n</head>\n<body>\n    <script>\n        // 知识点：私有属性\n        \n        // 作用：对属性的封装，不可被外部操作\n        // 特性：属性分 公有属性 和 私有属性，常用的属性就是公有属性\n        // 公有属性：可被 外部操作\n        // 私有属性：不可被 外部操作\n        // 使用步骤：在属性名前面加上 # ，就变为私有属性了\n\n        class person{\n            // 公有属性\n            name;\n            // 私有属性\n            #age;\n            #weight;\n            // 构造方法\n            constructor(name, age, weight){\n                this.name = name;\n                this.#age = age;\n                this.#weight = weight;\n            }\n            intro(){\n                this.name;  // 晓红\n                this.#age;  // 18\n            }\n        }\n        //实例化\n        const girl = new person('晓红', 18, '45kg');\n        girl.name;  // 晓红\n        girl.#age;  // 报错，无法访问，只能在类里面访问\n        girl.intro();\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"Promise.allSettled",frontmatter:{title:"Promise.allSettled",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/c68a1c/",categories:["《前端》笔记","JS","ES11"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/09.ES11/02.Promise-allSettled.html",relativePath:"《前端》笔记《基础知识》/03.JS/09.ES11/02.Promise-allSettled.md",key:"v-b9311d42",path:"/pages/c68a1c/",headersStr:null,content:"# 知识点：Promise.allSettled\n\n（学完尚硅谷中的 Promise 再来学习）",normalizedContent:"# 知识点：promise.allsettled\n\n（学完尚硅谷中的 promise 再来学习）",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"可选链操作符",frontmatter:{title:"可选链操作符",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/3502f2/",categories:["《前端》笔记","JS","ES11"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/09.ES11/04.%E5%8F%AF%E9%80%89%E9%93%BE%E6%93%8D%E4%BD%9C%E7%AC%A6.html",relativePath:"《前端》笔记《基础知识》/03.JS/09.ES11/04.可选链操作符.md",key:"v-5f385efa",path:"/pages/3502f2/",headersStr:null,content:"# 知识点：可选链操作符\n\n作用： 简化了判断用户是否传递参数的语法\n\n语法： ?.\n\nfunction main(config){\n// 传统方法：\n    // 原理：判断用户是否传递 config 然后在进行处理，如果不判断，用户不传参则 会报错\n    // const dbHost = config && config.db && config.db.host;  // 192.168.1.10\n\n    // 原理：判断用户是否传递 config，如果传递，则读取 db 属性，如果有 db 则读取 host，用户不传参则也 不会报错\n    const dbHost = config?.db?.host;\n}\n\nmain({\n    db: {\n        host:'192.168.1.100',\n        username: 'root'\n    },\n    cache: {\n        host: '192.168.1.200',\n        username:'admin'\n    }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>可选链操作符</title>\n</head>\n<body>\n    <script>\n        // 知识点：可选链操作符\n        // 作用：简化了判断用户是否传递参数的语法\n        // 语法：?.\n        function main(config){\n        // 传统方法：\n            // 原理：判断用户是否传递 config 然后在进行处理，如果不判断，用户不传参则 会报错\n            // const dbHost = config && config.db && config.db.host;  // 192.168.1.10\n\n            // 原理：判断用户是否传递 config，如果传递，则读取 db 属性，如果有 db 则读取 host，用户不传参则也 不会报错\n            const dbHost = config?.db?.host;\n        }\n\n        main({\n            db: {\n                host:'192.168.1.100',\n                username: 'root'\n            },\n            cache: {\n                host: '192.168.1.200',\n                username:'admin'\n            }\n        })\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n",normalizedContent:"# 知识点：可选链操作符\n\n作用： 简化了判断用户是否传递参数的语法\n\n语法： ?.\n\nfunction main(config){\n// 传统方法：\n    // 原理：判断用户是否传递 config 然后在进行处理，如果不判断，用户不传参则 会报错\n    // const dbhost = config && config.db && config.db.host;  // 192.168.1.10\n\n    // 原理：判断用户是否传递 config，如果传递，则读取 db 属性，如果有 db 则读取 host，用户不传参则也 不会报错\n    const dbhost = config?.db?.host;\n}\n\nmain({\n    db: {\n        host:'192.168.1.100',\n        username: 'root'\n    },\n    cache: {\n        host: '192.168.1.200',\n        username:'admin'\n    }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>可选链操作符</title>\n</head>\n<body>\n    <script>\n        // 知识点：可选链操作符\n        // 作用：简化了判断用户是否传递参数的语法\n        // 语法：?.\n        function main(config){\n        // 传统方法：\n            // 原理：判断用户是否传递 config 然后在进行处理，如果不判断，用户不传参则 会报错\n            // const dbhost = config && config.db && config.db.host;  // 192.168.1.10\n\n            // 原理：判断用户是否传递 config，如果传递，则读取 db 属性，如果有 db 则读取 host，用户不传参则也 不会报错\n            const dbhost = config?.db?.host;\n        }\n\n        main({\n            db: {\n                host:'192.168.1.100',\n                username: 'root'\n            },\n            cache: {\n                host: '192.168.1.200',\n                username:'admin'\n            }\n        })\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"BigInt （大整数） 数据结构",frontmatter:{title:"BigInt （大整数） 数据结构",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/297c44/",categories:["《前端》笔记","JS","ES11"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/09.ES11/06.BigInt%20%EF%BC%88%E5%A4%A7%E6%95%B4%E6%95%B0%EF%BC%89%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",relativePath:"《前端》笔记《基础知识》/03.JS/09.ES11/06.BigInt （大整数） 数据结构.md",key:"v-8acc1b34",path:"/pages/297c44/",headersStr:null,content:'# 知识点：BigInt（大整数）数据结构\n\n作用： 进行大数值的运算，解决 超过最大安全整数结果就会有误差 的问题\n\n使用步骤： 在整数的数字后面加上 n\n\nlet n = 521n; \nn, typeof(n);  // 521n "bigint"\n\n// BigInt(普通的整数)\n// 作用：将普通整数转换为大整数\n// 特性：不能转换浮点型的数\nlet n = 123;\nBigInt(n);  // 123n\nBigInt(1.2);  // 报错\n\n// Number.MAX_SAFE_INTEGER：最大安全整数\nlet max = Number.MAX_SAFE_INTEGER;  // 9007199254740991\n\n// 超过最大安全整数结果就会有误差\nmax + 1;  // 9007199254740992\nmax + 2;  // 9007199254740992\nmax + 3;  // 9007199254740994\n\n// 特性：大整数 不能和普通的 整数 做运算\nBigInt(max)  + 1  // 报错\n\n// 解决方法：把整数转换为大整数\nBigInt(max) + BigInt(1)  // 9007199254740992n\nBigInt(max) + BigInt(2)  // 9007199254740993n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>BigInt</title>\n</head>\n<body>\n    <script>\n        // 知识点：BigInt（大整数） 数据结构\n        // 作用：进行大数值的运算，解决 超过最大安全整数结果就会有误差 的问题\n        // 使用步骤：在整数的数字后面加上 n\n\n        let n = 521n; \n        n, typeof(n);  // 521n "bigint"\n\n        // BigInt(普通的整数)\n        // 作用：将普通整数转换为大整数\n        // 特性：不能转换浮点型的数\n        let n = 123;\n        BigInt(n);  // 123n\n        BigInt(1.2);  // 报错\n\n        // Number.MAX_SAFE_INTEGER：最大安全整数\n        let max = Number.MAX_SAFE_INTEGER;  // 9007199254740991\n\n        // 超过最大安全整数结果就会有误差\n        max + 1;  // 9007199254740992\n        max + 2;  // 9007199254740992\n        max + 3;  // 9007199254740994\n\n        // 特性：大整数 不能和普通的 整数 做运算\n        BigInt(max)  + 1  // 报错\n\n        // 解决方法：把整数转换为大整数\n        BigInt(max) + BigInt(1)  // 9007199254740992n\n        BigInt(max) + BigInt(2)  // 9007199254740993n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n',normalizedContent:'# 知识点：bigint（大整数）数据结构\n\n作用： 进行大数值的运算，解决 超过最大安全整数结果就会有误差 的问题\n\n使用步骤： 在整数的数字后面加上 n\n\nlet n = 521n; \nn, typeof(n);  // 521n "bigint"\n\n// bigint(普通的整数)\n// 作用：将普通整数转换为大整数\n// 特性：不能转换浮点型的数\nlet n = 123;\nbigint(n);  // 123n\nbigint(1.2);  // 报错\n\n// number.max_safe_integer：最大安全整数\nlet max = number.max_safe_integer;  // 9007199254740991\n\n// 超过最大安全整数结果就会有误差\nmax + 1;  // 9007199254740992\nmax + 2;  // 9007199254740992\nmax + 3;  // 9007199254740994\n\n// 特性：大整数 不能和普通的 整数 做运算\nbigint(max)  + 1  // 报错\n\n// 解决方法：把整数转换为大整数\nbigint(max) + bigint(1)  // 9007199254740992n\nbigint(max) + bigint(2)  // 9007199254740993n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# demo\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>bigint</title>\n</head>\n<body>\n    <script>\n        // 知识点：bigint（大整数） 数据结构\n        // 作用：进行大数值的运算，解决 超过最大安全整数结果就会有误差 的问题\n        // 使用步骤：在整数的数字后面加上 n\n\n        let n = 521n; \n        n, typeof(n);  // 521n "bigint"\n\n        // bigint(普通的整数)\n        // 作用：将普通整数转换为大整数\n        // 特性：不能转换浮点型的数\n        let n = 123;\n        bigint(n);  // 123n\n        bigint(1.2);  // 报错\n\n        // number.max_safe_integer：最大安全整数\n        let max = number.max_safe_integer;  // 9007199254740991\n\n        // 超过最大安全整数结果就会有误差\n        max + 1;  // 9007199254740992\n        max + 2;  // 9007199254740992\n        max + 3;  // 9007199254740994\n\n        // 特性：大整数 不能和普通的 整数 做运算\n        bigint(max)  + 1  // 报错\n\n        // 解决方法：把整数转换为大整数\n        bigint(max) + bigint(1)  // 9007199254740992n\n        bigint(max) + bigint(2)  // 9007199254740993n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"动态 inport",frontmatter:{title:"动态 inport",date:"2022-06-26T23:30:25.000Z",permalink:"/pages/71d197/",categories:["《前端》笔记《基础知识》","JS","ES11"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/09.ES11/05.%E5%8A%A8%E6%80%81%20inport.html",relativePath:"《前端》笔记《基础知识》/03.JS/09.ES11/05.动态 inport.md",key:"v-66abb8b2",path:"/pages/71d197/",headersStr:null,content:"点击",normalizedContent:"点击",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"globalThis（全局 this）",frontmatter:{title:"globalThis（全局 this）",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/072adc/",categories:["《前端》笔记","JS","ES11"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/03.JS/09.ES11/07.globalThis%EF%BC%88%E5%85%A8%E5%B1%80%20this%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/03.JS/09.ES11/07.globalThis（全局 this）.md",key:"v-10cf7181",path:"/pages/072adc/",headersStr:null,content:'# 知识点：globalThis（全局 this）\n\n作用： 始终指向 全局 this\n\n特性：\n\n 1. window 环境中的 this 指向 window 对象\n 2. node 环境中的 this 指向 global 对象\n\nconsole.log(globalThis);\n\n\n1\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>globalThis</title>\n</head>\n<body>\n    <script>\n        // 知识点：globalThis（全局 this）\n        // 作用：始终指向 全局 this\n        // 特性：\n            // 1、window 环境中的 this 指向 window 对象\n            // 2、node   环境中的 this 指向 global 对象\n            \n        console.log(globalThis);\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 知识点：globalthis（全局 this）\n\n作用： 始终指向 全局 this\n\n特性：\n\n 1. window 环境中的 this 指向 window 对象\n 2. node 环境中的 this 指向 global 对象\n\nconsole.log(globalthis);\n\n\n1\n\n\n\n# demo\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>globalthis</title>\n</head>\n<body>\n    <script>\n        // 知识点：globalthis（全局 this）\n        // 作用：始终指向 全局 this\n        // 特性：\n            // 1、window 环境中的 this 指向 window 对象\n            // 2、node   环境中的 this 指向 global 对象\n            \n        console.log(globalthis);\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"WebAPI",frontmatter:{title:"WebAPI",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/dbf0ce/",tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},categories:["WebAPI"],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/01.WebAPI.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/01.WebAPI.md",key:"v-4203fcf5",path:"/pages/dbf0ce/",headers:[{level:2,title:"WebAPI",slug:"webapi",normalizedTitle:"webapi",charIndex:6},{level:2,title:"API（接口）",slug:"api-接口",normalizedTitle:"api（接口）",charIndex:90}],headersStr:"WebAPI API（接口）",content:"# 知识点：WebAPI\n\n\n# WebAPI\n\n是浏览器提供的一套操作浏览器功能和页面元素的 API。由 DOM（页面文档对象模型） 和 BOM（浏览器对象模型） 组成\n\n\n# API（接口）\n\n预先定义的函数，可以轻松实现某种功能，无需访问源码和理解内部工作原理",normalizedContent:"# 知识点：webapi\n\n\n# webapi\n\n是浏览器提供的一套操作浏览器功能和页面元素的 api。由 dom（页面文档对象模型） 和 bom（浏览器对象模型） 组成\n\n\n# api（接口）\n\n预先定义的函数，可以轻松实现某种功能，无需访问源码和理解内部工作原理",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"DOM",frontmatter:{title:"DOM",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/a365d4/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/02.DOM.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/02.DOM.md",key:"v-1bc2d22f",path:"/pages/a365d4/",headersStr:null,content:"# 知识点：DOM\n\n作用： 页面文档对象模型。操作网页的内容、结构和样式\n\ndocument（文档）： 表示 文档。一个页面 就是 一个文档 element （元素）： 表示 元素。所有标签 都是 元素 node （节点）： 表示 节点。网页中的所有内容都是节点（标签、属性、文本、注释等）\n\n说明： 以上内容都是对象\n\n查看元素里面的属性和方法： console.dir(元素)\n\nvar timer = document.getElementById('time');\nconsole.dir(timer);\n\n\n1\n2\n",normalizedContent:"# 知识点：dom\n\n作用： 页面文档对象模型。操作网页的内容、结构和样式\n\ndocument（文档）： 表示 文档。一个页面 就是 一个文档 element （元素）： 表示 元素。所有标签 都是 元素 node （节点）： 表示 节点。网页中的所有内容都是节点（标签、属性、文本、注释等）\n\n说明： 以上内容都是对象\n\n查看元素里面的属性和方法： console.dir(元素)\n\nvar timer = document.getelementbyid('time');\nconsole.dir(timer);\n\n\n1\n2\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"获取页面元素",frontmatter:{title:"获取页面元素",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/5a42b6/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/03.%E8%8E%B7%E5%8F%96%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/03.获取页面元素.md",key:"v-5763c854",path:"/pages/5a42b6/",headers:[{level:2,title:"一、使用 DOM 提供的方法获取元素",slug:"一、使用-dom-提供的方法获取元素",normalizedTitle:"一、使用 dom 提供的方法获取元素",charIndex:17},{level:3,title:"（一）根据 ID 获取",slug:"一-根据-id-获取",normalizedTitle:"（一）根据 id 获取",charIndex:40},{level:3,title:"（二）根据 标签名 获取",slug:"二-根据-标签名-获取",normalizedTitle:"（二）根据 标签名 获取",charIndex:168},{level:2,title:"二、使用 DOM 提供的方法获取元素（H5新增）",slug:"二、使用-dom-提供的方法获取元素-h5新增",normalizedTitle:"二、使用 dom 提供的方法获取元素（h5新增）",charIndex:322},{level:3,title:"（一）根据 类名 获取",slug:"一-根据-类名-获取",normalizedTitle:"（一）根据 类名 获取",charIndex:351},{level:3,title:"（二）根据 指定选择器获取 第一个 元素",slug:"二-根据-指定选择器获取-第一个-元素",normalizedTitle:"（二）根据 指定选择器获取 第一个 元素",charIndex:514},{level:3,title:"（三）根据 指定选择器获取 元素",slug:"三-根据-指定选择器获取-元素",normalizedTitle:"（三）根据 指定选择器获取 元素",charIndex:768},{level:2,title:"获取特殊元素",slug:"获取特殊元素",normalizedTitle:"获取特殊元素",charIndex:1043},{level:3,title:"（1）获取 body 元素",slug:"_1-获取-body-元素",normalizedTitle:"（1）获取 body 元素",charIndex:1054},{level:3,title:"（2）获取 html 元素",slug:"_2-获取-html-元素",normalizedTitle:"（2）获取 html 元素",charIndex:1125},{level:2,title:"二、使用 节点层级关系获取元素",slug:"二、使用-节点层级关系获取元素",normalizedTitle:"二、使用 节点层级关系获取元素",charIndex:1218},{level:2,title:"三、节点操作",slug:"三、节点操作",normalizedTitle:"三、节点操作",charIndex:1310},{level:3,title:"（一）创建 元素节点",slug:"一-创建-元素节点",normalizedTitle:"（一）创建 元素节点",charIndex:1366},{level:3,title:"（二）添加 到父元素节点 的最后面",slug:"二-添加-到父元素节点-的最后面",normalizedTitle:"（二）添加 到父元素节点 的最后面",charIndex:1568},{level:3,title:"（三）添加 到父元素节点 的指定位置",slug:"三-添加-到父元素节点-的指定位置",normalizedTitle:"（三）添加 到父元素节点 的指定位置",charIndex:1645},{level:3,title:"（4）删除子节点",slug:"_4-删除子节点",normalizedTitle:"（4）删除子节点",charIndex:1747},{level:3,title:"（5）复制节点",slug:"_5-复制节点",normalizedTitle:"（5）复制节点",charIndex:1835},{level:2,title:"四、节点层级",slug:"四、节点层级",normalizedTitle:"四、节点层级",charIndex:2003},{level:3,title:"（一）获取 父节点",slug:"一-获取-父节点",normalizedTitle:"（一）获取 父节点",charIndex:2014},{level:3,title:"（二）获取 子节点（不推荐）",slug:"二-获取-子节点-不推荐",normalizedTitle:"（二）获取 子节点（不推荐）",charIndex:2224},{level:3,title:"（三）获取 子元素节点（推荐）",slug:"三-获取-子元素节点-推荐",normalizedTitle:"（三）获取 子元素节点（推荐）",charIndex:2401},{level:3,title:"（四）获取第一个 子节点（不推荐）",slug:"四-获取第一个-子节点-不推荐",normalizedTitle:"（四）获取第一个 子节点（不推荐）",charIndex:2513},{level:3,title:"（五）获取最后一个 子节点（不推荐）",slug:"五-获取最后一个-子节点-不推荐",normalizedTitle:"（五）获取最后一个 子节点（不推荐）",charIndex:2576},{level:3,title:"（六）获取第一个 子元素节点（推荐）",slug:"六-获取第一个-子元素节点-推荐",normalizedTitle:"（六）获取第一个 子元素节点（推荐）",charIndex:2639},{level:3,title:"（七）获取最后一个 子元素节点（推荐）",slug:"七-获取最后一个-子元素节点-推荐",normalizedTitle:"（七）获取最后一个 子元素节点（推荐）",charIndex:2711},{level:3,title:"（八）获取 当前元素的 下一个 兄弟节点（不推荐）",slug:"八-获取-当前元素的-下一个-兄弟节点-不推荐",normalizedTitle:"（八）获取 当前元素的 下一个 兄弟节点（不推荐）",charIndex:2783},{level:3,title:"（九）获取 当前元素的 上一个 兄弟节点（不推荐）",slug:"九-获取-当前元素的-上一个-兄弟节点-不推荐",normalizedTitle:"（九）获取 当前元素的 上一个 兄弟节点（不推荐）",charIndex:2854},{level:3,title:"（十）获取 当前元素的 下一个 兄弟元素节点（推荐）",slug:"十-获取-当前元素的-下一个-兄弟元素节点-推荐",normalizedTitle:"（十）获取 当前元素的 下一个 兄弟元素节点（推荐）",charIndex:2929},{level:3,title:"（十一）获取 当前元素的 上一个 兄弟元素节点（推荐）",slug:"十一-获取-当前元素的-上一个-兄弟元素节点-推荐",normalizedTitle:"（十一）获取 当前元素的 上一个 兄弟元素节点（推荐）",charIndex:3010}],headersStr:"一、使用 DOM 提供的方法获取元素 （一）根据 ID 获取 （二）根据 标签名 获取 二、使用 DOM 提供的方法获取元素（H5新增） （一）根据 类名 获取 （二）根据 指定选择器获取 第一个 元素 （三）根据 指定选择器获取 元素 获取特殊元素 （1）获取 body 元素 （2）获取 html 元素 二、使用 节点层级关系获取元素 三、节点操作 （一）创建 元素节点 （二）添加 到父元素节点 的最后面 （三）添加 到父元素节点 的指定位置 （4）删除子节点 （5）复制节点 四、节点层级 （一）获取 父节点 （二）获取 子节点（不推荐） （三）获取 子元素节点（推荐） （四）获取第一个 子节点（不推荐） （五）获取最后一个 子节点（不推荐） （六）获取第一个 子元素节点（推荐） （七）获取最后一个 子元素节点（推荐） （八）获取 当前元素的 下一个 兄弟节点（不推荐） （九）获取 当前元素的 上一个 兄弟节点（不推荐） （十）获取 当前元素的 下一个 兄弟元素节点（推荐） （十一）获取 当前元素的 上一个 兄弟元素节点（推荐）",content:"# 知识点：获取页面元素\n\n\n# 一、使用 DOM 提供的方法获取元素\n\n\n# （一）根据 ID 获取\n\n方法： document.getElementById('id')\n\n<div id=\"demon1\">demon1</div>\n\n\n1\n\n\ndocument.getElementById('demon1');\n\n\n1\n\n\n\n# （二）根据 标签名 获取\n\n方法： 元素.getElementsByTagName('标签名')\n\n返回值： 伪数组；获取不到则返回 空的伪数组\n\nvar demon2 = document.getElementsByTagName('li');  // [li, li, li, li]\n\n\n1\n\n\n\n# 二、使用 DOM 提供的方法获取元素（H5新增）\n\n\n# （一）根据 类名 获取\n\n方法： document.getElementsByClassName('类名')\n\n返回值： 伪数组；获取不到则返回 空的伪数组\n\nvar boxs = document.getElementsByClassName('box');  // [div.box, div.box]\n\n\n1\n\n\n\n# （二）根据 指定选择器获取 第一个 元素\n\n方法： 元素.querySelector('选择器'));\n\n返回值： 元素\n\ndocument.querySelector('#demon1'); // <div id=\"demon1\">后代节点</div>\ndocument.querySelector('.box');   // <div class=\"box\">后代节点</div>\ndocument.querySelector('li');  // <li>后代节点</li>\n\n\n1\n2\n3\n\n\n\n# （三）根据 指定选择器获取 元素\n\n方法： 元素.querySelectorAll('选择器'));\n\n返回值： 伪数组；获取不到则返回 空的伪数组\n\ndocument.querySelectorAll('#demon1');  // [<div id=\"demon1\">demon1</div>]\ndocument.querySelectorAll('.box');  // [div.box, div.box]\ndocument.querySelectorAll('li');  // [li, li, li, li]\n\n\n1\n2\n3\n\n\n\n# 获取特殊元素\n\n\n# （1）获取 body 元素\n\n方法： document.body\n\nconsole.log(document.body);\n\n\n1\n\n\n\n# （2）获取 html 元素\n\n方法： document.documentElement\n\nconsole.log(document.documentElement);\n\n\n1\n\n\n\n# 二、使用 节点层级关系获取元素\n\n概念： 网页中的所有内容都是节点（标签、属性、文本、注释等），在DOM 中，节点使用 node 来表示\n\n特性： 可以更加灵活的操控页面元素\n\n\n# 三、节点操作\n\nvar ul = document.querySelector('ul');\n\n\n1\n\n\n\n# （一）创建 元素节点\n\n方法： 元素.createElement('标签')\n\n特性：\n\n 1. 元素节点名称前最好加一个 c_，方便区分\n 2. 创建出来的元素节点，只能使用一次，后面使用该元素节点时，不会失效\n\nvar c_li = document.createElement('li');\nvar c_li1 = document.createElement('li');\n\n\n1\n2\n\n\n\n# （二）添加 到父元素节点 的最后面\n\n方法： 父元素.appendChild(元素节点)\n\nul.appendChild(c_li);\n\n\n1\n\n\n\n# （三）添加 到父元素节点 的指定位置\n\n方法： 元素.insertBefore(元素节点, 指定位置)\n\nul.insertBefore(c_li1, ul.children[0]);\n\n\n1\n\n\n\n# （4）删除子节点\n\n方法： 元素.removeChild(元素)\n\n返回值： 删除的子节点\n\nul.removeChild(ul.children[0]);\n\n\n1\n\n\n\n# （5）复制节点\n\n方法： 元素.cloneNode(元素)\n\n参数： true （深拷贝）： 克隆 后代节点 false（浅拷贝）（默认）： 不克隆 后代节点\n\n返回值： 复制的节点\n\nvar cl_ul = ul.children[0].cloneNode(true);\nconsole.log(cl_ul);\n\n\n1\n2\n\n\n\n# 四、节点层级\n\n\n# （一）获取 父节点\n\n方法： 元素.parentNode\n\n返回值： 父级节点；找不到则返回 null\n\nvar erweima = document.querySelector('.erweima');\nerweima.parentNode;\n\n// <div class=\"box\">\n  // <span class=\"erweima\">×</span>\n// </div>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （二）获取 子节点（不推荐）\n\n方法： 元素.childNodes\n\n返回值： 伪数组；找不到则返回 null\n\nvar box = document.querySelector('.box');\nbox.childNodes;  // [text, span.erweima, text, span.erweima, text]\n\n\n1\n2\n\n\n\n# （三）获取 子元素节点（推荐）\n\n方法： 元素.children\n\n返回值： 伪数组；找不到则返回 null\n\nbox.children;  // [span.erweima, span.erweima]\n\n\n1\n\n\n\n# （四）获取第一个 子节点（不推荐）\n\n方法： 元素.firstChild\n\n返回值： 伪数组；找不到则返回 null\n\n\n# （五）获取最后一个 子节点（不推荐）\n\n方法： 元素.lastChild\n\n返回值： 伪数组；找不到则返回 null\n\n\n# （六）获取第一个 子元素节点（推荐）\n\n方法： 元素.firstElementChild\n\n返回值： 元素节点；找不到则返回 null\n\n\n# （七）获取最后一个 子元素节点（推荐）\n\n方法： 元素.lastElementChild\n\n返回值： 元素节点；找不到则返回 null\n\n\n# （八）获取 当前元素的 下一个 兄弟节点（不推荐）\n\n方法： 元素.nextSibling\n\n返回值： 节点；找不到则返回 null\n\n\n# （九）获取 当前元素的 上一个 兄弟节点（不推荐）\n\n方法： 元素.previousSibling\n\n返回值： 节点；找不到则返回 null\n\n\n# （十）获取 当前元素的 下一个 兄弟元素节点（推荐）\n\n方法： 元素.nextElementSibling\n\n返回值： 元素节点；找不到则返回 null\n\n\n# （十一）获取 当前元素的 上一个 兄弟元素节点（推荐）\n\n方法： 元素.previousElementSibling\n\n返回值： 元素节点；找不到则返回 null",normalizedContent:"# 知识点：获取页面元素\n\n\n# 一、使用 dom 提供的方法获取元素\n\n\n# （一）根据 id 获取\n\n方法： document.getelementbyid('id')\n\n<div id=\"demon1\">demon1</div>\n\n\n1\n\n\ndocument.getelementbyid('demon1');\n\n\n1\n\n\n\n# （二）根据 标签名 获取\n\n方法： 元素.getelementsbytagname('标签名')\n\n返回值： 伪数组；获取不到则返回 空的伪数组\n\nvar demon2 = document.getelementsbytagname('li');  // [li, li, li, li]\n\n\n1\n\n\n\n# 二、使用 dom 提供的方法获取元素（h5新增）\n\n\n# （一）根据 类名 获取\n\n方法： document.getelementsbyclassname('类名')\n\n返回值： 伪数组；获取不到则返回 空的伪数组\n\nvar boxs = document.getelementsbyclassname('box');  // [div.box, div.box]\n\n\n1\n\n\n\n# （二）根据 指定选择器获取 第一个 元素\n\n方法： 元素.queryselector('选择器'));\n\n返回值： 元素\n\ndocument.queryselector('#demon1'); // <div id=\"demon1\">后代节点</div>\ndocument.queryselector('.box');   // <div class=\"box\">后代节点</div>\ndocument.queryselector('li');  // <li>后代节点</li>\n\n\n1\n2\n3\n\n\n\n# （三）根据 指定选择器获取 元素\n\n方法： 元素.queryselectorall('选择器'));\n\n返回值： 伪数组；获取不到则返回 空的伪数组\n\ndocument.queryselectorall('#demon1');  // [<div id=\"demon1\">demon1</div>]\ndocument.queryselectorall('.box');  // [div.box, div.box]\ndocument.queryselectorall('li');  // [li, li, li, li]\n\n\n1\n2\n3\n\n\n\n# 获取特殊元素\n\n\n# （1）获取 body 元素\n\n方法： document.body\n\nconsole.log(document.body);\n\n\n1\n\n\n\n# （2）获取 html 元素\n\n方法： document.documentelement\n\nconsole.log(document.documentelement);\n\n\n1\n\n\n\n# 二、使用 节点层级关系获取元素\n\n概念： 网页中的所有内容都是节点（标签、属性、文本、注释等），在dom 中，节点使用 node 来表示\n\n特性： 可以更加灵活的操控页面元素\n\n\n# 三、节点操作\n\nvar ul = document.queryselector('ul');\n\n\n1\n\n\n\n# （一）创建 元素节点\n\n方法： 元素.createelement('标签')\n\n特性：\n\n 1. 元素节点名称前最好加一个 c_，方便区分\n 2. 创建出来的元素节点，只能使用一次，后面使用该元素节点时，不会失效\n\nvar c_li = document.createelement('li');\nvar c_li1 = document.createelement('li');\n\n\n1\n2\n\n\n\n# （二）添加 到父元素节点 的最后面\n\n方法： 父元素.appendchild(元素节点)\n\nul.appendchild(c_li);\n\n\n1\n\n\n\n# （三）添加 到父元素节点 的指定位置\n\n方法： 元素.insertbefore(元素节点, 指定位置)\n\nul.insertbefore(c_li1, ul.children[0]);\n\n\n1\n\n\n\n# （4）删除子节点\n\n方法： 元素.removechild(元素)\n\n返回值： 删除的子节点\n\nul.removechild(ul.children[0]);\n\n\n1\n\n\n\n# （5）复制节点\n\n方法： 元素.clonenode(元素)\n\n参数： true （深拷贝）： 克隆 后代节点 false（浅拷贝）（默认）： 不克隆 后代节点\n\n返回值： 复制的节点\n\nvar cl_ul = ul.children[0].clonenode(true);\nconsole.log(cl_ul);\n\n\n1\n2\n\n\n\n# 四、节点层级\n\n\n# （一）获取 父节点\n\n方法： 元素.parentnode\n\n返回值： 父级节点；找不到则返回 null\n\nvar erweima = document.queryselector('.erweima');\nerweima.parentnode;\n\n// <div class=\"box\">\n  // <span class=\"erweima\">×</span>\n// </div>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （二）获取 子节点（不推荐）\n\n方法： 元素.childnodes\n\n返回值： 伪数组；找不到则返回 null\n\nvar box = document.queryselector('.box');\nbox.childnodes;  // [text, span.erweima, text, span.erweima, text]\n\n\n1\n2\n\n\n\n# （三）获取 子元素节点（推荐）\n\n方法： 元素.children\n\n返回值： 伪数组；找不到则返回 null\n\nbox.children;  // [span.erweima, span.erweima]\n\n\n1\n\n\n\n# （四）获取第一个 子节点（不推荐）\n\n方法： 元素.firstchild\n\n返回值： 伪数组；找不到则返回 null\n\n\n# （五）获取最后一个 子节点（不推荐）\n\n方法： 元素.lastchild\n\n返回值： 伪数组；找不到则返回 null\n\n\n# （六）获取第一个 子元素节点（推荐）\n\n方法： 元素.firstelementchild\n\n返回值： 元素节点；找不到则返回 null\n\n\n# （七）获取最后一个 子元素节点（推荐）\n\n方法： 元素.lastelementchild\n\n返回值： 元素节点；找不到则返回 null\n\n\n# （八）获取 当前元素的 下一个 兄弟节点（不推荐）\n\n方法： 元素.nextsibling\n\n返回值： 节点；找不到则返回 null\n\n\n# （九）获取 当前元素的 上一个 兄弟节点（不推荐）\n\n方法： 元素.previoussibling\n\n返回值： 节点；找不到则返回 null\n\n\n# （十）获取 当前元素的 下一个 兄弟元素节点（推荐）\n\n方法： 元素.nextelementsibling\n\n返回值： 元素节点；找不到则返回 null\n\n\n# （十一）获取 当前元素的 上一个 兄弟元素节点（推荐）\n\n方法： 元素.previouselementsibling\n\n返回值： 元素节点；找不到则返回 null",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"元素操作",frontmatter:{title:"元素操作",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/1b21a7/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/04.%E5%85%83%E7%B4%A0%E6%93%8D%E4%BD%9C.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/04.元素操作.md",key:"v-2c131d26",path:"/pages/1b21a7/",headers:[{level:2,title:"一、操作元素内容",slug:"一、操作元素内容",normalizedTitle:"一、操作元素内容",charIndex:136},{level:3,title:"（1）innerText",slug:"_1-innertext",normalizedTitle:"（1）innertext",charIndex:149},{level:3,title:"（2）innerHTML",slug:"_2-innerhtml",normalizedTitle:"（2）innerhtml",charIndex:328},{level:2,title:"操作常用 元素 属性",slug:"操作常用-元素-属性",normalizedTitle:"操作常用 元素 属性",charIndex:563},{level:2,title:"操作常用 表单元素 属性",slug:"操作常用-表单元素-属性",normalizedTitle:"操作常用 表单元素 属性",charIndex:687},{level:2,title:"为元素添加样式",slug:"为元素添加样式",normalizedTitle:"为元素添加样式",charIndex:834},{level:3,title:"（一）行内样式添加",slug:"一-行内样式添加",normalizedTitle:"（一）行内样式添加",charIndex:881},{level:3,title:"（二）类名样式添加",slug:"二-类名样式添加",normalizedTitle:"（二）类名样式添加",charIndex:978}],headersStr:"一、操作元素内容 （1）innerText （2）innerHTML 操作常用 元素 属性 操作常用 表单元素 属性 为元素添加样式 （一）行内样式添加 （二）类名样式添加",content:"# 知识点：元素操作\n\n<div>        11  111\n        222      </div>\n\n<a href=\"mi.com\">小米商城</a>\n\n<input type=\"text\" value=\"哈哈哈\">\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 一、操作元素内容\n\n\n# （1）innerText\n\n获取元素内容： 元素.innerText\n\n设置元素内容： 元素.innerText = 数据\n\n特性：\n\n 1. 去除 内容两边的空格 和 换行\n 2. 不识别 html 标签\n\ndiv.innerText;  // 11 111 222\n// div.innerText = '<p>哈哈哈</p>';\n\n\n1\n2\n\n\n\n# （2）innerHTML\n\n获取元素内容： 元素.innerHTML\n\n设置元素内容： 元素.innerHTML = 数据\n\n创建元素： 元素.innerHTML = '元素'\n\n特性：\n\n 1. 不会去除 内容两边的空格 和 换行\n 2. 识别 html 标签\n\ndiv.innerHTML;  //        11  111\n              //    222 \ndiv.innerHTML = '<p>哈哈哈</p>';\n\n\n1\n2\n3\n\n\n\n# 操作常用 元素 属性\n\n常用元素属性： src、href、id、alt、title\n\n获取元素属性： 元素.常用元素属性\n\n设置元素属性： 元素.常用元素属性 = 数据\n\na.href = 'http://baidu.com';\n\n\n1\n\n\n\n# 操作常用 表单元素 属性\n\n常用表单元素属性： type、value、checked、selected、disabled\n\n获取表单元素属性： 表单元素.常用表单元素属性\n\n设置表单元素属性： 表单元素.常用表单元素属性 = 数据\n\ntext.value = 'pink';\n\n\n1\n\n\n\n# 为元素添加样式\n\n特性： 样式名采用 驼峰命名法 如：backgroundColor\n\n\n# （一）行内样式添加\n\n方法： 元素.style.样式名 = '样式值'\n\n特性： 该方法添加的样式为 行内样式\n\ndiv.style.background = 'pink';\n\n\n1\n\n\n\n# （二）类名样式添加\n\n方法： 元素.className = '类名';\n\ndiv.className = 'size20';\n\n\n1\n",normalizedContent:"# 知识点：元素操作\n\n<div>        11  111\n        222      </div>\n\n<a href=\"mi.com\">小米商城</a>\n\n<input type=\"text\" value=\"哈哈哈\">\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 一、操作元素内容\n\n\n# （1）innertext\n\n获取元素内容： 元素.innertext\n\n设置元素内容： 元素.innertext = 数据\n\n特性：\n\n 1. 去除 内容两边的空格 和 换行\n 2. 不识别 html 标签\n\ndiv.innertext;  // 11 111 222\n// div.innertext = '<p>哈哈哈</p>';\n\n\n1\n2\n\n\n\n# （2）innerhtml\n\n获取元素内容： 元素.innerhtml\n\n设置元素内容： 元素.innerhtml = 数据\n\n创建元素： 元素.innerhtml = '元素'\n\n特性：\n\n 1. 不会去除 内容两边的空格 和 换行\n 2. 识别 html 标签\n\ndiv.innerhtml;  //        11  111\n              //    222 \ndiv.innerhtml = '<p>哈哈哈</p>';\n\n\n1\n2\n3\n\n\n\n# 操作常用 元素 属性\n\n常用元素属性： src、href、id、alt、title\n\n获取元素属性： 元素.常用元素属性\n\n设置元素属性： 元素.常用元素属性 = 数据\n\na.href = 'http://baidu.com';\n\n\n1\n\n\n\n# 操作常用 表单元素 属性\n\n常用表单元素属性： type、value、checked、selected、disabled\n\n获取表单元素属性： 表单元素.常用表单元素属性\n\n设置表单元素属性： 表单元素.常用表单元素属性 = 数据\n\ntext.value = 'pink';\n\n\n1\n\n\n\n# 为元素添加样式\n\n特性： 样式名采用 驼峰命名法 如：backgroundcolor\n\n\n# （一）行内样式添加\n\n方法： 元素.style.样式名 = '样式值'\n\n特性： 该方法添加的样式为 行内样式\n\ndiv.style.background = 'pink';\n\n\n1\n\n\n\n# （二）类名样式添加\n\n方法： 元素.classname = '类名';\n\ndiv.classname = 'size20';\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"动态创建元素的三种方法",frontmatter:{title:"动态创建元素的三种方法",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/cfbb1b/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/05.%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/05.动态创建元素的三种方法.md",key:"v-03d6255f",path:"/pages/cfbb1b/",headers:[{level:2,title:"一、创建 元素",slug:"一、创建-元素",normalizedTitle:"一、创建 元素",charIndex:21},{level:2,title:"二、创建 元素节点",slug:"二、创建-元素节点",normalizedTitle:"二、创建 元素节点",charIndex:274},{level:2,title:"三、操作 元素内容",slug:"三、操作-元素内容",normalizedTitle:"三、操作 元素内容",charIndex:591}],headersStr:"一、创建 元素 二、创建 元素节点 三、操作 元素内容",content:"# 05-动态创建元素的三种方法\n\n\n# 一、创建 元素\n\n方法： document.write()\n\n返回值： 创建的元素\n\n特性： 页面文档流加载完毕，再调用这句话会导致页面重绘\n\nvar btn = document.querySelector('button');\ndocument.write('<div>创建 元素</div>')\n\n\n1\n2\n\n\n页面加载完毕后调用：\n\nbtn.onclick = function() {\n    document.write('<div>创建 元素</div>');\n}\n\n\n1\n2\n3\n\n\n\n# 二、创建 元素节点\n\n方法： 元素.createElement('标签')\n\n返回值： 创建的元素节点\n\n特性：\n\n 1. 元素节点名称前最好加一个 node_，方便区分\n 2. 创建出来的元素节点，只能使用一次，后面使用该元素节点时，不会失效\n 3. 效率一般，但结构清晰\n\nvar create = document.querySelector('.create');\nfor (var i = 0; i <= 100; i++) {\n    var node_a = document.createElement('a');\n    create.appendChild(node_a);\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 三、操作 元素内容\n\n获取元素内容： 元素.innerHTML\n\n设置元素内容： 元素.innerHTML = 数据\n\n创建元素： 元素.innerHTML = '元素'\n\n特性：\n\n 1. 不会去除 内容两边的空格 和 换行\n 2. 识别 html 标签\n 3. 效率低，如果使用数组拼接，效率极高\n\nvar inner = document.querySelector('.inner');\n\n\n1\n\n\n传统方法：\n\nfor (var i = 0; i <= 100; i++) {\n  inner.innerHTML += '<a href=\"#\">百度</a>'\n}\n\n\n1\n2\n3\n\n\n数组拼接：\n\nvar arr = [];\nfor (var i = 0; i <= 100; i++) {\n  arr.push('<a href=\"#\">操作元素内容</a>');\n}\ninner.innerHTML = arr.join('');\n\n\n1\n2\n3\n4\n5\n",normalizedContent:"# 05-动态创建元素的三种方法\n\n\n# 一、创建 元素\n\n方法： document.write()\n\n返回值： 创建的元素\n\n特性： 页面文档流加载完毕，再调用这句话会导致页面重绘\n\nvar btn = document.queryselector('button');\ndocument.write('<div>创建 元素</div>')\n\n\n1\n2\n\n\n页面加载完毕后调用：\n\nbtn.onclick = function() {\n    document.write('<div>创建 元素</div>');\n}\n\n\n1\n2\n3\n\n\n\n# 二、创建 元素节点\n\n方法： 元素.createelement('标签')\n\n返回值： 创建的元素节点\n\n特性：\n\n 1. 元素节点名称前最好加一个 node_，方便区分\n 2. 创建出来的元素节点，只能使用一次，后面使用该元素节点时，不会失效\n 3. 效率一般，但结构清晰\n\nvar create = document.queryselector('.create');\nfor (var i = 0; i <= 100; i++) {\n    var node_a = document.createelement('a');\n    create.appendchild(node_a);\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 三、操作 元素内容\n\n获取元素内容： 元素.innerhtml\n\n设置元素内容： 元素.innerhtml = 数据\n\n创建元素： 元素.innerhtml = '元素'\n\n特性：\n\n 1. 不会去除 内容两边的空格 和 换行\n 2. 识别 html 标签\n 3. 效率低，如果使用数组拼接，效率极高\n\nvar inner = document.queryselector('.inner');\n\n\n1\n\n\n传统方法：\n\nfor (var i = 0; i <= 100; i++) {\n  inner.innerhtml += '<a href=\"#\">百度</a>'\n}\n\n\n1\n2\n3\n\n\n数组拼接：\n\nvar arr = [];\nfor (var i = 0; i <= 100; i++) {\n  arr.push('<a href=\"#\">操作元素内容</a>');\n}\ninner.innerhtml = arr.join('');\n\n\n1\n2\n3\n4\n5\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"自定义属性",frontmatter:{title:"自定义属性",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/7f30b8/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/06.%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/06.自定义属性.md",key:"v-0dd722f1",path:"/pages/7f30b8/",headers:[{level:2,title:"创建 自定义属性",slug:"创建-自定义属性",normalizedTitle:"创建 自定义属性",charIndex:119},{level:2,title:"设置 自定义属性值",slug:"设置-自定义属性值",normalizedTitle:"设置 自定义属性值",charIndex:241},{level:2,title:"获取 自定义属性值",slug:"获取-自定义属性值",normalizedTitle:"获取 自定义属性值",charIndex:292},{level:2,title:"移除 自定义属性值",slug:"移除-自定义属性值",normalizedTitle:"移除 自定义属性值",charIndex:338},{level:2,title:"H5新增 获取自定义属性",slug:"h5新增-获取自定义属性",normalizedTitle:"h5新增 获取自定义属性",charIndex:387}],headersStr:"创建 自定义属性 设置 自定义属性值 获取 自定义属性值 移除 自定义属性值 H5新增 获取自定义属性",content:"# 知识点：自定义属性\n\n作用： 保存数据\n\n特性：\n\n 1. 自定义属性名必须以 data- 开头\n 2. 多个单词以 - 分割 如：data-index\n 3. 获取多个单词的自定义属性，用驼峰命名法 如：dataIndex\n\n\n# 创建 自定义属性\n\n方法一： 直接写在标签中\n\n<div id=\"demo\" index=\"1\" class=\"nav\"></div>\n\n\n1\n\n\n方法二： 给元素添加属性\n\ndiv.data-hahaha = '哈哈哈';\n\n\n1\n\n\n\n# 设置 自定义属性值\n\n方法： element.setAttribute('属性', '值')\n\n\n# 获取 自定义属性值\n\n方法： element.getAttribute('属性')\n\n\n# 移除 自定义属性值\n\n方法： element.removeAttribute('属性')\n\n\n# H5新增 获取自定义属性\n\ndataset： 是一个集合，里面存放了所有以 data 开头的自定义属性\n\n特性： 自定义属性不需要写 data-\n\n方法一： 元素.dataset.自定义属性;\n\n方法二： 元素.dataset[自定义属性];",normalizedContent:"# 知识点：自定义属性\n\n作用： 保存数据\n\n特性：\n\n 1. 自定义属性名必须以 data- 开头\n 2. 多个单词以 - 分割 如：data-index\n 3. 获取多个单词的自定义属性，用驼峰命名法 如：dataindex\n\n\n# 创建 自定义属性\n\n方法一： 直接写在标签中\n\n<div id=\"demo\" index=\"1\" class=\"nav\"></div>\n\n\n1\n\n\n方法二： 给元素添加属性\n\ndiv.data-hahaha = '哈哈哈';\n\n\n1\n\n\n\n# 设置 自定义属性值\n\n方法： element.setattribute('属性', '值')\n\n\n# 获取 自定义属性值\n\n方法： element.getattribute('属性')\n\n\n# 移除 自定义属性值\n\n方法： element.removeattribute('属性')\n\n\n# h5新增 获取自定义属性\n\ndataset： 是一个集合，里面存放了所有以 data 开头的自定义属性\n\n特性： 自定义属性不需要写 data-\n\n方法一： 元素.dataset.自定义属性;\n\n方法二： 元素.dataset[自定义属性];",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"增删改查",frontmatter:{title:"增删改查",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/1ffde2/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/07.%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/07.增删改查.md",key:"v-79159600",path:"/pages/1ffde2/",headers:[{level:2,title:"一、增",slug:"一、增",normalizedTitle:"一、增",charIndex:15},{level:3,title:"（一）appendChild",slug:"一-appendchild",normalizedTitle:"（一）appendchild",charIndex:23},{level:3,title:"（二）insertBefore",slug:"二-insertbefore",normalizedTitle:"（二）insertbefore",charIndex:42},{level:2,title:"二、删",slug:"二、删",normalizedTitle:"二、删",charIndex:62},{level:3,title:"（一）removeChild",slug:"一-removechild",normalizedTitle:"（一）removechild",charIndex:70},{level:2,title:"三、改",slug:"三、改",normalizedTitle:"三、改",charIndex:89},{level:2,title:"四、查",slug:"四、查",normalizedTitle:"四、查",charIndex:209}],headersStr:"一、增 （一）appendChild （二）insertBefore 二、删 （一）removeChild 三、改 四、查",content:"# 知识点：增删改查\n\n\n# 一、增\n\n\n# （一）appendChild\n\n\n# （二）insertBefore\n\n\n# 二、删\n\n\n# （一）removeChild\n\n\n# 三、改\n\n修改元素属性： src、href、title等\n\n修改普通元素内容： innerHTML 、innerText\n\n修改表单元素： value、type、disabled等\n\n修改元素样式： style、className\n\n\n# 四、查\n\nDOM提供的API方法（不推荐）： getElementById、getElementsByTagName\n\nH5提供的新方法： querySelector、querySelectorAll\n\n利用节点操作获取元素： 父(parentNode)、子(children)、兄(previousElementSibling、nextElementSibling)",normalizedContent:"# 知识点：增删改查\n\n\n# 一、增\n\n\n# （一）appendchild\n\n\n# （二）insertbefore\n\n\n# 二、删\n\n\n# （一）removechild\n\n\n# 三、改\n\n修改元素属性： src、href、title等\n\n修改普通元素内容： innerhtml 、innertext\n\n修改表单元素： value、type、disabled等\n\n修改元素样式： style、classname\n\n\n# 四、查\n\ndom提供的api方法（不推荐）： getelementbyid、getelementsbytagname\n\nh5提供的新方法： queryselector、queryselectorall\n\n利用节点操作获取元素： 父(parentnode)、子(children)、兄(previouselementsibling、nextelementsibling)",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"排他思想",frontmatter:{title:"排他思想",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/f62c41/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/08.%E6%8E%92%E4%BB%96%E6%80%9D%E6%83%B3.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/08.排他思想.md",key:"v-b3a63b3a",path:"/pages/f62c41/",headersStr:null,content:"# 知识点：排他思想\n\n作用： 为某组元素中的某个样式添加元素\n\n原理： 双重 for 循环\n\n使用方法：\n\n 1. 清除所有元素样式\n 2. 给当前元素添加样式\n\n例：\n\n<button>按钮1</button>\n<button>按钮2</button>\n<button>按钮3</button>\n<button>按钮4</button>\n<button>按钮5</button>\n\n\n1\n2\n3\n4\n5\n\n\n// 1. 获取所有按钮元素\nvar btns = document.getElementsByTagName('button');\n// btns得到的是伪数组  里面的每一个元素 btns[i]\nfor (var i = 0; i < btns.length; i++) {\n   btns[i].onclick = function() {\n       // (1) 我们先把所有的按钮背景颜色去掉  干掉所有人\n       for (var i = 0; i < btns.length; i++) {\n           btns[i].style.backgroundColor = '';\n       }\n       // (2) 然后才让当前的元素背景颜色为pink 留下我自己\n       this.style.backgroundColor = 'pink';\n\n   }\n}\n//2. 首先先排除其他人，然后才设置自己的样式 这种排除其他人的思想我们成为排他思想\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",normalizedContent:"# 知识点：排他思想\n\n作用： 为某组元素中的某个样式添加元素\n\n原理： 双重 for 循环\n\n使用方法：\n\n 1. 清除所有元素样式\n 2. 给当前元素添加样式\n\n例：\n\n<button>按钮1</button>\n<button>按钮2</button>\n<button>按钮3</button>\n<button>按钮4</button>\n<button>按钮5</button>\n\n\n1\n2\n3\n4\n5\n\n\n// 1. 获取所有按钮元素\nvar btns = document.getelementsbytagname('button');\n// btns得到的是伪数组  里面的每一个元素 btns[i]\nfor (var i = 0; i < btns.length; i++) {\n   btns[i].onclick = function() {\n       // (1) 我们先把所有的按钮背景颜色去掉  干掉所有人\n       for (var i = 0; i < btns.length; i++) {\n           btns[i].style.backgroundcolor = '';\n       }\n       // (2) 然后才让当前的元素背景颜色为pink 留下我自己\n       this.style.backgroundcolor = 'pink';\n\n   }\n}\n//2. 首先先排除其他人，然后才设置自己的样式 这种排除其他人的思想我们成为排他思想\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"1.事件类型（BOM：浏览器对象模型）",frontmatter:{title:"1.事件类型（BOM：浏览器对象模型）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/ee6818/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/09.%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B%EF%BC%88BOM%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/09.事件类型（BOM：浏览器对象模型）.md",key:"v-47e7f6ea",path:"/pages/ee6818/",headers:[{level:2,title:"一、当文档内容加载完成 触发",slug:"一、当文档内容加载完成-触发",normalizedTitle:"一、当文档内容加载完成 触发",charIndex:28},{level:2,title:"二、当文档内容加载完成 触发",slug:"二、当文档内容加载完成-触发",normalizedTitle:"二、当文档内容加载完成 触发",charIndex:159},{level:2,title:"三、当窗口尺寸发生变化时 触发",slug:"三、当窗口尺寸发生变化时-触发",normalizedTitle:"三、当窗口尺寸发生变化时 触发",charIndex:327},{level:2,title:"四、常用 其它 事件",slug:"四、常用-其它-事件",normalizedTitle:"四、常用 其它 事件",charIndex:372},{level:3,title:"（一）当表单发生提交行为时 触发",slug:"一-当表单发生提交行为时-触发",normalizedTitle:"（一）当表单发生提交行为时 触发",charIndex:387}],headersStr:"一、当文档内容加载完成 触发 二、当文档内容加载完成 触发 三、当窗口尺寸发生变化时 触发 四、常用 其它 事件 （一）当表单发生提交行为时 触发",content:"# 知识点：事件类型（BOM：浏览器对象模型）\n\n\n# 一、当文档内容加载完成 触发\n\n事件： load\n\n作用： 允许将 JS 代码写在最上面\n\n特性： 包括 图像、脚本文件、CSS 文件、图片 等\n\nwindow.addEventListener(\"load\",function () {});\n\n\n1\n\n\n\n# 二、当文档内容加载完成 触发\n\n事件： DOMContentLoaded\n\n作用： 提升用户体验。允许将 JS 代码写在最上面\n\n特性： 不包括 图像、脚本文件、CSS 文件、图片 等\n\n    document.addEventListener('DOMContentLoaded',function () {})\n\n\n1\n\n\n\n# 三、当窗口尺寸发生变化时 触发\n\n事件： resize\n\n作用： 完成响应式布局\n\n\n# 四、常用 其它 事件\n\n\n# （一）当表单发生提交行为时 触发\n\n事件： submit",normalizedContent:"# 知识点：事件类型（bom：浏览器对象模型）\n\n\n# 一、当文档内容加载完成 触发\n\n事件： load\n\n作用： 允许将 js 代码写在最上面\n\n特性： 包括 图像、脚本文件、css 文件、图片 等\n\nwindow.addeventlistener(\"load\",function () {});\n\n\n1\n\n\n\n# 二、当文档内容加载完成 触发\n\n事件： domcontentloaded\n\n作用： 提升用户体验。允许将 js 代码写在最上面\n\n特性： 不包括 图像、脚本文件、css 文件、图片 等\n\n    document.addeventlistener('domcontentloaded',function () {})\n\n\n1\n\n\n\n# 三、当窗口尺寸发生变化时 触发\n\n事件： resize\n\n作用： 完成响应式布局\n\n\n# 四、常用 其它 事件\n\n\n# （一）当表单发生提交行为时 触发\n\n事件： submit",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"事件类型（DOM：文档对象模型）",frontmatter:{title:"事件类型（DOM：文档对象模型）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/a00402/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/10.%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B%EF%BC%88DOM%EF%BC%9A%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/10.事件类型（DOM：文档对象模型）.md",key:"v-fce62fda",path:"/pages/a00402/",headers:[{level:2,title:"一、常用 鼠标 事件",slug:"一、常用-鼠标-事件",normalizedTitle:"一、常用 鼠标 事件",charIndex:66},{level:3,title:"（一）鼠标点击左键 触发",slug:"一-鼠标点击左键-触发",normalizedTitle:"（一）鼠标点击左键 触发",charIndex:81},{level:3,title:"（二）鼠标经过 触发",slug:"二-鼠标经过-触发",normalizedTitle:"（二）鼠标经过 触发",charIndex:109},{level:3,title:"（三）鼠标离开 触发",slug:"三-鼠标离开-触发",normalizedTitle:"（三）鼠标离开 触发",charIndex:232},{level:3,title:"（四）获得鼠标焦点 触发",slug:"四-获得鼠标焦点-触发",normalizedTitle:"（四）获得鼠标焦点 触发",charIndex:261},{level:3,title:"（五）失去鼠标焦点 触发",slug:"五-失去鼠标焦点-触发",normalizedTitle:"（五）失去鼠标焦点 触发",charIndex:289},{level:3,title:"（六）鼠标移动 触发",slug:"六-鼠标移动-触发",normalizedTitle:"（六）鼠标移动 触发",charIndex:316},{level:3,title:"（七）鼠标弹起 触发",slug:"七-鼠标弹起-触发",normalizedTitle:"（七）鼠标弹起 触发",charIndex:346},{level:3,title:"（八）鼠标按下 触发",slug:"八-鼠标按下-触发",normalizedTitle:"（八）鼠标按下 触发",charIndex:374},{level:2,title:"二、常用 键盘 事件",slug:"二、常用-键盘-事件",normalizedTitle:"二、常用 键盘 事件",charIndex:404},{level:3,title:"（一）键盘按键松开时 触发",slug:"一-键盘按键松开时-触发",normalizedTitle:"（一）键盘按键松开时 触发",charIndex:419},{level:3,title:"（二）键盘按键按下时 触发",slug:"二-键盘按键按下时-触发",normalizedTitle:"（二）键盘按键按下时 触发",charIndex:462},{level:3,title:"（三）键盘按键按下时 触发",slug:"三-键盘按键按下时-触发",normalizedTitle:"（三）键盘按键按下时 触发",charIndex:507},{level:2,title:"三、常用 其它 事件",slug:"三、常用-其它-事件",normalizedTitle:"三、常用 其它 事件",charIndex:570},{level:3,title:"（一）滚动条滚动时 触发",slug:"一-滚动条滚动时-触发",normalizedTitle:"（一）滚动条滚动时 触发",charIndex:585}],headersStr:"一、常用 鼠标 事件 （一）鼠标点击左键 触发 （二）鼠标经过 触发 （三）鼠标离开 触发 （四）获得鼠标焦点 触发 （五）失去鼠标焦点 触发 （六）鼠标移动 触发 （七）鼠标弹起 触发 （八）鼠标按下 触发 二、常用 键盘 事件 （一）键盘按键松开时 触发 （二）键盘按键按下时 触发 （三）键盘按键按下时 触发 三、常用 其它 事件 （一）滚动条滚动时 触发",content:"# 知识点：事件类型（DOM：文档对象模型）\n\n使用步骤：\n\n 1. 获取元素\n 2. 绑定事件\n 3. 添加事件处理程序\n\n\n# 一、常用 鼠标 事件\n\n\n# （一）鼠标点击左键 触发\n\n事件： click\n\n\n# （二）鼠标经过 触发\n\n事件： mouseover\n\n特性： 鼠标经过自身盒子会触发，经过子盒子 也会触发\n\n原理： 会 冒泡\n\n事件： mouseenter\n\n特性： 鼠标经过自身盒子会触发，经过子盒子 不会触发\n\n原理： 不会 冒泡\n\n\n# （三）鼠标离开 触发\n\n事件： mouseout\n\n\n# （四）获得鼠标焦点 触发\n\n事件： focus\n\n\n# （五）失去鼠标焦点 触发\n\n事件： blur\n\n\n# （六）鼠标移动 触发\n\n事件： mousemove\n\n\n# （七）鼠标弹起 触发\n\n事件： mouseup\n\n\n# （八）鼠标按下 触发\n\n事件： mousedown\n\n\n# 二、常用 键盘 事件\n\n\n# （一）键盘按键松开时 触发\n\n特性： 区分 字母大小写\n\n事件： keyup\n\n\n# （二）键盘按键按下时 触发\n\n特性： 区分 字母大小写\n\n事件： keydown\n\n\n# （三）键盘按键按下时 触发\n\n特性：\n\n 1. 不识别功能键\n 2. 不区分 字母大小写\n\n事件： keypress\n\n\n# 三、常用 其它 事件\n\n\n# （一）滚动条滚动时 触发\n\n事件： scroll",normalizedContent:"# 知识点：事件类型（dom：文档对象模型）\n\n使用步骤：\n\n 1. 获取元素\n 2. 绑定事件\n 3. 添加事件处理程序\n\n\n# 一、常用 鼠标 事件\n\n\n# （一）鼠标点击左键 触发\n\n事件： click\n\n\n# （二）鼠标经过 触发\n\n事件： mouseover\n\n特性： 鼠标经过自身盒子会触发，经过子盒子 也会触发\n\n原理： 会 冒泡\n\n事件： mouseenter\n\n特性： 鼠标经过自身盒子会触发，经过子盒子 不会触发\n\n原理： 不会 冒泡\n\n\n# （三）鼠标离开 触发\n\n事件： mouseout\n\n\n# （四）获得鼠标焦点 触发\n\n事件： focus\n\n\n# （五）失去鼠标焦点 触发\n\n事件： blur\n\n\n# （六）鼠标移动 触发\n\n事件： mousemove\n\n\n# （七）鼠标弹起 触发\n\n事件： mouseup\n\n\n# （八）鼠标按下 触发\n\n事件： mousedown\n\n\n# 二、常用 键盘 事件\n\n\n# （一）键盘按键松开时 触发\n\n特性： 区分 字母大小写\n\n事件： keyup\n\n\n# （二）键盘按键按下时 触发\n\n特性： 区分 字母大小写\n\n事件： keydown\n\n\n# （三）键盘按键按下时 触发\n\n特性：\n\n 1. 不识别功能键\n 2. 不区分 字母大小写\n\n事件： keypress\n\n\n# 三、常用 其它 事件\n\n\n# （一）滚动条滚动时 触发\n\n事件： scroll",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"事件操作",frontmatter:{title:"事件操作",date:"2022-06-26T23:30:25.000Z",permalink:"/pages/beb383/",categories:["《前端》笔记《基础知识》","WebAPI"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/11.%E4%BA%8B%E4%BB%B6%E6%93%8D%E4%BD%9C.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/11.事件操作.md",key:"v-8c868670",path:"/pages/beb383/",headersStr:null,content:"传统注册事件（方法一） 传统注册事件（方法二） 事件监听 addEventListener 事件监听 attachEvent",normalizedContent:"传统注册事件（方法一） 传统注册事件（方法二） 事件监听 addeventlistener 事件监听 attachevent",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"事件流",frontmatter:{title:"事件流",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/b5ccb8/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/12.%E4%BA%8B%E4%BB%B6%E6%B5%81.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/12.事件流.md",key:"v-140aeb5c",path:"/pages/b5ccb8/",headersStr:null,content:"# 知识点：事件流\n\n作用： 控制事件的传播顺序\n\n事件流由三个阶段组成：\n\n 1. 捕获 阶段：从 DOM 最顶层节点，向下传播，直到目标元素 的过程\n 2. 当前 阶段\n 3. 冒泡 阶段：从目标元素，向上传播，直到 DOM 最顶层节点 的过程\n\n特性：\n\n 1. 事件流经过的事件，都会被触发\n 2. onclick 和 attachEvent 只能得到冒泡阶段\n\nvar son = document.querySelector('.son');\nson.addEventListener('click', function() {\n    alert('son');\n}, false);\n\nvar father = document.querySelector('.father');\nfather.addEventListener('click', function() {\n    alert('father');\n}, false);\n\ndocument.addEventListener('click', function() {\n    alert('document');\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",normalizedContent:"# 知识点：事件流\n\n作用： 控制事件的传播顺序\n\n事件流由三个阶段组成：\n\n 1. 捕获 阶段：从 dom 最顶层节点，向下传播，直到目标元素 的过程\n 2. 当前 阶段\n 3. 冒泡 阶段：从目标元素，向上传播，直到 dom 最顶层节点 的过程\n\n特性：\n\n 1. 事件流经过的事件，都会被触发\n 2. onclick 和 attachevent 只能得到冒泡阶段\n\nvar son = document.queryselector('.son');\nson.addeventlistener('click', function() {\n    alert('son');\n}, false);\n\nvar father = document.queryselector('.father');\nfather.addeventlistener('click', function() {\n    alert('father');\n}, false);\n\ndocument.addeventlistener('click', function() {\n    alert('document');\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"1.事件对象（BOM：浏览器对象模型）",frontmatter:{title:"1.事件对象（BOM：浏览器对象模型）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/d90cd6/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/13.%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1%EF%BC%88BOM%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/13.事件对象（BOM：浏览器对象模型）.md",key:"v-5ffb4c4c",path:"/pages/d90cd6/",headers:[{level:2,title:"一、常用 属性",slug:"一、常用-属性",normalizedTitle:"一、常用 属性",charIndex:28},{level:3,title:"（一）window.innerWidth",slug:"一-window-innerwidth",normalizedTitle:"（一）window.innerwidth",charIndex:40}],headersStr:"一、常用 属性 （一）window.innerWidth",content:"# 知识点：事件对象（BOM：浏览器对象模型）\n\n\n# 一、常用 属性\n\n\n# （一）window.innerWidth\n\n作用： 获取当前窗口的宽度\n\nconsole.log(window.innerWidth);\n\n\n1\n",normalizedContent:"# 知识点：事件对象（bom：浏览器对象模型）\n\n\n# 一、常用 属性\n\n\n# （一）window.innerwidth\n\n作用： 获取当前窗口的宽度\n\nconsole.log(window.innerwidth);\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"事件对象（DOM：文档对象模型）",frontmatter:{title:"事件对象（DOM：文档对象模型）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/956791/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/14.%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1%EF%BC%88DOM%EF%BC%9A%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/14.事件对象（DOM：文档对象模型）.md",key:"v-f2e96e48",path:"/pages/956791/",headers:[{level:2,title:"this",slug:"this",normalizedTitle:"this",charIndex:221},{level:2,title:"一、常用 属性",slug:"一、常用-属性",normalizedTitle:"一、常用 属性",charIndex:299},{level:3,title:"（一）事件触发的元素",slug:"一-事件触发的元素",normalizedTitle:"（一）事件触发的元素",charIndex:311},{level:3,title:"（二）事件类型",slug:"二-事件类型",normalizedTitle:"（二）事件类型",charIndex:393},{level:3,title:"（三）阻止事件冒泡",slug:"三-阻止事件冒泡",normalizedTitle:"（三）阻止事件冒泡",charIndex:461},{level:3,title:"（四）返回按键的 ASCII 值",slug:"四-返回按键的-ascii-值",normalizedTitle:"（四）返回按键的 ascii 值",charIndex:551},{level:2,title:"二、鼠标事件对象",slug:"二、鼠标事件对象",normalizedTitle:"二、鼠标事件对象",charIndex:596},{level:3,title:"（一）获取鼠标相对于浏览器窗口可视区的 X/Y 坐标",slug:"一-获取鼠标相对于浏览器窗口可视区的-x-y-坐标",normalizedTitle:"（一）获取鼠标相对于浏览器窗口可视区的 x/y 坐标",charIndex:609},{level:3,title:"（二）获取鼠标相对于文档页面的 X/Y 坐标",slug:"二-获取鼠标相对于文档页面的-x-y-坐标",normalizedTitle:"（二）获取鼠标相对于文档页面的 x/y 坐标",charIndex:719},{level:3,title:"（三）获取鼠标相对于电脑屏幕的 X/Y 坐标",slug:"三-获取鼠标相对于电脑屏幕的-x-y-坐标",normalizedTitle:"（三）获取鼠标相对于电脑屏幕的 x/y 坐标",charIndex:817},{level:2,title:"三、常用 方法",slug:"三、常用-方法",normalizedTitle:"三、常用 方法",charIndex:923},{level:3,title:"（一）阻止默认行为",slug:"一-阻止默认行为",normalizedTitle:"（一）阻止默认行为",charIndex:935},{level:3,title:"（二）禁止鼠标右键菜单",slug:"二-禁止鼠标右键菜单",normalizedTitle:"（二）禁止鼠标右键菜单",charIndex:967},{level:3,title:"（三）禁止鼠标选中",slug:"三-禁止鼠标选中",normalizedTitle:"（三）禁止鼠标选中",charIndex:1141}],headersStr:"this 一、常用 属性 （一）事件触发的元素 （二）事件类型 （三）阻止事件冒泡 （四）返回按键的 ASCII 值 二、鼠标事件对象 （一）获取鼠标相对于浏览器窗口可视区的 X/Y 坐标 （二）获取鼠标相对于文档页面的 X/Y 坐标 （三）获取鼠标相对于电脑屏幕的 X/Y 坐标 三、常用 方法 （一）阻止默认行为 （二）禁止鼠标右键菜单 （三）禁止鼠标选中",content:"# 知识点：事件对象（DOM：文档对象模型）\n\n作用： 存放一系列跟事件相关的信息。如 键盘按键的状态、鼠标的位置、鼠标按钮的状态\n\n方法： 元素.on事件类型 = function(事件对象) {}\n\n<ul>\n    <li>11111</li>\n</ul>\n\n\n1\n2\n3\n\n\nvar ul = document.querySelector('ul');\nul.onclick = function (e) {}\n\n\n1\n2\n\n\n\n# this\n\n作用： 事件的调用者（自己）\n\n返回值： 元素节点\n\nconsole.log(this);  // <ul>...</ul>\n\n\n1\n\n\n\n# 一、常用 属性\n\n\n# （一）事件触发的元素\n\ne.target\n\n返回值： 元素节点\n\nconsole.log(e.target);  // <li>...</li>\n\n\n1\n\n\n\n# （二）事件类型\n\ne.type\n\n返回值： 事件类型\n\nconsole.log(e.type);  // click\n\n\n1\n\n\n\n# （三）阻止事件冒泡\n\ne.cancelBubble = true;\n\n返回值： 布尔值\n\nconsole.log(e.cancelBubble = true);\n\n\n1\n\n\n\n# （四）返回按键的 ASCII 值\n\ne.keyCode\n\n事件： ASCII 值\n\n\n# 二、鼠标事件对象\n\n\n# （一）获取鼠标相对于浏览器窗口可视区的 X/Y 坐标\n\ne.clientX / e.clientY\n\nconsole.log(e.clientX);\nconsole.log(e.clientY);\n\n\n1\n2\n\n\n\n# （二）获取鼠标相对于文档页面的 X/Y 坐标\n\ne.pageX / e.pageY\n\nconsole.log(e.pageX);\nconsole.log(e.pageY);\n\n\n1\n2\n\n\n\n# （三）获取鼠标相对于电脑屏幕的 X/Y 坐标\n\ne.screenX / e.screenY\n\nconsole.log(e.screenX);\nconsole.log(e.screenY);\n\n\n1\n2\n\n\n\n# 三、常用 方法\n\n\n# （一）阻止默认行为\n\ne.preventDefault\n\n\n# （二）禁止鼠标右键菜单\n\n使用步骤：\n\n 1. 给文档 定义 contextmenu 事件类型\n 2. 定义 e.preventDefault()\n\ndocument.addEventListener('contextmenu', function (e) {\n    // e.preventDefault();\n})\n\n\n1\n2\n3\n\n\n\n# （三）禁止鼠标选中\n\n使用步骤：\n\n 1. 给文档 定义 selectstart 事件类型\n 2. 定义 e.preventDefault()\n\ndocument.addEventListener('selectstart', function (e) {\n    // e.preventDefault();\n})\n\n\n1\n2\n3\n",normalizedContent:"# 知识点：事件对象（dom：文档对象模型）\n\n作用： 存放一系列跟事件相关的信息。如 键盘按键的状态、鼠标的位置、鼠标按钮的状态\n\n方法： 元素.on事件类型 = function(事件对象) {}\n\n<ul>\n    <li>11111</li>\n</ul>\n\n\n1\n2\n3\n\n\nvar ul = document.queryselector('ul');\nul.onclick = function (e) {}\n\n\n1\n2\n\n\n\n# this\n\n作用： 事件的调用者（自己）\n\n返回值： 元素节点\n\nconsole.log(this);  // <ul>...</ul>\n\n\n1\n\n\n\n# 一、常用 属性\n\n\n# （一）事件触发的元素\n\ne.target\n\n返回值： 元素节点\n\nconsole.log(e.target);  // <li>...</li>\n\n\n1\n\n\n\n# （二）事件类型\n\ne.type\n\n返回值： 事件类型\n\nconsole.log(e.type);  // click\n\n\n1\n\n\n\n# （三）阻止事件冒泡\n\ne.cancelbubble = true;\n\n返回值： 布尔值\n\nconsole.log(e.cancelbubble = true);\n\n\n1\n\n\n\n# （四）返回按键的 ascii 值\n\ne.keycode\n\n事件： ascii 值\n\n\n# 二、鼠标事件对象\n\n\n# （一）获取鼠标相对于浏览器窗口可视区的 x/y 坐标\n\ne.clientx / e.clienty\n\nconsole.log(e.clientx);\nconsole.log(e.clienty);\n\n\n1\n2\n\n\n\n# （二）获取鼠标相对于文档页面的 x/y 坐标\n\ne.pagex / e.pagey\n\nconsole.log(e.pagex);\nconsole.log(e.pagey);\n\n\n1\n2\n\n\n\n# （三）获取鼠标相对于电脑屏幕的 x/y 坐标\n\ne.screenx / e.screeny\n\nconsole.log(e.screenx);\nconsole.log(e.screeny);\n\n\n1\n2\n\n\n\n# 三、常用 方法\n\n\n# （一）阻止默认行为\n\ne.preventdefault\n\n\n# （二）禁止鼠标右键菜单\n\n使用步骤：\n\n 1. 给文档 定义 contextmenu 事件类型\n 2. 定义 e.preventdefault()\n\ndocument.addeventlistener('contextmenu', function (e) {\n    // e.preventdefault();\n})\n\n\n1\n2\n3\n\n\n\n# （三）禁止鼠标选中\n\n使用步骤：\n\n 1. 给文档 定义 selectstart 事件类型\n 2. 定义 e.preventdefault()\n\ndocument.addeventlistener('selectstart', function (e) {\n    // e.preventdefault();\n})\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"BOM",frontmatter:{title:"BOM",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/174302/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/16.BOM.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/16.BOM.md",key:"v-64ff720f",path:"/pages/174302/",headersStr:null,content:"# 知识点：BOM\n\n作用： 浏览器对象模型。操作浏览器窗口\n\nwindow：\n\n 1. 浏览器顶级对象\n 2. 全局对象，全局作用域中的 变量、函数 都是 window 的属性和方法\n 3. 使用 window 中的属性和方法时，可以省略 window",normalizedContent:"# 知识点：bom\n\n作用： 浏览器对象模型。操作浏览器窗口\n\nwindow：\n\n 1. 浏览器顶级对象\n 2. 全局对象，全局作用域中的 变量、函数 都是 window 的属性和方法\n 3. 使用 window 中的属性和方法时，可以省略 window",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"事件委拖",frontmatter:{title:"事件委拖",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/007db3/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/15.%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%8B%96.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/15.事件委拖.md",key:"v-2dd6c762",path:"/pages/007db3/",headersStr:null,content:"# 知识点：\n\n作用： 简化代码，提高性能。不需要为每个子节点添加事件，也解决了访问 DOM 次数过多，导致性能降低 的问题\n\n原理： 为父元素添加事件监听，通过冒泡原理影响每个子节点\n\n特性： 通常搭配 target 使用\n\n<ul>\n    <li>知否知否，点我应有弹框在手！</li>\n    <li>知否知否，点我应有弹框在手！</li>\n    <li>知否知否，点我应有弹框在手！</li>\n    <li>知否知否，点我应有弹框在手！</li>\n    <li>知否知否，点我应有弹框在手！</li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nvar ul = document.querySelector('ul');\nul.addEventListener('click', function(e) {\n    e.target.style.backgroundColor = 'pink';\n})\n\n\n1\n2\n3\n4\n",normalizedContent:"# 知识点：\n\n作用： 简化代码，提高性能。不需要为每个子节点添加事件，也解决了访问 dom 次数过多，导致性能降低 的问题\n\n原理： 为父元素添加事件监听，通过冒泡原理影响每个子节点\n\n特性： 通常搭配 target 使用\n\n<ul>\n    <li>知否知否，点我应有弹框在手！</li>\n    <li>知否知否，点我应有弹框在手！</li>\n    <li>知否知否，点我应有弹框在手！</li>\n    <li>知否知否，点我应有弹框在手！</li>\n    <li>知否知否，点我应有弹框在手！</li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nvar ul = document.queryselector('ul');\nul.addeventlistener('click', function(e) {\n    e.target.style.backgroundcolor = 'pink';\n})\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"定时器",frontmatter:{title:"定时器",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/5f6ace/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/17.%E5%AE%9A%E6%97%B6%E5%99%A8.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/17.定时器.md",key:"v-c2d08bbc",path:"/pages/5f6ace/",headers:[{level:2,title:"一、创建定时器",slug:"一、创建定时器",normalizedTitle:"一、创建定时器",charIndex:14},{level:3,title:"（一）延迟时间到达后 触发（只执行一次）",slug:"一-延迟时间到达后-触发-只执行一次",normalizedTitle:"（一）延迟时间到达后 触发（只执行一次）",charIndex:26},{level:3,title:"（二）延迟时间到达后 触发（重复执行）",slug:"二-延迟时间到达后-触发-重复执行",normalizedTitle:"（二）延迟时间到达后 触发（重复执行）",charIndex:186},{level:2,title:"二、清除定时器",slug:"二、清除定时器",normalizedTitle:"二、清除定时器",charIndex:350},{level:3,title:"（一）清除 setTimeout 创建的定时器",slug:"一-清除-settimeout-创建的定时器",normalizedTitle:"（一）清除 settimeout 创建的定时器",charIndex:362},{level:3,title:"（二）清除 setInterval 创建的定时器",slug:"二-清除-setinterval-创建的定时器",normalizedTitle:"（二）清除 setinterval 创建的定时器",charIndex:414}],headersStr:"一、创建定时器 （一）延迟时间到达后 触发（只执行一次） （二）延迟时间到达后 触发（重复执行） 二、清除定时器 （一）清除 setTimeout 创建的定时器 （二）清除 setInterval 创建的定时器",content:"# 知识点：定时器\n\n\n# 一、创建定时器\n\n\n# （一）延迟时间到达后 触发（只执行一次）\n\n方法： setTimeout(函数, 【延迟毫秒数】)\n\n延迟毫秒数： 默认为0\n\nvar dsq1 = setTimeout(function () {\n    console.log('setTimeout 只执行一次');\n}, 2000);\n\n\n1\n2\n3\n\n\n\n# （二）延迟时间到达后 触发（重复执行）\n\n方法： setInterval(函数, 【延迟毫秒数】)\n\n延迟毫秒数： 默认为0\n\nvar dsq2 = setInterval(function () {\n    console.log('方法：setInterval 重复执行');\n}, 2000);\n\n\n1\n2\n3\n\n\n\n# 二、清除定时器\n\n\n# （一）清除 setTimeout 创建的定时器\n\n方法： clearTimeout(定时器名)\n\n\n# （二）清除 setInterval 创建的定时器\n\n方法： clearInterval(定时器名)",normalizedContent:"# 知识点：定时器\n\n\n# 一、创建定时器\n\n\n# （一）延迟时间到达后 触发（只执行一次）\n\n方法： settimeout(函数, 【延迟毫秒数】)\n\n延迟毫秒数： 默认为0\n\nvar dsq1 = settimeout(function () {\n    console.log('settimeout 只执行一次');\n}, 2000);\n\n\n1\n2\n3\n\n\n\n# （二）延迟时间到达后 触发（重复执行）\n\n方法： setinterval(函数, 【延迟毫秒数】)\n\n延迟毫秒数： 默认为0\n\nvar dsq2 = setinterval(function () {\n    console.log('方法：setinterval 重复执行');\n}, 2000);\n\n\n1\n2\n3\n\n\n\n# 二、清除定时器\n\n\n# （一）清除 settimeout 创建的定时器\n\n方法： cleartimeout(定时器名)\n\n\n# （二）清除 setinterval 创建的定时器\n\n方法： clearinterval(定时器名)",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"this指向问题",frontmatter:{title:"this指向问题",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/20efbf/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/18.this%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/18.this指向问题.md",key:"v-927c912e",path:"/pages/20efbf/",headers:[{level:2,title:"一、只有函数执行，才能确定 this 指向",slug:"一、只有函数执行-才能确定-this-指向",normalizedTitle:"一、只有函数执行，才能确定 this 指向",charIndex:19},{level:2,title:"二、谁调用 this 所在的函数，this 就指向谁",slug:"二、谁调用-this-所在的函数-this-就指向谁",normalizedTitle:"二、谁调用 this 所在的函数，this 就指向谁",charIndex:45},{level:2,title:"三、全局作用域、普通函数 中的 this 指向 window",slug:"三、全局作用域、普通函数-中的-this-指向-window",normalizedTitle:"三、全局作用域、普通函数 中的 this 指向 window",charIndex:76},{level:2,title:"四、定时器的 this 指向 window",slug:"四、定时器的-this-指向-window",normalizedTitle:"四、定时器的 this 指向 window",charIndex:200},{level:2,title:"五、构造函数中的 this 指向 实例",slug:"五、构造函数中的-this-指向-实例",normalizedTitle:"五、构造函数中的 this 指向 实例",charIndex:287}],headersStr:"一、只有函数执行，才能确定 this 指向 二、谁调用 this 所在的函数，this 就指向谁 三、全局作用域、普通函数 中的 this 指向 window 四、定时器的 this 指向 window 五、构造函数中的 this 指向 实例",content:"# 知识点：this指向问题\n\n\n# 一、只有函数执行，才能确定 this 指向\n\n\n# 二、谁调用 this 所在的函数，this 就指向谁\n\n\n# 三、全局作用域、普通函数 中的 this 指向 window\n\nconsole.log(this);\nfunction demon1 () {\n    console.log(this);\n}\ndemon1();\n\n\n1\n2\n3\n4\n5\n\n\n\n# 四、定时器的 this 指向 window\n\nsetTimeout(function () {\n    console.log(this);\n})\n\n\n1\n2\n3\n\n\n\n# 五、构造函数中的 this 指向 实例",normalizedContent:"# 知识点：this指向问题\n\n\n# 一、只有函数执行，才能确定 this 指向\n\n\n# 二、谁调用 this 所在的函数，this 就指向谁\n\n\n# 三、全局作用域、普通函数 中的 this 指向 window\n\nconsole.log(this);\nfunction demon1 () {\n    console.log(this);\n}\ndemon1();\n\n\n1\n2\n3\n4\n5\n\n\n\n# 四、定时器的 this 指向 window\n\nsettimeout(function () {\n    console.log(this);\n})\n\n\n1\n2\n3\n\n\n\n# 五、构造函数中的 this 指向 实例",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"单线程（同步） 与 多线程（异步）",frontmatter:{title:"单线程（同步） 与 多线程（异步）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/6585fd/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/19.%E5%8D%95%E7%BA%BF%E7%A8%8B%EF%BC%88%E5%90%8C%E6%AD%A5%EF%BC%89%20%E4%B8%8E%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%88%E5%BC%82%E6%AD%A5%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/19.单线程（同步） 与 多线程（异步）.md",key:"v-ea0f7aa2",path:"/pages/6585fd/",headers:[{level:2,title:"一、单线程（同步）",slug:"一、单线程-同步",normalizedTitle:"一、单线程（同步）",charIndex:28},{level:2,title:"二、多线程（异步）",slug:"二、多线程-异步",normalizedTitle:"二、多线程（异步）",charIndex:183},{level:2,title:"JS 执行机制",slug:"js-执行机制",normalizedTitle:"js 执行机制",charIndex:463}],headersStr:"一、单线程（同步） 二、多线程（异步） JS 执行机制",content:"# 知识点：单线程（同步） 与 多线程（异步）\n\n\n# 一、单线程（同步）\n\n同步任务： 非耗时任务\n\n特性：\n\n 1. 上一个任务结束，才会执行下一个任务\n 2. 由 主线程 执行\n\n缺点： 上一个任务执行时间过长，会导致页面渲染加载阻塞\n\nconsole.log(1);\nconsole.log(2);\nconsole.log(3);\n\n\n1\n2\n3\n\n\n\n# 二、多线程（异步）\n\n异步任务： 耗时任务\n\n特性：\n\n 1. 不需要等待上一个任务结束，就可以执行下一个任务\n 2. 委派给宿主环境执行，执行完毕后，通知JS主线程执行回调函数\n\n宿主环境： 浏览器、node\n\n原理： 通过回调函数实现\n\n异步类型：\n\n 1. 普通事件 如：click、resize\n 2. 资源加载 如：load、error\n 3. 定时器\n\nconsole.log(1);\nsetTimeout(function () {\nconsole.log(3);\n}, 0);\nconsole.log(2);\n\n\n1\n2\n3\n4\n5\n\n\n\n# JS 执行机制\n\n围绕三部分执行：\n\n 1. JS 主线程（堆/栈）： 在栈中寻找任务，依次执行\n 2. 宿主环境： 执行异步耗时任务\n 3. 任务队列： 存放回调函数\n\n执行机制：\n\n 1. 从上到下执行主线程中的同步任务和异步任务到任务队列中\n 2. 当栈中的所有同步任务执行完毕，再去任务队列中依次执行异步任务的回调函数\n\n事件循环机制： 执行栈获取任务队列里的异步任务，然后执行，再获取，再执行的重复过程",normalizedContent:"# 知识点：单线程（同步） 与 多线程（异步）\n\n\n# 一、单线程（同步）\n\n同步任务： 非耗时任务\n\n特性：\n\n 1. 上一个任务结束，才会执行下一个任务\n 2. 由 主线程 执行\n\n缺点： 上一个任务执行时间过长，会导致页面渲染加载阻塞\n\nconsole.log(1);\nconsole.log(2);\nconsole.log(3);\n\n\n1\n2\n3\n\n\n\n# 二、多线程（异步）\n\n异步任务： 耗时任务\n\n特性：\n\n 1. 不需要等待上一个任务结束，就可以执行下一个任务\n 2. 委派给宿主环境执行，执行完毕后，通知js主线程执行回调函数\n\n宿主环境： 浏览器、node\n\n原理： 通过回调函数实现\n\n异步类型：\n\n 1. 普通事件 如：click、resize\n 2. 资源加载 如：load、error\n 3. 定时器\n\nconsole.log(1);\nsettimeout(function () {\nconsole.log(3);\n}, 0);\nconsole.log(2);\n\n\n1\n2\n3\n4\n5\n\n\n\n# js 执行机制\n\n围绕三部分执行：\n\n 1. js 主线程（堆/栈）： 在栈中寻找任务，依次执行\n 2. 宿主环境： 执行异步耗时任务\n 3. 任务队列： 存放回调函数\n\n执行机制：\n\n 1. 从上到下执行主线程中的同步任务和异步任务到任务队列中\n 2. 当栈中的所有同步任务执行完毕，再去任务队列中依次执行异步任务的回调函数\n\n事件循环机制： 执行栈获取任务队列里的异步任务，然后执行，再获取，再执行的重复过程",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"location 对象",frontmatter:{title:"location 对象",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/22590b/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/20.location%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/20.location 对象.md",key:"v-7d86f842",path:"/pages/22590b/",headers:[{level:2,title:"一、URL（统一资源定位符）",slug:"一、url-统一资源定位符",normalizedTitle:"一、url（统一资源定位符）",charIndex:157},{level:2,title:"二、location 属性",slug:"二、location-属性",normalizedTitle:"二、location 属性",charIndex:396},{level:3,title:"（一）获取/设置 URL",slug:"一-获取-设置-url",normalizedTitle:"（一）获取/设置 url",charIndex:414},{level:3,title:"（二）获取 主机（域名）",slug:"二-获取-主机-域名",normalizedTitle:"（二）获取 主机（域名）",charIndex:484},{level:3,title:"（三）获取 端口号",slug:"三-获取-端口号",normalizedTitle:"（三）获取 端口号",charIndex:554},{level:3,title:"（四）获取 路径",slug:"四-获取-路径",normalizedTitle:"（四）获取 路径",charIndex:640},{level:3,title:"（五）获取 参数",slug:"五-获取-参数",normalizedTitle:"（五）获取 参数",charIndex:714},{level:3,title:"（六）获取 片段（Hash值）",slug:"六-获取-片段-hash值",normalizedTitle:"（六）获取 片段（hash值）",charIndex:784},{level:2,title:"三、location 方法",slug:"三、location-方法",normalizedTitle:"三、location 方法",charIndex:857},{level:3,title:"（一）跳转页面（页面重定向）",slug:"一-跳转页面-页面重定向",normalizedTitle:"（一）跳转页面（页面重定向）",charIndex:875},{level:3,title:"（二）替换页面",slug:"二-替换页面",normalizedTitle:"（二）替换页面",charIndex:1054},{level:3,title:"（三）刷新页面",slug:"三-刷新页面",normalizedTitle:"（三）刷新页面",charIndex:1232}],headersStr:"一、URL（统一资源定位符） 二、location 属性 （一）获取/设置 URL （二）获取 主机（域名） （三）获取 端口号 （四）获取 路径 （五）获取 参数 （六）获取 片段（Hash值） 三、location 方法 （一）跳转页面（页面重定向） （二）替换页面 （三）刷新页面",content:"# 知识点：location 对象\n\n<button>跳转</button>\n<button>替换</button>\n<button>刷新</button>\n\n\n1\n2\n3\n\n\nvar btn = document.querySelectorAll('button');\n\n\n1\n\n\n作用： 操作 url\n\n\n# 一、URL（统一资源定位符）\n\n作用： 指出文件的位置，并告诉浏览器如何处理该文件\n\n语法： protocol://host[:port]/path/[?query]#fragment\n\nprotocol： 传输协议 host： 主机域名 port： 端口号。http 默认端口号为 80 path： 路径 query： 参数 fragment： 片段\n\n例： http://www.itcast.cn/index.html?name=andy&age=18#link\n\n\n# 二、location 属性\n\n\n# （一）获取/设置 URL\n\n方法： location.href\n\nconsole.log(location.href);\n\n\n1\n\n\n\n# （二）获取 主机（域名）\n\n方法： location.host\n\nconsole.log(location.host);\n\n\n1\n\n\n\n# （三）获取 端口号\n\n方法： location.port\n\n特性： 未设置端口号，返回空字符串\n\nconsole.log(location.port);\n\n\n1\n\n\n\n# （四）获取 路径\n\n方法： location.pathname\n\nconsole.log(location.pathname);\n\n\n1\n\n\n\n# （五）获取 参数\n\n方法： location.search\n\nconsole.log(location.search);\n\n\n1\n\n\n\n# （六）获取 片段（Hash值）\n\n方法： location.hash\n\nconsole.log(location.hash);\n\n\n1\n\n\n\n# 三、location 方法\n\n\n# （一）跳转页面（页面重定向）\n\n方法： location.assign('跳转地址')\n\n特性：\n\n 1. 记录浏览历史\n 2. 允许后退\n\nbtn[0].addEventListener('click', function () {\n    location.assign('http://www.itcast.cn');\n})\n\n\n1\n2\n3\n\n\n\n# （二）替换页面\n\n方法： location.replace('跳转地址')\n\n特性：\n\n 1. 不 记录浏览历史\n 2. 不 允许后退\n\nbtn[1].addEventListener('click', function () {\n    location.replace('http://www.itcast.cn');\n})\n\n\n1\n2\n3\n\n\n\n# （三）刷新页面\n\n方法： location.reload(布尔值)\n\ntrue： 强制刷新\n\nbtn[2].addEventListener('click', function () {\n    location.reload(true);\n})\n\n\n1\n2\n3\n",normalizedContent:"# 知识点：location 对象\n\n<button>跳转</button>\n<button>替换</button>\n<button>刷新</button>\n\n\n1\n2\n3\n\n\nvar btn = document.queryselectorall('button');\n\n\n1\n\n\n作用： 操作 url\n\n\n# 一、url（统一资源定位符）\n\n作用： 指出文件的位置，并告诉浏览器如何处理该文件\n\n语法： protocol://host[:port]/path/[?query]#fragment\n\nprotocol： 传输协议 host： 主机域名 port： 端口号。http 默认端口号为 80 path： 路径 query： 参数 fragment： 片段\n\n例： http://www.itcast.cn/index.html?name=andy&age=18#link\n\n\n# 二、location 属性\n\n\n# （一）获取/设置 url\n\n方法： location.href\n\nconsole.log(location.href);\n\n\n1\n\n\n\n# （二）获取 主机（域名）\n\n方法： location.host\n\nconsole.log(location.host);\n\n\n1\n\n\n\n# （三）获取 端口号\n\n方法： location.port\n\n特性： 未设置端口号，返回空字符串\n\nconsole.log(location.port);\n\n\n1\n\n\n\n# （四）获取 路径\n\n方法： location.pathname\n\nconsole.log(location.pathname);\n\n\n1\n\n\n\n# （五）获取 参数\n\n方法： location.search\n\nconsole.log(location.search);\n\n\n1\n\n\n\n# （六）获取 片段（hash值）\n\n方法： location.hash\n\nconsole.log(location.hash);\n\n\n1\n\n\n\n# 三、location 方法\n\n\n# （一）跳转页面（页面重定向）\n\n方法： location.assign('跳转地址')\n\n特性：\n\n 1. 记录浏览历史\n 2. 允许后退\n\nbtn[0].addeventlistener('click', function () {\n    location.assign('http://www.itcast.cn');\n})\n\n\n1\n2\n3\n\n\n\n# （二）替换页面\n\n方法： location.replace('跳转地址')\n\n特性：\n\n 1. 不 记录浏览历史\n 2. 不 允许后退\n\nbtn[1].addeventlistener('click', function () {\n    location.replace('http://www.itcast.cn');\n})\n\n\n1\n2\n3\n\n\n\n# （三）刷新页面\n\n方法： location.reload(布尔值)\n\ntrue： 强制刷新\n\nbtn[2].addeventlistener('click', function () {\n    location.reload(true);\n})\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"navigator 对象",frontmatter:{title:"navigator 对象",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/366a50/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/21.navigator%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/21.navigator 对象.md",key:"v-bafd43e4",path:"/pages/366a50/",headers:[{level:2,title:"一、判断用户使用哪个终端打开页面",slug:"一、判断用户使用哪个终端打开页面",normalizedTitle:"一、判断用户使用哪个终端打开页面",charIndex:37}],headersStr:"一、判断用户使用哪个终端打开页面",content:'# 知识点：navigator 对象\n\n作用： 浏览器信息的集合\n\n\n# 一、判断用户使用哪个终端打开页面\n\n方法： navigator.userAgent\n\nconsole.log(navigator.userAgent);\n\n\n1\n\n\n使用场景： 如果用户使用手机打开页面，跳转到手机页面\n\nif ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {\n    window.location.href = "../H5/index.html"; //手机\n}\n\n\n1\n2\n3\n',normalizedContent:'# 知识点：navigator 对象\n\n作用： 浏览器信息的集合\n\n\n# 一、判断用户使用哪个终端打开页面\n\n方法： navigator.useragent\n\nconsole.log(navigator.useragent);\n\n\n1\n\n\n使用场景： 如果用户使用手机打开页面，跳转到手机页面\n\nif ((navigator.useragent.match(/(phone|pad|pod|iphone|ipod|ios|ipad|android|mobile|blackberry|iemobile|mqqbrowser|juc|fennec|wosbrowser|browserng|webos|symbian|windows phone)/i))) {\n    window.location.href = "../h5/index.html"; //手机\n}\n\n\n1\n2\n3\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"history 对象(上）",frontmatter:{title:"history 对象(上）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/b8f8fe/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/22.history%20%E5%AF%B9%E8%B1%A1(%E4%B8%8A%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/22.history 对象(上）.md",key:"v-09aa1208",path:"/pages/b8f8fe/",headers:[{level:2,title:"一、允许前进",slug:"一、允许前进",normalizedTitle:"一、允许前进",charIndex:162},{level:2,title:"二、历史记录跳转",slug:"二、历史记录跳转",normalizedTitle:"二、历史记录跳转",charIndex:275}],headersStr:"一、允许前进 二、历史记录跳转",content:"# 知识点：history 对象(上）\n\n<a href=\"20-history 对象(下）.html\">点击我去往列表页</a>\n<button>前进</button>\n\n\n1\n2\n\n\nvar btn = document.querySelector('button');\n\n\n1\n\n\n作用： 操作浏览器历史记录\n\n\n# 一、允许前进\n\n方法： history.forward()\n\nbtn.addEventListener('click', function() {\n    history.forward();\n})\n\n\n1\n2\n3\n\n\n\n# 二、历史记录跳转\n\n方法： go(参数)\n\n参数：\n\n 1. n：前进n个页面\n 2. -n：后退n个页面\n\nbtn.addEventListener('click', function() {\n    go(1);\n})\n\n\n1\n2\n3\n",normalizedContent:"# 知识点：history 对象(上）\n\n<a href=\"20-history 对象(下）.html\">点击我去往列表页</a>\n<button>前进</button>\n\n\n1\n2\n\n\nvar btn = document.queryselector('button');\n\n\n1\n\n\n作用： 操作浏览器历史记录\n\n\n# 一、允许前进\n\n方法： history.forward()\n\nbtn.addeventlistener('click', function() {\n    history.forward();\n})\n\n\n1\n2\n3\n\n\n\n# 二、历史记录跳转\n\n方法： go(参数)\n\n参数：\n\n 1. n：前进n个页面\n 2. -n：后退n个页面\n\nbtn.addeventlistener('click', function() {\n    go(1);\n})\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"history 对象(下）",frontmatter:{title:"history 对象(下）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/626f8b/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/23.history%20%E5%AF%B9%E8%B1%A1(%E4%B8%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/23.history 对象(下）.md",key:"v-3f33f23c",path:"/pages/626f8b/",headers:[{level:2,title:"三、允许后退",slug:"三、允许后退",normalizedTitle:"三、允许后退",charIndex:42}],headersStr:"三、允许后退",content:"# 知识点：history 对象(下）\n\n**作用：**操作浏览器历史记录\n\n\n# 三、允许后退\n\n<a href=\"20-history 对象(上）.html\">点击我去往首页</a>\n<button>后退</button>\n\n\n1\n2\n\n\nvar btn = document.querySelector('button');\n\n\n1\n\n\n方法： history.back()\n\nbtn.addEventListener('click', function() {\n    history.back()\n})\n\n\n1\n2\n3\n",normalizedContent:"# 知识点：history 对象(下）\n\n**作用：**操作浏览器历史记录\n\n\n# 三、允许后退\n\n<a href=\"20-history 对象(上）.html\">点击我去往首页</a>\n<button>后退</button>\n\n\n1\n2\n\n\nvar btn = document.queryselector('button');\n\n\n1\n\n\n方法： history.back()\n\nbtn.addeventlistener('click', function() {\n    history.back()\n})\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"offset 系列",frontmatter:{title:"offset 系列",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/bb0314/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/24.%20offset%20%E7%B3%BB%E5%88%97.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/24. offset 系列.md",key:"v-0f300dc0",path:"/pages/bb0314/",headers:[{level:2,title:"一、获取 元素带有定位的父元素",slug:"一、获取-元素带有定位的父元素",normalizedTitle:"一、获取 元素带有定位的父元素",charIndex:958},{level:2,title:"二、获取 元素 相对 定位的父元素 上边的距离",slug:"二、获取-元素-相对-定位的父元素-上边的距离",normalizedTitle:"二、获取 元素 相对 定位的父元素 上边的距离",charIndex:1083},{level:2,title:"三、获取 元素 相对 定位的父元素 左边的距离",slug:"三、获取-元素-相对-定位的父元素-左边的距离",normalizedTitle:"三、获取 元素 相对 定位的父元素 左边的距离",charIndex:1207},{level:2,title:"四、获取 元素的 宽/高",slug:"四、获取-元素的-宽-高",normalizedTitle:"四、获取 元素的 宽/高",charIndex:1333}],headersStr:"一、获取 元素带有定位的父元素 二、获取 元素 相对 定位的父元素 上边的距离 三、获取 元素 相对 定位的父元素 左边的距离 四、获取 元素的 宽/高",content:'# 知识点：offset 系列\n\n<div class="father">\n    <div class="son"></div>\n</div>\n<div class="w"></div>\n\n\n1\n2\n3\n4\n\n\n* {\n    margin: 0;\n    padding: 0;\n}\n.father {\n    /* position: relative; */\n    width: 200px;\n    height: 200px;\n    background-color: pink;\n    margin-top: 150px;\n    margin-left: 100px;\n}\n.son {\n    width: 100px;\n    height: 100px;\n    background-color: purple;\n    margin-left: 45px;\n}\n.w {\n    height: 200px;\n    background-color: skyblue;\n    margin: 0 auto 200px;\n    padding: 10px;\n    border: 15px solid red;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\nvar father = document.querySelector(\'.father\');\nvar son = document.querySelector(\'.son\');\n\n\n1\n2\n\n\n作用： 获取 元素偏移量、元素大小 相关信息\n\n特性： 获取的数值不带单位\n\noffset 和 style 的区别：\n\n 1. 可以得到任意样式表中的样式值 / 只能得到行内样式表中的样式值\n 2. 获得的是 没有单位 的 数值 / 获得的是 带有单位 的 字符串\n 3. offsetWidth 包含 padding + border + width / style.width 不包含 padding 和 border\n 4. 属性只可读 / 属性可读写\n 5. 应用场景： 获取元素大小位置 / 给元素修改样式\n\n\n# 一、获取 元素带有定位的父元素\n\n方法： 元素.offsetParent\n\n特性： 父元素都没有定位时，返回 body 元素\n\nconsole.log(son.offsetParent);  // <body>...</body>\n\n\n1\n\n\n\n# 二、获取 元素 相对 定位的父元素 上边的距离\n\n方法： 元素.offsetTop\n\n特性： 父元素都没有定位时，返回相对 body 元素上边的距离\n\nconsole.log(father.offsetTop);  // 150\n\n\n1\n\n\n\n# 三、获取 元素 相对 定位的父元素 左边的距离\n\n方法： 元素.offsetLeft\n\n特性： 父元素都没有定位时，返回相对 body 元素上边的距离\n\nconsole.log(father.offsetLeft);  // 100\n\n\n1\n\n\n\n# 四、获取 元素的 宽/高\n\n方法： 元素.offsetWidth / 元素.offsetHeight\n\n特性： 包含 边框、内边距、内容\n\nconsole.log(son.offsetWidth);\nconsole.log(son.offsetHeight);\n\n\n1\n2\n',normalizedContent:'# 知识点：offset 系列\n\n<div class="father">\n    <div class="son"></div>\n</div>\n<div class="w"></div>\n\n\n1\n2\n3\n4\n\n\n* {\n    margin: 0;\n    padding: 0;\n}\n.father {\n    /* position: relative; */\n    width: 200px;\n    height: 200px;\n    background-color: pink;\n    margin-top: 150px;\n    margin-left: 100px;\n}\n.son {\n    width: 100px;\n    height: 100px;\n    background-color: purple;\n    margin-left: 45px;\n}\n.w {\n    height: 200px;\n    background-color: skyblue;\n    margin: 0 auto 200px;\n    padding: 10px;\n    border: 15px solid red;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\nvar father = document.queryselector(\'.father\');\nvar son = document.queryselector(\'.son\');\n\n\n1\n2\n\n\n作用： 获取 元素偏移量、元素大小 相关信息\n\n特性： 获取的数值不带单位\n\noffset 和 style 的区别：\n\n 1. 可以得到任意样式表中的样式值 / 只能得到行内样式表中的样式值\n 2. 获得的是 没有单位 的 数值 / 获得的是 带有单位 的 字符串\n 3. offsetwidth 包含 padding + border + width / style.width 不包含 padding 和 border\n 4. 属性只可读 / 属性可读写\n 5. 应用场景： 获取元素大小位置 / 给元素修改样式\n\n\n# 一、获取 元素带有定位的父元素\n\n方法： 元素.offsetparent\n\n特性： 父元素都没有定位时，返回 body 元素\n\nconsole.log(son.offsetparent);  // <body>...</body>\n\n\n1\n\n\n\n# 二、获取 元素 相对 定位的父元素 上边的距离\n\n方法： 元素.offsettop\n\n特性： 父元素都没有定位时，返回相对 body 元素上边的距离\n\nconsole.log(father.offsettop);  // 150\n\n\n1\n\n\n\n# 三、获取 元素 相对 定位的父元素 左边的距离\n\n方法： 元素.offsetleft\n\n特性： 父元素都没有定位时，返回相对 body 元素上边的距离\n\nconsole.log(father.offsetleft);  // 100\n\n\n1\n\n\n\n# 四、获取 元素的 宽/高\n\n方法： 元素.offsetwidth / 元素.offsetheight\n\n特性： 包含 边框、内边距、内容\n\nconsole.log(son.offsetwidth);\nconsole.log(son.offsetheight);\n\n\n1\n2\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"client 系列",frontmatter:{title:"client 系列",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/ef677b/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/25.client%20%E7%B3%BB%E5%88%97.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/25.client 系列.md",key:"v-5efca30a",path:"/pages/ef677b/",headers:[{level:2,title:"一、获取 元素上边框大小",slug:"一、获取-元素上边框大小",normalizedTitle:"一、获取 元素上边框大小",charIndex:311},{level:2,title:"二、获取 元素左边框大小",slug:"二、获取-元素左边框大小",normalizedTitle:"二、获取 元素左边框大小",charIndex:380},{level:2,title:"三、获取 元素 宽/高",slug:"三、获取-元素-宽-高",normalizedTitle:"三、获取 元素 宽/高",charIndex:451}],headersStr:"一、获取 元素上边框大小 二、获取 元素左边框大小 三、获取 元素 宽/高",content:"# 知识点：client 系列\n\n<div></div>\n\n\n1\n\n\ndiv {\n    width: 200px;\n    height: 200px;\n    background-color: pink;\n    border-top: 30px solid red;\n    border-left: 20px solid rebeccapurple;\n    padding: 10px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nvar div = document.querySelector('div');\n\n\n1\n\n\n作用： 获取 元素可视区、元素大小 相关信息\n\n特性： 获取的数值不带单位\n\n\n# 一、获取 元素上边框大小\n\n方法： 元素.clientTop\n\nconsole.log(div.clientTop);\n\n\n1\n\n\n\n# 二、获取 元素左边框大小\n\n方法： 元素.clientLeft\n\nconsole.log(div.clientLeft);\n\n\n1\n\n\n\n# 三、获取 元素 宽/高\n\n方法： 元素.clientWidth / 元素.clientHeight\n\n特性： 包含 内边距、内容\n\nconsole.log(div.clientWidth);\nconsole.log(div.clientHeight);\n\n\n1\n2\n",normalizedContent:"# 知识点：client 系列\n\n<div></div>\n\n\n1\n\n\ndiv {\n    width: 200px;\n    height: 200px;\n    background-color: pink;\n    border-top: 30px solid red;\n    border-left: 20px solid rebeccapurple;\n    padding: 10px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nvar div = document.queryselector('div');\n\n\n1\n\n\n作用： 获取 元素可视区、元素大小 相关信息\n\n特性： 获取的数值不带单位\n\n\n# 一、获取 元素上边框大小\n\n方法： 元素.clienttop\n\nconsole.log(div.clienttop);\n\n\n1\n\n\n\n# 二、获取 元素左边框大小\n\n方法： 元素.clientleft\n\nconsole.log(div.clientleft);\n\n\n1\n\n\n\n# 三、获取 元素 宽/高\n\n方法： 元素.clientwidth / 元素.clientheight\n\n特性： 包含 内边距、内容\n\nconsole.log(div.clientwidth);\nconsole.log(div.clientheight);\n\n\n1\n2\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"scroll 系列 和 page 系列",frontmatter:{title:"scroll 系列 和 page 系列",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/95b209/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/26.scroll%20%E7%B3%BB%E5%88%97%20%E5%92%8C%20page%20%E7%B3%BB%E5%88%97.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/26.scroll 系列 和 page 系列.md",key:"v-7b5a6bdc",path:"/pages/95b209/",headers:[{level:2,title:"一、scroll 系列",slug:"一、scroll-系列",normalizedTitle:"一、scroll 系列",charIndex:274},{level:3,title:"（一）操作 元素被卷去的上侧距离",slug:"一-操作-元素被卷去的上侧距离",normalizedTitle:"（一）操作 元素被卷去的上侧距离",charIndex:333},{level:3,title:"（二）获取 元素被卷去的左侧距离",slug:"二-获取-元素被卷去的左侧距离",normalizedTitle:"（二）获取 元素被卷去的左侧距离",charIndex:485},{level:3,title:"（三）获取 元素 宽/高",slug:"三-获取-元素-宽-高",normalizedTitle:"（三）获取 元素 宽/高",charIndex:616},{level:2,title:"二、page 系列",slug:"二、page-系列",normalizedTitle:"二、page 系列",charIndex:757},{level:3,title:"（一）获取 页面被卷去的上侧距离",slug:"一-获取-页面被卷去的上侧距离",normalizedTitle:"（一）获取 页面被卷去的上侧距离",charIndex:801},{level:3,title:"（二）获取 页面被卷去的左侧距离",slug:"二-获取-页面被卷去的左侧距离",normalizedTitle:"（二）获取 页面被卷去的左侧距离",charIndex:946}],headersStr:"一、scroll 系列 （一）操作 元素被卷去的上侧距离 （二）获取 元素被卷去的左侧距离 （三）获取 元素 宽/高 二、page 系列 （一）获取 页面被卷去的上侧距离 （二）获取 页面被卷去的左侧距离",content:"# 知识点：scroll 系列 和 page 系列\n\n<div>\n    我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容\n</div>\n\n\n1\n2\n3\n\n\nvar div = document.querySelector('div');\n\n\n1\n\n\n\n# 一、scroll 系列\n\n作用： 操作 元素滚动距离、获取 元素大小 相关信息\n\n特性： 获取的数值不带单位\n\n\n# （一）操作 元素被卷去的上侧距离\n\n方法： 元素.scrolltTop\n\ndiv.scrollTop = 50;\ndiv.addEventListener('scroll', function () {\n    console.log(div.scrollTop);\n})\n\n\n1\n2\n3\n4\n\n\n\n# （二）获取 元素被卷去的左侧距离\n\n方法： 元素.scrollLeft\n\ndiv.addEventListener('scroll', function () {\n    console.log(div.scrollLeft);\n})\n\n\n1\n2\n3\n\n\n\n# （三）获取 元素 宽/高\n\n方法： 元素.scrollWidth / 元素.scrollHeight\n\n特性： 包含 内边距、实际内容\n\nconsole.log(div.scrollWidth);\nconsole.log(div.scrollHeight);\n\n\n1\n2\n\n\n\n# 二、page 系列\n\n作用： 获取 页面滚动距离\n\n特性： 获取的数值不带单位\n\n\n# （一）获取 页面被卷去的上侧距离\n\n方法： window.pageYOffset\n\ndocument.addEventListener('scroll', function () {\n    console.log(window.pageYOffset);\n})\n\n\n1\n2\n3\n\n\n\n# （二）获取 页面被卷去的左侧距离\n\n方法： window.pageXOffset\n\ndocument.addEventListener('scroll', function () {\n    console.log(window.pageXOffset);\n})\n\n\n1\n2\n3\n",normalizedContent:"# 知识点：scroll 系列 和 page 系列\n\n<div>\n    我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容\n</div>\n\n\n1\n2\n3\n\n\nvar div = document.queryselector('div');\n\n\n1\n\n\n\n# 一、scroll 系列\n\n作用： 操作 元素滚动距离、获取 元素大小 相关信息\n\n特性： 获取的数值不带单位\n\n\n# （一）操作 元素被卷去的上侧距离\n\n方法： 元素.scrollttop\n\ndiv.scrolltop = 50;\ndiv.addeventlistener('scroll', function () {\n    console.log(div.scrolltop);\n})\n\n\n1\n2\n3\n4\n\n\n\n# （二）获取 元素被卷去的左侧距离\n\n方法： 元素.scrollleft\n\ndiv.addeventlistener('scroll', function () {\n    console.log(div.scrollleft);\n})\n\n\n1\n2\n3\n\n\n\n# （三）获取 元素 宽/高\n\n方法： 元素.scrollwidth / 元素.scrollheight\n\n特性： 包含 内边距、实际内容\n\nconsole.log(div.scrollwidth);\nconsole.log(div.scrollheight);\n\n\n1\n2\n\n\n\n# 二、page 系列\n\n作用： 获取 页面滚动距离\n\n特性： 获取的数值不带单位\n\n\n# （一）获取 页面被卷去的上侧距离\n\n方法： window.pageyoffset\n\ndocument.addeventlistener('scroll', function () {\n    console.log(window.pageyoffset);\n})\n\n\n1\n2\n3\n\n\n\n# （二）获取 页面被卷去的左侧距离\n\n方法： window.pagexoffset\n\ndocument.addeventlistener('scroll', function () {\n    console.log(window.pagexoffset);\n})\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"常用开发插件",frontmatter:{title:"常用开发插件",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/78c019/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/27.%E5%B8%B8%E7%94%A8%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/27.常用开发插件.md",key:"v-fc0977e8",path:"/pages/78c019/",headers:[{level:2,title:"一、Swiper 插件",slug:"一、swiper-插件",normalizedTitle:"一、swiper 插件",charIndex:40},{level:2,title:"Swiper6 插件",slug:"swiper6-插件",normalizedTitle:"swiper6 插件",charIndex:312},{level:2,title:"二、superslide 插件",slug:"二、superslide-插件",normalizedTitle:"二、superslide 插件",charIndex:605},{level:2,title:"三、iscroll 插件",slug:"三、iscroll-插件",normalizedTitle:"三、iscroll 插件",charIndex:641},{level:2,title:"四、视频插件",slug:"四、视频插件",normalizedTitle:"四、视频插件",charIndex:674}],headersStr:"一、Swiper 插件 Swiper6 插件 二、superslide 插件 三、iscroll 插件 四、视频插件",content:'# 知识点：常用开发插件\n\n特点：\n\n 1. 功能单一\n 2. 体积小\n\n\n# 一、Swiper 插件\n\n作用： 快速、高效的开发插件\n\n使用步骤：\n\n 1. 下载 Swiper 完整包：https://www.swiper.com.cn/download/index.html\n 2. 在在线演示中找到合适的功能，并记住编号\n 3. 去 Swiper 完整包 中的 demos 目录下找到对应的编号\n 4. 打开，查看源代码，找到要引入的 JS、css、样式、结构，并引入到自己的页面中\n 5. 【可以根据开发情况调整 配置选项：https://www.swiper.com.cn/api/index.html】\n\n\n# Swiper6 插件\n\n多页面使用 文档： https://www.swiper.com.cn/usage/index.html\n\n单页面使用（基于 vue） 文档： https://swiperjs.com/vue\n\n配置项 文档： https://www.swiper.com.cn/api/index.html\n\n引入文件：\n\n<link rel="stylesheet" href="dist/css/swiper-bundle.min.css">\n<script src="dist/js/swiper-bundle.min.js"><\/script>\n\n\n1\n2\n\n\n\n# 二、superslide 插件\n\n作用： 快速、高效的开发插件\n\n\n# 三、iscroll 插件\n\n作用： 快速、高效的开发插件\n\n\n# 四、视频插件\n\n作用： 统一各个浏览器的播放控件样式',normalizedContent:'# 知识点：常用开发插件\n\n特点：\n\n 1. 功能单一\n 2. 体积小\n\n\n# 一、swiper 插件\n\n作用： 快速、高效的开发插件\n\n使用步骤：\n\n 1. 下载 swiper 完整包：https://www.swiper.com.cn/download/index.html\n 2. 在在线演示中找到合适的功能，并记住编号\n 3. 去 swiper 完整包 中的 demos 目录下找到对应的编号\n 4. 打开，查看源代码，找到要引入的 js、css、样式、结构，并引入到自己的页面中\n 5. 【可以根据开发情况调整 配置选项：https://www.swiper.com.cn/api/index.html】\n\n\n# swiper6 插件\n\n多页面使用 文档： https://www.swiper.com.cn/usage/index.html\n\n单页面使用（基于 vue） 文档： https://swiperjs.com/vue\n\n配置项 文档： https://www.swiper.com.cn/api/index.html\n\n引入文件：\n\n<link rel="stylesheet" href="dist/css/swiper-bundle.min.css">\n<script src="dist/js/swiper-bundle.min.js"><\/script>\n\n\n1\n2\n\n\n\n# 二、superslide 插件\n\n作用： 快速、高效的开发插件\n\n\n# 三、iscroll 插件\n\n作用： 快速、高效的开发插件\n\n\n# 四、视频插件\n\n作用： 统一各个浏览器的播放控件样式',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"常用开发框架",frontmatter:{title:"常用开发框架",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/a71be6/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/28.%E5%B8%B8%E7%94%A8%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/28.常用开发框架.md",key:"v-7bc53962",path:"/pages/a71be6/",headers:[{level:2,title:"一、bootstrap 框架",slug:"一、bootstrap-框架",normalizedTitle:"一、bootstrap 框架",charIndex:79},{level:2,title:"二、MUI 创建",slug:"二、mui-创建",normalizedTitle:"二、mui 创建",charIndex:125}],headersStr:"一、bootstrap 框架 二、MUI 创建",content:"# 知识点：常用开发框架\n\n特点：\n\n 1. 功能多\n 2. 体积大\n 3. 拥有较为完整的解决方案\n 4. 控制权在框架本身（需要遵从框架的规范）\n\n\n# 一、bootstrap 框架\n\n作用： 快速、高效的开发框架\n\n特点： 响应式布局\n\n\n# 二、MUI 创建\n\n作用： 快速、高效的开发插件\n\n特点： 专注于手机 APP 的前端框架\n\nhttps://dev.dcloud.net.cn/mui/",normalizedContent:"# 知识点：常用开发框架\n\n特点：\n\n 1. 功能多\n 2. 体积大\n 3. 拥有较为完整的解决方案\n 4. 控制权在框架本身（需要遵从框架的规范）\n\n\n# 一、bootstrap 框架\n\n作用： 快速、高效的开发框架\n\n特点： 响应式布局\n\n\n# 二、mui 创建\n\n作用： 快速、高效的开发插件\n\n特点： 专注于手机 app 的前端框架\n\nhttps://dev.dcloud.net.cn/mui/",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"本地存储（上）",frontmatter:{title:"本地存储（上）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/004d4e/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/29.%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%EF%BC%88%E4%B8%8A%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/29.本地存储（上）.md",key:"v-62b7e06a",path:"/pages/004d4e/",headers:[{level:2,title:"一、sessionStorage",slug:"一、sessionstorage",normalizedTitle:"一、sessionstorage",charIndex:491},{level:3,title:"（一）存储数据（增、改）",slug:"一-存储数据-增、改",normalizedTitle:"（一）存储数据（增、改）",charIndex:611},{level:3,title:"（二）获取数据（查）",slug:"二-获取数据-查",normalizedTitle:"（二）获取数据（查）",charIndex:786},{level:3,title:"（三）删除数据（删）",slug:"三-删除数据-删",normalizedTitle:"（三）删除数据（删）",charIndex:935},{level:3,title:"（四）删除所有数据（删）",slug:"四-删除所有数据-删",normalizedTitle:"（四）删除所有数据（删）",charIndex:1080}],headersStr:"一、sessionStorage （一）存储数据（增、改） （二）获取数据（查） （三）删除数据（删） （四）删除所有数据（删）",content:"# 知识点：本地存储（上）\n\n<input type=\"text\">\n<button class=\"set\">存储数据</button>\n<button class=\"get\">获取数据</button>\n<button class=\"remove\">删除数据</button>\n<button class=\"del\">清空所有数据</button>\n\n\n1\n2\n3\n4\n5\n\n\nvar ipt = document.querySelector('input');\nvar set = document.querySelector('.set');\nvar get = document.querySelector('.get');\nvar remove = document.querySelector('.remove');\nvar del = document.querySelector('.del');\n\n\n1\n2\n3\n4\n5\n\n\n共同点： 1、以键值对形式存储 2、只能存字符串。可以使用 JSON.stringify() 将对象转换成字符串后在存储 3、同源\n\n\n# 一、sessionStorage\n\n特性：\n\n 1. 最大可存储约 5M\n 2. 同一个页面下，数据共享\n\n生命周期： 页面关闭\n\n查看： 控制台 → Application → Session Storage → file://\n\n\n# （一）存储数据（增、改）\n\nsessionStorage.setItem(key, value)\n\nset.addEventListener('click', function() {\n  var val = ipt.value;\n  sessionStorage.setItem('uname', val);\n});\n\n\n1\n2\n3\n4\n\n\n\n# （二）获取数据（查）\n\nsessionStorage.getItem(key)\n\nget.addEventListener('click', function() {\n  console.log(sessionStorage.getItem('uname'));\n});\n\n\n1\n2\n3\n\n\n\n# （三）删除数据（删）\n\nsessionStorage.removeItem(key)\n\nremove.addEventListener('click', function() {\n  sessionStorage.removeItem('uname');\n});\n\n\n1\n2\n3\n\n\n\n# （四）删除所有数据（删）\n\nsessionStorage.clear()\n\ndel.addEventListener('click', function() {\n  sessionStorage.clear();\n});\n\n\n1\n2\n3\n",normalizedContent:"# 知识点：本地存储（上）\n\n<input type=\"text\">\n<button class=\"set\">存储数据</button>\n<button class=\"get\">获取数据</button>\n<button class=\"remove\">删除数据</button>\n<button class=\"del\">清空所有数据</button>\n\n\n1\n2\n3\n4\n5\n\n\nvar ipt = document.queryselector('input');\nvar set = document.queryselector('.set');\nvar get = document.queryselector('.get');\nvar remove = document.queryselector('.remove');\nvar del = document.queryselector('.del');\n\n\n1\n2\n3\n4\n5\n\n\n共同点： 1、以键值对形式存储 2、只能存字符串。可以使用 json.stringify() 将对象转换成字符串后在存储 3、同源\n\n\n# 一、sessionstorage\n\n特性：\n\n 1. 最大可存储约 5m\n 2. 同一个页面下，数据共享\n\n生命周期： 页面关闭\n\n查看： 控制台 → application → session storage → file://\n\n\n# （一）存储数据（增、改）\n\nsessionstorage.setitem(key, value)\n\nset.addeventlistener('click', function() {\n  var val = ipt.value;\n  sessionstorage.setitem('uname', val);\n});\n\n\n1\n2\n3\n4\n\n\n\n# （二）获取数据（查）\n\nsessionstorage.getitem(key)\n\nget.addeventlistener('click', function() {\n  console.log(sessionstorage.getitem('uname'));\n});\n\n\n1\n2\n3\n\n\n\n# （三）删除数据（删）\n\nsessionstorage.removeitem(key)\n\nremove.addeventlistener('click', function() {\n  sessionstorage.removeitem('uname');\n});\n\n\n1\n2\n3\n\n\n\n# （四）删除所有数据（删）\n\nsessionstorage.clear()\n\ndel.addeventlistener('click', function() {\n  sessionstorage.clear();\n});\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"本地存储（下）",frontmatter:{title:"本地存储（下）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/4a131d/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/30.%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%EF%BC%88%E4%B8%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/30.本地存储（下）.md",key:"v-bf061d6c",path:"/pages/4a131d/",headers:[{level:2,title:"二、localStorage",slug:"二、localstorage",normalizedTitle:"二、localstorage",charIndex:420},{level:3,title:"（一）存储数据（增、改）",slug:"一-存储数据-增、改",normalizedTitle:"（一）存储数据（增、改）",charIndex:567},{level:3,title:"（二）获取数据（查）",slug:"二-获取数据-查",normalizedTitle:"（二）获取数据（查）",charIndex:742},{level:3,title:"（三）删除数据（删）",slug:"三-删除数据-删",normalizedTitle:"（三）删除数据（删）",charIndex:889},{level:3,title:"（四）删除所有数据（删）",slug:"四-删除所有数据-删",normalizedTitle:"（四）删除所有数据（删）",charIndex:1032}],headersStr:"二、localStorage （一）存储数据（增、改） （二）获取数据（查） （三）删除数据（删） （四）删除所有数据（删）",content:"# 本地存储（下）\n\n<input type=\"text\">\n<button class=\"set\">存储数据</button>\n<button class=\"get\">获取数据</button>\n<button class=\"remove\">删除数据</button>\n<button class=\"del\">清空所有数据</button>\n\n\n1\n2\n3\n4\n5\n\n\nvar ipt = document.querySelector('input');\nvar set = document.querySelector('.set');\nvar get = document.querySelector('.get');\nvar remove = document.querySelector('.remove');\nvar del = document.querySelector('.del');\n\n\n1\n2\n3\n4\n5\n\n\n\n# 二、localStorage\n\n特性：\n\n 1. 最大可存储约 5M\n 2. 在任何页面，并且是同一浏览器时，可以共享数据\n\n生命周期： 永久生效，只能手动删除\n\n查看： 控制台 → Application → Local Storage → file://\n\n使用场景： 记住用户名\n\n\n# （一）存储数据（增、改）\n\nlocalStorage.setItem(key, value)\n\nset.addEventListener('click', function() {\n    var val = ipt.value;\n    localStorage.setItem('uname', val);\n});\n\n\n1\n2\n3\n4\n\n\n\n# （二）获取数据（查）\n\nlocalStorage.getItem(key)\n\nget.addEventListener('click', function() {\n    console.log(localStorage.getItem('uname'));\n});\n\n\n1\n2\n3\n\n\n\n# （三）删除数据（删）\n\nlocalStorage.removeItem(key)\n\nremove.addEventListener('click', function() {\n    localStorage.removeItem('uname');\n});\n\n\n1\n2\n3\n\n\n\n# （四）删除所有数据（删）\n\nlocalStorage.clear()\n\ndel.addEventListener('click', function() {\n    localStorage.clear();\n});\n\n\n1\n2\n3\n",normalizedContent:"# 本地存储（下）\n\n<input type=\"text\">\n<button class=\"set\">存储数据</button>\n<button class=\"get\">获取数据</button>\n<button class=\"remove\">删除数据</button>\n<button class=\"del\">清空所有数据</button>\n\n\n1\n2\n3\n4\n5\n\n\nvar ipt = document.queryselector('input');\nvar set = document.queryselector('.set');\nvar get = document.queryselector('.get');\nvar remove = document.queryselector('.remove');\nvar del = document.queryselector('.del');\n\n\n1\n2\n3\n4\n5\n\n\n\n# 二、localstorage\n\n特性：\n\n 1. 最大可存储约 5m\n 2. 在任何页面，并且是同一浏览器时，可以共享数据\n\n生命周期： 永久生效，只能手动删除\n\n查看： 控制台 → application → local storage → file://\n\n使用场景： 记住用户名\n\n\n# （一）存储数据（增、改）\n\nlocalstorage.setitem(key, value)\n\nset.addeventlistener('click', function() {\n    var val = ipt.value;\n    localstorage.setitem('uname', val);\n});\n\n\n1\n2\n3\n4\n\n\n\n# （二）获取数据（查）\n\nlocalstorage.getitem(key)\n\nget.addeventlistener('click', function() {\n    console.log(localstorage.getitem('uname'));\n});\n\n\n1\n2\n3\n\n\n\n# （三）删除数据（删）\n\nlocalstorage.removeitem(key)\n\nremove.addeventlistener('click', function() {\n    localstorage.removeitem('uname');\n});\n\n\n1\n2\n3\n\n\n\n# （四）删除所有数据（删）\n\nlocalstorage.clear()\n\ndel.addeventlistener('click', function() {\n    localstorage.clear();\n});\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"服务端存储",frontmatter:{title:"服务端存储",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/a6ca72/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/31.%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%AD%98%E5%82%A8.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/31.服务端存储.md",key:"v-4a99c8a2",path:"/pages/a6ca72/",headers:[{level:2,title:"Cookie",slug:"cookie",normalizedTitle:"cookie",charIndex:30}],headersStr:"Cookie",content:"# 知识点：服务端存储\n\n特性： 数据存储在服务端\n\n\n# Cookie\n\n特性： 最大可存储约 4k\n\n生命周期： 可以设置过期时间，在过期时间之前一直有效",normalizedContent:"# 知识点：服务端存储\n\n特性： 数据存储在服务端\n\n\n# cookie\n\n特性： 最大可存储约 4k\n\n生命周期： 可以设置过期时间，在过期时间之前一直有效",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"封装 Storage",frontmatter:{title:"封装 Storage",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/42a459/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/04.WebAPI/32.%E5%B0%81%E8%A3%85%20Storage.html",relativePath:"《前端》笔记《基础知识》/04.WebAPI/32.封装 Storage.md",key:"v-33a1c7a3",path:"/pages/42a459/",headersStr:null,content:"# 知识点：封装 Storage\n\n解决：\n\n 1. Storage 本身有 API，但是只是简单的 key/vaule 形式 的问题\n 2. Storage 只能存储字符串，需要手工转换成 json 对象 的问题\n 3. Storage 只能全部清空，不能单个清空 的问题\n\n使用步骤：\n\n（-- storage/index.js 新建）\n\nconst  STORAGE_KEY = 'mall';\nexport default{\n  // 存储值\n  setItem(key,value,module_name){\n      if (module_name){\n      let val = this.getItem(module_name);\n      val[key] = value;\n      this.setItem(module_name, val);\n      }else{\n      let val = this.getStorage();\n      val[key] = value;\n      window.sessionStorage.setItem(STORAGE_KEY, JSON.stringify(val));\n      }\n  },\n  // 获取某一个模块下面的属性user下面的userName\n  getItem(key,module_name){\n      if (module_name){\n      let val = this.getItem(module_name);\n      if(val) return val[key];\n      }\n      return this.getStorage()[key];\n  },\n  // 获取整个数据\n  getStorage(){\n      return JSON.parse(window.sessionStorage.getItem(STORAGE_KEY) || '{}');\n  },\n  // 清空某一个值\n  clear(key, module_name){\n      let val = this.getStorage();\n      if (module_name){\n      if (!val[module_name])return;\n      delete val[module_name][key];\n      }else{\n      delete val[key];\n      }\n      window.sessionStorage.setItem(STORAGE_KEY, JSON.stringify(val));\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n",normalizedContent:"# 知识点：封装 storage\n\n解决：\n\n 1. storage 本身有 api，但是只是简单的 key/vaule 形式 的问题\n 2. storage 只能存储字符串，需要手工转换成 json 对象 的问题\n 3. storage 只能全部清空，不能单个清空 的问题\n\n使用步骤：\n\n（-- storage/index.js 新建）\n\nconst  storage_key = 'mall';\nexport default{\n  // 存储值\n  setitem(key,value,module_name){\n      if (module_name){\n      let val = this.getitem(module_name);\n      val[key] = value;\n      this.setitem(module_name, val);\n      }else{\n      let val = this.getstorage();\n      val[key] = value;\n      window.sessionstorage.setitem(storage_key, json.stringify(val));\n      }\n  },\n  // 获取某一个模块下面的属性user下面的username\n  getitem(key,module_name){\n      if (module_name){\n      let val = this.getitem(module_name);\n      if(val) return val[key];\n      }\n      return this.getstorage()[key];\n  },\n  // 获取整个数据\n  getstorage(){\n      return json.parse(window.sessionstorage.getitem(storage_key) || '{}');\n  },\n  // 清空某一个值\n  clear(key, module_name){\n      let val = this.getstorage();\n      if (module_name){\n      if (!val[module_name])return;\n      delete val[module_name][key];\n      }else{\n      delete val[key];\n      }\n      window.sessionstorage.setitem(storage_key, json.stringify(val));\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"视口标签",frontmatter:{title:"视口标签",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/063716/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/01.%E8%A7%86%E5%8F%A3%E6%A0%87%E7%AD%BE.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/01.视口标签.md",key:"v-29acfcf4",path:"/pages/063716/",headers:[{level:2,title:"一、布局视口宽度",slug:"一、布局视口宽度",normalizedTitle:"一、布局视口宽度",charIndex:21},{level:2,title:"二、初始缩放比",slug:"二、初始缩放比",normalizedTitle:"二、初始缩放比",charIndex:169},{level:2,title:"三、最大缩放比",slug:"三、最大缩放比",normalizedTitle:"三、最大缩放比",charIndex:279},{level:2,title:"四、最小缩放比",slug:"四、最小缩放比",normalizedTitle:"四、最小缩放比",charIndex:377},{level:2,title:"五、是否允许用户缩放",slug:"五、是否允许用户缩放",normalizedTitle:"五、是否允许用户缩放",charIndex:479},{level:2,title:"六、推荐配置",slug:"六、推荐配置",normalizedTitle:"六、推荐配置",charIndex:582}],headersStr:"一、布局视口宽度 二、初始缩放比 三、最大缩放比 四、最小缩放比 五、是否允许用户缩放 六、推荐配置",content:'# 知识点：视口标签（meta）\n\n\n# 一、布局视口宽度\n\n语法： content="width=device-width"\n\n值：\n\n 1. 数值\n 2. device-width：布局视口宽度和设备保持一致\n\n<meta name="viewport" content="width=device-width">\n\n\n1\n\n\n\n# 二、初始缩放比\n\n语法： content="initial-scale=100%"\n\n值： %\n\n<meta name="viewport" content="initial-scale=100%">\n\n\n1\n\n\n\n# 三、最大缩放比\n\n语法： content="maximum-scale=2"\n\n<meta name="viewport" content="maximum-scale=2">\n\n\n1\n\n\n\n# 四、最小缩放比\n\n语法： content="minimum-scale=0.5"\n\n<meta name="viewport" content="minimum-scale=0.5">\n\n\n1\n\n\n\n# 五、是否允许用户缩放\n\n语法： content="user-scalable=no"\n\n<meta name="viewport" content="user-scalable=no">\n\n\n1\n\n\n\n# 六、推荐配置\n\n<meta name="viewport" content="width=device-width initial-scale=1 maximum-scale=1 minimum-scale=1 user-scalable=no">\n\n\n1\n',normalizedContent:'# 知识点：视口标签（meta）\n\n\n# 一、布局视口宽度\n\n语法： content="width=device-width"\n\n值：\n\n 1. 数值\n 2. device-width：布局视口宽度和设备保持一致\n\n<meta name="viewport" content="width=device-width">\n\n\n1\n\n\n\n# 二、初始缩放比\n\n语法： content="initial-scale=100%"\n\n值： %\n\n<meta name="viewport" content="initial-scale=100%">\n\n\n1\n\n\n\n# 三、最大缩放比\n\n语法： content="maximum-scale=2"\n\n<meta name="viewport" content="maximum-scale=2">\n\n\n1\n\n\n\n# 四、最小缩放比\n\n语法： content="minimum-scale=0.5"\n\n<meta name="viewport" content="minimum-scale=0.5">\n\n\n1\n\n\n\n# 五、是否允许用户缩放\n\n语法： content="user-scalable=no"\n\n<meta name="viewport" content="user-scalable=no">\n\n\n1\n\n\n\n# 六、推荐配置\n\n<meta name="viewport" content="width=device-width initial-scale=1 maximum-scale=1 minimum-scale=1 user-scalable=no">\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"二倍图",frontmatter:{title:"二倍图",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/da4b10/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/02.%E4%BA%8C%E5%80%8D%E5%9B%BE.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/02.二倍图.md",key:"v-85594856",path:"/pages/da4b10/",headersStr:null,content:"# 知识点：多倍图\n\n解决： 移动设备大部分采用 视网膜屏幕 技术，会把物理像素比放大，导致图片模糊的问题\n\n应用场景： 通常使用二倍图就可以满足大部分设备。具体看开发需求\n\n使用步骤： 按比例缩放图片\n\nimg{\n    /*原始图片100*100px*/\n    width: 50px;\n    height: 50px;\n}\n\n\n1\n2\n3\n4\n5\n",normalizedContent:"# 知识点：多倍图\n\n解决： 移动设备大部分采用 视网膜屏幕 技术，会把物理像素比放大，导致图片模糊的问题\n\n应用场景： 通常使用二倍图就可以满足大部分设备。具体看开发需求\n\n使用步骤： 按比例缩放图片\n\nimg{\n    /*原始图片100*100px*/\n    width: 50px;\n    height: 50px;\n}\n\n\n1\n2\n3\n4\n5\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"移动端 开发方案",frontmatter:{title:"移动端 开发方案",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/870d5c/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/03.%E7%A7%BB%E5%8A%A8%E7%AB%AF%20%E5%BC%80%E5%8F%91%E6%96%B9%E6%A1%88.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/03.移动端 开发方案.md",key:"v-88e5f472",path:"/pages/870d5c/",headers:[{level:2,title:"一、单独制作移动端页面（主流）",slug:"一、单独制作移动端页面-主流",normalizedTitle:"一、单独制作移动端页面（主流）",charIndex:19},{level:2,title:"二、响应式页面",slug:"二、响应式页面",normalizedTitle:"二、响应式页面",charIndex:39}],headersStr:"一、单独制作移动端页面（主流） 二、响应式页面",content:"# 知识点：移动端 开发方案\n\n\n# 一、单独制作移动端页面（主流）\n\n\n# 二、响应式页面\n\n缺点： 制作麻烦，需要花很大精力去调兼容性问题\n\n原理： 过判断屏幕宽度来改变样式，来适配不同设备",normalizedContent:"# 知识点：移动端 开发方案\n\n\n# 一、单独制作移动端页面（主流）\n\n\n# 二、响应式页面\n\n缺点： 制作麻烦，需要花很大精力去调兼容性问题\n\n原理： 过判断屏幕宽度来改变样式，来适配不同设备",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"移动端 技术选型",frontmatter:{title:"移动端 技术选型",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/287bfb/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/04.%E7%A7%BB%E5%8A%A8%E7%AB%AF%20%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/04.移动端 技术选型.md",key:"v-9e0b35f8",path:"/pages/287bfb/",headers:[{level:2,title:"一、单独制作移动端页面",slug:"一、单独制作移动端页面",normalizedTitle:"一、单独制作移动端页面",charIndex:19},{level:3,title:"（一）流式布局（百分比布局）",slug:"一-流式布局-百分比布局",normalizedTitle:"（一）流式布局（百分比布局）",charIndex:35},{level:3,title:"（一）flex 弹性布局",slug:"一-flex-弹性布局",normalizedTitle:"（一）flex 弹性布局",charIndex:103},{level:3,title:"（三）less + rem + 媒体查询布局",slug:"三-less-rem-媒体查询布局",normalizedTitle:"（三）less + rem + 媒体查询布局",charIndex:120},{level:3,title:"（四）混合布局（推荐）",slug:"四-混合布局-推荐",normalizedTitle:"（四）混合布局（推荐）",charIndex:147},{level:2,title:"二、响应式页面",slug:"二、响应式页面",normalizedTitle:"二、响应式页面",charIndex:163},{level:3,title:"（一）媒体查询",slug:"一-媒体查询",normalizedTitle:"（一）媒体查询",charIndex:175},{level:3,title:"（二）bootstarp",slug:"二-bootstarp",normalizedTitle:"（二）bootstarp",charIndex:187}],headersStr:"一、单独制作移动端页面 （一）流式布局（百分比布局） （一）flex 弹性布局 （三）less + rem + 媒体查询布局 （四）混合布局（推荐） 二、响应式页面 （一）媒体查询 （二）bootstarp",content:"# 知识点：移动端 技术选型\n\n\n# 一、单独制作移动端页面\n\n\n# （一）流式布局（百分比布局）\n\n原理： 把盒子的宽度设置成百分比，来适配不同设备\n\n提示： 布局中的百分比由 UI 设计师提供\n\n\n# （一）flex 弹性布局\n\n\n# （三）less + rem + 媒体查询布局\n\n\n# （四）混合布局（推荐）\n\n\n# 二、响应式页面\n\n\n# （一）媒体查询\n\n\n# （二）bootstarp",normalizedContent:"# 知识点：移动端 技术选型\n\n\n# 一、单独制作移动端页面\n\n\n# （一）流式布局（百分比布局）\n\n原理： 把盒子的宽度设置成百分比，来适配不同设备\n\n提示： 布局中的百分比由 ui 设计师提供\n\n\n# （一）flex 弹性布局\n\n\n# （三）less + rem + 媒体查询布局\n\n\n# （四）混合布局（推荐）\n\n\n# 二、响应式页面\n\n\n# （一）媒体查询\n\n\n# （二）bootstarp",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"flex 弹性布局（上）",frontmatter:{title:"flex 弹性布局（上）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/047774/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/05.flex%20%E5%BC%B9%E6%80%A7%E5%B8%83%E5%B1%80%EF%BC%88%E4%B8%8A%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/05.flex 弹性布局（上）.md",key:"v-7e472cf8",path:"/pages/047774/",headers:[{level:2,title:"一、父元素属性",slug:"一、父元素属性",normalizedTitle:"一、父元素属性",charIndex:null},{level:3,title:"（一）主轴子元素 排列方向",slug:"一-主轴子元素-排列方向",normalizedTitle:"（一）主轴子元素 排列方向",charIndex:null},{level:3,title:"（二）主轴子元素 排列方式",slug:"二-主轴子元素-排列方式",normalizedTitle:"（二）主轴子元素 排列方式",charIndex:null},{level:3,title:"（三）侧轴子元素 排列方式（单行）",slug:"三-侧轴子元素-排列方式-单行",normalizedTitle:"（三）侧轴子元素 排列方式（单行）",charIndex:null},{level:3,title:"（四）侧轴子元素 排列方式（多行）",slug:"四-侧轴子元素-排列方式-多行",normalizedTitle:"（四）侧轴子元素 排列方式（多行）",charIndex:null},{level:3,title:"（五）子元素是否自动换行",slug:"五-子元素是否自动换行",normalizedTitle:"（五）子元素是否自动换行",charIndex:null},{level:3,title:"（六）主轴方向 和 子元素是否换行 的复合写法",slug:"六-主轴方向-和-子元素是否换行-的复合写法",normalizedTitle:"（六）主轴方向 和 子元素是否换行 的复合写法",charIndex:null},{level:3,title:"效果：",slug:"效果",normalizedTitle:"效果：",charIndex:null}],headersStr:"一、父元素属性 （一）主轴子元素 排列方向 （二）主轴子元素 排列方式 （三）侧轴子元素 排列方式（单行） （四）侧轴子元素 排列方式（多行） （五）子元素是否自动换行 （六）主轴方向 和 子元素是否换行 的复合写法 效果：",content:"1 2 3 4\n1 2 3 4 5 6 7 8",normalizedContent:"1 2 3 4\n1 2 3 4 5 6 7 8",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"flex 弹性布局（下）",frontmatter:{title:"flex 弹性布局（下）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/b3bc54/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/06.flex%20%E5%BC%B9%E6%80%A7%E5%B8%83%E5%B1%80%EF%BC%88%E4%B8%8B%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/06.flex 弹性布局（下）.md",key:"v-8a70cff8",path:"/pages/b3bc54/",headers:[{level:2,title:"二、子元素属性",slug:"二、子元素属性",normalizedTitle:"二、子元素属性",charIndex:null},{level:3,title:"（一）一行/一列 占几份",slug:"一-一行-一列-占几份",normalizedTitle:"（一）一行/一列 占几份",charIndex:null},{level:3,title:"（二）允许侧轴单个子元素与其他子元素不同的排列方式",slug:"二-允许侧轴单个子元素与其他子元素不同的排列方式",normalizedTitle:"（二）允许侧轴单个子元素与其他子元素不同的排列方式",charIndex:null},{level:3,title:"（三）子元素 排列顺序",slug:"三-子元素-排列顺序",normalizedTitle:"（三）子元素 排列顺序",charIndex:null},{level:3,title:"（四）平均分配剩余空间，默认为 1",slug:"四-平均分配剩余空间-默认为-1",normalizedTitle:"（四）平均分配剩余空间，默认为 1",charIndex:null},{level:3,title:"（五）缩小比例，默认为 0",slug:"五-缩小比例-默认为-0",normalizedTitle:"（五）缩小比例，默认为 0",charIndex:null},{level:3,title:"（六）元素在主轴上占据的宽",slug:"六-元素在主轴上占据的宽",normalizedTitle:"（六）元素在主轴上占据的宽",charIndex:null},{level:3,title:"效果：",slug:"效果",normalizedTitle:"效果：",charIndex:null}],headersStr:"二、子元素属性 （一）一行/一列 占几份 （二）允许侧轴单个子元素与其他子元素不同的排列方式 （三）子元素 排列顺序 （四）平均分配剩余空间，默认为 1 （五）缩小比例，默认为 0 （六）元素在主轴上占据的宽 效果：",content:"1 2 3",normalizedContent:"1 2 3",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"less",frontmatter:{title:"less",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/afc4fa/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/07.less.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/07.less.md",key:"v-c5688e88",path:"/pages/afc4fa/",headers:[{level:2,title:"一、变量",slug:"一、变量",normalizedTitle:"一、变量",charIndex:187},{level:2,title:"二、嵌套",slug:"二、嵌套",normalizedTitle:"二、嵌套",charIndex:249},{level:3,title:"（一）子孙关系",slug:"一-子孙关系",normalizedTitle:"（一）子孙关系",charIndex:258},{level:3,title:"（二）交集|伪类|伪元素选择器",slug:"二-交集-伪类-伪元素选择器",normalizedTitle:"（二）交集|伪类|伪元素选择器",charIndex:332},{level:3,title:"（三）运算",slug:"三-运算",normalizedTitle:"（三）运算",charIndex:421},{level:3,title:"（四）导入文件",slug:"四-导入文件",normalizedTitle:"（四）导入文件",charIndex:563},{level:3,title:"（五）选择包括该元素之后的所有元素",slug:"五-选择包括该元素之后的所有元素",normalizedTitle:"（五）选择包括该元素之后的所有元素",charIndex:648},{level:3,title:"（六）只选择子元素",slug:"六-只选择子元素",normalizedTitle:"（六）只选择子元素",charIndex:748},{level:3,title:"（七）选择父元素",slug:"七-选择父元素",normalizedTitle:"（七）选择父元素",charIndex:823}],headersStr:"一、变量 二、嵌套 （一）子孙关系 （二）交集|伪类|伪元素选择器 （三）运算 （四）导入文件 （五）选择包括该元素之后的所有元素 （六）只选择子元素 （七）选择父元素",content:"# 知识点：less（CSS 预处理器）\n\n官网： https://less.bootcss.com/\n\n解决： CSS 没有以下概念的问题\n\n 1. 变量（不方便 维护、扩展、复用）\n 2. 函数（没有很好的计算能力）\n 3. 作用域（书写大量看似没有逻辑的代码） 等概念的问题\n\n编译： Easy LESS（vscode商店）插件。保存会自动生成 CSS 文件\n\n\n# 一、变量\n\n语法： @变量名: 值;\n\n例：\n\ndiv {\n  color: @color;\n}\n\n\n1\n2\n3\n\n\n\n# 二、嵌套\n\n\n# （一）子孙关系\n\n例：\n\n#header {\n  .logo {\n    width: 300px;\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （二）交集|伪类|伪元素选择器\n\n语法： &:hover\n\n例：\n\na {\n  &:hover {\n    color: red;\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （三）运算\n\n特性：\n\n 1. 有两个以上不同的单位，运算结果取 第一个值 的单位\n 2. 只有一个单位，则运算结果取该单位\n\n例：\n\n@width: 10px + 5;\n\n.demo3 {\n  width: (@width + 5) * 2;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （四）导入文件\n\n特性： 不写后缀，默认为 less\n\n语法： @import '【路径】';\n\n例：\n\n@import 'sucai/demon';\n\n\n1\n\n\n\n# （五）选择包括该元素之后的所有元素\n\n语法： ~ 【元素】\n\n~ li {\n  a {\n    border-left: 1px solid #666;\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （六）只选择子元素\n\n语法： > 【元素】\n\n例：\n\n> li {\n  background-color: pink;\n}\n\n\n1\n2\n3\n\n\n\n# （七）选择父元素\n\n语法： &【选择器】\n\n例：\n\na {\n  &:hover {\n    background-color: pink;\n  }\n}\n\n\n1\n2\n3\n4\n5\n",normalizedContent:"# 知识点：less（css 预处理器）\n\n官网： https://less.bootcss.com/\n\n解决： css 没有以下概念的问题\n\n 1. 变量（不方便 维护、扩展、复用）\n 2. 函数（没有很好的计算能力）\n 3. 作用域（书写大量看似没有逻辑的代码） 等概念的问题\n\n编译： easy less（vscode商店）插件。保存会自动生成 css 文件\n\n\n# 一、变量\n\n语法： @变量名: 值;\n\n例：\n\ndiv {\n  color: @color;\n}\n\n\n1\n2\n3\n\n\n\n# 二、嵌套\n\n\n# （一）子孙关系\n\n例：\n\n#header {\n  .logo {\n    width: 300px;\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （二）交集|伪类|伪元素选择器\n\n语法： &:hover\n\n例：\n\na {\n  &:hover {\n    color: red;\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （三）运算\n\n特性：\n\n 1. 有两个以上不同的单位，运算结果取 第一个值 的单位\n 2. 只有一个单位，则运算结果取该单位\n\n例：\n\n@width: 10px + 5;\n\n.demo3 {\n  width: (@width + 5) * 2;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （四）导入文件\n\n特性： 不写后缀，默认为 less\n\n语法： @import '【路径】';\n\n例：\n\n@import 'sucai/demon';\n\n\n1\n\n\n\n# （五）选择包括该元素之后的所有元素\n\n语法： ~ 【元素】\n\n~ li {\n  a {\n    border-left: 1px solid #666;\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （六）只选择子元素\n\n语法： > 【元素】\n\n例：\n\n> li {\n  background-color: pink;\n}\n\n\n1\n2\n3\n\n\n\n# （七）选择父元素\n\n语法： &【选择器】\n\n例：\n\na {\n  &:hover {\n    background-color: pink;\n  }\n}\n\n\n1\n2\n3\n4\n5\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"rem 适配布局 和 媒体查询",frontmatter:{title:"rem 适配布局 和 媒体查询",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/801c60/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/08.rem%20%E9%80%82%E9%85%8D%E5%B8%83%E5%B1%80%20%E5%92%8C%20%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/08.rem 适配布局 和 媒体查询.md",key:"v-3f38e99e",path:"/pages/801c60/",headers:[{level:2,title:"一、rem 适配布局",slug:"一、rem-适配布局",normalizedTitle:"一、rem 适配布局",charIndex:49},{level:2,title:"二、媒体查询（@media）",slug:"二、媒体查询-media",normalizedTitle:"二、媒体查询（@media）",charIndex:274},{level:2,title:"三、应用场景",slug:"三、应用场景",normalizedTitle:"三、应用场景",charIndex:816},{level:3,title:"（一）根据不同的屏幕尺寸，引入不同的样式表",slug:"一-根据不同的屏幕尺寸-引入不同的样式表",normalizedTitle:"（一）根据不同的屏幕尺寸，引入不同的样式表",charIndex:827}],headersStr:"一、rem 适配布局 二、媒体查询（@media） 三、应用场景 （一）根据不同的屏幕尺寸，引入不同的样式表",content:'# 知识点：rem 适配布局 和 媒体查询\n\n作用： 根据不同的屏幕宽度，来动态变化样式\n\n\n# 一、rem 适配布局\n\n作用： 相对 html元素 的字体大小，来动态改变元素的宽度\n\n特性：\n\n 1. 是一个相对单位\n 2. 1rem = html元素 字体大小\n\n应用场景： 常配合媒体查询使用\n\n例：\n\nhtml {\n  font-size: 20px;\n}\n.demo1 {\n  width: 2rem;\n  height: 20px;\n  background-color: pink;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、媒体查询（@media）\n\n语法： @media 媒体类型 关键字 (媒体特性) {}\n\n作用： 针对不同的屏幕尺寸设置不同的样式\n\n媒体类型：\n\n 1. all（用于所有设备）\n 2. print（用于打印机和打印预览）\n 3. scree（用于电脑屏幕，平板电脑，智能手机等）\n\n关键字（媒体类型和媒体特性的查询条件）：\n\n 1. and：可以将多个媒体特性连接到一起，相当于“且”\n 2. not：排除某个媒体类型，相当于“非”，可以省略\n 3. only：指定某个特定的媒体类型，可以省略\n\n媒体特性：\n\n 1. width：定义输出设备中页面可见区域的宽度\n 2. min-width：当屏幕 大于等于 某个值时\n 3. max-width：当屏幕 小于等于 某个值时\n\n例：\n\n@media screen and (max-width: 1000px) {\n  body {\n    background-color: pink;\n  }\n}\n@media screen and (max-width: 800px) {\n  body {\n    background-color: purple;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 三、应用场景\n\n\n# （一）根据不同的屏幕尺寸，引入不同的样式表\n\n原理： 判断媒体特性\n\n例：\n\n<link rel="stylesheet" href="sucai/09.css" media="screen and (max-width: 600px)" />\n\n\n1\n',normalizedContent:'# 知识点：rem 适配布局 和 媒体查询\n\n作用： 根据不同的屏幕宽度，来动态变化样式\n\n\n# 一、rem 适配布局\n\n作用： 相对 html元素 的字体大小，来动态改变元素的宽度\n\n特性：\n\n 1. 是一个相对单位\n 2. 1rem = html元素 字体大小\n\n应用场景： 常配合媒体查询使用\n\n例：\n\nhtml {\n  font-size: 20px;\n}\n.demo1 {\n  width: 2rem;\n  height: 20px;\n  background-color: pink;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、媒体查询（@media）\n\n语法： @media 媒体类型 关键字 (媒体特性) {}\n\n作用： 针对不同的屏幕尺寸设置不同的样式\n\n媒体类型：\n\n 1. all（用于所有设备）\n 2. print（用于打印机和打印预览）\n 3. scree（用于电脑屏幕，平板电脑，智能手机等）\n\n关键字（媒体类型和媒体特性的查询条件）：\n\n 1. and：可以将多个媒体特性连接到一起，相当于“且”\n 2. not：排除某个媒体类型，相当于“非”，可以省略\n 3. only：指定某个特定的媒体类型，可以省略\n\n媒体特性：\n\n 1. width：定义输出设备中页面可见区域的宽度\n 2. min-width：当屏幕 大于等于 某个值时\n 3. max-width：当屏幕 小于等于 某个值时\n\n例：\n\n@media screen and (max-width: 1000px) {\n  body {\n    background-color: pink;\n  }\n}\n@media screen and (max-width: 800px) {\n  body {\n    background-color: purple;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 三、应用场景\n\n\n# （一）根据不同的屏幕尺寸，引入不同的样式表\n\n原理： 判断媒体特性\n\n例：\n\n<link rel="stylesheet" href="sucai/09.css" media="screen and (max-width: 600px)" />\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"rem 适配布局（技术方案一）",frontmatter:{title:"rem 适配布局（技术方案一）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/d7069a/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/09.rem%20%E9%80%82%E9%85%8D%E5%B8%83%E5%B1%80%EF%BC%88%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E4%B8%80%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/09.rem 适配布局（技术方案一）.md",key:"v-2bf8cf0c",path:"/pages/d7069a/",headersStr:null,content:"# 知识点：rem 适配布局（技术方案一）\n\n原理： less + 媒体查询 + rem\n\n设计稿尺寸： 750px（主流）\n\n屏幕划分份数： 15份\n\nhtml 字体大小： 50px（html 字体大小 = 设计稿尺寸 / 屏幕划分份数）\n\n元素 rem 值 = 元素px / html 字体大小\n\n使用步骤：\n\n 1. 引入 common1\n 2. 使用 rem 布局\n\ncommon1.css：\n\n    html {\n        font-size: 50px;\n    }\n    \n    body {\n        min-width: 320px;\n        width: 15rem;\n        margin: 0 auto;\n        line-height: 1.5;\n        font-family: Arial,Helvetica;\n        background: #F2F2F2;\n    }\n    a {\n        text-decoration: none;\n    }\n    /* 点击高亮我们需要清除清除设置为 transparent 完成透明 */\n    a {\n        -webkit-tap-highlight-color: transparent;\n    }\n    /* 禁用长按页面时的弹出菜单 */\n    img,a { -webkit-touch-callout: none; }\n    /* html划分份数 */\n    @no: 15;\n        /* 屏幕尺寸：320 */\n    @media screen and (min-width: 320px) {\n        html {\n            font-size: (320px / @no);\n        }\n    }\n        /* 屏幕尺寸：360 */\n    @media screen and (min-width: 360px) {\n        html {\n            font-size: (360px / @no);\n        }\n    }\n        /* 屏幕尺寸：375 iphone 678 */\n    @media screen and (min-width: 375px) {\n        html {\n            font-size: (375px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：384 */\n    @media screen and (min-width: 384px) {\n        html {\n            font-size: (384px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：400 */\n    @media screen and (min-width: 400px) {\n        html {\n            font-size: (400px / @no);\n        }\n    }\n        /* 屏幕尺寸：414 */\n    @media screen and (min-width: 414px) {\n        html {\n            font-size: (414px / @no);\n        }\n    }\n        /* 屏幕尺寸：424 */\n    @media screen and (min-width: 424px) {\n        html {\n            font-size: (424px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：480 */\n    @media screen and (min-width: 480px) {\n        html {\n            font-size: (480px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：540 */\n    @media screen and (min-width: 540px) {\n        html {\n            font-size: (540px / @no);\n        }\n    }\n        /* 屏幕尺寸：720 */\n    @media screen and (min-width: 720px) {\n        html {\n            font-size: (720px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：750 */\n    @media screen and (min-width: 750px) {\n        html {\n            font-size: (750px / @no);\n        }\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n",normalizedContent:"# 知识点：rem 适配布局（技术方案一）\n\n原理： less + 媒体查询 + rem\n\n设计稿尺寸： 750px（主流）\n\n屏幕划分份数： 15份\n\nhtml 字体大小： 50px（html 字体大小 = 设计稿尺寸 / 屏幕划分份数）\n\n元素 rem 值 = 元素px / html 字体大小\n\n使用步骤：\n\n 1. 引入 common1\n 2. 使用 rem 布局\n\ncommon1.css：\n\n    html {\n        font-size: 50px;\n    }\n    \n    body {\n        min-width: 320px;\n        width: 15rem;\n        margin: 0 auto;\n        line-height: 1.5;\n        font-family: arial,helvetica;\n        background: #f2f2f2;\n    }\n    a {\n        text-decoration: none;\n    }\n    /* 点击高亮我们需要清除清除设置为 transparent 完成透明 */\n    a {\n        -webkit-tap-highlight-color: transparent;\n    }\n    /* 禁用长按页面时的弹出菜单 */\n    img,a { -webkit-touch-callout: none; }\n    /* html划分份数 */\n    @no: 15;\n        /* 屏幕尺寸：320 */\n    @media screen and (min-width: 320px) {\n        html {\n            font-size: (320px / @no);\n        }\n    }\n        /* 屏幕尺寸：360 */\n    @media screen and (min-width: 360px) {\n        html {\n            font-size: (360px / @no);\n        }\n    }\n        /* 屏幕尺寸：375 iphone 678 */\n    @media screen and (min-width: 375px) {\n        html {\n            font-size: (375px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：384 */\n    @media screen and (min-width: 384px) {\n        html {\n            font-size: (384px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：400 */\n    @media screen and (min-width: 400px) {\n        html {\n            font-size: (400px / @no);\n        }\n    }\n        /* 屏幕尺寸：414 */\n    @media screen and (min-width: 414px) {\n        html {\n            font-size: (414px / @no);\n        }\n    }\n        /* 屏幕尺寸：424 */\n    @media screen and (min-width: 424px) {\n        html {\n            font-size: (424px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：480 */\n    @media screen and (min-width: 480px) {\n        html {\n            font-size: (480px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：540 */\n    @media screen and (min-width: 540px) {\n        html {\n            font-size: (540px / @no);\n        }\n    }\n        /* 屏幕尺寸：720 */\n    @media screen and (min-width: 720px) {\n        html {\n            font-size: (720px / @no);\n        }\n    }\n    \n        /* 屏幕尺寸：750 */\n    @media screen and (min-width: 750px) {\n        html {\n            font-size: (750px / @no);\n        }\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"rem 适配布局（技术方案一）案例",frontmatter:{title:"rem 适配布局（技术方案一）案例",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/f6af9f/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/10.rem%20%E9%80%82%E9%85%8D%E5%B8%83%E5%B1%80%EF%BC%88%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E4%B8%80%EF%BC%89%E6%A1%88%E4%BE%8B.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/10.rem 适配布局（技术方案一）案例.md",key:"v-270c7930",path:"/pages/f6af9f/",headersStr:null,content:"\n登录\n\n\n爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机\n\n</nav>\n",normalizedContent:"\n登录\n\n\n爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机 爆款手机\n\n</nav>\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"px 转换 rem 插件（cssrem）",frontmatter:{title:"px 转换 rem 插件（cssrem）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/0c16c8/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/11.px%20%E8%BD%AC%E6%8D%A2%20rem%20%E6%8F%92%E4%BB%B6%EF%BC%88cssrem%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/11.px 转换 rem 插件（cssrem）.md",key:"v-ab095d7a",path:"/pages/0c16c8/",headersStr:null,content:"# 知识点：px 转换 rem 插件（cssrem）\n\n解决： 解决每次设置元素尺寸时，在 less 中运算的问题\n\n使用步骤：\n\n 1. 下载插件\n 2. 定义 html 大小基准值（在 cssrem 设置中将 cssrem.rootFontSize 改为 75。默认是 16）",normalizedContent:"# 知识点：px 转换 rem 插件（cssrem）\n\n解决： 解决每次设置元素尺寸时，在 less 中运算的问题\n\n使用步骤：\n\n 1. 下载插件\n 2. 定义 html 大小基准值（在 cssrem 设置中将 cssrem.rootfontsize 改为 75。默认是 16）",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"rem 适配布局（技术方案二）（推荐）",frontmatter:{title:"rem 适配布局（技术方案二）（推荐）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/91ff9f/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/12.rem%20%E9%80%82%E9%85%8D%E5%B8%83%E5%B1%80%EF%BC%88%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E4%BA%8C%EF%BC%89%EF%BC%88%E6%8E%A8%E8%8D%90%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/12.rem 适配布局（技术方案二）（推荐）.md",key:"v-28302a7b",path:"/pages/91ff9f/",headersStr:null,content:"# 知识点：rem 适配布局（技术方案二）（推荐）\n\n原理： flexible.js（移动端适配库）+ rem\n\n官网： https://github.com/amfe/lib-flexible\n\n原理： 使用 rem 替代 px\n\n优点： 无需定义不同屏幕的媒体查询\n\n设计稿尺寸： 750px（主流）\n\n元素rem值 = 元素px / html字体大小\n\n使用步骤：\n\n 1. 引入 flexible.js\n 2. 定义 屏幕划分份数：10份\n 3. 定义 html字体大小：75px（html字体大小 = 设计稿尺寸 / 屏幕划分份数）\n 4. 定义 cssrem 插件 html字体大小",normalizedContent:"# 知识点：rem 适配布局（技术方案二）（推荐）\n\n原理： flexible.js（移动端适配库）+ rem\n\n官网： https://github.com/amfe/lib-flexible\n\n原理： 使用 rem 替代 px\n\n优点： 无需定义不同屏幕的媒体查询\n\n设计稿尺寸： 750px（主流）\n\n元素rem值 = 元素px / html字体大小\n\n使用步骤：\n\n 1. 引入 flexible.js\n 2. 定义 屏幕划分份数：10份\n 3. 定义 html字体大小：75px（html字体大小 = 设计稿尺寸 / 屏幕划分份数）\n 4. 定义 cssrem 插件 html字体大小",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"Home",frontmatter:{home:!0,heroText:"白开水-先生",tagline:"有形即有度，有度必满盈。故君子之思白开水-先生，君子之行白开水-先生，君子之量白开水-先生。",pageClass:"vdoing-index-class",bannerBg:"https://symbol-node.oss-cn-shanghai.aliyuncs.com/blog/basic/background/62494753_p0.jpg",postList:"none",hideRightBar:!0,readingShow:"top"},regularPath:"/",relativePath:"index.md",key:"v-3241ccef",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"rem 适配布局（技术方案二）案例",frontmatter:{title:"rem 适配布局（技术方案二）案例",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/6ce11c/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/13.rem%20%E9%80%82%E9%85%8D%E5%B8%83%E5%B1%80%EF%BC%88%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E4%BA%8C%EF%BC%89%E6%A1%88%E4%BE%8B.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/13.rem 适配布局（技术方案二）案例.md",key:"v-73d64058",path:"/pages/6ce11c/",headersStr:null,content:"\n登录",normalizedContent:"\n登录",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"响应式布局",frontmatter:{title:"响应式布局",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/80324a/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/14.%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/14.响应式布局.md",key:"v-4a911256",path:"/pages/80324a/",headersStr:null,content:'# 知识点：响应式布局\n\n作用： 不同屏幕下，显示不同的页面布局和样式\n\n原理：\n\n 1. 使用一个大盒子来做布局容器\n 2. 在不同屏幕下，通过媒体查询来改变这个布局容器的大小，而里面的子元素通过 rem 动态改变尺寸\n\n屏幕尺寸划分：\n\n 1. 超小屏幕（手机） < 768px\n 2. 小屏设备（平板） >= 768px ~ < 992px\n 3. 中等屏幕（桌面显示器） >= 992px ~ <1200px\n 4. 宽屏设备（大桌面显示器） >= 1200px\n\n/* 1. 超小屏幕下  小于 768  布局容器的宽度为 100% */\n@media screen and (max-width: 767px) {\n   .container {\n       width: 100%;\n   }\n}\n/* 2. 小屏幕下  大于等于768  布局容器改为 750px */\n@media screen and (min-width: 768px) {\n   .container {\n       width: 750px;\n   }\n}\n/* 3. 中等屏幕下 大于等于 992px   布局容器修改为 970px */\n@media screen and (min-width: 992px) {\n   .container {\n       width: 970px;\n   }\n}\n/* 4. 大屏幕下 大于等于1200 布局容器修改为 1170 */\n@media screen and (min-width: 1200px) {\n   .container {\n       width: 1170px;\n   }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n<body>\n    \x3c!-- 布局容器 --\x3e\n    <div class="container"></div>\n</body>\n\n\n1\n2\n3\n4\n',normalizedContent:'# 知识点：响应式布局\n\n作用： 不同屏幕下，显示不同的页面布局和样式\n\n原理：\n\n 1. 使用一个大盒子来做布局容器\n 2. 在不同屏幕下，通过媒体查询来改变这个布局容器的大小，而里面的子元素通过 rem 动态改变尺寸\n\n屏幕尺寸划分：\n\n 1. 超小屏幕（手机） < 768px\n 2. 小屏设备（平板） >= 768px ~ < 992px\n 3. 中等屏幕（桌面显示器） >= 992px ~ <1200px\n 4. 宽屏设备（大桌面显示器） >= 1200px\n\n/* 1. 超小屏幕下  小于 768  布局容器的宽度为 100% */\n@media screen and (max-width: 767px) {\n   .container {\n       width: 100%;\n   }\n}\n/* 2. 小屏幕下  大于等于768  布局容器改为 750px */\n@media screen and (min-width: 768px) {\n   .container {\n       width: 750px;\n   }\n}\n/* 3. 中等屏幕下 大于等于 992px   布局容器修改为 970px */\n@media screen and (min-width: 992px) {\n   .container {\n       width: 970px;\n   }\n}\n/* 4. 大屏幕下 大于等于1200 布局容器修改为 1170 */\n@media screen and (min-width: 1200px) {\n   .container {\n       width: 1170px;\n   }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n<body>\n    \x3c!-- 布局容器 --\x3e\n    <div class="container"></div>\n</body>\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"响应式布局 案例",frontmatter:{title:"响应式布局 案例",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/01c35d/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/15.%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80%20%E6%A1%88%E4%BE%8B.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/15.响应式布局 案例.md",key:"v-0a519d84",path:"/pages/01c35d/",headersStr:null,content:'阿里百秀\n * 生活馆\n * 自然汇\n * 科技湖\n * 奇趣事\n * 美食杰\n\n * 阿里百秀\n\n * 奇了 成都一小区护卫长得像马云 市民纷纷求合影\n\n   \n\n                       <li>\n                           <a href="#">\n                               <img src="sucai/18/upload/2.jpg" alt="">\n                               <p>奇了 成都一小区护卫长得像马云 市民纷纷求合影</p>\n                           </a>\n                       </li>\n   \n                       <li>\n                           <a href="#">\n                               <img src="sucai/18/upload/3.jpg" alt="">\n                               <p>奇了 成都一小区护卫长得像马云 市民纷纷求合影</p>\n                           </a>\n                       </li>\n   \n                       <li>\n                           <a href="#">\n                               <img src="sucai/18/upload/4.jpg" alt="">\n                               <p>奇了 成都一小区护卫长得像马云 市民纷纷求合影</p>\n                           </a>\n                       </li>\n   \n                   </ul>\n               </div>\n               \x3c!-- 发表 --\x3e\n               <div class="publish">\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n               </div>\n   \n           </article>\n           <aside class="col-md-3">\n               <a href="#" class="banner">\n                   <img src="sucai/18/upload/zgboke.jpg" alt="">\n               </a>\n               <a href="#" class="hot">\n                   <span class="btn btn-primary">热搜</span>\n                   <h4 class="text-primary">欢迎加入中国博客联盟</h4>\n                   <p>这里收录国内各个领域的优秀博客，是一个全人工编辑的开放式博客联盟交流和展示平台......</p>\n               </a>\n           </aside>\n       </div>\n   </div>\n   \n\n   ',normalizedContent:'阿里百秀\n * 生活馆\n * 自然汇\n * 科技湖\n * 奇趣事\n * 美食杰\n\n * 阿里百秀\n\n * 奇了 成都一小区护卫长得像马云 市民纷纷求合影\n\n   \n\n                       <li>\n                           <a href="#">\n                               <img src="sucai/18/upload/2.jpg" alt="">\n                               <p>奇了 成都一小区护卫长得像马云 市民纷纷求合影</p>\n                           </a>\n                       </li>\n   \n                       <li>\n                           <a href="#">\n                               <img src="sucai/18/upload/3.jpg" alt="">\n                               <p>奇了 成都一小区护卫长得像马云 市民纷纷求合影</p>\n                           </a>\n                       </li>\n   \n                       <li>\n                           <a href="#">\n                               <img src="sucai/18/upload/4.jpg" alt="">\n                               <p>奇了 成都一小区护卫长得像马云 市民纷纷求合影</p>\n                           </a>\n                       </li>\n   \n                   </ul>\n               </div>\n               \x3c!-- 发表 --\x3e\n               <div class="publish">\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n                   <div class="row">\n                       <div class="col-sm-9">\n                           <h3>生活馆 关于指甲的10个健康知识 你知道几个？</h3>\n                           <p class="text-muted hidden-xs">alibaixiu 发布于 2015-11-23</p>\n                           <p class="hidden-xs">指甲是经常容易被人们忽略的身体部位， 事实上从指甲的健康状况可以看出一个人的身体健康状况， 快来看看10个暗藏在指甲里知识吧！</p>\n                           <p class="text-muted">阅读(2417)评论(1)赞 (18) <span class="hidden-xs">标签：健康 / 感染 / 指甲 / 疾病 / 皮肤 / 营养 / 趣味生活</span>\n   \n                           </p>\n                       </div>\n                       <div class="col-sm-3 pic hidden-xs">\n                           <img src="sucai/18/upload/3.jpg" alt="">\n                       </div>\n                   </div>\n               </div>\n   \n           </article>\n           <aside class="col-md-3">\n               <a href="#" class="banner">\n                   <img src="sucai/18/upload/zgboke.jpg" alt="">\n               </a>\n               <a href="#" class="hot">\n                   <span class="btn btn-primary">热搜</span>\n                   <h4 class="text-primary">欢迎加入中国博客联盟</h4>\n                   <p>这里收录国内各个领域的优秀博客，是一个全人工编辑的开放式博客联盟交流和展示平台......</p>\n               </a>\n           </aside>\n       </div>\n   </div>\n   \n\n   ',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"Bootstrap 框架",frontmatter:{title:"Bootstrap 框架",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/8a06e4/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/05.%E7%A7%BB%E5%8A%A8%20web%20%E5%BC%80%E5%8F%91/16.Bootstrap%20%E6%A1%86%E6%9E%B6.html",relativePath:"《前端》笔记《基础知识》/05.移动 web 开发/16.Bootstrap 框架.md",key:"v-7dfe4f8f",path:"/pages/8a06e4/",headersStr:null,content:"Document",normalizedContent:"document",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"介绍",frontmatter:{title:"介绍",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/a9419c/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/01.%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/01.介绍.md",key:"v-44ef47bb",path:"/pages/a9419c/",headersStr:null,content:"学习视频： （1）零基础玩转微信小程序：本地 （2）黑马程序员前端微信小程序开发教程，微信小程序从基础到发布全流程_企业级商城实战(含uni-app项目多端部署)：https://www.bilibili.com/video/BV1834y1676P?p=29&spm_id_from=pageDriver\n\n小程序与普通网页开发的区别： （1）运行环境不同 网页运行在 浏览器环境中 小程序运行在 微信环境中\n\n（2）API 不同 因为小程序运行在微信环境中，所以无法调用 DOM 和 BOM 的 API，但是可以调用小程序自己的 API，如 地理单位、扫码、支付 等\n\n（3）开发模式不同 传统网页：浏览器 + 代码编辑器 小程序：申请小程序开发账号 + 安装小程序开发者工具 + 创建和配置小程序项目\n\n特性： 1、易变现：微信支付的基础设施已经搭好，用户的支付习惯已经养成，微信的广告生态也日益成熟 2、易传播：流量大 3、易推广：二维码、朋友圈、10 亿+ 微信用户 4、易开发：从开发成本到运营推广成本，小程序的花费仅为 APP 的十分之一，可跨平台，且接近原生体验，能大幅减少应用开发的人力 5、易更新：可即使更新（不考虑微信审核），有效加速产品迭代 6、易互通：小程序之间通过链接就可以相互调起，传递数据。可以和公众号完美结合，公众号提供优质的内容为小程序进行引流，小程序复制展现商品交易及提供相关服务 7、易搜索：小程序中的数据方便搜索引擎索引，打破 APP 信息孤岛 8、易使用：无需安装，即点即用，可以生成图标在桌面上，且不占内存和后台；流畅度几乎可以媲美 App 标准；相对于 H5 页面，不会有 卡顿、延迟、加载慢、权限不足的问题\n\n特点： 唯一性：小程序名称具有唯一性，与域名及网络实名一样，谁先注册谁先拥有 新零售：小程序是新零售的最好载体，这也是未来线下门店的发展趋势 入口丰富：据统计小程序目前入口有近 50 个之多 传播能力强：【附近小程序】能够做到覆盖附近 5 公里所有微信用户，而且结合线上、线下引流与传播，效果更佳\n\n框架对比：\n\n         MINA（原生微信小程序）       uni-app            mpvue（美团）         wepy（腾讯）            Taro（京东）\n\n\n语法规范： 小程序规范 vue.js 规范 vue.js 规范 类 vue.js 规范 React 规范\n\n模板系统： 字符串模板 字符串模板 字符串模板 JSX\n\n类型系统： 不支持 业务代码 业务代码 业务代码 + JSX模板\n\n组件规范： 小程序组件 html 标签 + 小程序组件 小程序组件 小程序组件\n\n样式规范： wxss sass、less、postcss sass、less、styus sass、less、postcss\n\n组件化： 小程序组件化 vue 组件化规范 自定义组件化 React 组件化规范\n\n多端复用： 无 复用为 H5、等 复用为 H5 复用为 H5、等\n\n自动构建： 无 Webpack 构建 内建构建系统 内建构建系统 + Webpack\n\n上手成本： 全新学习 熟悉 Vue.js 熟悉 Vue.js + wepy 熟悉 React\n\n数据流管理： 不支持 Vuex Redux Redux",normalizedContent:"学习视频： （1）零基础玩转微信小程序：本地 （2）黑马程序员前端微信小程序开发教程，微信小程序从基础到发布全流程_企业级商城实战(含uni-app项目多端部署)：https://www.bilibili.com/video/bv1834y1676p?p=29&spm_id_from=pagedriver\n\n小程序与普通网页开发的区别： （1）运行环境不同 网页运行在 浏览器环境中 小程序运行在 微信环境中\n\n（2）api 不同 因为小程序运行在微信环境中，所以无法调用 dom 和 bom 的 api，但是可以调用小程序自己的 api，如 地理单位、扫码、支付 等\n\n（3）开发模式不同 传统网页：浏览器 + 代码编辑器 小程序：申请小程序开发账号 + 安装小程序开发者工具 + 创建和配置小程序项目\n\n特性： 1、易变现：微信支付的基础设施已经搭好，用户的支付习惯已经养成，微信的广告生态也日益成熟 2、易传播：流量大 3、易推广：二维码、朋友圈、10 亿+ 微信用户 4、易开发：从开发成本到运营推广成本，小程序的花费仅为 app 的十分之一，可跨平台，且接近原生体验，能大幅减少应用开发的人力 5、易更新：可即使更新（不考虑微信审核），有效加速产品迭代 6、易互通：小程序之间通过链接就可以相互调起，传递数据。可以和公众号完美结合，公众号提供优质的内容为小程序进行引流，小程序复制展现商品交易及提供相关服务 7、易搜索：小程序中的数据方便搜索引擎索引，打破 app 信息孤岛 8、易使用：无需安装，即点即用，可以生成图标在桌面上，且不占内存和后台；流畅度几乎可以媲美 app 标准；相对于 h5 页面，不会有 卡顿、延迟、加载慢、权限不足的问题\n\n特点： 唯一性：小程序名称具有唯一性，与域名及网络实名一样，谁先注册谁先拥有 新零售：小程序是新零售的最好载体，这也是未来线下门店的发展趋势 入口丰富：据统计小程序目前入口有近 50 个之多 传播能力强：【附近小程序】能够做到覆盖附近 5 公里所有微信用户，而且结合线上、线下引流与传播，效果更佳\n\n框架对比：\n\n         mina（原生微信小程序）       uni-app            mpvue（美团）         wepy（腾讯）            taro（京东）\n\n\n语法规范： 小程序规范 vue.js 规范 vue.js 规范 类 vue.js 规范 react 规范\n\n模板系统： 字符串模板 字符串模板 字符串模板 jsx\n\n类型系统： 不支持 业务代码 业务代码 业务代码 + jsx模板\n\n组件规范： 小程序组件 html 标签 + 小程序组件 小程序组件 小程序组件\n\n样式规范： wxss sass、less、postcss sass、less、styus sass、less、postcss\n\n组件化： 小程序组件化 vue 组件化规范 自定义组件化 react 组件化规范\n\n多端复用： 无 复用为 h5、等 复用为 h5 复用为 h5、等\n\n自动构建： 无 webpack 构建 内建构建系统 内建构建系统 + webpack\n\n上手成本： 全新学习 熟悉 vue.js 熟悉 vue.js + wepy 熟悉 react\n\n数据流管理： 不支持 vuex redux redux",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"环境搭建",frontmatter:{title:"环境搭建",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/25f752/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/02.%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/02.环境搭建.md",key:"v-8dfbb406",path:"/pages/25f752/",headersStr:null,content:"注册账号：https://mp.weixin.qq.com/wxopen/waregister?action=step1\n\n获取 APPID：https://mp.weixin.qq.com/ → 开发 → 开发设置\n\n获取小程序二维码 小程序后台 → 设置 → 基本设置 → 基本信息 → 小程序码及线下物料下载\n\n查看运营数据 小程序后台：统计 小程序数据助手：统计 → 手机查看数据\n\n微信开发者工具 下载：https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html → 安装开发版\n\n文档：https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html\n\n作用： （1）快速创建小程序项目 （2）编辑、查看 代码 （3）调试 （4）预览 （5）发布\n\n特性： 集成了 开发、预览、调试、发布 环境，但由于编码的体验不好， 因此 建议使⽤ vscode 负责敲代码、微信编辑工具 负责预览\n\n配置： （1）设置 → 编辑器设置 行距：12 字号：18\n\n（2）设置 → 代理设置\n  选择 不使用任何代理，勾选后直连网络（说明：其它网络代理软件会影响开发者工具的正常运行）\n\n\n其它： 查看 data 数据：控制台 → AppData\n\n快速查看开发文档：帮助\n\n\n安装插件（VScode） 1、小程序开发助手（作者：overtrue）（不推荐：标签会自动填充很多没用的属性） 作用： 支持 js，json，wxml 文件的代码提示 wxml 文件语法高亮\n\n2、 WXML - Language Service（作者：Mora Qiu） 作用： 微信小程序.wxml文件代码高亮，标签、属性的智能补全（同时支持原生小程序、mpvue 和 wepy 框架，并提供code snippets）\n\n3、wxapp-helper （作者：Sean） 作用： 创建成套的 小程序页面、小程序组件",normalizedContent:"注册账号：https://mp.weixin.qq.com/wxopen/waregister?action=step1\n\n获取 appid：https://mp.weixin.qq.com/ → 开发 → 开发设置\n\n获取小程序二维码 小程序后台 → 设置 → 基本设置 → 基本信息 → 小程序码及线下物料下载\n\n查看运营数据 小程序后台：统计 小程序数据助手：统计 → 手机查看数据\n\n微信开发者工具 下载：https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html → 安装开发版\n\n文档：https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html\n\n作用： （1）快速创建小程序项目 （2）编辑、查看 代码 （3）调试 （4）预览 （5）发布\n\n特性： 集成了 开发、预览、调试、发布 环境，但由于编码的体验不好， 因此 建议使⽤ vscode 负责敲代码、微信编辑工具 负责预览\n\n配置： （1）设置 → 编辑器设置 行距：12 字号：18\n\n（2）设置 → 代理设置\n  选择 不使用任何代理，勾选后直连网络（说明：其它网络代理软件会影响开发者工具的正常运行）\n\n\n其它： 查看 data 数据：控制台 → appdata\n\n快速查看开发文档：帮助\n\n\n安装插件（vscode） 1、小程序开发助手（作者：overtrue）（不推荐：标签会自动填充很多没用的属性） 作用： 支持 js，json，wxml 文件的代码提示 wxml 文件语法高亮\n\n2、 wxml - language service（作者：mora qiu） 作用： 微信小程序.wxml文件代码高亮，标签、属性的智能补全（同时支持原生小程序、mpvue 和 wepy 框架，并提供code snippets）\n\n3、wxapp-helper （作者：sean） 作用： 创建成套的 小程序页面、小程序组件",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"项目初始化",frontmatter:{title:"项目初始化",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/8c1af4/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/03.%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/03.项目初始化.md",key:"v-562b6997",path:"/pages/8c1af4/",headersStr:null,content:'创建项目 微信开发者工具 → 创建小程序 → 填写 AppID → 勾选 不使用云服务\n\n推送至远程仓库\n\n整理项目目录结构 特性：在小程序项目中，无需要引入文件 .js、.json、.wxml、.wxss，小程序会自动引入同名的文件 提示：MINA 指的是原生框架，也就下面的目录结构\n\n删除 pages/logs 目录 清空 utils 目录中的文件 清空 app.wxss 清空 aap.js，并重新生成 app.js 骨架（输入 zcr，选择 app.js 骨架代码片段） 删除 pages/index 目录，并重新生成 index 页面（使用 WXML - Language Service 插件生成页面）\n\ncomponents // 存放 组件 【手动创建】 pages // 存放 页面（特性：每个页面必须以文件夹的形式存在） index // 首页 index.js // 页面 脚本 index.json // 页面 配置 index.wxml // 页面 模板结构 index.wxss // 页面 样式 logs // 日志页面 request // 存放 接口 【手动创建】 styles // 存放 公共样式 【手动创建】 utils // 存放 工具性质的模块（如：自定义方法、第三方工具） app.js // 项目全局入口 文件 app.json // 全局配置 文件 app.wxss // 全局样式 文件 project.config.json // 项目配置 文件 sitemap.json // 微信索引配置 文件\n\n为空目录添加 .gitkeep\n\n将以下文件放到 Prettier 忽略清单中（-- .prettierignore） app.json\n\n将以下文件放到 git 忽略清单中（-- .gitignore） /node_modules\n\n开启服务端口：微信开发者工具 → 设置 → 安全设置 → 开启 服务端口\n\n初始化样式（-- app.wxss） page,view,text,swiper,swiper-item,image,navigator { padding: 0; margin: 0; box-sizing: border-box; font-size: 30rpx; }\n\n定义主题样式（-- app.wxss） page { /* 主题颜色 */ --themeColor: #eb4450; }\n\n导入资源 导入 字体图标 （1）创建字体图标 阿里巴巴矢量图 → 选择好图标并放到项目中 → 选择 Font class → 生成代码 →打开生成的在线代码 → styles/新建 iconfont.wxss → 将生成的在线代码内容复制到 iconfont.wxss 中\n\n（2）全局引入（-- app.wxss）\n  @import "./styles/iconfont.wxss"\n\n\n导入 icon图标 （1）导入文件 根目录/导入 icon\n\n解决警告： （1）[sitemap 索引情况提示] 根据 sitemap 的规则[0]，当前页面 [pages/child/index] 将不被索引 解决方法：在 setting 字段中添加以下代码（-- project.config.json） "checkSiteMap": false,',normalizedContent:'创建项目 微信开发者工具 → 创建小程序 → 填写 appid → 勾选 不使用云服务\n\n推送至远程仓库\n\n整理项目目录结构 特性：在小程序项目中，无需要引入文件 .js、.json、.wxml、.wxss，小程序会自动引入同名的文件 提示：mina 指的是原生框架，也就下面的目录结构\n\n删除 pages/logs 目录 清空 utils 目录中的文件 清空 app.wxss 清空 aap.js，并重新生成 app.js 骨架（输入 zcr，选择 app.js 骨架代码片段） 删除 pages/index 目录，并重新生成 index 页面（使用 wxml - language service 插件生成页面）\n\ncomponents // 存放 组件 【手动创建】 pages // 存放 页面（特性：每个页面必须以文件夹的形式存在） index // 首页 index.js // 页面 脚本 index.json // 页面 配置 index.wxml // 页面 模板结构 index.wxss // 页面 样式 logs // 日志页面 request // 存放 接口 【手动创建】 styles // 存放 公共样式 【手动创建】 utils // 存放 工具性质的模块（如：自定义方法、第三方工具） app.js // 项目全局入口 文件 app.json // 全局配置 文件 app.wxss // 全局样式 文件 project.config.json // 项目配置 文件 sitemap.json // 微信索引配置 文件\n\n为空目录添加 .gitkeep\n\n将以下文件放到 prettier 忽略清单中（-- .prettierignore） app.json\n\n将以下文件放到 git 忽略清单中（-- .gitignore） /node_modules\n\n开启服务端口：微信开发者工具 → 设置 → 安全设置 → 开启 服务端口\n\n初始化样式（-- app.wxss） page,view,text,swiper,swiper-item,image,navigator { padding: 0; margin: 0; box-sizing: border-box; font-size: 30rpx; }\n\n定义主题样式（-- app.wxss） page { /* 主题颜色 */ --themecolor: #eb4450; }\n\n导入资源 导入 字体图标 （1）创建字体图标 阿里巴巴矢量图 → 选择好图标并放到项目中 → 选择 font class → 生成代码 →打开生成的在线代码 → styles/新建 iconfont.wxss → 将生成的在线代码内容复制到 iconfont.wxss 中\n\n（2）全局引入（-- app.wxss）\n  @import "./styles/iconfont.wxss"\n\n\n导入 icon图标 （1）导入文件 根目录/导入 icon\n\n解决警告： （1）[sitemap 索引情况提示] 根据 sitemap 的规则[0]，当前页面 [pages/child/index] 将不被索引 解决方法：在 setting 字段中添加以下代码（-- project.config.json） "checksitemap": false,',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"配置文件",frontmatter:{title:"配置文件",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/e97103/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/05.%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/05.配置文件.md",key:"v-64ec1ae6",path:"/pages/e97103/",headersStr:null,content:'全局配置 文件（-- app.json） 全局配置文档：https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html\n\n作用： pages 配置项：注册页面 window 配置项：设置全局样式。如：状态栏、导航条、、标题、窗口背景色 style 配置项：定义样式版本 sitemapLocation：指定 sitemap.json 的存放位置 tabBar 配置项：开启 tabBar 功能\n\n创建页面 （1）注册页面。在 -- app.json 中的 pages 字段中注册页面 语法："pages/页面名称/页面名称" 特性： 1、系统会自动在 pages 中新增该页面文件，并建好该页面文件的依赖文件（该特性仅在小程序开发工具中生效） 2、首页。第一个页面为小程序默认显示的页面 3、不要写后缀名 例： "pages": [ // 当前小程序拥有的页面 "pages/demon1/demon1" "pages/index/index", "pages/logs/logs" ]\n\n"window": { // 设置小程序的状态栏、导航条、标题、窗口背景色 "navigationBarTitleText": "Weixin", // 导航栏 标题 "navigationBarTextStyle": "black", // 导航栏 文字颜色。特性：颜色仅支持 black（黑色）和 white（白色） "navigationBarBackgroundColor": "#fff", // 导航栏 背景颜色。特性：仅支持 16 进制\n\n提示：模拟器可能会出现一些问题，如下拉刷新样式会自动发生变化等。但在真机中不会出现这写问题，只要真机不出现问题就没关系\n"enablePullDownRefresh": true,           // 是否开启 下拉刷新（更推荐在页面中配置这个效果）\n"backgroundTextStyle": "dark",           // 是否开启 下拉刷新的图标。特性：颜色仅支持 （light：白色）（dark：灰色）\n"backgroundColor": "#efefef",            // 下拉刷新背景色\n\n上拉触底距离\n作用：上拉触底时加载更多数据\n特性：默认距离为 50px\n"onReachBottomDistance": 50,\n\n\n},\n\n项目配置 文件（project.config.json） 说明：在微信小程序的 详情 中进行设置时，项目配置 文件也会跟着发送变化\n\n作用： setting 字段：编译相关配置 projectname 字段：项目名称 appid 字段：小程序账号 id\n\n页面配置 文件（-- 页面.json） 文档：https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html\n\n作用：为页面单独设置样式。设置小程序的状态栏、导航条、标题、窗口背景色\n\n"usingComponents": {}, // 引用自定义组件 "navigationBarTitleText": "Weixin", // 导航栏 标题 "navigationBarTextStyle": "black", // 导航栏 文字颜色，特性：颜色仅支持 black（黑色）和 white（白色） "navigationBarBackgroundColor": "#0094ff", // 导航栏 背景颜色 "enablePullDownRefresh": true, // 是否开启 下拉刷新 "backgroundTextStyle": "dark", // 是否开启 下拉刷新的图标\n\n微信索引配置 文件（-- sitemap.json） 作用：配置小程序页面是否允许微信索引。类似于传统网页的 SEO\n\n{ "desc": "关于本文件的更多信息，请参考文档 https://developers.weixin.qq.com/miniprogram/dev/framework/sitemap.html", // 索引规则 "rules": [{ // 都允许被索引（disallow：不允许被索引） "action": "allow", // ：所有页面 "page": "" }] }',normalizedContent:'全局配置 文件（-- app.json） 全局配置文档：https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html\n\n作用： pages 配置项：注册页面 window 配置项：设置全局样式。如：状态栏、导航条、、标题、窗口背景色 style 配置项：定义样式版本 sitemaplocation：指定 sitemap.json 的存放位置 tabbar 配置项：开启 tabbar 功能\n\n创建页面 （1）注册页面。在 -- app.json 中的 pages 字段中注册页面 语法："pages/页面名称/页面名称" 特性： 1、系统会自动在 pages 中新增该页面文件，并建好该页面文件的依赖文件（该特性仅在小程序开发工具中生效） 2、首页。第一个页面为小程序默认显示的页面 3、不要写后缀名 例： "pages": [ // 当前小程序拥有的页面 "pages/demon1/demon1" "pages/index/index", "pages/logs/logs" ]\n\n"window": { // 设置小程序的状态栏、导航条、标题、窗口背景色 "navigationbartitletext": "weixin", // 导航栏 标题 "navigationbartextstyle": "black", // 导航栏 文字颜色。特性：颜色仅支持 black（黑色）和 white（白色） "navigationbarbackgroundcolor": "#fff", // 导航栏 背景颜色。特性：仅支持 16 进制\n\n提示：模拟器可能会出现一些问题，如下拉刷新样式会自动发生变化等。但在真机中不会出现这写问题，只要真机不出现问题就没关系\n"enablepulldownrefresh": true,           // 是否开启 下拉刷新（更推荐在页面中配置这个效果）\n"backgroundtextstyle": "dark",           // 是否开启 下拉刷新的图标。特性：颜色仅支持 （light：白色）（dark：灰色）\n"backgroundcolor": "#efefef",            // 下拉刷新背景色\n\n上拉触底距离\n作用：上拉触底时加载更多数据\n特性：默认距离为 50px\n"onreachbottomdistance": 50,\n\n\n},\n\n项目配置 文件（project.config.json） 说明：在微信小程序的 详情 中进行设置时，项目配置 文件也会跟着发送变化\n\n作用： setting 字段：编译相关配置 projectname 字段：项目名称 appid 字段：小程序账号 id\n\n页面配置 文件（-- 页面.json） 文档：https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html\n\n作用：为页面单独设置样式。设置小程序的状态栏、导航条、标题、窗口背景色\n\n"usingcomponents": {}, // 引用自定义组件 "navigationbartitletext": "weixin", // 导航栏 标题 "navigationbartextstyle": "black", // 导航栏 文字颜色，特性：颜色仅支持 black（黑色）和 white（白色） "navigationbarbackgroundcolor": "#0094ff", // 导航栏 背景颜色 "enablepulldownrefresh": true, // 是否开启 下拉刷新 "backgroundtextstyle": "dark", // 是否开启 下拉刷新的图标\n\n微信索引配置 文件（-- sitemap.json） 作用：配置小程序页面是否允许微信索引。类似于传统网页的 seo\n\n{ "desc": "关于本文件的更多信息，请参考文档 https://developers.weixin.qq.com/miniprogram/dev/framework/sitemap.html", // 索引规则 "rules": [{ // 都允许被索引（disallow：不允许被索引） "action": "allow", // ：所有页面 "page": "" }] }',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"tabBar 功能",frontmatter:{title:"tabBar 功能",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ba1bb6/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/06.tabBar%20%E5%8A%9F%E8%83%BD.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/06.tabBar 功能.md",key:"v-5b239ac5",path:"/pages/ba1bb6/",headersStr:null,content:'文档：https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#tabBar\n\n特性： （1）tabBar 最少设置 2 个，最多设置 5 个 （2）tabBar 为顶部时，不会显示 icon 图标\n\n使用步骤： （1）将美工提供的 icon 文件夹放到项目根目录中\n\n（2）创建 tabBar 页面（-- app.json） 提示：tabBar 的页面必须要排在数组的最前面\n\n"pages":[\n  "pages/index/index",\n  \n  -- 增\n    "pages/img/img",\n    "pages/mine/mine",\n    "pages/search/search",\n  -- \n\n],\n\n\n（3）配置 tabBar（-- app.json）\n\n"tabBar": {                                // 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面\n  "list": [                                // tab 栏页面\n    {                               \n      // 首页\n      "pagePath": "pages/index/index",     // 点击 tabBar 栏跳转的页面路径\n      "text": "首页",                       // tab 栏标题\n      "iconPath": "icon/home-off.png",        // 未选中状态 的图标路径\n      "selectedIconPath": "icon/home-on.png"  // 已选中状态 的图标路径\n    },\n    {\n      // 图片\n      "pagePath": "pages/img/img",\n      "text": "图片",\n      "iconPath": "icon/img-off.png",\n      "selectedIconPath": "icon/img-on.png"\n    },\n    {\n      // 个人中心\n      "pagePath": "pages/mine/mine",\n      "text": "我的",\n      "iconPath": "icon/my-off.png",\n      "selectedIconPath": "icon/my-on.png"\n    },\n    {\n      // 搜索\n      "pagePath": "pages/search/search",\n      "text": "搜索",\n      "iconPath": "icon/search-off.png",\n      "selectedIconPath": "icon/search-on.png"\n    }\n  ],\n  "color" : "#0094ff",                     // 未选中状态 的字体颜色\n  "selectedColor": "#ff9400",              // 已选择状态 的字体颜色（特性：只能设置 16 进制的格式）\n  // borderStyle: "",                      // 上边框颜色。特性：只支持（black：黑色）（white：白色）\n  // "backgroundColor": "#ff5533",         // 背景颜色\n  // "position": "top"                     // tabBar 显示在顶部（特性：不会显示 图标）\n},\n',normalizedContent:'文档：https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#tabbar\n\n特性： （1）tabbar 最少设置 2 个，最多设置 5 个 （2）tabbar 为顶部时，不会显示 icon 图标\n\n使用步骤： （1）将美工提供的 icon 文件夹放到项目根目录中\n\n（2）创建 tabbar 页面（-- app.json） 提示：tabbar 的页面必须要排在数组的最前面\n\n"pages":[\n  "pages/index/index",\n  \n  -- 增\n    "pages/img/img",\n    "pages/mine/mine",\n    "pages/search/search",\n  -- \n\n],\n\n\n（3）配置 tabbar（-- app.json）\n\n"tabbar": {                                // 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面\n  "list": [                                // tab 栏页面\n    {                               \n      // 首页\n      "pagepath": "pages/index/index",     // 点击 tabbar 栏跳转的页面路径\n      "text": "首页",                       // tab 栏标题\n      "iconpath": "icon/home-off.png",        // 未选中状态 的图标路径\n      "selectediconpath": "icon/home-on.png"  // 已选中状态 的图标路径\n    },\n    {\n      // 图片\n      "pagepath": "pages/img/img",\n      "text": "图片",\n      "iconpath": "icon/img-off.png",\n      "selectediconpath": "icon/img-on.png"\n    },\n    {\n      // 个人中心\n      "pagepath": "pages/mine/mine",\n      "text": "我的",\n      "iconpath": "icon/my-off.png",\n      "selectediconpath": "icon/my-on.png"\n    },\n    {\n      // 搜索\n      "pagepath": "pages/search/search",\n      "text": "搜索",\n      "iconpath": "icon/search-off.png",\n      "selectediconpath": "icon/search-on.png"\n    }\n  ],\n  "color" : "#0094ff",                     // 未选中状态 的字体颜色\n  "selectedcolor": "#ff9400",              // 已选择状态 的字体颜色（特性：只能设置 16 进制的格式）\n  // borderstyle: "",                      // 上边框颜色。特性：只支持（black：黑色）（white：白色）\n  // "backgroundcolor": "#ff5533",         // 背景颜色\n  // "position": "top"                     // tabbar 显示在顶部（特性：不会显示 图标）\n},\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"模板语法",frontmatter:{title:"模板语法",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/501d2d/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/07.%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/07.模板语法.md",key:"v-453d7eb9",path:"/pages/501d2d/",headersStr:null,content:'作用：结合基础组件、事件系统 可以构建出页面的结构\n\n数据绑定\n\n  （1）创建数据（-- ***.js）\n    Page({\n      data: {\n        msg: "hello mina"\n      }\n    })\n\n  （2）使用数据（-- ***.wxml）\n    Mustache 语法\n      说明：在微信小程序中叫 Mustache 语法，vue 中叫插值表达式\n      作用：\n        1、动态绑定内容\n          <view>{{ msg }}</view>\n\n        2、动态绑定属性\n          <image src="{{imgSrc}}"></image>\n\n        3、运算（三元元素、算数、等）\n          <view> {{ num >= 5 ? \'1\' : \'2\' }} </view>\n          <view> {{ num + 1}} </view>\n\n渲染数组\n  语法：wx:for="{{数组}}" wx:for-item="循环项的名称" wx:for-index="循环性的索引" wx:key="唯一值 或 *this"\n  特性：\n    1、只有一层循环，可以省略 wx:for-item="item" wx:for-index="index"，默认的 循环项 和 索引 就是 item 和 index\n    2、wx:key 作用是性能优化，和 vue 中的 v-for 一样\n\n  使用步骤：\n    （1）创建数组（-- ***.js）\n      list: [\n        {\n          id: 0,\n          name: \'猪八戒\'\n        },\n        {\n          id: 1,\n          name: \'天蓬元帅\'\n        },\n        {\n          id: 2,\n          name: \'悟能\'\n        }\n      ]\n\n    （2）渲染数组（-- ***.wxml）\n        // <view wx:for="{{list}}" wx:for-item="item" wx:for-index="index" wx:key="index">\n\n        // 常用写法：\n        <view wx:for="{{list}}" wx:key="id">\n          索引：{{index}}\n          值：{{item.name}}\n        </view> \n\n渲染对象\n  语法：wx:for="{{对象}}" wx:for-item="对象的值" wx:for-index="对象的属性" wx:key="唯一值"\n\n  使用步骤：\n    （1）创建对象（-- ***.js）\n      person: {\n        age: 74,\n        height: 145,\n        weight: 200,\n        name: \'富婆\'\n      }\n\n    （2）渲染对象（-- ***.wxml）\n      <view wx:for="{{person}}" wx:for-item="key" wx:for-index="value" wx:key="age">\n        属性名：{{key}}\n        属性值：{{value}}\n      </view> \n\nblock\n  作用：\n    （1）占位符标签。每个循环项不用 view 包裹，而是直接渲染\n      person: {\n        age: 74,\n        height: 145,\n        weight: 200,\n        name: \'富婆\'\n      }\n\n      <view>\n        <block wx:for="{{list}}" wx:key="id">\n          索引：{{index}}\n          值：{{item.name}}\n        </block>\n      </view> \n\n    （2）一次性控制多个组件的展示与隐藏\n      <block wx:if="{{true}}">\n        <view>view1</view>\n        <view>view2</view>\n      </block>\n    \n  \n  渲染结构：\n\n    使用 block 前\n\n      <page>\n        <view>\n          索引：0\n          值：猪八戒\n        </view>\n        <view>\n          索引：1\n          值：天蓬元帅\n        </view>\n        <view>\n          索引：2\n          值：悟能\n        </view>\n      </page>\n\n    使用 block 后\n      \n      <page>\n        <view>\n          索引：0\n          值：猪八戒\n          索引：1\n          值：天蓬元帅\n          索引：2\n          值：悟能\n        </view>\n      </page>\n\n条件渲染\n  wx:if\n    作用：显示隐藏元素\n    原理：动态 创建 和 销毁 元素，比较消耗性能\n    应用场景：只需要切换一次显示和隐藏，且初始值为 false 时，性能更好\n\n    <view wx:if="{{true}}">显示</view>\n    <view wx:if="{{false}}">隐藏</view>\n\n    相当于 if、else if、else\n    <view wx:if="{{type === 1}}">1</view>\n    <view wx:elif="{{type === 2}}">2</view>\n    <view wx:else>3</view>\n  \n  hidden\n    作用：显示隐藏元素\n    原理：使用 display 来控制\n    应用场景：频繁切换元素的显示和隐藏时，性能更好\n    提示：不能和 display 一起使用，后者会覆盖前者\n\n    <view hidden>隐藏</view>\n    <view hidden="{{true}}">隐藏</view>\n    <view hidden="{{false}}">显示</view>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n',normalizedContent:'作用：结合基础组件、事件系统 可以构建出页面的结构\n\n数据绑定\n\n  （1）创建数据（-- ***.js）\n    page({\n      data: {\n        msg: "hello mina"\n      }\n    })\n\n  （2）使用数据（-- ***.wxml）\n    mustache 语法\n      说明：在微信小程序中叫 mustache 语法，vue 中叫插值表达式\n      作用：\n        1、动态绑定内容\n          <view>{{ msg }}</view>\n\n        2、动态绑定属性\n          <image src="{{imgsrc}}"></image>\n\n        3、运算（三元元素、算数、等）\n          <view> {{ num >= 5 ? \'1\' : \'2\' }} </view>\n          <view> {{ num + 1}} </view>\n\n渲染数组\n  语法：wx:for="{{数组}}" wx:for-item="循环项的名称" wx:for-index="循环性的索引" wx:key="唯一值 或 *this"\n  特性：\n    1、只有一层循环，可以省略 wx:for-item="item" wx:for-index="index"，默认的 循环项 和 索引 就是 item 和 index\n    2、wx:key 作用是性能优化，和 vue 中的 v-for 一样\n\n  使用步骤：\n    （1）创建数组（-- ***.js）\n      list: [\n        {\n          id: 0,\n          name: \'猪八戒\'\n        },\n        {\n          id: 1,\n          name: \'天蓬元帅\'\n        },\n        {\n          id: 2,\n          name: \'悟能\'\n        }\n      ]\n\n    （2）渲染数组（-- ***.wxml）\n        // <view wx:for="{{list}}" wx:for-item="item" wx:for-index="index" wx:key="index">\n\n        // 常用写法：\n        <view wx:for="{{list}}" wx:key="id">\n          索引：{{index}}\n          值：{{item.name}}\n        </view> \n\n渲染对象\n  语法：wx:for="{{对象}}" wx:for-item="对象的值" wx:for-index="对象的属性" wx:key="唯一值"\n\n  使用步骤：\n    （1）创建对象（-- ***.js）\n      person: {\n        age: 74,\n        height: 145,\n        weight: 200,\n        name: \'富婆\'\n      }\n\n    （2）渲染对象（-- ***.wxml）\n      <view wx:for="{{person}}" wx:for-item="key" wx:for-index="value" wx:key="age">\n        属性名：{{key}}\n        属性值：{{value}}\n      </view> \n\nblock\n  作用：\n    （1）占位符标签。每个循环项不用 view 包裹，而是直接渲染\n      person: {\n        age: 74,\n        height: 145,\n        weight: 200,\n        name: \'富婆\'\n      }\n\n      <view>\n        <block wx:for="{{list}}" wx:key="id">\n          索引：{{index}}\n          值：{{item.name}}\n        </block>\n      </view> \n\n    （2）一次性控制多个组件的展示与隐藏\n      <block wx:if="{{true}}">\n        <view>view1</view>\n        <view>view2</view>\n      </block>\n    \n  \n  渲染结构：\n\n    使用 block 前\n\n      <page>\n        <view>\n          索引：0\n          值：猪八戒\n        </view>\n        <view>\n          索引：1\n          值：天蓬元帅\n        </view>\n        <view>\n          索引：2\n          值：悟能\n        </view>\n      </page>\n\n    使用 block 后\n      \n      <page>\n        <view>\n          索引：0\n          值：猪八戒\n          索引：1\n          值：天蓬元帅\n          索引：2\n          值：悟能\n        </view>\n      </page>\n\n条件渲染\n  wx:if\n    作用：显示隐藏元素\n    原理：动态 创建 和 销毁 元素，比较消耗性能\n    应用场景：只需要切换一次显示和隐藏，且初始值为 false 时，性能更好\n\n    <view wx:if="{{true}}">显示</view>\n    <view wx:if="{{false}}">隐藏</view>\n\n    相当于 if、else if、else\n    <view wx:if="{{type === 1}}">1</view>\n    <view wx:elif="{{type === 2}}">2</view>\n    <view wx:else>3</view>\n  \n  hidden\n    作用：显示隐藏元素\n    原理：使用 display 来控制\n    应用场景：频繁切换元素的显示和隐藏时，性能更好\n    提示：不能和 display 一起使用，后者会覆盖前者\n\n    <view hidden>隐藏</view>\n    <view hidden="{{true}}">隐藏</view>\n    <view hidden="{{false}}">显示</view>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"事件绑定",frontmatter:{title:"事件绑定",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/99fc36/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/08.%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/08.事件绑定.md",key:"v-b3243102",path:"/pages/99fc36/",headersStr:null,content:'传参 特性：无法通过方法中的实参来传参\n\n解决方法： （1）传递参数。通过自定义属性 语法：data-参数名="{{参数}}"\n\n  例：\n    <button bindtap="handletap" data-operation="{{1}}">+</button>\n\n（2）接收参数。获取自定义属性\n  语法：e.currentTarget.dataset.参数名\n\n  例：\n    handleInput(e) { // e：当前事件绑定的元素对象\n      const operation = e.currentTarget.dataset.operation;\n    }\n\n\n在方法中 获取 data 值 this.data.变量名\n\n在方法中 修改 data 值 特性：无法直接通过 this 来修改 data 值\n\n解决方法： （1）通过 this.setData 方法 语法：this.setData({ 数据名: 值 })\n\n  例：\n    this.setData({\n      num: this.data.num + 1\n    })\n\n\n事件对象 说明：事件函数触发时会返回一个事件对象\n\n属性： type：事件类型\n\ntimeStamp：页面打开到触发事件所经过的毫秒数\n\ntarget、currentTarget\n  作用：\n    target：触发该事件的源头组件（常用）\n    currentTarget：当前事件所绑定的组件\n\n  例：\n    点击内部的按钮时，点击事件以冒泡的方式向外扩散，也会触发外层 view 的 tap 事件处理函数。此时，对于外层的 view 来说：\n      - target：内部按钮组件\n      - currentTarget：当前 view 组件\n\n    outerHandler(e) {\n      console.log(e.target)\n      console.log(e.currentTarget)\n    }\n\n    <view bindtap="outerHandler">\n      <button type="primary">按钮</button>\n    </view>\n\ndetail：额外的信息（常用）\n  - value\n    作用：获取文本框最新的值\n\n    例：\n      <input bindinput="inputHandler"></input>\n\n      inputHandler(e) {\n        console.log(e.detail.value)\n      }\n\n\ntouches：触摸事件，当前停留在屏幕中的触摸点信息的数组\n\nchangedTouches：触摸事件，当前变化的触摸点信息的数组\n\n\nbindinput 事件 / bind:input 事件 作用：双向数据绑定\n\n触发：input 的值发送变化时触发\n\n使用步骤： （1）绑定 bindinput 事件 <input type="text" bindinput="handleInput />\n\n（2）定义方法\n  handleInput(e) {\n    this.setData({\n      msg: e.detail.value\n    })\n  }\n\n\nbindtap 事件 / bind:tap 事件 触发：点击时触发 特性：取代 click 事件\n\n使用步骤： （1）绑定 bindtap 事件 点我触发\n\n（2）定义方法\n  add() {\n    console.log(\'触发！！！\')\n  }\n\n\nbindchange 事件 / bind:change 事件 触发：单选框、复选框 状态被改变时触发\n\n应用场景：单选框、复选框\n\n使用步骤： （1）导入结构 男 女\n\n（2）定义 数据、方法\n  Page({\n    data: {\n      gender: ""\n    },\n    handleChange(e) {\n      let gender = e.detail.value;\n      this.setData({\n        gender\n      })\n    }\n  })',normalizedContent:'传参 特性：无法通过方法中的实参来传参\n\n解决方法： （1）传递参数。通过自定义属性 语法：data-参数名="{{参数}}"\n\n  例：\n    <button bindtap="handletap" data-operation="{{1}}">+</button>\n\n（2）接收参数。获取自定义属性\n  语法：e.currenttarget.dataset.参数名\n\n  例：\n    handleinput(e) { // e：当前事件绑定的元素对象\n      const operation = e.currenttarget.dataset.operation;\n    }\n\n\n在方法中 获取 data 值 this.data.变量名\n\n在方法中 修改 data 值 特性：无法直接通过 this 来修改 data 值\n\n解决方法： （1）通过 this.setdata 方法 语法：this.setdata({ 数据名: 值 })\n\n  例：\n    this.setdata({\n      num: this.data.num + 1\n    })\n\n\n事件对象 说明：事件函数触发时会返回一个事件对象\n\n属性： type：事件类型\n\ntimestamp：页面打开到触发事件所经过的毫秒数\n\ntarget、currenttarget\n  作用：\n    target：触发该事件的源头组件（常用）\n    currenttarget：当前事件所绑定的组件\n\n  例：\n    点击内部的按钮时，点击事件以冒泡的方式向外扩散，也会触发外层 view 的 tap 事件处理函数。此时，对于外层的 view 来说：\n      - target：内部按钮组件\n      - currenttarget：当前 view 组件\n\n    outerhandler(e) {\n      console.log(e.target)\n      console.log(e.currenttarget)\n    }\n\n    <view bindtap="outerhandler">\n      <button type="primary">按钮</button>\n    </view>\n\ndetail：额外的信息（常用）\n  - value\n    作用：获取文本框最新的值\n\n    例：\n      <input bindinput="inputhandler"></input>\n\n      inputhandler(e) {\n        console.log(e.detail.value)\n      }\n\n\ntouches：触摸事件，当前停留在屏幕中的触摸点信息的数组\n\nchangedtouches：触摸事件，当前变化的触摸点信息的数组\n\n\nbindinput 事件 / bind:input 事件 作用：双向数据绑定\n\n触发：input 的值发送变化时触发\n\n使用步骤： （1）绑定 bindinput 事件 <input type="text" bindinput="handleinput />\n\n（2）定义方法\n  handleinput(e) {\n    this.setdata({\n      msg: e.detail.value\n    })\n  }\n\n\nbindtap 事件 / bind:tap 事件 触发：点击时触发 特性：取代 click 事件\n\n使用步骤： （1）绑定 bindtap 事件 点我触发\n\n（2）定义方法\n  add() {\n    console.log(\'触发！！！\')\n  }\n\n\nbindchange 事件 / bind:change 事件 触发：单选框、复选框 状态被改变时触发\n\n应用场景：单选框、复选框\n\n使用步骤： （1）导入结构 男 女\n\n（2）定义 数据、方法\n  page({\n    data: {\n      gender: ""\n    },\n    handlechange(e) {\n      let gender = e.detail.value;\n      this.setdata({\n        gender\n      })\n    }\n  })',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"协同工作",frontmatter:{title:"协同工作",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/dd0f12/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/09.%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/09.协同工作.md",key:"v-1c3ffa58",path:"/pages/dd0f12/",headersStr:null,content:"权限管理 小程序后台 → 管理 → 成员管理\n\n说明：出于 管理 和 高效，需要对员工的权限进行不同岗位的划分。如 为开发者开放 开发者权限，为测试开放 测试权限\n\n开发者 权限说明： （1）开发者权限：可使用小程序开发者工具及对小程序的功能进行代码开发 （2）体验者权限：可使用体验版小程序 （3）登录权限：可登录小程序管理后台，无需管理员确认 （4）开发设置：设置小程序服务器域名、消息推送及扫描普通链接二维码打开小程序 （5）腾讯云管理：云开发相关设置\n\n  权限        运营者       开发者        数据分析者\n\n开发者权限                  ✅\n\n体验者权限       ✅         ✅            ✅\n\n登录            ✅         ✅            ✅\n\n数据分析                                  ✅\n\n微信支付         ✅\n\n推广            ✅\n\n开发管理         ✅\n\n开发设置                    ✅\n\n暂停服务         ✅\n\n解除关联公众号    ✅\n\n腾讯云管理                   ✅\n\n小程序插件        ✅\n\n游戏运营管理      ✅\n\n\n版本阶段 （1）开发版本：使用开发者工具，可将代码上传到开发版本中。开发版本只保留每人最新的一份上传的代码。点击提交审核，可将代码提交审核。开发版本可删除，不影响线上版本和审核中版本的代码 （2）体验版本：可以选择某个开发版本作为体验版，并且选取一份体验版 （3）审核中的版本：只能有一份代码处于审核中。有审核结果后可以发布到线上，也可直接重新提交审核，覆盖原审核版本 （4）线上版本：线上所有用户使用的代码版本，该版本代码在新版本代码发布后被覆盖更新\n\n使用步骤： （1）上传开发版本 微信开发者工具 → 上传\n\n（2）提交审核\n  小程序后台 → 管理 → 版本管理 → 开发版本 → 提交审核\n\n（3）发布\n  小程序后台 → 管理 → 版本管理 → 审核版本 → 发布",normalizedContent:"权限管理 小程序后台 → 管理 → 成员管理\n\n说明：出于 管理 和 高效，需要对员工的权限进行不同岗位的划分。如 为开发者开放 开发者权限，为测试开放 测试权限\n\n开发者 权限说明： （1）开发者权限：可使用小程序开发者工具及对小程序的功能进行代码开发 （2）体验者权限：可使用体验版小程序 （3）登录权限：可登录小程序管理后台，无需管理员确认 （4）开发设置：设置小程序服务器域名、消息推送及扫描普通链接二维码打开小程序 （5）腾讯云管理：云开发相关设置\n\n  权限        运营者       开发者        数据分析者\n\n开发者权限                  ✅\n\n体验者权限       ✅         ✅            ✅\n\n登录            ✅         ✅            ✅\n\n数据分析                                  ✅\n\n微信支付         ✅\n\n推广            ✅\n\n开发管理         ✅\n\n开发设置                    ✅\n\n暂停服务         ✅\n\n解除关联公众号    ✅\n\n腾讯云管理                   ✅\n\n小程序插件        ✅\n\n游戏运营管理      ✅\n\n\n版本阶段 （1）开发版本：使用开发者工具，可将代码上传到开发版本中。开发版本只保留每人最新的一份上传的代码。点击提交审核，可将代码提交审核。开发版本可删除，不影响线上版本和审核中版本的代码 （2）体验版本：可以选择某个开发版本作为体验版，并且选取一份体验版 （3）审核中的版本：只能有一份代码处于审核中。有审核结果后可以发布到线上，也可直接重新提交审核，覆盖原审核版本 （4）线上版本：线上所有用户使用的代码版本，该版本代码在新版本代码发布后被覆盖更新\n\n使用步骤： （1）上传开发版本 微信开发者工具 → 上传\n\n（2）提交审核\n  小程序后台 → 管理 → 版本管理 → 开发版本 → 提交审核\n\n（3）发布\n  小程序后台 → 管理 → 版本管理 → 审核版本 → 发布",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"样式文件（.wxss）",frontmatter:{title:"样式文件（.wxss）",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/2726bb/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/10.%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6%EF%BC%88wxss%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/10.样式文件（wxss）.md",key:"v-0a4c1062",path:"/pages/2726bb/",headersStr:null,content:'变量 作用：解决同样一个样式，用在了项目中的很多地点，如果这个样式需要改变，需要全局搜索并且一个个替换，导致维护性差、工作量增加的问题。使用变量只需要修改变量的值即可\n\n使用步骤： （1）初始化变量（-- app.wxss） 语法：--变量名: 变量值\n\n  page{\n    /* 主题颜色 */\n    --themeColor: #eb4450\n  }\n\n（2）使用变量（-- 页面.wxss）\n  语法：var(--变量名)\n\n  view {\n    color: var(--themeColor)\n  }\n\n\n尺寸单位（rpx） 作用：让元素跟随不同的屏幕大小等比例缩放\n\n原理：底层会自动换算成对应的像素单位来进行渲染\n\n特性： 1、微信小程序独有单位 2、根据屏幕宽度进行自适应 3、rpx 规定 无论哪个型号的手机，屏幕宽度都是 750 rpx，所以设计稿的的尺寸应该是 750px，这样 rps 就是 1:1（750px = 750rpx）\n\n元素尺寸： 设计稿为 750px：1rpx = 1px 设计稿不为 750px：750rpx * 100 / 设计稿\n\n扩展：\n  calc：计算属性\n\n例：\n  width: calc(750rpx * 100 / 1500)\n\n\n说明：在实际开发中，最好还是把设计稿转换为 750px 的尺寸，然后量出来的是多少 px 就写 多少 rpx 就可以了，不需要转换，因为比例是 1:1，然后微信开发者工具中的机型使用 iphone6 因为 是 1（rpx）:2（px），可以跟方便的转换尺寸\n\n样式导入 特性： 1、使用 @import 导入样式 2、只支持相对路径\n\n如：@import "../../styles/common.wxss""\n\n选择器 特性： 1、不支持 *（通配符选择器）\n\nless 特性：原生小程序不支持 less 语法 解决方法： 1、在 VScode 商店中安装 Easy LESS 插件 2、配置 VSCode 配置文件（-- settings.json）  "less.compile": {        "outExt": ".wxss" // 将 less 转换为 wxss 格式   }',normalizedContent:'变量 作用：解决同样一个样式，用在了项目中的很多地点，如果这个样式需要改变，需要全局搜索并且一个个替换，导致维护性差、工作量增加的问题。使用变量只需要修改变量的值即可\n\n使用步骤： （1）初始化变量（-- app.wxss） 语法：--变量名: 变量值\n\n  page{\n    /* 主题颜色 */\n    --themecolor: #eb4450\n  }\n\n（2）使用变量（-- 页面.wxss）\n  语法：var(--变量名)\n\n  view {\n    color: var(--themecolor)\n  }\n\n\n尺寸单位（rpx） 作用：让元素跟随不同的屏幕大小等比例缩放\n\n原理：底层会自动换算成对应的像素单位来进行渲染\n\n特性： 1、微信小程序独有单位 2、根据屏幕宽度进行自适应 3、rpx 规定 无论哪个型号的手机，屏幕宽度都是 750 rpx，所以设计稿的的尺寸应该是 750px，这样 rps 就是 1:1（750px = 750rpx）\n\n元素尺寸： 设计稿为 750px：1rpx = 1px 设计稿不为 750px：750rpx * 100 / 设计稿\n\n扩展：\n  calc：计算属性\n\n例：\n  width: calc(750rpx * 100 / 1500)\n\n\n说明：在实际开发中，最好还是把设计稿转换为 750px 的尺寸，然后量出来的是多少 px 就写 多少 rpx 就可以了，不需要转换，因为比例是 1:1，然后微信开发者工具中的机型使用 iphone6 因为 是 1（rpx）:2（px），可以跟方便的转换尺寸\n\n样式导入 特性： 1、使用 @import 导入样式 2、只支持相对路径\n\n如：@import "../../styles/common.wxss""\n\n选择器 特性： 1、不支持 *（通配符选择器）\n\nless 特性：原生小程序不支持 less 语法 解决方法： 1、在 vscode 商店中安装 easy less 插件 2、配置 vscode 配置文件（-- settings.json）  "less.compile": {        "outext": ".wxss" // 将 less 转换为 wxss 格式   }',charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"内置组件",frontmatter:{title:"内置组件",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/eaa6ce/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/11.%E5%86%85%E7%BD%AE%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/11.内置组件.md",key:"v-36efd7c2",path:"/pages/eaa6ce/",headersStr:null,content:'文档：https://developers.weixin.qq.com/miniprogram/dev/component/\n\n标签取代：\n\n  （1）view 取代 div\n\n  （2）text 取代 span\n\n  （3）image 取代 img\n\n  （4）navigator 取代 a\n\nview\n  作用：相当于 <div> 标签\n  属性：\n    hover-class  // 按下去的样式类\n    hover-stop-propagation  // 是否阻止事件冒泡\n\n  <view>我是块级元素</view>\n  <view>我是块级元素</view>\n\ntext \n  作用：文本组件。相当于 <span> 标签\n  特性：\n    1、可以对 空格 回车 进行编码\n  属性：\n    selectable：允许长按文字复制（只有该标签拥有这个功能）\n    decode：是否解码 \n\n  <text selectable>我是行内元素</text>\n  <text decode>&nbsp</text>\n\nrich-text\n  作用：富文本组件。相当于 <span> 标签\n\n  特性：\n    1、支持把 HTML 字符串渲染为 WXML 结构\n\n  属性：\n    nodes：指定 HTML 字符串\n  \n  例：\n    <rich-text nodes="<h1 style=\'color:red;\'>标题</h1>"></rich-text>\n\nimage\n  作用：图片容器\n  特性：\n    1、图片大小不能超过 2M\n    2、小程序中的图片统一上传到图床中使用  推荐图床：https://imgtu.com/\n    3、image 组件的默认 宽度：320px 高度：240px，在 image 中设置的宽高不是图片的宽高，而是 image 组件的宽高，图片的宽高只能使用 mode 控制\n  属性：\n    mode：缩放/裁剪 模式\n      缩放：\n        - scaleToFill（默认）：不保持纵横比，宽高 拉伸至填满容器的 宽高\n        - aspectFit：保持纵横比，拉伸至填满容器的 宽 或 高\n        - aspectFill：保持纵横比，拉伸至填满容器的 宽 或 高，并居中\n        - widthFix：\b高 根据 宽 等比例缩放，相对于只设置了宽，高等比例缩放\n        - heightFix：\b宽 根据 高 等比例缩放，相对于只设置了高，宽等比例缩放\n      裁剪：\n        - top：居中顶部对齐\n        - button：居中底部对齐\n        - left：居中左对齐\n        - right：居中右对齐\n        - center：居中对齐\n        - top left：左上\n        - top right：右上\n        - bottom left：左下\n        - bottom right：右下\n\n    lazy-load：开启懒加载（小程序中自带懒加载，只需开启即可）\n\n  // 语法：<image src="图床中的图片地址" />\n  <image mode="aspectFit" lazy-load src="https://tva2.sinaimg.cn/large/007DFXDhgy1g51jlzfb4lj305k02s0sp.jpg" />\n\nswiper\n  作用：轮播图\n  特性：\n    1、高度无法由内容撑开，所以要设置高度  高度 = 宽度 * 图片高度 / 图片宽度\n  属性：\n    1、autoplay：自动轮播\n    2、interval：自动轮播间隔时间（默认 5s 轮播一次）\n    3、circular：衔接轮播\n    4、indicator-dots：指示器\n    5、indicator-color：指示器 未选中 状态颜色\n    6、indicator-active-color：指示器 已选中 状态颜色\n\n  使用步骤：\n    （1）导入结构\n      <swiper autoplay interval="3000" circular indicator-dots>\n        <swiper-item wx:for="{{swiperList}}" wx:key="id">\n          <image mode="widthFix" src="{{item.picUrl}}" />\n        </swiper-item>\n      </swiper>\n\n    （2）定义样式\n      swiper {\n        // swiper 高度 = swiper 宽度 * 原图高度 / 原图宽度\n        height: calc(750rpx * 352 / 1125);\n        image {\n          width: 100%;\n          height: 100%;\n        }\n      }\n\nnavigator\n  作用：类似 a 标签\n  特性：\n    1、块级元素\n    2、取代 a 标签\n  属性：\n    target：\n      self：跳转到自己小程序（默认）\n      miniProgram：跳转到其他小程序\n\n    url：跳转的页面路径\n\n    open-type：跳转方式\n      navigate（默认）：跳转到应用内的某个页面，但是不能跳转到 tabbar 配置项中的页面，保留当前页面（跳转后 显示 后退箭头）\n      redirect：       跳转到应用内的某个页面，但是不能跳转到 tabbar 配置项中的页面，不保留当前页面（跳转后 不显示 后退箭头）\n      switchTab：跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面\n      reLaunch：关闭所有页面，打开应用内的某个页面\n      navigateBack：关闭当前页面，返回上一页面或多级页面\n      exit：退出其他小程序 结合 target="minProgram" 使用\n\n  作用：\n      <navigator url="/pages/index.index">跳转到首页</navigator>  // 无法跳转到 tabbar 页面，即使点击了也不会生效\n      <navigator open-type="redirect" url="/pages/demo10.demo10">跳转到其他页面</navigator>\n      <navigator open-type="switchTab" url="/pages/index.index">跳转到首页</navigator>\n      <navigator open-type="reLaunch" url="/pages/index.index">随便跳</navigator>\n\nrich-text\n  作用：解析 HTML 标签，类似 v-html\n\n  数据格式：\n    （1）字符串（推荐）\n      html: \'<div width="200px" height="100px" backgroundColor="pink"></div>\n\n    （2）对象数组\n      html: [\n        {\n          name: "div",  // 指定标签\n          attrs: {      // 标签上的属性\n            width: "200px",\n            height: "100px",\n            backgroundColor: "pink"\n          },\n          children: [  // 子节点\n            {\n              name: "p"\n              attrs: {},\n              children: [\n                {\n                  type: "text",  // 文本\n                  text: "hello"  // 内容\n                }\n              ]\n            }\n          ]\n        }\n      ]\n  \n  例：\n    <rich-text nodes="{{html}}"></rich-text>\n\nbutton\n  作用：按钮\n  属性：\n    提示：以下样式只是小程序提供的，更推荐自己定义样式\n\n    size：按钮大小\n      - default：默认大小\n      - mini：小尺寸\n    type：按钮颜色\n      - primary：绿色\n      - warn：红色\n    plain：按钮是否镂空，背景色透明\n    \n    loading：名称前是否带 loading 图标\n    open-type：打开类型（请在真机中调试。微信开发者工具 → 预览 → 微信扫码）\n      - contact：客服对话\n        使用步骤：\n          1、将小程序 AppID 由测试号改为自己的 AppID（在小程序开发工具中的 详情栏中修改）\n          2、在微信小程序官网添加客服微信账号（功能 → 客服 → 添加）\n      - share：转发小程序到微信朋友中，不能分享到朋友圈里\n      - getPhoneNumber：获取当前用户的手机号码（特性：不是企业微信小程序，则没有获取权限）\n        使用步骤：\n          1、绑定 bindgetphonenumber="getPhoneNumber" 属性\n          2、配置 getPhoneNumber 方法\n          3、获取手机号码（这手机号码是加密的，需要用户自己搭建小程序的后台服务器，在后台服务器中进行解析手机号码，返回到小程序中，就可以看到手机号码了）\n      - getUserInfo：获取当前用户的个人信息\n        使用步骤：\n          1、绑定 bindgetphonenumber="getUserInfo" 属性\n          2、配置 getUserInfo 方法\n          3、获取个人信息（个人信息存储在 detail → userInfo 对象中）\n      - launchApp：在小程序中直接打开 APP。如在 京东小程序中 打开 京东APP\n        使用步骤：\n          1、需要在 app 中通过 app 的某个链接打开小程序\n          2、在小程序中再通过这个功能重新打开 app\n      - openSetting：小程序内置授权页面（该页面只会显示用户授权过的信息）\n      - feedback：小程序内置意见反馈页面\n\n      Page({\n        getPhoneNumber(e) {\n          console.log(e)\n        }\n        getUserInfo(e) {\n          e.detail.userInfo             // 用户信息对象\n          e.detail.userInfo.avatarUrl   // 用户头像\n          e.detail.userInfo.city        // 所在城市\n          e.detail.userInfo.country     // 所在国家\n          e.detail.userInfo.gender      // 性别（1：男）\n          e.detail.userInfo.language    // 语言\n          e.detail.userInfo.nickName    // 昵称\n          e.detail.userInfo.province    // 省份\n        }\n      })\n\n      <button open-type="contact">contact</button>\n      <button open-type="share">share</button>\n      <button open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber">getPhoneNumber</button>\n      <button open-type="getUserInfo" bindgetuserinfo="getUserInfo">getUserInfo</button>\n      <button open-type="launchApp">launchApp</button>\n      <button open-type="openSetting">openSetting</button>\n      <button open-type="feedback">feedback</button>\n\nicon\n  作用：字体图标\n\n  属性：\n    type：状态（文档：https://developers.weixin.qq.com/miniprogram/dev/component/icon.html）\n    size：大小（默认 23px）\n    color：颜色\n\n  例：\n    <icon type="success" size="23" color=""></icon>\n\nradio\n  作用：单选框\n\n  特性：必须放在 radio-group 里面\n\n  属性：\n    color：颜色\n\n  语法：\n    （1）e.detail.value：获取单选框中的值\n    （2）bindchange 事件：单选框选中时触发\n  \n  使用步骤：\n    （1）导入结构\n      <radio-group bindchange="handleChange">\n        <radio value="male">男</radio>\n        <radio value="female">女</radio>\n      </radio-group>\n\n    （2）定义 数据、方法\n      Page({\n        data: {\n          gender: ""\n        },\n        handleChange(e) {\n          let gender = e.detail.value;\n          this.setData({\n            gender\n          })\n        }\n      })\n\ncheckbox\n  作用：复选框\n\n  特性：必须放在 checkbox-group 里面\n\n  语法：\n    （1）e.detail.value：获取单选框中的值\n\n  使用步骤：\n    功能：将勾选的表单显示在盒子中\n\n    （1）导入结构\n      <view>\n        <checkbox-group bindchange="handleItemChange"> \n          <checkbox value="{{item.value}}" wx:for="{{list}}" wx:key="id">\n            {{item.name}}\n          </checkbox>\n        </checkbox-group>\n        <view>\n          选中的水果：{{checkedList}}\n        </view>\n      </view>\n\n    （2）定义 数据、方法\n      Page({\n        data: {\n          list: [\n            {\n              id: 0,\n              name: "苹果",\n              value: "apple"\n            },\n            {\n              id: 1,\n              name: "葡萄",\n              value: "grape"\n            },\n            {\n              id: 2,\n              name: "香蕉",\n              value: "bananer"\n            }\n          ]\n        },\n        handleItemChange(e) {\n          const checkedList = e.detail.value;\n          this.setData({\n            checkedList\n          })\n        }\n      })\n\nscroll-view\n  作用：滑动视图容器\n\n  属性：\n    scroll-y：允许纵向滚动（特性：1、scroll-view 必须要有高度才能生效 2、内容要超过 scroll-view 的高度）\n    scroll-x：允许横向滚动（特性：1、scroll-view 必须要有宽度才能生效 2、内容要超过 scroll-view 的宽度）\n\n  说明：\n    常配合 uni.getSystemInfoSync() 接口使用\n\n  特性：\n    （1）flex 布局无效\n      解决方法：在 scroll-view 子级创建一个 view，将内容写在里面\n\n  使用步骤：\n    （1）导入骨架\n      <scroll-view scroll-y="true" :style="{height: wh + \'px\'}"></scroll-view>\n\n    （2）获取屏幕设备可用高度\n      // 当前设备可用高度\n      wh: 0\n\n      onLoad() {\n        const sysInfo = uni.getSystemInfoSync()\n        this.wh = sysInfo.windowHeight\n      }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n',normalizedContent:'文档：https://developers.weixin.qq.com/miniprogram/dev/component/\n\n标签取代：\n\n  （1）view 取代 div\n\n  （2）text 取代 span\n\n  （3）image 取代 img\n\n  （4）navigator 取代 a\n\nview\n  作用：相当于 <div> 标签\n  属性：\n    hover-class  // 按下去的样式类\n    hover-stop-propagation  // 是否阻止事件冒泡\n\n  <view>我是块级元素</view>\n  <view>我是块级元素</view>\n\ntext \n  作用：文本组件。相当于 <span> 标签\n  特性：\n    1、可以对 空格 回车 进行编码\n  属性：\n    selectable：允许长按文字复制（只有该标签拥有这个功能）\n    decode：是否解码 \n\n  <text selectable>我是行内元素</text>\n  <text decode>&nbsp</text>\n\nrich-text\n  作用：富文本组件。相当于 <span> 标签\n\n  特性：\n    1、支持把 html 字符串渲染为 wxml 结构\n\n  属性：\n    nodes：指定 html 字符串\n  \n  例：\n    <rich-text nodes="<h1 style=\'color:red;\'>标题</h1>"></rich-text>\n\nimage\n  作用：图片容器\n  特性：\n    1、图片大小不能超过 2m\n    2、小程序中的图片统一上传到图床中使用  推荐图床：https://imgtu.com/\n    3、image 组件的默认 宽度：320px 高度：240px，在 image 中设置的宽高不是图片的宽高，而是 image 组件的宽高，图片的宽高只能使用 mode 控制\n  属性：\n    mode：缩放/裁剪 模式\n      缩放：\n        - scaletofill（默认）：不保持纵横比，宽高 拉伸至填满容器的 宽高\n        - aspectfit：保持纵横比，拉伸至填满容器的 宽 或 高\n        - aspectfill：保持纵横比，拉伸至填满容器的 宽 或 高，并居中\n        - widthfix：\b高 根据 宽 等比例缩放，相对于只设置了宽，高等比例缩放\n        - heightfix：\b宽 根据 高 等比例缩放，相对于只设置了高，宽等比例缩放\n      裁剪：\n        - top：居中顶部对齐\n        - button：居中底部对齐\n        - left：居中左对齐\n        - right：居中右对齐\n        - center：居中对齐\n        - top left：左上\n        - top right：右上\n        - bottom left：左下\n        - bottom right：右下\n\n    lazy-load：开启懒加载（小程序中自带懒加载，只需开启即可）\n\n  // 语法：<image src="图床中的图片地址" />\n  <image mode="aspectfit" lazy-load src="https://tva2.sinaimg.cn/large/007dfxdhgy1g51jlzfb4lj305k02s0sp.jpg" />\n\nswiper\n  作用：轮播图\n  特性：\n    1、高度无法由内容撑开，所以要设置高度  高度 = 宽度 * 图片高度 / 图片宽度\n  属性：\n    1、autoplay：自动轮播\n    2、interval：自动轮播间隔时间（默认 5s 轮播一次）\n    3、circular：衔接轮播\n    4、indicator-dots：指示器\n    5、indicator-color：指示器 未选中 状态颜色\n    6、indicator-active-color：指示器 已选中 状态颜色\n\n  使用步骤：\n    （1）导入结构\n      <swiper autoplay interval="3000" circular indicator-dots>\n        <swiper-item wx:for="{{swiperlist}}" wx:key="id">\n          <image mode="widthfix" src="{{item.picurl}}" />\n        </swiper-item>\n      </swiper>\n\n    （2）定义样式\n      swiper {\n        // swiper 高度 = swiper 宽度 * 原图高度 / 原图宽度\n        height: calc(750rpx * 352 / 1125);\n        image {\n          width: 100%;\n          height: 100%;\n        }\n      }\n\nnavigator\n  作用：类似 a 标签\n  特性：\n    1、块级元素\n    2、取代 a 标签\n  属性：\n    target：\n      self：跳转到自己小程序（默认）\n      miniprogram：跳转到其他小程序\n\n    url：跳转的页面路径\n\n    open-type：跳转方式\n      navigate（默认）：跳转到应用内的某个页面，但是不能跳转到 tabbar 配置项中的页面，保留当前页面（跳转后 显示 后退箭头）\n      redirect：       跳转到应用内的某个页面，但是不能跳转到 tabbar 配置项中的页面，不保留当前页面（跳转后 不显示 后退箭头）\n      switchtab：跳转到 tabbar 页面，并关闭其他所有非 tabbar 页面\n      relaunch：关闭所有页面，打开应用内的某个页面\n      navigateback：关闭当前页面，返回上一页面或多级页面\n      exit：退出其他小程序 结合 target="minprogram" 使用\n\n  作用：\n      <navigator url="/pages/index.index">跳转到首页</navigator>  // 无法跳转到 tabbar 页面，即使点击了也不会生效\n      <navigator open-type="redirect" url="/pages/demo10.demo10">跳转到其他页面</navigator>\n      <navigator open-type="switchtab" url="/pages/index.index">跳转到首页</navigator>\n      <navigator open-type="relaunch" url="/pages/index.index">随便跳</navigator>\n\nrich-text\n  作用：解析 html 标签，类似 v-html\n\n  数据格式：\n    （1）字符串（推荐）\n      html: \'<div width="200px" height="100px" backgroundcolor="pink"></div>\n\n    （2）对象数组\n      html: [\n        {\n          name: "div",  // 指定标签\n          attrs: {      // 标签上的属性\n            width: "200px",\n            height: "100px",\n            backgroundcolor: "pink"\n          },\n          children: [  // 子节点\n            {\n              name: "p"\n              attrs: {},\n              children: [\n                {\n                  type: "text",  // 文本\n                  text: "hello"  // 内容\n                }\n              ]\n            }\n          ]\n        }\n      ]\n  \n  例：\n    <rich-text nodes="{{html}}"></rich-text>\n\nbutton\n  作用：按钮\n  属性：\n    提示：以下样式只是小程序提供的，更推荐自己定义样式\n\n    size：按钮大小\n      - default：默认大小\n      - mini：小尺寸\n    type：按钮颜色\n      - primary：绿色\n      - warn：红色\n    plain：按钮是否镂空，背景色透明\n    \n    loading：名称前是否带 loading 图标\n    open-type：打开类型（请在真机中调试。微信开发者工具 → 预览 → 微信扫码）\n      - contact：客服对话\n        使用步骤：\n          1、将小程序 appid 由测试号改为自己的 appid（在小程序开发工具中的 详情栏中修改）\n          2、在微信小程序官网添加客服微信账号（功能 → 客服 → 添加）\n      - share：转发小程序到微信朋友中，不能分享到朋友圈里\n      - getphonenumber：获取当前用户的手机号码（特性：不是企业微信小程序，则没有获取权限）\n        使用步骤：\n          1、绑定 bindgetphonenumber="getphonenumber" 属性\n          2、配置 getphonenumber 方法\n          3、获取手机号码（这手机号码是加密的，需要用户自己搭建小程序的后台服务器，在后台服务器中进行解析手机号码，返回到小程序中，就可以看到手机号码了）\n      - getuserinfo：获取当前用户的个人信息\n        使用步骤：\n          1、绑定 bindgetphonenumber="getuserinfo" 属性\n          2、配置 getuserinfo 方法\n          3、获取个人信息（个人信息存储在 detail → userinfo 对象中）\n      - launchapp：在小程序中直接打开 app。如在 京东小程序中 打开 京东app\n        使用步骤：\n          1、需要在 app 中通过 app 的某个链接打开小程序\n          2、在小程序中再通过这个功能重新打开 app\n      - opensetting：小程序内置授权页面（该页面只会显示用户授权过的信息）\n      - feedback：小程序内置意见反馈页面\n\n      page({\n        getphonenumber(e) {\n          console.log(e)\n        }\n        getuserinfo(e) {\n          e.detail.userinfo             // 用户信息对象\n          e.detail.userinfo.avatarurl   // 用户头像\n          e.detail.userinfo.city        // 所在城市\n          e.detail.userinfo.country     // 所在国家\n          e.detail.userinfo.gender      // 性别（1：男）\n          e.detail.userinfo.language    // 语言\n          e.detail.userinfo.nickname    // 昵称\n          e.detail.userinfo.province    // 省份\n        }\n      })\n\n      <button open-type="contact">contact</button>\n      <button open-type="share">share</button>\n      <button open-type="getphonenumber" bindgetphonenumber="getphonenumber">getphonenumber</button>\n      <button open-type="getuserinfo" bindgetuserinfo="getuserinfo">getuserinfo</button>\n      <button open-type="launchapp">launchapp</button>\n      <button open-type="opensetting">opensetting</button>\n      <button open-type="feedback">feedback</button>\n\nicon\n  作用：字体图标\n\n  属性：\n    type：状态（文档：https://developers.weixin.qq.com/miniprogram/dev/component/icon.html）\n    size：大小（默认 23px）\n    color：颜色\n\n  例：\n    <icon type="success" size="23" color=""></icon>\n\nradio\n  作用：单选框\n\n  特性：必须放在 radio-group 里面\n\n  属性：\n    color：颜色\n\n  语法：\n    （1）e.detail.value：获取单选框中的值\n    （2）bindchange 事件：单选框选中时触发\n  \n  使用步骤：\n    （1）导入结构\n      <radio-group bindchange="handlechange">\n        <radio value="male">男</radio>\n        <radio value="female">女</radio>\n      </radio-group>\n\n    （2）定义 数据、方法\n      page({\n        data: {\n          gender: ""\n        },\n        handlechange(e) {\n          let gender = e.detail.value;\n          this.setdata({\n            gender\n          })\n        }\n      })\n\ncheckbox\n  作用：复选框\n\n  特性：必须放在 checkbox-group 里面\n\n  语法：\n    （1）e.detail.value：获取单选框中的值\n\n  使用步骤：\n    功能：将勾选的表单显示在盒子中\n\n    （1）导入结构\n      <view>\n        <checkbox-group bindchange="handleitemchange"> \n          <checkbox value="{{item.value}}" wx:for="{{list}}" wx:key="id">\n            {{item.name}}\n          </checkbox>\n        </checkbox-group>\n        <view>\n          选中的水果：{{checkedlist}}\n        </view>\n      </view>\n\n    （2）定义 数据、方法\n      page({\n        data: {\n          list: [\n            {\n              id: 0,\n              name: "苹果",\n              value: "apple"\n            },\n            {\n              id: 1,\n              name: "葡萄",\n              value: "grape"\n            },\n            {\n              id: 2,\n              name: "香蕉",\n              value: "bananer"\n            }\n          ]\n        },\n        handleitemchange(e) {\n          const checkedlist = e.detail.value;\n          this.setdata({\n            checkedlist\n          })\n        }\n      })\n\nscroll-view\n  作用：滑动视图容器\n\n  属性：\n    scroll-y：允许纵向滚动（特性：1、scroll-view 必须要有高度才能生效 2、内容要超过 scroll-view 的高度）\n    scroll-x：允许横向滚动（特性：1、scroll-view 必须要有宽度才能生效 2、内容要超过 scroll-view 的宽度）\n\n  说明：\n    常配合 uni.getsysteminfosync() 接口使用\n\n  特性：\n    （1）flex 布局无效\n      解决方法：在 scroll-view 子级创建一个 view，将内容写在里面\n\n  使用步骤：\n    （1）导入骨架\n      <scroll-view scroll-y="true" :style="{height: wh + \'px\'}"></scroll-view>\n\n    （2）获取屏幕设备可用高度\n      // 当前设备可用高度\n      wh: 0\n\n      onload() {\n        const sysinfo = uni.getsysteminfosync()\n        this.wh = sysinfo.windowheight\n      }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据",frontmatter:{title:"自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/f5d4e9/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/12.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E3%80%81%E7%88%B6%E7%BB%84%E4%BB%B6%EF%BC%88%E9%A1%B5%E9%9D%A2%EF%BC%89%E5%90%91%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE%E3%80%81%E5%AD%90%E7%BB%84%E4%BB%B6%E5%90%91%E7%88%B6%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/12.自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据.md",key:"v-6a0481d6",path:"/pages/f5d4e9/",headersStr:null,content:'文档：https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/\n\n样式隔离\n  特性：\n    （1）默认情况下，自定义组件的样式只对当前组件生效\n\n    （2）app.wxss 中的全局样式对组件无效\n\n    （3）只有 class 选择器会有样式隔离效果，id 选择器、属性选择器、标签选择器 不受样式隔离\n\n  在外界控制组件内部的样式\n    参数\n      isolated：启动样式隔离（外界样式无法影响组件内部样式，组件内部样式也不会影响外界样式）\n\n      apply-shared：外界样式会影响组件内部样式，组件内部样式不会影响外界样式\n\n      shared：外界样式会影响组件内部样式，组件内部样式也会影响外界样式\n\n    方法一：styleIsolation（-- 组件.js）\n      例：\n        Component({\n          options: {\n            styleIsolation: \'isolated\'\n          }\n        })\n\n    方法二：styleIsolation（-- 组件.json）\n      "styleIsolation": "isolated"\n\n属性\n  methods 属性\n    作用：定义 事件处理函数、自定义方法\n    \n    例：\n      // 事件处理函数\n      addCount() {\n        this.setData({ count: this.data.count + 1 })\n        this._showCount()\n      },\n\n      // 自定义方法【推荐以 _ 开头】\n      _showCount() {\n        wx.showToast({\n          title: \'count 值为：\' + this.data.count,\n          icon: \'none\'\n        })\n      }\n\n      <button bindtap="addCount">+1</button>\n\n  properties 属性\n    区别\n      properties 属性是可读可写的（data 和 properties 指向的是同一个对象）\n\n      为 properties 属性中的数据重新赋值\n        例：\n          this.setDate({\n            num: this.properties.num + 1\n          })\n\n    提示：该属性的知识点和 Props 高级用法一样，请查看【知识点：props 高级用法】\n\n  observers 属性\n    作用：数据监听器。类似于 vue 中的 watch 侦听器。监听任何属性和数据的变化，从而执行特定的操作\n\n    例：【监听数据】sum 根据数据监听器自动计算\n      <view>{{n1}} + {{n2}} = {{sum}}</view>\n      <button size="mini" bindtap="addN1">n1自增</button>\n      <button size="mini" bindtap="addN2">n2自增</button>\n\n      data: {\n        n1: 0,\n        n2: 0,\n        sum: 0\n      },\n      methods: {\n        addN1() {\n          this.setData({\n            n1: this.data.n1 + 1\n          })\n        },\n        addN2() {\n          this.setData({\n            n2: this.data.n2 + 1\n          })\n        },\n      },\n      observers: {\n        // 语法：\'监听的数据, 监听的数据, ...\': function(获取监听数据发送变化的新值, 获取监听数据发送变化的新值, ...)\n\n        \'n1, n2\': function(newN1, newN2) {\n          this.setData({\n            sum: n1 + n2\n          })\n        }\n      }\n\n    例：【监听属性】\n      提示：如果要监听对象中的所有属性，可以使用 **，如 rgb.**\n\n      observers: {\n        \'rgb.r, rgb.g, rgb.b\': function(r, g, b) {\n          this.setData({\n            fullColor: `${r}, ${g}, ${b}`\n          })\n        }\n      }\n\n    纯数据字段\n      概念：纯数据字段指的是 data 中的数据既不会展示在界面上，也不会传递给其它组件，仅仅在当前组件内部使用，而这个数据就是纯数据字段\n\n      作用：提高页面更新的性能\n\n      例：\n        // 以下的 fullColor 就是 纯数据字段，因为 没有 在界面上展示\n        <view style="background-color: rgb({{fullColor}});"></view>\n\n        // 以下的 fullColor 不是 纯数据字段，因为 在 界面上展示了\n        <view>{{fullColor}}</view>\n\n      使用步骤：\n        （1）定义规则\n          options: {\n            // 指定所有 _ 开头的数据字段为纯数据字段\n            pureDataPattern: /^_/\n          },\n\n        （2）在需要改造成纯数据字段的数据前面加上 _\n          data: {\n            a: true, // 普通数据字段\n\n            _b: true, // 纯数据字段\n          }\n\n插槽\n  详见【知识点：插槽】\n\n  区别\n    当使用多个插槽时需要进行配置\n      options: {\n        multipleSlots: true  // 允许使用多个插槽\n      }\n\n    在组件中填充内容时，不需要用 template 标签包裹，直接为标签添加 slot="插槽名" 即可\n    <Left>\n      <p slot="neirong">这是在 Left 组件的内容区域，定义的 p 标签</p>\n    </Left>\n\n父组件向子组件传递数据\n  父组件：\n    （1）通过 自定义属性 将数据传递给子组件\n      `<Tabs tabs="{{tabs}}">内容</Tabs>`\n  \n  子组件：\n    （2）通过 properties 接收父组件传递过来的数据\n      properties: {  // 接收父组件通过自定义属性传递给子组件的数据，这个数据可以直接在子组件中使用的，相当与 data 中的数据\n        tabs: {\n          type: Array  // 接收的数据类型\n          value: []  // 默认值\n        }\n      }\n\n    （3）将父组件传递过来的数据，转存到 data 中\n      handleItemChange() {\n          // 错误写法：let {tabs} = this.data;  // 不要直接使用 this.data.数据 修改 data 中的数据，因为该方法对复杂数据类型引用的是地址，修改值会影响原值\n          let tabs=JSON.parse(JSON.stringify(this.data.tabs));  // 深拷贝。不要直接修改 this.data.数据，应该先深拷贝，再进行修改\n      }\n\n父组件向子组件传递方法\n  ???\n\n获取组件的实例对象\n  作用：获取组件的中的数据和方法\n\n  语法：this.selectComponent("id 或 class 选择器")\n\n  例：\n    `<my-test3 count="{{count}}" bind:sync="syncCount" class="customA"></my-test3>`\n\n    getChild() {\n      const child = this.selectComponent(\'.customA\')\n\n      // 设置组件中的 data 数据\n      child.setData({\n        count: child.properties.count + 1\n      })\n\n      // 调用组件中的自定义事件\n      this.triggerEvent(\'sync\', { value: this.properties.count })\n\n    }\n\n子组件向父组件传递数据和方法\n  父组件：\n    （1）通过 自定义事件，调用获取子组件数据的方法\n      `<Tabs bind:sync="handleItemChange">内容</Tabs>`\n\n    （2）通过 方法中的 e.detail 接收子组件传递过来的数据，并转存到 data 中\n      handleItemChange(e) {\n        const {index} = e.detail;  // 接收子组件传递过来的数据\n      }\n\n  子组件：\n    （3）调用 自定义事件，将子组件的数据传递给父组件\n      语法：this.triggerEvent("自定义事件名", {传递的数据})\n\n      this.triggerEvent("numchange", {index});\n\nbehaviors\n  文档：https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/behaviors.html\n\n  作用：实现组件间代码共享，类似于 vue 中的 mixins\n\n  工作方式：每个 behavior 可以共享一组属性、数据、生命周期函数和方法。组件引用它时，它的属性、数据和方法会被合并到组件中\n\n  节点\n    properties：属性\n\n    data：数据\n\n    methods：方法\n\n    behaviors：引入其它的 behavior\n\n    created：组件生命周期函数\n\n    attached：组件生命周期函数\n\n    ready：组件生命周期函数\n\n    moved：组件生命周期函数\n\n    detached：组件生命周期函数\n\n  同名字段覆盖\n    （1）同名 data 数据字段\n      - 若同名的 data 数据字段都是对象类型，会进行对象合并\n      - 其余情况进行数据覆盖。覆盖规则为： 组件 > 父 behavior > 子 behavior\n\n  使用步骤：\n    （1）调用 Behavior 方法，创建实例对象，并共享出去（-- 根目录/新建 behaviors/my-behavior.js）\n      module.exports = Behavior({\n\n        // 私有数据节点\n        data: { \n          username: \'zs\'\n        },\n\n        // 属性节点\n        properties: {},\n        \n        // 事件处理函数和自定义方法节点\n        methods: {}\n      })\n\n    （2）导入 Behavior（-- 组件.js)\n      const myBehavior = require("../../behaviors/my-behavior")\n\n    （3）挂载到 behaviors 数组节点中（-- 同上)\n      Component({\n        behaviors: [myBehavior]\n      })\n\n    （4）使用（-- 同上)\n      <view>{{username}}</view>\n\n自定义组件\n  使用步骤：\n  （1）搭建组件目录\n    创建用于存放组件的目录：根目录/新建 components/新建 组件目录\n    快速创建并搭建组件文件：wxapp-helper（VSCode插件）\n\n    例：\n      项目根目录\n        components\n          Tabs\n            Tabs.js\n            Tabs.json\n            Tabs.wxml\n            Tabs.wxss\n\n  （2）搭建 页面 html 结构（-- Tabs.wxml）\n    `<view class="tabs">`\n\n      <view class="tabs_title">\n      \n        /*  这些地方将来会复用，所以不能写死\n          <view class="tabs_title">\n            <view class="title_itme">首页</view>\n            <view class="title_itme">原创</view>\n            <view class="title_itme">分类</view>\n            <view class="title_itme">关于</view>\n          </view>\n        */\n\n        <view \n        wx:for="{{tabs}}" \n        wx:key="id" \n        class="title_item {{item.isActive?\'active\':\'\' \n        bindtap="hanldeItemTap" \n        data-index="{{index}}">  // 传递索引\n          {{item.name}}\n        </view>\n\n      </view>\n\n      <view class="tabs_content">\n        <slow></slow>  // 占位符、插槽\n      </view>\n\n    </view>\n\n  （3）搭建 页面 css 样式（-- Tabs.wxss）\n    .tabs {}\n    .tabs_title {\n      display: flex;\n      padding: 10px 0;\n    }\n    .title_itme {\n      flex: 1;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    .active {\n      color: red;\n      border-bottom: 5px solid currentColor;\n    }\n    .tabs_cotent {}\n\n  （）在要使用该组件的页面中的页面配置文件中声明组件\n    "usingComponents": { \n      "Tabs": "../../components/Tabs/Tabs"\n    }\n\n  （4）搭建 页面 js 行为（-- Tabs.js）\n    特性：\n      1、页面 .js 文件中的事件回调函数存放在 data 同层级下\n      2、组件 .js 文件中的事件回调函数存放在 methods 里\n\n    properties: {\n      tabs: {\n        type: Array  // 接收的数据类型\n        value: []  // 默认值\n      }\n    }\n    data: {\n      \n    },\n    methods: {\n      hanldeItemTap() {\n        const {index} = e.currentTarget.dataset;  // 获取索引\n        this.triggerEvent("itemChange", {index});\n      }\n    }\n\n  （5）引入组件\n    局部引入（-- pages/demon/demon.json）\n      {\n        // 引入组件\n        "usingComponents": {\n          "Tabs": "../../components/Tabs/Tabs"\n        }\n      }\n    \n    全局引入（-- app.json)\n      {\n        // 引入组件\n        "usingComponents": {\n          "Tabs": "../../components/Tabs/Tabs"\n        }\n      }\n\n  （6）使用组件（-- demon.wxml）\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n\n\n内容\n\n\n```\n\n（7）父组件配置复用的地方（-- demon.js） data: { tabs:[ { id:0, name:"首页", isActive:true }, { id:1, name:"原创", isActive:true }, { id:2, name:"分类", isActive:true }, { id:3, name:"关于", isActive:true } ] }, handleItemChange(e) { const {index} = e.detail;\n\n  let tabs=JSON.parse(JSON.stringify(this.data.tabs));\n\n  tabs.forEach(v, i) =>i === index ? v.isActive = true : v.isActive = false;  // 遍历数组，特性：遍历数组的时候修改了 v，也会导致原数组被修改\n  this.setData({\n    tabs\n  })\n}\n\n\n（8）使用插槽，将不确定的地方，交由用户自定义\n\n<Tabs tabs="{{tabs}}" binditemChange="handleItemChange">\n  <block wx:if="{{tabs[0].isActive}}">0</block>\n  <block wx:elif="{{tabs[1].isActive}}">1</block>\n  <block wx:elif="{{tabs[2].isActive}}">2</block>\n  <block wx:else">3</block>\n</Tabs>\n\n\n1\n2\n3\n4\n5\n6\n\n\n',normalizedContent:'文档：https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/\n\n样式隔离\n  特性：\n    （1）默认情况下，自定义组件的样式只对当前组件生效\n\n    （2）app.wxss 中的全局样式对组件无效\n\n    （3）只有 class 选择器会有样式隔离效果，id 选择器、属性选择器、标签选择器 不受样式隔离\n\n  在外界控制组件内部的样式\n    参数\n      isolated：启动样式隔离（外界样式无法影响组件内部样式，组件内部样式也不会影响外界样式）\n\n      apply-shared：外界样式会影响组件内部样式，组件内部样式不会影响外界样式\n\n      shared：外界样式会影响组件内部样式，组件内部样式也会影响外界样式\n\n    方法一：styleisolation（-- 组件.js）\n      例：\n        component({\n          options: {\n            styleisolation: \'isolated\'\n          }\n        })\n\n    方法二：styleisolation（-- 组件.json）\n      "styleisolation": "isolated"\n\n属性\n  methods 属性\n    作用：定义 事件处理函数、自定义方法\n    \n    例：\n      // 事件处理函数\n      addcount() {\n        this.setdata({ count: this.data.count + 1 })\n        this._showcount()\n      },\n\n      // 自定义方法【推荐以 _ 开头】\n      _showcount() {\n        wx.showtoast({\n          title: \'count 值为：\' + this.data.count,\n          icon: \'none\'\n        })\n      }\n\n      <button bindtap="addcount">+1</button>\n\n  properties 属性\n    区别\n      properties 属性是可读可写的（data 和 properties 指向的是同一个对象）\n\n      为 properties 属性中的数据重新赋值\n        例：\n          this.setdate({\n            num: this.properties.num + 1\n          })\n\n    提示：该属性的知识点和 props 高级用法一样，请查看【知识点：props 高级用法】\n\n  observers 属性\n    作用：数据监听器。类似于 vue 中的 watch 侦听器。监听任何属性和数据的变化，从而执行特定的操作\n\n    例：【监听数据】sum 根据数据监听器自动计算\n      <view>{{n1}} + {{n2}} = {{sum}}</view>\n      <button size="mini" bindtap="addn1">n1自增</button>\n      <button size="mini" bindtap="addn2">n2自增</button>\n\n      data: {\n        n1: 0,\n        n2: 0,\n        sum: 0\n      },\n      methods: {\n        addn1() {\n          this.setdata({\n            n1: this.data.n1 + 1\n          })\n        },\n        addn2() {\n          this.setdata({\n            n2: this.data.n2 + 1\n          })\n        },\n      },\n      observers: {\n        // 语法：\'监听的数据, 监听的数据, ...\': function(获取监听数据发送变化的新值, 获取监听数据发送变化的新值, ...)\n\n        \'n1, n2\': function(newn1, newn2) {\n          this.setdata({\n            sum: n1 + n2\n          })\n        }\n      }\n\n    例：【监听属性】\n      提示：如果要监听对象中的所有属性，可以使用 **，如 rgb.**\n\n      observers: {\n        \'rgb.r, rgb.g, rgb.b\': function(r, g, b) {\n          this.setdata({\n            fullcolor: `${r}, ${g}, ${b}`\n          })\n        }\n      }\n\n    纯数据字段\n      概念：纯数据字段指的是 data 中的数据既不会展示在界面上，也不会传递给其它组件，仅仅在当前组件内部使用，而这个数据就是纯数据字段\n\n      作用：提高页面更新的性能\n\n      例：\n        // 以下的 fullcolor 就是 纯数据字段，因为 没有 在界面上展示\n        <view style="background-color: rgb({{fullcolor}});"></view>\n\n        // 以下的 fullcolor 不是 纯数据字段，因为 在 界面上展示了\n        <view>{{fullcolor}}</view>\n\n      使用步骤：\n        （1）定义规则\n          options: {\n            // 指定所有 _ 开头的数据字段为纯数据字段\n            puredatapattern: /^_/\n          },\n\n        （2）在需要改造成纯数据字段的数据前面加上 _\n          data: {\n            a: true, // 普通数据字段\n\n            _b: true, // 纯数据字段\n          }\n\n插槽\n  详见【知识点：插槽】\n\n  区别\n    当使用多个插槽时需要进行配置\n      options: {\n        multipleslots: true  // 允许使用多个插槽\n      }\n\n    在组件中填充内容时，不需要用 template 标签包裹，直接为标签添加 slot="插槽名" 即可\n    <left>\n      <p slot="neirong">这是在 left 组件的内容区域，定义的 p 标签</p>\n    </left>\n\n父组件向子组件传递数据\n  父组件：\n    （1）通过 自定义属性 将数据传递给子组件\n      `<tabs tabs="{{tabs}}">内容</tabs>`\n  \n  子组件：\n    （2）通过 properties 接收父组件传递过来的数据\n      properties: {  // 接收父组件通过自定义属性传递给子组件的数据，这个数据可以直接在子组件中使用的，相当与 data 中的数据\n        tabs: {\n          type: array  // 接收的数据类型\n          value: []  // 默认值\n        }\n      }\n\n    （3）将父组件传递过来的数据，转存到 data 中\n      handleitemchange() {\n          // 错误写法：let {tabs} = this.data;  // 不要直接使用 this.data.数据 修改 data 中的数据，因为该方法对复杂数据类型引用的是地址，修改值会影响原值\n          let tabs=json.parse(json.stringify(this.data.tabs));  // 深拷贝。不要直接修改 this.data.数据，应该先深拷贝，再进行修改\n      }\n\n父组件向子组件传递方法\n  ???\n\n获取组件的实例对象\n  作用：获取组件的中的数据和方法\n\n  语法：this.selectcomponent("id 或 class 选择器")\n\n  例：\n    `<my-test3 count="{{count}}" bind:sync="synccount" class="customa"></my-test3>`\n\n    getchild() {\n      const child = this.selectcomponent(\'.customa\')\n\n      // 设置组件中的 data 数据\n      child.setdata({\n        count: child.properties.count + 1\n      })\n\n      // 调用组件中的自定义事件\n      this.triggerevent(\'sync\', { value: this.properties.count })\n\n    }\n\n子组件向父组件传递数据和方法\n  父组件：\n    （1）通过 自定义事件，调用获取子组件数据的方法\n      `<tabs bind:sync="handleitemchange">内容</tabs>`\n\n    （2）通过 方法中的 e.detail 接收子组件传递过来的数据，并转存到 data 中\n      handleitemchange(e) {\n        const {index} = e.detail;  // 接收子组件传递过来的数据\n      }\n\n  子组件：\n    （3）调用 自定义事件，将子组件的数据传递给父组件\n      语法：this.triggerevent("自定义事件名", {传递的数据})\n\n      this.triggerevent("numchange", {index});\n\nbehaviors\n  文档：https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/behaviors.html\n\n  作用：实现组件间代码共享，类似于 vue 中的 mixins\n\n  工作方式：每个 behavior 可以共享一组属性、数据、生命周期函数和方法。组件引用它时，它的属性、数据和方法会被合并到组件中\n\n  节点\n    properties：属性\n\n    data：数据\n\n    methods：方法\n\n    behaviors：引入其它的 behavior\n\n    created：组件生命周期函数\n\n    attached：组件生命周期函数\n\n    ready：组件生命周期函数\n\n    moved：组件生命周期函数\n\n    detached：组件生命周期函数\n\n  同名字段覆盖\n    （1）同名 data 数据字段\n      - 若同名的 data 数据字段都是对象类型，会进行对象合并\n      - 其余情况进行数据覆盖。覆盖规则为： 组件 > 父 behavior > 子 behavior\n\n  使用步骤：\n    （1）调用 behavior 方法，创建实例对象，并共享出去（-- 根目录/新建 behaviors/my-behavior.js）\n      module.exports = behavior({\n\n        // 私有数据节点\n        data: { \n          username: \'zs\'\n        },\n\n        // 属性节点\n        properties: {},\n        \n        // 事件处理函数和自定义方法节点\n        methods: {}\n      })\n\n    （2）导入 behavior（-- 组件.js)\n      const mybehavior = require("../../behaviors/my-behavior")\n\n    （3）挂载到 behaviors 数组节点中（-- 同上)\n      component({\n        behaviors: [mybehavior]\n      })\n\n    （4）使用（-- 同上)\n      <view>{{username}}</view>\n\n自定义组件\n  使用步骤：\n  （1）搭建组件目录\n    创建用于存放组件的目录：根目录/新建 components/新建 组件目录\n    快速创建并搭建组件文件：wxapp-helper（vscode插件）\n\n    例：\n      项目根目录\n        components\n          tabs\n            tabs.js\n            tabs.json\n            tabs.wxml\n            tabs.wxss\n\n  （2）搭建 页面 html 结构（-- tabs.wxml）\n    `<view class="tabs">`\n\n      <view class="tabs_title">\n      \n        /*  这些地方将来会复用，所以不能写死\n          <view class="tabs_title">\n            <view class="title_itme">首页</view>\n            <view class="title_itme">原创</view>\n            <view class="title_itme">分类</view>\n            <view class="title_itme">关于</view>\n          </view>\n        */\n\n        <view \n        wx:for="{{tabs}}" \n        wx:key="id" \n        class="title_item {{item.isactive?\'active\':\'\' \n        bindtap="hanldeitemtap" \n        data-index="{{index}}">  // 传递索引\n          {{item.name}}\n        </view>\n\n      </view>\n\n      <view class="tabs_content">\n        <slow></slow>  // 占位符、插槽\n      </view>\n\n    </view>\n\n  （3）搭建 页面 css 样式（-- tabs.wxss）\n    .tabs {}\n    .tabs_title {\n      display: flex;\n      padding: 10px 0;\n    }\n    .title_itme {\n      flex: 1;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    .active {\n      color: red;\n      border-bottom: 5px solid currentcolor;\n    }\n    .tabs_cotent {}\n\n  （）在要使用该组件的页面中的页面配置文件中声明组件\n    "usingcomponents": { \n      "tabs": "../../components/tabs/tabs"\n    }\n\n  （4）搭建 页面 js 行为（-- tabs.js）\n    特性：\n      1、页面 .js 文件中的事件回调函数存放在 data 同层级下\n      2、组件 .js 文件中的事件回调函数存放在 methods 里\n\n    properties: {\n      tabs: {\n        type: array  // 接收的数据类型\n        value: []  // 默认值\n      }\n    }\n    data: {\n      \n    },\n    methods: {\n      hanldeitemtap() {\n        const {index} = e.currenttarget.dataset;  // 获取索引\n        this.triggerevent("itemchange", {index});\n      }\n    }\n\n  （5）引入组件\n    局部引入（-- pages/demon/demon.json）\n      {\n        // 引入组件\n        "usingcomponents": {\n          "tabs": "../../components/tabs/tabs"\n        }\n      }\n    \n    全局引入（-- app.json)\n      {\n        // 引入组件\n        "usingcomponents": {\n          "tabs": "../../components/tabs/tabs"\n        }\n      }\n\n  （6）使用组件（-- demon.wxml）\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n\n\n内容\n\n\n```\n\n（7）父组件配置复用的地方（-- demon.js） data: { tabs:[ { id:0, name:"首页", isactive:true }, { id:1, name:"原创", isactive:true }, { id:2, name:"分类", isactive:true }, { id:3, name:"关于", isactive:true } ] }, handleitemchange(e) { const {index} = e.detail;\n\n  let tabs=json.parse(json.stringify(this.data.tabs));\n\n  tabs.foreach(v, i) =>i === index ? v.isactive = true : v.isactive = false;  // 遍历数组，特性：遍历数组的时候修改了 v，也会导致原数组被修改\n  this.setdata({\n    tabs\n  })\n}\n\n\n（8）使用插槽，将不确定的地方，交由用户自定义\n\n<tabs tabs="{{tabs}}" binditemchange="handleitemchange">\n  <block wx:if="{{tabs[0].isactive}}">0</block>\n  <block wx:elif="{{tabs[1].isactive}}">1</block>\n  <block wx:elif="{{tabs[2].isactive}}">2</block>\n  <block wx:else">3</block>\n</tabs>\n\n\n1\n2\n3\n4\n5\n6\n\n\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"应用生命周期",frontmatter:{title:"应用生命周期",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ca30ce/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/13.%E5%BA%94%E7%94%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/13.应用生命周期.md",key:"v-3a0fdb6a",path:"/pages/ca30ce/",headersStr:null,content:'文档：https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html 文档：https://uniapp.dcloud.io/collocation/frame/lifecycle?id=%e5%ba%94%e7%94%a8%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f\n\n概念：小程序从 启动 → 运行 → 销毁 的过程\n\n生命周期函数（-- app.js）\n\nApp({\n\n（1）onLaunch\n  触发：应用第一次启动后\n  作用：获取数据\n  onLaunch() {\n    console.log("onLaunch");\n  },\n\n（2）onShow\n  触发：应用 显示 后。如 从其他页面、小程序 回到该页面\n  作用：重置数据和页面效果\n  onShow(){\n    console.log("onShow");\n  },\n\n（3）onHide\n  触发：应用 隐藏 后。如 切屏、打开其它小程序、离开应用\n  作用：暂停或清除定时器\n  onHide(){\n    console.log("Hide");\n  },\n\n（4）onError\n  触发：代码发生错误时\n  作用：在应用发生代码报错的时候，收集用户的错误信息，通过异步请求 将错误的信息发送后台去\n  onError(err){\n    console.log("onError");\n    console.log(err);\n  },\n\n（5）onPageNotFound\n  触发：页面找不到时。应用第一次启动的时候，如果找不到第一个入口页面 才会触发\n  作用：页面不存在时，重新跳转到新的页面，但是不能跳到 tabbar 页面和导航组件类似  \n  onPageNotFound(){\n    wx.navigateTo({  跳转页面\n      url: \'/pages/demo09/demo09\' \n    });  \n    console.log("onPageNotFound");\n  }\n\n\n})',normalizedContent:'文档：https://developers.weixin.qq.com/miniprogram/dev/reference/api/app.html 文档：https://uniapp.dcloud.io/collocation/frame/lifecycle?id=%e5%ba%94%e7%94%a8%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f\n\n概念：小程序从 启动 → 运行 → 销毁 的过程\n\n生命周期函数（-- app.js）\n\napp({\n\n（1）onlaunch\n  触发：应用第一次启动后\n  作用：获取数据\n  onlaunch() {\n    console.log("onlaunch");\n  },\n\n（2）onshow\n  触发：应用 显示 后。如 从其他页面、小程序 回到该页面\n  作用：重置数据和页面效果\n  onshow(){\n    console.log("onshow");\n  },\n\n（3）onhide\n  触发：应用 隐藏 后。如 切屏、打开其它小程序、离开应用\n  作用：暂停或清除定时器\n  onhide(){\n    console.log("hide");\n  },\n\n（4）onerror\n  触发：代码发生错误时\n  作用：在应用发生代码报错的时候，收集用户的错误信息，通过异步请求 将错误的信息发送后台去\n  onerror(err){\n    console.log("onerror");\n    console.log(err);\n  },\n\n（5）onpagenotfound\n  触发：页面找不到时。应用第一次启动的时候，如果找不到第一个入口页面 才会触发\n  作用：页面不存在时，重新跳转到新的页面，但是不能跳到 tabbar 页面和导航组件类似  \n  onpagenotfound(){\n    wx.navigateto({  跳转页面\n      url: \'/pages/demo09/demo09\' \n    });  \n    console.log("onpagenotfound");\n  }\n\n\n})',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"页面生命周期",frontmatter:{title:"页面生命周期",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/44b3cc/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/14.%E9%A1%B5%E9%9D%A2%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/14.页面生命周期.md",key:"v-0e4d407c",path:"/pages/44b3cc/",headersStr:null,content:'文档：https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html 文档：https://uniapp.dcloud.io/collocation/frame/lifecycle?id=%e9%a1%b5%e9%9d%a2%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f\n\n概念：页面从 启动 → 运行 → 销毁 的过程\n\n生命周期函数（-- 页面.js）\n\n// （1）onLoad // 触发条件：页面加载后 // 作用：获取数据 onLoad: function (options) { console.log("onLoad"); },\n\n// （2）onShow // 触发条件：页面显示后 onShow: function () { console.log("onShow"); },\n\n// （3）onReady // 触发条件：页面初次渲染完成后 // 作用：修改页面数据 onReady: function () { console.log("onReady"); },\n\n// （4）onHide // 触发条件：页面隐藏后 onHide: function () { console.log("onHide"); },\n\n// （5）onUnload // 触发条件：页面被关闭后 onUnload: function () { console.log("onUnload"); },\n\n-- 以下了解即可 --\n\n// （6）onPullDownRefresh // 触发条件：用户下拉后（刷新） // 应用场景：重新获取数据和页面效果 onPullDownRefresh: function () { console.log("onPullDownRefresh"); },\n\n// （7）onReachBottom // 触发条件：页面上拉到底部后 // 特性：页面需要有足够高度才能触发该效果（有滚动条） onReachBottom: function () { console.log("onReachBottom"); // 上拉加载下一页数据 },\n\n// （8）onShareAppMessage // 触发条件：用户点击右上角分享后 onShareAppMessage: function () { console.log("onShareAppMessage"); },\n\n// （9）onPageScroll // 触发条件：页面滚动后 onPageScroll(){ console.log("onPageScroll"); },\n\n// （10）onResize // 触发条件：页面的尺寸发生改变后（横屏、竖屏） // 调试：在微信小程序开发工具中开启横竖屏切换图标 -- 页面配置文件 "pageOrientotion": "auto"\n\nonResize(){ console.log("onResize"); },\n\n// （11）onTabItemTap // 触发条件：当前页面为 tab 页面，点击 tab 页面后 */ onTabItemTap(){ console.log("onTabItemTap"); }',normalizedContent:'文档：https://developers.weixin.qq.com/miniprogram/dev/reference/api/page.html 文档：https://uniapp.dcloud.io/collocation/frame/lifecycle?id=%e9%a1%b5%e9%9d%a2%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f\n\n概念：页面从 启动 → 运行 → 销毁 的过程\n\n生命周期函数（-- 页面.js）\n\n// （1）onload // 触发条件：页面加载后 // 作用：获取数据 onload: function (options) { console.log("onload"); },\n\n// （2）onshow // 触发条件：页面显示后 onshow: function () { console.log("onshow"); },\n\n// （3）onready // 触发条件：页面初次渲染完成后 // 作用：修改页面数据 onready: function () { console.log("onready"); },\n\n// （4）onhide // 触发条件：页面隐藏后 onhide: function () { console.log("onhide"); },\n\n// （5）onunload // 触发条件：页面被关闭后 onunload: function () { console.log("onunload"); },\n\n-- 以下了解即可 --\n\n// （6）onpulldownrefresh // 触发条件：用户下拉后（刷新） // 应用场景：重新获取数据和页面效果 onpulldownrefresh: function () { console.log("onpulldownrefresh"); },\n\n// （7）onreachbottom // 触发条件：页面上拉到底部后 // 特性：页面需要有足够高度才能触发该效果（有滚动条） onreachbottom: function () { console.log("onreachbottom"); // 上拉加载下一页数据 },\n\n// （8）onshareappmessage // 触发条件：用户点击右上角分享后 onshareappmessage: function () { console.log("onshareappmessage"); },\n\n// （9）onpagescroll // 触发条件：页面滚动后 onpagescroll(){ console.log("onpagescroll"); },\n\n// （10）onresize // 触发条件：页面的尺寸发生改变后（横屏、竖屏） // 调试：在微信小程序开发工具中开启横竖屏切换图标 -- 页面配置文件 "pageorientotion": "auto"\n\nonresize(){ console.log("onresize"); },\n\n// （11）ontabitemtap // 触发条件：当前页面为 tab 页面，点击 tab 页面后 */ ontabitemtap(){ console.log("ontabitemtap"); }',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"组件生命周期",frontmatter:{title:"组件生命周期",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/2010a7/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/15.%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/15.组件生命周期.md",key:"v-4eb30ad6",path:"/pages/2010a7/",headersStr:null,content:"文档：https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/lifetimes.html\n\n概念：组件从 启动 → 运行 → 销毁 的过程\n\n生命周期函数（-- 组件.vue）\n\ncomponent({\n\n// 生命周期\nlifetimes: {\n\n  （1）created（常用）\n    触发：组件实例创建完成后 触发\n    作用：为组件 this 添加一些自定义属性字段\n    created: function () {\n      console.log(1)\n    }\n\n  （2）attached（常用）\n    触发：组件完全初始化完成，进入页面节点树后，同时 data 数据初始化完毕\n    作用：可以使用 data 处理数据、发起网络请求\n\n  （3）ready\n    触发：组件在视图层布局完成后 触发\n\n  （4）moved\n    触发：组件实例被移动到节点树另一个位置后 触发\n\n  （5）detached（常用）\n    触发：组件离开页面节点树后 触发\n    作用：销毁事件监听\n\n  （6）error\n    触发：组件方法抛出错误时 触发\n\n  -- 以下了解即可 --\n\n  （7）show\n    触发：组件所在的页面被展示时 触发\n\n  （8）hide\n    触发：组件所在的页面被隐藏时 触发\n\n  （9）resize\n    触发：组件所在的页面尺寸变化时 触发\n\n}\n\n\n})",normalizedContent:"文档：https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/lifetimes.html\n\n概念：组件从 启动 → 运行 → 销毁 的过程\n\n生命周期函数（-- 组件.vue）\n\ncomponent({\n\n// 生命周期\nlifetimes: {\n\n  （1）created（常用）\n    触发：组件实例创建完成后 触发\n    作用：为组件 this 添加一些自定义属性字段\n    created: function () {\n      console.log(1)\n    }\n\n  （2）attached（常用）\n    触发：组件完全初始化完成，进入页面节点树后，同时 data 数据初始化完毕\n    作用：可以使用 data 处理数据、发起网络请求\n\n  （3）ready\n    触发：组件在视图层布局完成后 触发\n\n  （4）moved\n    触发：组件实例被移动到节点树另一个位置后 触发\n\n  （5）detached（常用）\n    触发：组件离开页面节点树后 触发\n    作用：销毁事件监听\n\n  （6）error\n    触发：组件方法抛出错误时 触发\n\n  -- 以下了解即可 --\n\n  （7）show\n    触发：组件所在的页面被展示时 触发\n\n  （8）hide\n    触发：组件所在的页面被隐藏时 触发\n\n  （9）resize\n    触发：组件所在的页面尺寸变化时 触发\n\n}\n\n\n})",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"组件所在页面的生命周期",frontmatter:{title:"组件所在页面的生命周期",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/648c7a/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/16.%E7%BB%84%E4%BB%B6%E6%89%80%E5%9C%A8%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/16.组件所在页面的生命周期.md",key:"v-5abcae32",path:"/pages/648c7a/",headersStr:null,content:"说明：有时，自定义组件的行为依赖于页面状态的变化，此时就需要用到组件所在页面的生命周期。如 在组件中监听页面状态的变化\n\n生命周期函数\n\npageLifetimes: {\n\n（1）show\n  触发条件：组件所在页面 被展示后\n  \n（2）hide\n  触发条件：组件所在页面 被隐藏后\n\n（3）resize\n  触发条件：组件所在页面 尺寸变化后\n\n\n}",normalizedContent:"说明：有时，自定义组件的行为依赖于页面状态的变化，此时就需要用到组件所在页面的生命周期。如 在组件中监听页面状态的变化\n\n生命周期函数\n\npagelifetimes: {\n\n（1）show\n  触发条件：组件所在页面 被展示后\n  \n（2）hide\n  触发条件：组件所在页面 被隐藏后\n\n（3）resize\n  触发条件：组件所在页面 尺寸变化后\n\n\n}",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"全局共享数据（状态管理）",frontmatter:{title:"全局共享数据（状态管理）",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/342bec/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/17.%E5%85%A8%E5%B1%80%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE%EF%BC%88%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%EF%BC%89.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/17.全局共享数据（状态管理）.md",key:"v-5faac68a",path:"/pages/342bec/",headersStr:null,content:'说明：组件与组件之间的数据共享\n\n特性：可读可写\n\n方案一：MobX。将共享数据存储在 Store 实例对象中\n\n * mobx-miniprogram 包：创建 Store 实例对象\n * mobx-miniprogram-bindings 包：把 Store 中的数据或方法，绑定到组件或页面中使用\n\n下载 （1）下载包 npm i --save mobx-miniprogram@4.13.2 mobx-miniprogram-bindings@1.2.1\n\n（2）重新构建 npm\n  删除 miniprogram_npm 目录\n  重新构建：微信开发者工具 → 工具 → 构建 npm\n\n\n将 Store 中的成员绑定到 页面 中 （1）创建 Store 实例对象，并共享出去（-- 根目录/新建 store/store.js） store 目录：存储 MobX 文件\n\n  import { observable, action } from \'mobx-miniprogram\'\n\n  export const store observable({\n    // 数据字段\n    numA: 1,\n    numB: 2\n\n    // 计算属性\n    get sum() {\n      return this.numA + this.numB\n    }\n\n    // action 方法：修改 store 中的数据\n    // step：外界传递过来的参数\n    updateNum1: action(function (step) {\n      this.numA += step\n    }),\n    updateNum2: action(function (step) {\n      this.numB += step\n    }),\n  })\n\n（2）将 Store 成员绑定到页面中（-- 页面.js）\n  import { createStoreBindings } from \'mobx-miniprogram-bindings\'\n  import { store } from \'../../store/store\'\n\n  onLoad: function () {\n    this.storeBindings = createStoreBindings(this. {\n      // 数据源\n      store,\n\n      // 当前页面要使用的 数据\n      fields: [\'numA\', \'numB\', \'sum\'],\n\n      // 当前页面要使用的 方法\n      actions: [\'updateNum1\']\n    })\n  }\n\n（3）清理绑定的 Store 成员（-- 同上）\n  onUnload: function () {\n    this.createStoreBindings.destroyStoreBindings()\n  }\n\n（4）使用 Store 中的数据、修改 Store 中的数据\n  （-- 页面.wxml）\n    <view>{{numA}} + {{numB}} = {{sum}}</view>\n\n    <van-button type="primary" bindtap="btnHandler1" data-step="{{1}}">\n      numA + 1\n    </van-button>\n    <van-button type="danger" bindtap="btnHandler1" data-step="{{-1}}">\n      numA - 1\n    </van-button>\n\n  （-- 页面.js）\n    btnHandler1(e) {\n      this.updateNum1(e.target.dataset.step)\n    }\n\n\n将 Store 中的成员绑定到 组件 中 （1）将 Store 中的成员绑定到 组件 中（-- 组件.js） import { storeBindingsBehavior } from \'mobx-miniprogram-bindings\' import { store } from \'../../store/store\'\n\n  Component({\n    behaviors: [storeBindingsBehavior],\n\n    storeBindings: {\n      // 数据源\n      store,\n\n      // 当前页面要使用的数据\n      fields: {   \n        sum: \'sum\'\n      },\n\n      // 当前页面要使用的 方法\n      actions: {\n        updateNum2: \'updateNum2\'\n      }\n    }\n  })\n\n\n（2）使用 Store 中的数据、修改 Store 中的数据\n  （-- 组件.wxml）\n    <view>{{numA}} + {{numB}} = {{sum}}</view>\n\n    <van-button type="primary" bindtap="btnHandler2" data-step="{{1}}">\n      numB + 1\n    </van-button>\n    <van-button type="danger" bindtap="btnHandler2" data-step="{{-1}}">\n      numB - 1\n    </van-button>\n\n  （-- 组件.js）\n    methods: {\n      btnHandler2(e) {\n        this.updateNum2(e.target.dataset.step)\n      }\n    }\n\n\n方案二：将共享数据存储在 globalData 使用步骤：\n\n（1）将数据存储到 globalData 中（-- App.vue）\n  globalData: {\n    name: \'zcr\'\n  }\n\n（2）通过 getApp().globalData.属性名 获取数据\n  getApp().globalData.name\n\n\n例子： （-- App.vue）\n\n（-- index.vue）\n  <template>\n    <view class="content">\n      <view>\n        <text class="title">{{name}}</text>\n      </view>\n    </view>\n  </template>\n\n  <script>\n  export default {\n    data() {\n      return {\n        name: \'\'\n      }\n    },\n    onLoad() {\n      this.name = getApp().globalData.name\n    }\n  }\n  <\/script>\n',normalizedContent:'说明：组件与组件之间的数据共享\n\n特性：可读可写\n\n方案一：mobx。将共享数据存储在 store 实例对象中\n\n * mobx-miniprogram 包：创建 store 实例对象\n * mobx-miniprogram-bindings 包：把 store 中的数据或方法，绑定到组件或页面中使用\n\n下载 （1）下载包 npm i --save mobx-miniprogram@4.13.2 mobx-miniprogram-bindings@1.2.1\n\n（2）重新构建 npm\n  删除 miniprogram_npm 目录\n  重新构建：微信开发者工具 → 工具 → 构建 npm\n\n\n将 store 中的成员绑定到 页面 中 （1）创建 store 实例对象，并共享出去（-- 根目录/新建 store/store.js） store 目录：存储 mobx 文件\n\n  import { observable, action } from \'mobx-miniprogram\'\n\n  export const store observable({\n    // 数据字段\n    numa: 1,\n    numb: 2\n\n    // 计算属性\n    get sum() {\n      return this.numa + this.numb\n    }\n\n    // action 方法：修改 store 中的数据\n    // step：外界传递过来的参数\n    updatenum1: action(function (step) {\n      this.numa += step\n    }),\n    updatenum2: action(function (step) {\n      this.numb += step\n    }),\n  })\n\n（2）将 store 成员绑定到页面中（-- 页面.js）\n  import { createstorebindings } from \'mobx-miniprogram-bindings\'\n  import { store } from \'../../store/store\'\n\n  onload: function () {\n    this.storebindings = createstorebindings(this. {\n      // 数据源\n      store,\n\n      // 当前页面要使用的 数据\n      fields: [\'numa\', \'numb\', \'sum\'],\n\n      // 当前页面要使用的 方法\n      actions: [\'updatenum1\']\n    })\n  }\n\n（3）清理绑定的 store 成员（-- 同上）\n  onunload: function () {\n    this.createstorebindings.destroystorebindings()\n  }\n\n（4）使用 store 中的数据、修改 store 中的数据\n  （-- 页面.wxml）\n    <view>{{numa}} + {{numb}} = {{sum}}</view>\n\n    <van-button type="primary" bindtap="btnhandler1" data-step="{{1}}">\n      numa + 1\n    </van-button>\n    <van-button type="danger" bindtap="btnhandler1" data-step="{{-1}}">\n      numa - 1\n    </van-button>\n\n  （-- 页面.js）\n    btnhandler1(e) {\n      this.updatenum1(e.target.dataset.step)\n    }\n\n\n将 store 中的成员绑定到 组件 中 （1）将 store 中的成员绑定到 组件 中（-- 组件.js） import { storebindingsbehavior } from \'mobx-miniprogram-bindings\' import { store } from \'../../store/store\'\n\n  component({\n    behaviors: [storebindingsbehavior],\n\n    storebindings: {\n      // 数据源\n      store,\n\n      // 当前页面要使用的数据\n      fields: {   \n        sum: \'sum\'\n      },\n\n      // 当前页面要使用的 方法\n      actions: {\n        updatenum2: \'updatenum2\'\n      }\n    }\n  })\n\n\n（2）使用 store 中的数据、修改 store 中的数据\n  （-- 组件.wxml）\n    <view>{{numa}} + {{numb}} = {{sum}}</view>\n\n    <van-button type="primary" bindtap="btnhandler2" data-step="{{1}}">\n      numb + 1\n    </van-button>\n    <van-button type="danger" bindtap="btnhandler2" data-step="{{-1}}">\n      numb - 1\n    </van-button>\n\n  （-- 组件.js）\n    methods: {\n      btnhandler2(e) {\n        this.updatenum2(e.target.dataset.step)\n      }\n    }\n\n\n方案二：将共享数据存储在 globaldata 使用步骤：\n\n（1）将数据存储到 globaldata 中（-- app.vue）\n  globaldata: {\n    name: \'zcr\'\n  }\n\n（2）通过 getapp().globaldata.属性名 获取数据\n  getapp().globaldata.name\n\n\n例子： （-- app.vue）\n\n（-- index.vue）\n  <template>\n    <view class="content">\n      <view>\n        <text class="title">{{name}}</text>\n      </view>\n    </view>\n  </template>\n\n  <script>\n  export default {\n    data() {\n      return {\n        name: \'\'\n      }\n    },\n    onload() {\n      this.name = getapp().globaldata.name\n    }\n  }\n  <\/script>\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"uni-ui",frontmatter:{title:"uni-ui",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/724c77/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/18.uni-ui.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/18.uni-ui.md",key:"v-407ea744",path:"/pages/724c77/",headersStr:null,content:'文档：https://uniapp.dcloud.io/component/uniui/uni-ui\n\n特性： （1）是一个跨端 ui 库，基于 vue 组件、flex 布局、无 dom 的跨全端 ui 框架\n\n（2）不包括基础组件，它是基础组件的补充，如：数字角标、日历、卡片、折叠面板、倒计时、抽屉、悬浮按钮、收藏按钮、底部购物导航、宫格、图标、索引列表、列表、加载更多、自定义导航栏、通告栏、数字输入框、分页器、弹出层、评分、搜索栏、分段器、步骤条、滑动操作、轮播图知识点、标签\n\n使用步骤： （1）下载 npm i @dcloudio/uni-ui@1.1.5\n\n（2）导入（-- 组件） import { uniBadge } from \'@dcloudio/uni-ui\'\n\n（3）注册（-- 同上） components: { uniBadge }\n\n（4）使用 <uni-badge text="2" type="success" @click="bindClick">\n\n【报错】 问题：使用 uni-ui 组件报错的问题 解决方法： （1）在项目根目录新建 vue.config.js，并添加以下代码 module.exports = { transpileDependencies: [\'@dcloudio/uni-ui\'] }\n\n（2）安装 sass-loader@7.3.1、node-sass@4.14.1 版本\n  卸载：npm uninstall sass-loader node-sass\n  安装：npm i sass-loader@7.3.1 node-sass@4.14.1\n',normalizedContent:'文档：https://uniapp.dcloud.io/component/uniui/uni-ui\n\n特性： （1）是一个跨端 ui 库，基于 vue 组件、flex 布局、无 dom 的跨全端 ui 框架\n\n（2）不包括基础组件，它是基础组件的补充，如：数字角标、日历、卡片、折叠面板、倒计时、抽屉、悬浮按钮、收藏按钮、底部购物导航、宫格、图标、索引列表、列表、加载更多、自定义导航栏、通告栏、数字输入框、分页器、弹出层、评分、搜索栏、分段器、步骤条、滑动操作、轮播图知识点、标签\n\n使用步骤： （1）下载 npm i @dcloudio/uni-ui@1.1.5\n\n（2）导入（-- 组件） import { unibadge } from \'@dcloudio/uni-ui\'\n\n（3）注册（-- 同上） components: { unibadge }\n\n（4）使用 <uni-badge text="2" type="success" @click="bindclick">\n\n【报错】 问题：使用 uni-ui 组件报错的问题 解决方法： （1）在项目根目录新建 vue.config.js，并添加以下代码 module.exports = { transpiledependencies: [\'@dcloudio/uni-ui\'] }\n\n（2）安装 sass-loader@7.3.1、node-sass@4.14.1 版本\n  卸载：npm uninstall sass-loader node-sass\n  安装：npm i sass-loader@7.3.1 node-sass@4.14.1\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"uni-api",frontmatter:{title:"uni-api",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/f9eeed/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/19.uni-api.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/19.uni-api.md",key:"v-86cc2f9c",path:"/pages/f9eeed/",headersStr:null,content:'文档：https://uniapp.dcloud.io/api/README\n\n作用：解决原生微信小程序的 api 不支持 promise 的问题\n\n使用方式：uni.【api 名】\n\n例子： 原生微信小程序 api： wx.request({ url:"http://157.122.54.189:9088/image/v3/homepage/vertival", success(res) { console.log(res) } })\n\nuni-api： uni.request({ url:"http://157.122.54.189:9088/image/v3/homepage/vertival", }) .then(res => { console.log(res) })',normalizedContent:'文档：https://uniapp.dcloud.io/api/readme\n\n作用：解决原生微信小程序的 api 不支持 promise 的问题\n\n使用方式：uni.【api 名】\n\n例子： 原生微信小程序 api： wx.request({ url:"http://157.122.54.189:9088/image/v3/homepage/vertival", success(res) { console.log(res) } })\n\nuni-api： uni.request({ url:"http://157.122.54.189:9088/image/v3/homepage/vertival", }) .then(res => { console.log(res) })',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"内置 API",frontmatter:{title:"内置 API",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ceab1f/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/20.%E5%86%85%E7%BD%AE%20API.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/20.内置 API.md",key:"v-d6eff936",path:"/pages/ceab1f/",headersStr:null,content:"属性： success：接口调用成功的回调函数\n\nfail：接口调用失败的回调函数\n\ncomplete：接口调用结束的回调函数（调用成功、失败都会执行）\n\n\n事件监听 API 作用：监听某些事件的触发\n\n特性：on 开头\n\nwx.onWindowResize() 触发条件：窗口尺寸发送变化后 触发\n\nwx.onReachBottom() 触发条件：上拉触底\n\n作用：加载更多数据\n\n应用场景：整个页面进行滚动\n\n节流\n  作用：解决连续触发 上拉触底 事件，导致连续发送多个请求的问题\n\n  （1）定义节流阀\n    data: {\n      // 节流阀（true：当前正在进行数据请求）（false：当前没有任何数据请求）\n      isLoading: false\n    }\n    \n  （2）使用节流阀。发送请求时开启节流阀，响应数据后关闭节流阀\n    getData() {\n      this.setData({\n        isLoading: true\n      })\n      complete: () => {\n        this.setData({\n          isLoading: false\n        })\n      }\n    }\n\n  （3）根据节流阀，判断是否发起请求\n    onReachBottom: function() {\n      if (this.data.isLoading) return\n\n      this.getData()\n    }\n\n判断是否还有下一条数据\n  当该公式成立，则证明没有下一条数据：页面值 * 每页显示多少条数据 >= 总数据条数\n\n  使用步骤：\n    // 判断是否还有下一条数据\n    if(this.data.page * this.data.pageSize >= this.data.total) {\n      return wx.showToast({\n        title: '没有更多数据了！',\n        icon: 'none'\n      })\n    }\n\n\nonPullDownRefresh() 触发条件：下拉刷新\n\n作用：重新加载数据\n\n使用步骤：\n  （1）开启下拉刷新（-- 页面.json）\n    \"enablePullDownRefresh\": true\n\n  （2）配置样式（-- 同上）\n    \"backgroundColor\": \"#efefef\",\n    \"backgroundTextStyle\": \"dark\"\n\n  （3）执行完下拉刷新事件后，停止下拉刷新效果（-- 页面.js）\n    onPullDownRefresh: function () {\n      console.log('下拉刷新已触发')\n      wx.stopPullDownRefresh()\n    }\n\n\n同步 API 特性： （1）Sync 结尾 （2）执行结果可以通过函数返回值直接获取，执行出错会抛出异常\n\nwx.setStorageSync('key', 'value') 作用：向本地存储中写入内容\n\nuni.getSystemInfoSync() 文档：https://uniapp.dcloud.io/api/system/info?id=getsysteminfosync\n\n作用：获取系统相关信息\n\n\n异步 API 特性： （1）需要通过 success、fail、complete 接收调用的结果\n\nwx.request() 作用：发起网络数据请求，通过 success 回调函数接收数据\n\nwx.showLoading() / wx.hideLoading() 作用：显示 loading 提示框 作用：关闭 loading 提示框\n\n例：\n  getData() {\n    wx.showLoading({\n      title: '数据加载中...'\n    })\n    wx.request({\n      url: 'https://...',\n      complete: () => {\n        wx.hideLoading({\n          complete: (res) => {}\n        })\n      }\n    })\n  }\n\n\nwx.setNavigationBarTitle() 作用：动态设置当前页面的标题\n\n例：\n  onReady: function () {\n    wx.setNavigationBarTitle({\n      title: '九十九物'\n    })\n  }\n\n\nwx.showToast() 作用：显示消息提示框\n\n属性：\n  title：提示内容\n\n  icon：图标（success：默认值。显示）（none：隐藏）\n\n  duration：提示延迟事件（默认：1500s）\n\n\nwx.chooseAddress() 作用：获取用户收货地址。调起用户编辑收货地址原生界面，并在编辑完成后返回用户选择的地址。\n\n其它（我也不知道属于什么 API）： scrolltolower：滚动条触底事件 应用场景：scroll-view 容器中滚动\n\nAPI Promise 化 说明：小程序内置的 api 都是基于 回调函数 实现的，这容易导致 回调地狱的问题\n\n作用：将 api 改造成基于 Promise 的异步APi，并解决回调地狱的问题\n\n使用步骤： （1）下载 miniprogram-api-promise 第三方包 npm i --save miniprogram-api-promise@1.0.4\n\n（2）重新构建 npm\n  删除 miniprogram_npm 目录\n  重新构建：微信开发者工具 → 工具 → 构建 npm\n\n（3）Promise 化（-- app.js）\n  import { promisifyAll } from 'miniprogaram-api-promise'\n\n  // 存放 Promise 化的 API\n  const wxp = wx.p = {}\n\n  // promisifyAll 作用：API Promise 化\n  // wx：微信顶级对象\n  promisifyAll(wx, wxp)\n  \n（4）使用 Promise 化后的 API\n  async getInfo() {\n    const { data: res } = await wx.p.request({\n      method: 'GET',\n      url: 'https://www.escook.cn/api/get',\n      data: { name: 'zs', age: 20 }\n    })\n  }",normalizedContent:"属性： success：接口调用成功的回调函数\n\nfail：接口调用失败的回调函数\n\ncomplete：接口调用结束的回调函数（调用成功、失败都会执行）\n\n\n事件监听 api 作用：监听某些事件的触发\n\n特性：on 开头\n\nwx.onwindowresize() 触发条件：窗口尺寸发送变化后 触发\n\nwx.onreachbottom() 触发条件：上拉触底\n\n作用：加载更多数据\n\n应用场景：整个页面进行滚动\n\n节流\n  作用：解决连续触发 上拉触底 事件，导致连续发送多个请求的问题\n\n  （1）定义节流阀\n    data: {\n      // 节流阀（true：当前正在进行数据请求）（false：当前没有任何数据请求）\n      isloading: false\n    }\n    \n  （2）使用节流阀。发送请求时开启节流阀，响应数据后关闭节流阀\n    getdata() {\n      this.setdata({\n        isloading: true\n      })\n      complete: () => {\n        this.setdata({\n          isloading: false\n        })\n      }\n    }\n\n  （3）根据节流阀，判断是否发起请求\n    onreachbottom: function() {\n      if (this.data.isloading) return\n\n      this.getdata()\n    }\n\n判断是否还有下一条数据\n  当该公式成立，则证明没有下一条数据：页面值 * 每页显示多少条数据 >= 总数据条数\n\n  使用步骤：\n    // 判断是否还有下一条数据\n    if(this.data.page * this.data.pagesize >= this.data.total) {\n      return wx.showtoast({\n        title: '没有更多数据了！',\n        icon: 'none'\n      })\n    }\n\n\nonpulldownrefresh() 触发条件：下拉刷新\n\n作用：重新加载数据\n\n使用步骤：\n  （1）开启下拉刷新（-- 页面.json）\n    \"enablepulldownrefresh\": true\n\n  （2）配置样式（-- 同上）\n    \"backgroundcolor\": \"#efefef\",\n    \"backgroundtextstyle\": \"dark\"\n\n  （3）执行完下拉刷新事件后，停止下拉刷新效果（-- 页面.js）\n    onpulldownrefresh: function () {\n      console.log('下拉刷新已触发')\n      wx.stoppulldownrefresh()\n    }\n\n\n同步 api 特性： （1）sync 结尾 （2）执行结果可以通过函数返回值直接获取，执行出错会抛出异常\n\nwx.setstoragesync('key', 'value') 作用：向本地存储中写入内容\n\nuni.getsysteminfosync() 文档：https://uniapp.dcloud.io/api/system/info?id=getsysteminfosync\n\n作用：获取系统相关信息\n\n\n异步 api 特性： （1）需要通过 success、fail、complete 接收调用的结果\n\nwx.request() 作用：发起网络数据请求，通过 success 回调函数接收数据\n\nwx.showloading() / wx.hideloading() 作用：显示 loading 提示框 作用：关闭 loading 提示框\n\n例：\n  getdata() {\n    wx.showloading({\n      title: '数据加载中...'\n    })\n    wx.request({\n      url: 'https://...',\n      complete: () => {\n        wx.hideloading({\n          complete: (res) => {}\n        })\n      }\n    })\n  }\n\n\nwx.setnavigationbartitle() 作用：动态设置当前页面的标题\n\n例：\n  onready: function () {\n    wx.setnavigationbartitle({\n      title: '九十九物'\n    })\n  }\n\n\nwx.showtoast() 作用：显示消息提示框\n\n属性：\n  title：提示内容\n\n  icon：图标（success：默认值。显示）（none：隐藏）\n\n  duration：提示延迟事件（默认：1500s）\n\n\nwx.chooseaddress() 作用：获取用户收货地址。调起用户编辑收货地址原生界面，并在编辑完成后返回用户选择的地址。\n\n其它（我也不知道属于什么 api）： scrolltolower：滚动条触底事件 应用场景：scroll-view 容器中滚动\n\napi promise 化 说明：小程序内置的 api 都是基于 回调函数 实现的，这容易导致 回调地狱的问题\n\n作用：将 api 改造成基于 promise 的异步api，并解决回调地狱的问题\n\n使用步骤： （1）下载 miniprogram-api-promise 第三方包 npm i --save miniprogram-api-promise@1.0.4\n\n（2）重新构建 npm\n  删除 miniprogram_npm 目录\n  重新构建：微信开发者工具 → 工具 → 构建 npm\n\n（3）promise 化（-- app.js）\n  import { promisifyall } from 'miniprogaram-api-promise'\n\n  // 存放 promise 化的 api\n  const wxp = wx.p = {}\n\n  // promisifyall 作用：api promise 化\n  // wx：微信顶级对象\n  promisifyall(wx, wxp)\n  \n（4）使用 promise 化后的 api\n  async getinfo() {\n    const { data: res } = await wx.p.request({\n      method: 'get',\n      url: 'https://www.escook.cn/api/get',\n      data: { name: 'zs', age: 20 }\n    })\n  }",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"网络数据请求",frontmatter:{title:"网络数据请求",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ac0a66/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/21.%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/21.网络数据请求.md",key:"v-83d1c182",path:"/pages/ac0a66/",headersStr:null,content:"文档：https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html\n\n限制：出于安全性考虑，必须满足一下两个条件 （1）只能请求 HTTPS 类型的接口 （2）只能请求 白名单中的域名\n\n查看白名单 微信开发者工具 → 详情 → 项目配置 → 域名信息\n\n跨域 跨域只存在于基于浏览器的 Web 开发中。由于小程序的宿主环境不是浏览器，而是微信客户端，所有小程序中不存在跨域的问题\n\nAjax Ajax 技术的核心是依赖于浏览器中的 XMLHttpRequest 这个对象，由于小程序的宿主环境是微信客户端，所以小程序中不能叫做 “发起 Ajax 请求”，而是叫做 “发起网络数据请求”\n\n报错 没有权限请求接口、不在以下 request 合法域名列表中： 解决方法： 方法一：设置 AppID\n\n  方法二：将接口的域名添加到白名单中\n    使用步骤：登录小程序后台 → 开发 → 开发管理 → 开发设置 → 服务器域名 → 开始配置\n    刷新项目：微信开发者工具 → 详情 → 项目配置 → 刷新域名信息 → 重新编译\n\n  方法三：开启 不校验合法域名（仅在开发中使用）\n    使用步骤：微信开发者工具 → 详情 → 本地设置 → 开启 不校验合法域名\n\n\n语法： wx.request({ // 发送请求 url: '', // 接口地址 data: {}, // 请求参数 method: '', // 请求方式（默认 GET） dataType: '', // 返回值类型（默认 json） responseType: '', // 返回数据类型（默认 text） header: {}, // 请求头 success: (res) => {} // 回调函数：成功 时调用；res：响应信息 fail: () => {} // 回调函数：失败 时调用 complete: () => {} // 回调函数：成功或失败 时都会调用 })\n\n使用步骤： （1）定义 data 数据 swiperList: []\n\n（2）定义请求方法 getSwiperList() { wx.request({ url: '', success: (res) => { this.setData({ swiperList: res.data.message }) } }) }\n\n（3）调用请求方法 onLoad: function () { this.getSwiperList() }",normalizedContent:"文档：https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html\n\n限制：出于安全性考虑，必须满足一下两个条件 （1）只能请求 https 类型的接口 （2）只能请求 白名单中的域名\n\n查看白名单 微信开发者工具 → 详情 → 项目配置 → 域名信息\n\n跨域 跨域只存在于基于浏览器的 web 开发中。由于小程序的宿主环境不是浏览器，而是微信客户端，所有小程序中不存在跨域的问题\n\najax ajax 技术的核心是依赖于浏览器中的 xmlhttprequest 这个对象，由于小程序的宿主环境是微信客户端，所以小程序中不能叫做 “发起 ajax 请求”，而是叫做 “发起网络数据请求”\n\n报错 没有权限请求接口、不在以下 request 合法域名列表中： 解决方法： 方法一：设置 appid\n\n  方法二：将接口的域名添加到白名单中\n    使用步骤：登录小程序后台 → 开发 → 开发管理 → 开发设置 → 服务器域名 → 开始配置\n    刷新项目：微信开发者工具 → 详情 → 项目配置 → 刷新域名信息 → 重新编译\n\n  方法三：开启 不校验合法域名（仅在开发中使用）\n    使用步骤：微信开发者工具 → 详情 → 本地设置 → 开启 不校验合法域名\n\n\n语法： wx.request({ // 发送请求 url: '', // 接口地址 data: {}, // 请求参数 method: '', // 请求方式（默认 get） datatype: '', // 返回值类型（默认 json） responsetype: '', // 返回数据类型（默认 text） header: {}, // 请求头 success: (res) => {} // 回调函数：成功 时调用；res：响应信息 fail: () => {} // 回调函数：失败 时调用 complete: () => {} // 回调函数：成功或失败 时都会调用 })\n\n使用步骤： （1）定义 data 数据 swiperlist: []\n\n（2）定义请求方法 getswiperlist() { wx.request({ url: '', success: (res) => { this.setdata({ swiperlist: res.data.message }) } }) }\n\n（3）调用请求方法 onload: function () { this.getswiperlist() }",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"封装请求",frontmatter:{title:"封装请求",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ec1845/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/22.%E5%B0%81%E8%A3%85%E8%AF%B7%E6%B1%82.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/22.封装请求.md",key:"v-97e9645e",path:"/pages/ec1845/",headersStr:null,content:"作用：解决回调地狱\n\n原理：将基于 回调函数 的 API 改造成基于 Promise 的APi\n\n方案一：手动封装 使用步骤： （1）封装请求方法（-- request/新建 index.js） export const request = (params) => { return new Promise((resolve, reject) => { wx.request({ ...params, success: (result) => { resolve(result); }, fail: (err) => { reject(err); } }) }) }\n\n（2）引入封装的请求方法（-- 页面.js）\n  import { request } from \"../../request/index.js\";\n\n（3）定义 data 数据\n  swiperList: []\n\n（4）定义请求方法（-- 页面.js）\n  // 获取轮播图数据\n  getSwiperList() {\n    request({\n      url: 'https://api.it120.cc/zcr/banner/list',\n    }).then(res => {\n      this.setData({\n        swiperList: res.data.data.slice(3, 6),\n      })\n    })\n  }\n\n（5）调用请求方法\n  onLoad: function () {\n    this.getSwiperList()\n  }\n\n\n场景：第一次请求回来时，再发送第二次请求，第二次请求回来时，再发送第三次请求\n\n封装前：\n  // 第一次请求\n  wx.request({\n      url: '',\n      success: (res) => {\n        this.setData({\n          swiperList: res.data.message\n        })\n\n        // 第二次请求\n        wx.request({\n          url: '',\n          success: (res) => {\n            this.setData({\n              swiperList: res.data.message\n            })\n\n            // 第三次请求\n            wx.request({\n              url: '',\n              success: (res) => {\n                this.setData({\n                  swiperList: res.data.message\n                })\n              }\n            })\n          }\n        })\n      }\n    })\n\n封装后：\n  onLoad: function () {\n    request({\n      url: 'https://api.it120.cc/zcr/banner/list',\n    }).then(res => {\n      this.setData({\n        swiperList: res.data.data.slice(3, 6),\n      })\n    })\n  }\n\n  说明：如果要等请求回来时，再去调用请求，在后面加 .then 即可\n\n\n方案二：@escook/request-miniprogram（第三方包)（推荐） 文档：https://www.npmjs.com/package/@escook/request-miniprogram\n\n下载：npm i @escook/request-miniprogram\n\n使用步骤（-- main.js）： （1）导入 // 封装请求 import { $http } from '@escook/request-miniprogram'\n\n（2）挂载\n  原生微信小程序 的顶级对象是 wx\n    wx.$http = $http\n\n  uni-app 的顶级对象是 uni\n    uni.$http = $http\n\n（3）配置请求根路径\n  $http.baseUrl = 'https://www.example.com'\n\n（4）发送请求\n  data：参数对象\n\n  // 发起 GET 请求\n  $http.get(url, 【data】)\n  \n  // 发起 POST 请求\n  $http.post(url, 【data】)\n  \n  // 发起 PUT 请求\n  $http.put(url, 【data】)\n  \n  // 发起 DELETE 请求\n  $http.delete(url, 【data】)\n\n  例：\n    async getSwiperList () {\n      // 发送请求\n      const { data: res } = await uni.$http.get('/api/public/v1/home/swiperdata')\n\n      // 请求失败\n      if (res.meta.status !== 200) {\n        return uni.showToast({\n          title: '数据请求失败！',\n          duration: 1500,\n          icon: 'none'\n        })\n      }\n\n      // 请求成功\n      this.swiperList = res.message\n    }\n\n（5）设置 请求拦截器（请求开始之前做一些事情）\n  // 请求拦截器      \n  $http.beforeRequest = function (options) {\n    // 展示 loading 效果\n    uni.showLoading({\n      title: '数据加载中...'\n    })\n  }\n\n（6）设置 响应拦截器（请求完成之后做一些事情）\n  // 响应拦截器\n  $http.afterRequest = function () {\n    // 隐藏 loading 效果\n    uni.hideLoading()\n  }\n\n\n封装 uni.showToast 作用：简化请求失败处理逻辑\n\n（1）封装（-- main.js）\n  // 封装 uni.showToast。作用：简化请求失败处理逻辑\n  uni.$showMsg = function(title = '数据请求失败！', duration = 1500) {\n    uni.showToast({\n      title,\n      duration,\n      icon:'none'\n    })\n  }\n\n（2）使用\n  // 请求失败\n  if (res.meta.status !== 200) return uni.$showMsg()\n\n  // 请求成功\n  uni.$showMsg('数据请求成功！')\n\n\n其它： // 自定义 header 请求头 $http.beforeRequest = function (options) { if (options.url.indexOf('/home/catitems) !== -1) { options.header = { 'X-Test': 'AAA' } } }",normalizedContent:"作用：解决回调地狱\n\n原理：将基于 回调函数 的 api 改造成基于 promise 的api\n\n方案一：手动封装 使用步骤： （1）封装请求方法（-- request/新建 index.js） export const request = (params) => { return new promise((resolve, reject) => { wx.request({ ...params, success: (result) => { resolve(result); }, fail: (err) => { reject(err); } }) }) }\n\n（2）引入封装的请求方法（-- 页面.js）\n  import { request } from \"../../request/index.js\";\n\n（3）定义 data 数据\n  swiperlist: []\n\n（4）定义请求方法（-- 页面.js）\n  // 获取轮播图数据\n  getswiperlist() {\n    request({\n      url: 'https://api.it120.cc/zcr/banner/list',\n    }).then(res => {\n      this.setdata({\n        swiperlist: res.data.data.slice(3, 6),\n      })\n    })\n  }\n\n（5）调用请求方法\n  onload: function () {\n    this.getswiperlist()\n  }\n\n\n场景：第一次请求回来时，再发送第二次请求，第二次请求回来时，再发送第三次请求\n\n封装前：\n  // 第一次请求\n  wx.request({\n      url: '',\n      success: (res) => {\n        this.setdata({\n          swiperlist: res.data.message\n        })\n\n        // 第二次请求\n        wx.request({\n          url: '',\n          success: (res) => {\n            this.setdata({\n              swiperlist: res.data.message\n            })\n\n            // 第三次请求\n            wx.request({\n              url: '',\n              success: (res) => {\n                this.setdata({\n                  swiperlist: res.data.message\n                })\n              }\n            })\n          }\n        })\n      }\n    })\n\n封装后：\n  onload: function () {\n    request({\n      url: 'https://api.it120.cc/zcr/banner/list',\n    }).then(res => {\n      this.setdata({\n        swiperlist: res.data.data.slice(3, 6),\n      })\n    })\n  }\n\n  说明：如果要等请求回来时，再去调用请求，在后面加 .then 即可\n\n\n方案二：@escook/request-miniprogram（第三方包)（推荐） 文档：https://www.npmjs.com/package/@escook/request-miniprogram\n\n下载：npm i @escook/request-miniprogram\n\n使用步骤（-- main.js）： （1）导入 // 封装请求 import { $http } from '@escook/request-miniprogram'\n\n（2）挂载\n  原生微信小程序 的顶级对象是 wx\n    wx.$http = $http\n\n  uni-app 的顶级对象是 uni\n    uni.$http = $http\n\n（3）配置请求根路径\n  $http.baseurl = 'https://www.example.com'\n\n（4）发送请求\n  data：参数对象\n\n  // 发起 get 请求\n  $http.get(url, 【data】)\n  \n  // 发起 post 请求\n  $http.post(url, 【data】)\n  \n  // 发起 put 请求\n  $http.put(url, 【data】)\n  \n  // 发起 delete 请求\n  $http.delete(url, 【data】)\n\n  例：\n    async getswiperlist () {\n      // 发送请求\n      const { data: res } = await uni.$http.get('/api/public/v1/home/swiperdata')\n\n      // 请求失败\n      if (res.meta.status !== 200) {\n        return uni.showtoast({\n          title: '数据请求失败！',\n          duration: 1500,\n          icon: 'none'\n        })\n      }\n\n      // 请求成功\n      this.swiperlist = res.message\n    }\n\n（5）设置 请求拦截器（请求开始之前做一些事情）\n  // 请求拦截器      \n  $http.beforerequest = function (options) {\n    // 展示 loading 效果\n    uni.showloading({\n      title: '数据加载中...'\n    })\n  }\n\n（6）设置 响应拦截器（请求完成之后做一些事情）\n  // 响应拦截器\n  $http.afterrequest = function () {\n    // 隐藏 loading 效果\n    uni.hideloading()\n  }\n\n\n封装 uni.showtoast 作用：简化请求失败处理逻辑\n\n（1）封装（-- main.js）\n  // 封装 uni.showtoast。作用：简化请求失败处理逻辑\n  uni.$showmsg = function(title = '数据请求失败！', duration = 1500) {\n    uni.showtoast({\n      title,\n      duration,\n      icon:'none'\n    })\n  }\n\n（2）使用\n  // 请求失败\n  if (res.meta.status !== 200) return uni.$showmsg()\n\n  // 请求成功\n  uni.$showmsg('数据请求成功！')\n\n\n其它： // 自定义 header 请求头 $http.beforerequest = function (options) { if (options.url.indexof('/home/catitems) !== -1) { options.header = { 'x-test': 'aaa' } } }",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"页面导航",frontmatter:{title:"页面导航",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/f8bfed/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/23.%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%88%AA.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/23.页面导航.md",key:"v-13167ccf",path:"/pages/f8bfed/",headersStr:null,content:'声明 式导航 概念：点击链接 实现导航的方式，被称为 声明式导航\n\n如：\n\nopen-type 属性值： （1）navigat（默认） 作用：导航到 非 tabBar 页面\n\n  例：\n    <navigator url="/pages/info/info">导航到 非 tabBar 页面</navigator>\n\n（2）switchTab\n  作用：导航到 tabBar 页面\n\n  例：\n    <navigator url="/pages/message/message" open-type="switchTab">导航到 tabBar 页面</navigator>\n\n（3）navigateBack\n  作用：后退到上一页面或多级页面\n\n  delta\n    作用：后退的页面数（值默认为 1）（可省略）\n    \n  例：\n    <navigator url="/pages/info/info" open-type="navigateBack" dalta="1">后退到上一页</navigator>\n\n\n编程 式导航 概念：调用 API 方法 实现导航的方式，被称为 编程式导航\n\n属性： url：需要跳转的 tabBar 页面的路径\n\nsuccess：接口调用成功的回调函数\n\nfail：接口调用失败的回调函数\n\ncomplete：接口调用结束的回调函数（调用成功、失败都会执行）\n\n\n例： wx.navigateTo({ url: \'/pages/message/message\' })\n\n（1）导航到 非 tabBar 页面 方法：wx.navigateTo()\n\n（2）导航到 tabBar 页面 方法：wx.switchTab()\n\n（3）后退到上一页面或多级页面 方法：wx.navigateBack()\n\n属性：\n  delta：返回的页面数，delta 大于现有页面数，则返回到首页。默认为 1\n\n\n获取参数 原理：通过 onLoad 函数中的形参来获取\n\n例： // 获取 页面参数 query: {}\n\nonLoad: function(options) {\n  this.setData({\n    query: options  // {name: "zs", age: "20"}\n  })\n}',normalizedContent:'声明 式导航 概念：点击链接 实现导航的方式，被称为 声明式导航\n\n如：\n\nopen-type 属性值： （1）navigat（默认） 作用：导航到 非 tabbar 页面\n\n  例：\n    <navigator url="/pages/info/info">导航到 非 tabbar 页面</navigator>\n\n（2）switchtab\n  作用：导航到 tabbar 页面\n\n  例：\n    <navigator url="/pages/message/message" open-type="switchtab">导航到 tabbar 页面</navigator>\n\n（3）navigateback\n  作用：后退到上一页面或多级页面\n\n  delta\n    作用：后退的页面数（值默认为 1）（可省略）\n    \n  例：\n    <navigator url="/pages/info/info" open-type="navigateback" dalta="1">后退到上一页</navigator>\n\n\n编程 式导航 概念：调用 api 方法 实现导航的方式，被称为 编程式导航\n\n属性： url：需要跳转的 tabbar 页面的路径\n\nsuccess：接口调用成功的回调函数\n\nfail：接口调用失败的回调函数\n\ncomplete：接口调用结束的回调函数（调用成功、失败都会执行）\n\n\n例： wx.navigateto({ url: \'/pages/message/message\' })\n\n（1）导航到 非 tabbar 页面 方法：wx.navigateto()\n\n（2）导航到 tabbar 页面 方法：wx.switchtab()\n\n（3）后退到上一页面或多级页面 方法：wx.navigateback()\n\n属性：\n  delta：返回的页面数，delta 大于现有页面数，则返回到首页。默认为 1\n\n\n获取参数 原理：通过 onload 函数中的形参来获取\n\n例： // 获取 页面参数 query: {}\n\nonload: function(options) {\n  this.setdata({\n    query: options  // {name: "zs", age: "20"}\n  })\n}',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"wxs 脚本",frontmatter:{title:"wxs 脚本",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/89dd13/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/24.wxs%20%E8%84%9A%E6%9C%AC.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/24.wxs 脚本.md",key:"v-2b0e8803",path:"/pages/89dd13/",headersStr:null,content:"作用：过滤器（处理数据）。wxml 中无法调用在页面 .js 中定义的函数，但是 wxml 中可以调用 wxs 中定义的函数\n\n特性：\n  （1）wxs 和 javaScript 的区别\n    说明：wxs 和 javaScript 是完全不同的两种语言，为了方便学习，wxs 在设计时借鉴了 js 的语法\n\n    wxs 不支持 ES6 及以上的语法形式\n      如：let、const、解构赋值、展开运算符、箭头函数、对象属性简写\n  \n  （2）常配合 Mustache 语法使用\n    \n  （3）不能调用 js 中定义的函数\n\n  （4）不能调用小程序提供的 API\n\n  （5）性能好。在 ios 设备上，小程序内的 wxs 会比 js 代码块 2~20 倍\n\n内嵌 wxs 脚本\n  编写在 <wxs> 标签内\n\n  特性：<wxs> 标签必须使用 module 属性，用来指定当前 wxs 的模块名称，方便在其它 wxml 中访问模块中的成员\n\n  使用步骤：\n    （1）定义 wxs 函数\n      <wxs module=\"m1\">\n        向外共享 toUpper 成员\n\n        // 功能：将文本转为大写 zs -> ZS\n        module.exports.toUpper = function(str) {\n          return str.toUpperCase()\n        }\n      </wxs>\n\n    （2）使用 wxs 函数\n      <view>{{m1.toUpper(username)}}</view>\n\n外联 wxs 脚本\n  编写在 .wxs 文件内\n\n  使用步骤：\n    （1）定义 wxs 函数\n      function toUpper(str) {\n        return str.toUpperCase()\n      }\n\n      // 向外共享 toLower 成员\n      module.exports = {\n        toUpper: toUpper\n      }\n\n    （2）导入外联 wxs 脚本，并命名\n      <wxs src=\"../../utils/toUpper.wxs\" module=\"m1\"></wxs>\n\n    （3）使用 wxs 函数\n      <view>{{m1.toUpper(username)}}</view>\n\n过滤器函数\n  // 格式化手机号。（旧：15530710686）（新：155-3071-0686）\n  function splitPhone(str) {\n    if(str.length !== 11) return str\n\n    var arr = str.split('')\n\n    arr.splice(3, 0, '-')\n    arr.splice(8, 0, '-')\n\n    return arr.join('')\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n",normalizedContent:"作用：过滤器（处理数据）。wxml 中无法调用在页面 .js 中定义的函数，但是 wxml 中可以调用 wxs 中定义的函数\n\n特性：\n  （1）wxs 和 javascript 的区别\n    说明：wxs 和 javascript 是完全不同的两种语言，为了方便学习，wxs 在设计时借鉴了 js 的语法\n\n    wxs 不支持 es6 及以上的语法形式\n      如：let、const、解构赋值、展开运算符、箭头函数、对象属性简写\n  \n  （2）常配合 mustache 语法使用\n    \n  （3）不能调用 js 中定义的函数\n\n  （4）不能调用小程序提供的 api\n\n  （5）性能好。在 ios 设备上，小程序内的 wxs 会比 js 代码块 2~20 倍\n\n内嵌 wxs 脚本\n  编写在 <wxs> 标签内\n\n  特性：<wxs> 标签必须使用 module 属性，用来指定当前 wxs 的模块名称，方便在其它 wxml 中访问模块中的成员\n\n  使用步骤：\n    （1）定义 wxs 函数\n      <wxs module=\"m1\">\n        向外共享 toupper 成员\n\n        // 功能：将文本转为大写 zs -> zs\n        module.exports.toupper = function(str) {\n          return str.touppercase()\n        }\n      </wxs>\n\n    （2）使用 wxs 函数\n      <view>{{m1.toupper(username)}}</view>\n\n外联 wxs 脚本\n  编写在 .wxs 文件内\n\n  使用步骤：\n    （1）定义 wxs 函数\n      function toupper(str) {\n        return str.touppercase()\n      }\n\n      // 向外共享 tolower 成员\n      module.exports = {\n        toupper: toupper\n      }\n\n    （2）导入外联 wxs 脚本，并命名\n      <wxs src=\"../../utils/toupper.wxs\" module=\"m1\"></wxs>\n\n    （3）使用 wxs 函数\n      <view>{{m1.toupper(username)}}</view>\n\n过滤器函数\n  // 格式化手机号。（旧：15530710686）（新：155-3071-0686）\n  function splitphone(str) {\n    if(str.length !== 11) return str\n\n    var arr = str.split('')\n\n    arr.splice(3, 0, '-')\n    arr.splice(8, 0, '-')\n\n    return arr.join('')\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"npm",frontmatter:{title:"npm",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/243d96/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/25.npm.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/25.npm.md",key:"v-28f42e20",path:"/pages/243d96/",headersStr:null,content:'小程序中支持使用 npm 安装第三方包\n\n限制 （1）不支持依赖于 Node.js 内置库的包 如：fs 模块、path 模块等。因为小程序中不存在 node 运行环境\n\n（2）不支持依赖于 浏览器内置对象 的包 如：JQuery，因为 JQuery 依赖浏览器 window 对象\n\n（3）不支持依赖于 C++ 插件的包 如：有些负责加密的包会依赖 C++ 插件来提高加密的性能，但是小程序不存在 C++ 运行环境\n\n初始化包管理配置文件：npm init -y\n\n配置 （1）构建 npm 模块 微信开发者工具 → 工具 → 构建 npm → 勾选 使用 npm 模块\n\n（2）勾选 使用 npm 模块 微信开发者工具 → 详情 → 本地设置 → 勾选 使用 npm 模块\n\nVant Weapp（小程序 UI 组件库） 文档：https://youzan.github.io/vant-weapp/#/home\n\n介绍 由有赞前端团队开源的一套小程序 UI 组件库，助力开发者快速搭建小程序应用。它所使用的是 MIT 开源许可协议，对商业使用比较友好\n\n下载 npm i @vant/weapp@1.3.3 -S --production\n\n配置（-- app.json） 删除 "style": "v2" 配置项（防止样式冲突）\n\n使用步骤 全局引入（-- app.json） "usingComponents": { "van-button": "@vant/weapp/button/index" }\n\n局部引入（-- 页面.json）\n  "usingComponents": {\n    "van-button": "@vant/weapp/button/index"\n  }\n\n使用（-- 页面.wxml）\n  <van-button>按钮</van-button>\n\n\n定制主题 文档：https://youzan.github.io/vant-weapp/#/theme 颜色变量：https://github.com/youzan/vant-weapp/blob/dev/packages/common/style/var.less\n\n作用：全局修改内置样式\n\n例：具体修改的变量名请查看文档（-- app.wxss）\n  page { // 根节点\n    /* 修改警告按钮的背景颜色和边框颜色 */\n    --button-danger-background-color: #C00000;\n    --button-danger-border-color: #D60000\n  }',normalizedContent:'小程序中支持使用 npm 安装第三方包\n\n限制 （1）不支持依赖于 node.js 内置库的包 如：fs 模块、path 模块等。因为小程序中不存在 node 运行环境\n\n（2）不支持依赖于 浏览器内置对象 的包 如：jquery，因为 jquery 依赖浏览器 window 对象\n\n（3）不支持依赖于 c++ 插件的包 如：有些负责加密的包会依赖 c++ 插件来提高加密的性能，但是小程序不存在 c++ 运行环境\n\n初始化包管理配置文件：npm init -y\n\n配置 （1）构建 npm 模块 微信开发者工具 → 工具 → 构建 npm → 勾选 使用 npm 模块\n\n（2）勾选 使用 npm 模块 微信开发者工具 → 详情 → 本地设置 → 勾选 使用 npm 模块\n\nvant weapp（小程序 ui 组件库） 文档：https://youzan.github.io/vant-weapp/#/home\n\n介绍 由有赞前端团队开源的一套小程序 ui 组件库，助力开发者快速搭建小程序应用。它所使用的是 mit 开源许可协议，对商业使用比较友好\n\n下载 npm i @vant/weapp@1.3.3 -s --production\n\n配置（-- app.json） 删除 "style": "v2" 配置项（防止样式冲突）\n\n使用步骤 全局引入（-- app.json） "usingcomponents": { "van-button": "@vant/weapp/button/index" }\n\n局部引入（-- 页面.json）\n  "usingcomponents": {\n    "van-button": "@vant/weapp/button/index"\n  }\n\n使用（-- 页面.wxml）\n  <van-button>按钮</van-button>\n\n\n定制主题 文档：https://youzan.github.io/vant-weapp/#/theme 颜色变量：https://github.com/youzan/vant-weapp/blob/dev/packages/common/style/var.less\n\n作用：全局修改内置样式\n\n例：具体修改的变量名请查看文档（-- app.wxss）\n  page { // 根节点\n    /* 修改警告按钮的背景颜色和边框颜色 */\n    --button-danger-background-color: #c00000;\n    --button-danger-border-color: #d60000\n  }',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"分包",frontmatter:{title:"分包",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/9376d8/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/26.%E5%88%86%E5%8C%85.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/26.分包.md",key:"v-8ef74bae",path:"/pages/9376d8/",headersStr:null,content:'概念：分包指的是把一个完整的小程序项目，按照需求划分为不同的子包，在构建时打包成不同的分包，用户在使用时按需进行加载\n\n作用： （1）提高小程序首次加载的速度 （2）在多团队共同开发时可以更好的解耦协作\n\n分包后，小程序项目由 1 个主包 + 多个分包组成 主包：一般只包含项目的启动页面或 TabBar 页面、以及所有分包都需要用到的一些公共资源 分包：只包含和当前分包有关的页面和私有资源\n\n引用原则： （1）主包无法引用分包内的私有资源 （2）分包之间不能相互引用私有资源 （3）分包可以引用主包内的公共资源\n\n加载规则 （1）小程序启动时，默认加载主包 - tabBar 页面需要放到主包中\n\n（2）当进入分包内某个页面时，会加载对应分包 - 非 tabBar 页面可以按照功能的不同，划分为不同的分包之后，进行按需下载\n\n体积限制 （1）整个小程序所有分包大小不能超过16M（主包 + 所有分包） （2）单个分包/主包大小不能超过 2M\n\n查看分包体积：微信开发者工具 → 详情 → 本地代码\n\n配置（-- app.json） { // 主包的所有页面 "pages": [ "pages/index", "pages/logs" ], // 定义分包 "subpackages": [ // 分包一 { // 分包根目录 "root": "packaggeA", // 分包的别名 "name": "pack1", // 当前分包下，所有页面的相对存放路径 "pages": [ "pages/cat/cat", "pages/dog/dog" ] }, // 分包二 { "root": "packageB", "pages": [ "pages/apple/apple", "pages/banana/banana" ] } ] }\n\n使用步骤 （1）新建分包（-- 根目录/subpkg 目录）\n\n（2）配置 subPackages 节点（-- pages.json） // 分包配置项 "subPackages": [ { // 分包根目录 "root": "subpkg",\n\n    // 当前分包中的页面\n    "pages": []\n  }\n]\n\n\n（3）新建分包页面 右键 subpkg 目录 → 新建页面 1、定义页面名字 2、选择模板：使用 scss 的页面 3、选择小程序分包：subpkg 4、创建\n\n独立分包 概念：默认情况下小程序只能通过主包来进入其它分包，而独立分包不需要加载主包，就可以直接进入\n\n引用原则：独立分包中不能引用主包内的公共资源\n\n配置： 为分包添加 "independent": true 字段\n\n例：\n  {\n    "root": "packageB",\n    "pages": [\n      "pages/apple/apple",\n      "pages/banana/banana"\n    ],\n    "independent": true\n  }\n\n\n分包预下载 概念：进入指定页面时，由框架自动预下载可能需要的分包，从而提升进入后续分包页面时的启动速度\n\n配置（-- app.json）\n\n// 分包预下载规则\n"preloadRule": {\n\n  // 触发分包预下载的页面路径\n  "pages/contact/contact": {\n\n    // 在指定网络模式下进行预下载（wifi：默认。仅 wifi）（all：不限网络）\n    "network": "all",\n\n    // 进入页面后，预下载哪些分包。通过 root 或 name 指定预下载分包\n    "packages": ["pkgA"]\n  }\n}\n\n\n下载限制：同一个分包中的预下载大小限额为 2M，超过则会失效',normalizedContent:'概念：分包指的是把一个完整的小程序项目，按照需求划分为不同的子包，在构建时打包成不同的分包，用户在使用时按需进行加载\n\n作用： （1）提高小程序首次加载的速度 （2）在多团队共同开发时可以更好的解耦协作\n\n分包后，小程序项目由 1 个主包 + 多个分包组成 主包：一般只包含项目的启动页面或 tabbar 页面、以及所有分包都需要用到的一些公共资源 分包：只包含和当前分包有关的页面和私有资源\n\n引用原则： （1）主包无法引用分包内的私有资源 （2）分包之间不能相互引用私有资源 （3）分包可以引用主包内的公共资源\n\n加载规则 （1）小程序启动时，默认加载主包 - tabbar 页面需要放到主包中\n\n（2）当进入分包内某个页面时，会加载对应分包 - 非 tabbar 页面可以按照功能的不同，划分为不同的分包之后，进行按需下载\n\n体积限制 （1）整个小程序所有分包大小不能超过16m（主包 + 所有分包） （2）单个分包/主包大小不能超过 2m\n\n查看分包体积：微信开发者工具 → 详情 → 本地代码\n\n配置（-- app.json） { // 主包的所有页面 "pages": [ "pages/index", "pages/logs" ], // 定义分包 "subpackages": [ // 分包一 { // 分包根目录 "root": "packaggea", // 分包的别名 "name": "pack1", // 当前分包下，所有页面的相对存放路径 "pages": [ "pages/cat/cat", "pages/dog/dog" ] }, // 分包二 { "root": "packageb", "pages": [ "pages/apple/apple", "pages/banana/banana" ] } ] }\n\n使用步骤 （1）新建分包（-- 根目录/subpkg 目录）\n\n（2）配置 subpackages 节点（-- pages.json） // 分包配置项 "subpackages": [ { // 分包根目录 "root": "subpkg",\n\n    // 当前分包中的页面\n    "pages": []\n  }\n]\n\n\n（3）新建分包页面 右键 subpkg 目录 → 新建页面 1、定义页面名字 2、选择模板：使用 scss 的页面 3、选择小程序分包：subpkg 4、创建\n\n独立分包 概念：默认情况下小程序只能通过主包来进入其它分包，而独立分包不需要加载主包，就可以直接进入\n\n引用原则：独立分包中不能引用主包内的公共资源\n\n配置： 为分包添加 "independent": true 字段\n\n例：\n  {\n    "root": "packageb",\n    "pages": [\n      "pages/apple/apple",\n      "pages/banana/banana"\n    ],\n    "independent": true\n  }\n\n\n分包预下载 概念：进入指定页面时，由框架自动预下载可能需要的分包，从而提升进入后续分包页面时的启动速度\n\n配置（-- app.json）\n\n// 分包预下载规则\n"preloadrule": {\n\n  // 触发分包预下载的页面路径\n  "pages/contact/contact": {\n\n    // 在指定网络模式下进行预下载（wifi：默认。仅 wifi）（all：不限网络）\n    "network": "all",\n\n    // 进入页面后，预下载哪些分包。通过 root 或 name 指定预下载分包\n    "packages": ["pkga"]\n  }\n}\n\n\n下载限制：同一个分包中的预下载大小限额为 2m，超过则会失效',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"自定义字体",frontmatter:{title:"自定义字体",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/0bb64d/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/27.%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/27.自定义字体.md",key:"v-cbc33bfa",path:"/pages/0bb64d/",headersStr:null,content:"字体包格式：.ttf\n\n方式一：base64（推荐）\n\n（1）将字体转换为 base64 在线转换工具：https://transfonter.org/ Add fonts（上传字体包） → 开启 Base64 encode → 开启 TTF → Convert（转换）→ Download\n\n（2）全局引入 将 stylesheet 中的内容复制到 app.wxss 中\n\n（3）设置字体名称 font-family: '字体名称'\n\n（4）使用 font-family: '字体名称'\n\n方式二：wx.loadFontFace(OBJECT) 接口\n\n（1）在 onLoad 中调用 wx.loadFontFace(OBJECT) 接口（-- 组件） onLoad: function (options) { // 加载字体接口 wx.loadFontFace({ // 字体名字 family: \"PingFangSC-Medium\" // 字体包存放路径 source: \"url(/static/font/PingFang Medium.ttf)\" // 成功时调用 success: function() { // 字体加载成功 console.log('load font success!') } }) }\n\n（2）使用 font-family: 'PingFangSC-Medium'",normalizedContent:"字体包格式：.ttf\n\n方式一：base64（推荐）\n\n（1）将字体转换为 base64 在线转换工具：https://transfonter.org/ add fonts（上传字体包） → 开启 base64 encode → 开启 ttf → convert（转换）→ download\n\n（2）全局引入 将 stylesheet 中的内容复制到 app.wxss 中\n\n（3）设置字体名称 font-family: '字体名称'\n\n（4）使用 font-family: '字体名称'\n\n方式二：wx.loadfontface(object) 接口\n\n（1）在 onload 中调用 wx.loadfontface(object) 接口（-- 组件） onload: function (options) { // 加载字体接口 wx.loadfontface({ // 字体名字 family: \"pingfangsc-medium\" // 字体包存放路径 source: \"url(/static/font/pingfang medium.ttf)\" // 成功时调用 success: function() { // 字体加载成功 console.log('load font success!') } }) }\n\n（2）使用 font-family: 'pingfangsc-medium'",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"缓存",frontmatter:{title:"缓存",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/f4a219/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/28.%E7%BC%93%E5%AD%98.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/28.缓存.md",key:"v-8c64e7fc",path:"/pages/f4a219/",headersStr:null,content:"文档：https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorageSync.html\n\n作用： （1）提高页面加载速度 （2）减轻服务器请求压力。文件缓存后不需要再次请求，只需要请求需要更新的文件\n\n执行机制： 无缓存：浏览器请求 → 无缓存 → 向服务器发送请求 → 请求响应缓存协商 → 呈现 有缓存：浏览器请求 → 有缓存 → 查看缓存是否过期 → 没有过期则从缓存中读取 → 呈现\n\n应用场景： （1）频繁访问和修改的数据 （2）存储 Token （3）存储用户信息 （4）高并发、高性能\n\n查看缓存数据：终端 → Storage\n\n数据缓存 API 特性：默认都为异步，在后面加上 Sync 则为同步 如：wx.setStorageSync(Object)\n\n（1）wx.setStorage(Object) 作用：存储缓存 特性： 1、除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用 2、单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB 例： wx.setStorage({ key: 'name', data: 'zcr' })\n\n（2）wx.getStorage(Object) 作用：获取缓存 例： wx.getStorage({ key: 'name', // 成功时调用。res：结果 success: function (res) { console.log(res) } })\n\n（3）wx.removeStorage(Object) 作用：删除指定缓存 例： wx.removerStorage({ key: 'key2', success: function (res) { console.log(res, \"removeStorage\") } })\n\n（4）wx.clearStorage() 作用：清除缓存 例： wx.clearStorage()",normalizedContent:"文档：https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setstoragesync.html\n\n作用： （1）提高页面加载速度 （2）减轻服务器请求压力。文件缓存后不需要再次请求，只需要请求需要更新的文件\n\n执行机制： 无缓存：浏览器请求 → 无缓存 → 向服务器发送请求 → 请求响应缓存协商 → 呈现 有缓存：浏览器请求 → 有缓存 → 查看缓存是否过期 → 没有过期则从缓存中读取 → 呈现\n\n应用场景： （1）频繁访问和修改的数据 （2）存储 token （3）存储用户信息 （4）高并发、高性能\n\n查看缓存数据：终端 → storage\n\n数据缓存 api 特性：默认都为异步，在后面加上 sync 则为同步 如：wx.setstoragesync(object)\n\n（1）wx.setstorage(object) 作用：存储缓存 特性： 1、除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用 2、单个 key 允许存储的最大数据长度为 1mb，所有数据存储上限为 10mb 例： wx.setstorage({ key: 'name', data: 'zcr' })\n\n（2）wx.getstorage(object) 作用：获取缓存 例： wx.getstorage({ key: 'name', // 成功时调用。res：结果 success: function (res) { console.log(res) } })\n\n（3）wx.removestorage(object) 作用：删除指定缓存 例： wx.removerstorage({ key: 'key2', success: function (res) { console.log(res, \"removestorage\") } })\n\n（4）wx.clearstorage() 作用：清除缓存 例： wx.clearstorage()",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"微信开发者工具使用技巧",frontmatter:{title:"微信开发者工具使用技巧",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/bd9b78/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/29.%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/29.微信开发者工具使用技巧.md",key:"v-0e657df8",path:"/pages/bd9b78/",headersStr:null,content:"添加编译模式 作用：解决编辑其它 tabBar 页面时，每次重新编译都会回到首页的问题 使用步骤： （1）切换到要编辑的 tabBar 页面中 （2）定义名称 分类页",normalizedContent:"添加编译模式 作用：解决编辑其它 tabbar 页面时，每次重新编译都会回到首页的问题 使用步骤： （1）切换到要编辑的 tabbar 页面中 （2）定义名称 分类页",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"sitemap 配置项",frontmatter:{title:"sitemap 配置项",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/929e62/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%8B/06.%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/30.sitemap%20%E9%85%8D%E7%BD%AE%E9%A1%B9.html",relativePath:"《前端》笔记《基础知识》/06.原生微信小程序/30.sitemap 配置项.md",key:"v-6964c0b4",path:"/pages/929e62/",headersStr:null,content:"文档：https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/sitemap.html 作用：配置⼩程序及其⻚⾯是否允许被微信索引 特性：当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索词条触发该索引时，小程序的页面将可能展示在搜索结果中。 爬虫访问小程序内页面时，会携带特定的 user-agent：mpcrawler 及场景值：1129。需要注意的是，若小程序爬虫发现的页面数据和真实用户的呈现不一致，那么该页面将不会进入索引中",normalizedContent:"文档：https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/sitemap.html 作用：配置⼩程序及其⻚⾯是否允许被微信索引 特性：当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索词条触发该索引时，小程序的页面将可能展示在搜索结果中。 爬虫访问小程序内页面时，会携带特定的 user-agent：mpcrawler 及场景值：1129。需要注意的是，若小程序爬虫发现的页面数据和真实用户的呈现不一致，那么该页面将不会进入索引中",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"JQuery 介绍",frontmatter:{title:"JQuery 介绍",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/c17dd7/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/01.JQuery%20%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《库》/01.JQuery/01.JQuery 介绍.md",key:"v-8c4c5260",path:"/pages/c17dd7/",headersStr:null,content:"# 知识点：JQuery 介绍\n\n作用： 快速、高效、简洁 的提高开发效率\n\njs 库： 预先定义函数的集合\n\n特点：\n\n 1. 跨浏览器兼容\n 2. 链式编程、隐式迭代\n 3. 简化 DOM 操作\n 4. 拥有丰富的第三方插件\n\n使用步骤： 引入 jQuery 文件",normalizedContent:"# 知识点：jquery 介绍\n\n作用： 快速、高效、简洁 的提高开发效率\n\njs 库： 预先定义函数的集合\n\n特点：\n\n 1. 跨浏览器兼容\n 2. 链式编程、隐式迭代\n 3. 简化 dom 操作\n 4. 拥有丰富的第三方插件\n\n使用步骤： 引入 jquery 文件",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"基础",frontmatter:{title:"基础",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/1c8242/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/02.%E5%9F%BA%E7%A1%80.html",relativePath:"《前端》笔记《库》/01.JQuery/02.基础.md",key:"v-7c4e206c",path:"/pages/1c8242/",headers:[{level:2,title:"一、入口函数",slug:"一、入口函数",normalizedTitle:"一、入口函数",charIndex:100},{level:2,title:"二、DOM对象 和 JQuery对象 的相互转换",slug:"二、dom对象-和-jquery对象-的相互转换",normalizedTitle:"二、dom对象 和 jquery对象 的相互转换",charIndex:199},{level:3,title:"（一）DOM对象 转 JQuery对象",slug:"一-dom对象-转-jquery对象",normalizedTitle:"（一）dom对象 转 jquery对象",charIndex:361},{level:3,title:"（二）JQuery对象 转 DOM对象",slug:"二-jquery对象-转-dom对象",normalizedTitle:"（二）jquery对象 转 dom对象",charIndex:471}],headersStr:"一、入口函数 二、DOM对象 和 JQuery对象 的相互转换 （一）DOM对象 转 JQuery对象 （二）JQuery对象 转 DOM对象",content:"# 知识点：基础\n\n顶级对象： $\n\n原生JS 获取的元素是 DOM对象\n\nJQuery 获取的元素是 JQuery对象\n\n特性： 只有 JQuery 对象才可以使用，JQuery 里的方法\n\n\n# 一、入口函数\n\n作用： 当文档内容加载完成 触发（不包括 图像、脚本文件、CSS 文件、图片 等）（相对于 DOMContentLoaded）\n\n方法： $(function () {})\n\n\n# 二、DOM对象 和 JQuery对象 的相互转换\n\n<video src=\"sucai/mov.mp4\" muted></video>\n\n\n1\n\n\nvar myvideo = document.querySelector('video');\n\n\n1\n\n\n作用： 让 JQuery对象 使用 DOM对象 的属性和方法\n\n\n# （一）DOM对象 转 JQuery对象\n\n方法： $(DOM对象).DOM对象 属性/方法\n\n$(myvideo).play(); // JQuery对象 并没有 play() 这个方法，这里假设它有\n\n\n1\n\n\n\n# （二）JQuery对象 转 DOM对象\n\n方法： $('JQuery对象')[索引]\n\n$('video')[0].play()\n\n\n1\n",normalizedContent:"# 知识点：基础\n\n顶级对象： $\n\n原生js 获取的元素是 dom对象\n\njquery 获取的元素是 jquery对象\n\n特性： 只有 jquery 对象才可以使用，jquery 里的方法\n\n\n# 一、入口函数\n\n作用： 当文档内容加载完成 触发（不包括 图像、脚本文件、css 文件、图片 等）（相对于 domcontentloaded）\n\n方法： $(function () {})\n\n\n# 二、dom对象 和 jquery对象 的相互转换\n\n<video src=\"sucai/mov.mp4\" muted></video>\n\n\n1\n\n\nvar myvideo = document.queryselector('video');\n\n\n1\n\n\n作用： 让 jquery对象 使用 dom对象 的属性和方法\n\n\n# （一）dom对象 转 jquery对象\n\n方法： $(dom对象).dom对象 属性/方法\n\n$(myvideo).play(); // jquery对象 并没有 play() 这个方法，这里假设它有\n\n\n1\n\n\n\n# （二）jquery对象 转 dom对象\n\n方法： $('jquery对象')[索引]\n\n$('video')[0].play()\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"选择器",frontmatter:{title:"选择器",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/7574fa/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/03.%E9%80%89%E6%8B%A9%E5%99%A8.html",relativePath:"《前端》笔记《库》/01.JQuery/03.选择器.md",key:"v-d56afaf0",path:"/pages/7574fa/",headers:[{level:2,title:"一、ID 选择器：     $('id')",slug:"一、id-选择器-id",normalizedTitle:"一、id 选择器：     $('id')",charIndex:null},{level:2,title:"二、通配符选择器：    $('*')",slug:"二、通配符选择器",normalizedTitle:"二、通配符选择器：    $('*')",charIndex:null},{level:2,title:"三、类选择器：        $('.class')",slug:"三、类选择器-class",normalizedTitle:"三、类选择器：        $('.class')",charIndex:null},{level:2,title:"四、标签选择器：       $('标签名')",slug:"四、标签选择器-标签名",normalizedTitle:"四、标签选择器：       $('标签名')",charIndex:null},{level:2,title:"五、并集选择器：        $('选择器, 选择器,')",slug:"五、并集选择器-选择器-选择器",normalizedTitle:"五、并集选择器：        $('选择器, 选择器,')",charIndex:null},{level:2,title:"六、子代选择器：     $('ul > li')",slug:"六、子代选择器-ul-li",normalizedTitle:"六、子代选择器：     $('ul &gt; li')",charIndex:null},{level:2,title:"七、后代选择器：     $('ul li')",slug:"七、后代选择器-ul-li",normalizedTitle:"七、后代选择器：     $('ul li')",charIndex:null}],headersStr:"一、ID 选择器：     $('id') 二、通配符选择器：    $('*') 三、类选择器：        $('.class') 四、标签选择器：       $('标签名') 五、并集选择器：        $('选择器, 选择器,') 六、子代选择器：     $('ul > li') 七、后代选择器：     $('ul li')",content:"# 知识点：选择器\n\n\n# 一、ID 选择器： $('id')\n\n\n# 二、通配符选择器： $('*')\n\n\n# 三、类选择器： $('.class')\n\n\n# 四、标签选择器： $('标签名')\n\n\n# 五、并集选择器： $('选择器, 选择器,')\n\n\n# 六、子代选择器： $('ul > li')\n\n\n# 七、后代选择器： $('ul li')",normalizedContent:"# 知识点：选择器\n\n\n# 一、id 选择器： $('id')\n\n\n# 二、通配符选择器： $('*')\n\n\n# 三、类选择器： $('.class')\n\n\n# 四、标签选择器： $('标签名')\n\n\n# 五、并集选择器： $('选择器, 选择器,')\n\n\n# 六、子代选择器： $('ul > li')\n\n\n# 七、后代选择器： $('ul li')",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"隐式迭代",frontmatter:{title:"隐式迭代",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/7395d0/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/04.%E9%9A%90%E5%BC%8F%E8%BF%AD%E4%BB%A3.html",relativePath:"《前端》笔记《库》/01.JQuery/04.隐式迭代.md",key:"v-8d5ee670",path:"/pages/7395d0/",headersStr:null,content:'# 隐式迭代\n\n隐式迭代： 自动遍历匹配的 DOM 元素\n\n作用： 同时为多种元素添加样式\n\n语法： 元素.css("属性名", "属性值");\n\n$("div").css("background", "pink");\n\n\n1\n',normalizedContent:'# 隐式迭代\n\n隐式迭代： 自动遍历匹配的 dom 元素\n\n作用： 同时为多种元素添加样式\n\n语法： 元素.css("属性名", "属性值");\n\n$("div").css("background", "pink");\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"筛选选择器",frontmatter:{title:"筛选选择器",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/06defd/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/05.%E7%AD%9B%E9%80%89%E9%80%89%E6%8B%A9%E5%99%A8.html",relativePath:"《前端》笔记《库》/01.JQuery/05.筛选选择器.md",key:"v-0154a152",path:"/pages/06defd/",headers:[{level:2,title:"一、获取 第一个元素",slug:"一、获取-第一个元素",normalizedTitle:"一、获取 第一个元素",charIndex:16},{level:2,title:"二、获取 最后一个元素",slug:"二、获取-最后一个元素",normalizedTitle:"二、获取 最后一个元素",charIndex:83},{level:2,title:"三、获取 指定元素",slug:"三、获取-指定元素",normalizedTitle:"三、获取 指定元素",charIndex:156},{level:2,title:"四、获取 奇数",slug:"四、获取-奇数",normalizedTitle:"四、获取 奇数",charIndex:224},{level:2,title:"五、获取 偶数",slug:"五、获取-偶数",normalizedTitle:"五、获取 偶数",charIndex:287}],headersStr:"一、获取 第一个元素 二、获取 最后一个元素 三、获取 指定元素 四、获取 奇数 五、获取 偶数",content:'# 知识点：筛选选择器\n\n\n# 一、获取 第一个元素\n\n:first\n\n$("ul li:first").css("color", "red");\n\n\n1\n\n\n\n# 二、获取 最后一个元素\n\n:last\n\n$("ul li:last").css("color", "sandybrown");\n\n\n1\n\n\n\n# 三、获取 指定元素\n\n:eq(索引)\n\n$("ul li:eq(2)").css("color", "blue");\n\n\n1\n\n\n\n# 四、获取 奇数\n\nodd\n\n$("ol li:odd").css("color", "skyblue");\n\n\n1\n\n\n\n# 五、获取 偶数\n\neven\n\n$("ol li:even").css("color", "pink");\n\n\n1\n',normalizedContent:'# 知识点：筛选选择器\n\n\n# 一、获取 第一个元素\n\n:first\n\n$("ul li:first").css("color", "red");\n\n\n1\n\n\n\n# 二、获取 最后一个元素\n\n:last\n\n$("ul li:last").css("color", "sandybrown");\n\n\n1\n\n\n\n# 三、获取 指定元素\n\n:eq(索引)\n\n$("ul li:eq(2)").css("color", "blue");\n\n\n1\n\n\n\n# 四、获取 奇数\n\nodd\n\n$("ol li:odd").css("color", "skyblue");\n\n\n1\n\n\n\n# 五、获取 偶数\n\neven\n\n$("ol li:even").css("color", "pink");\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"筛选方法",frontmatter:{title:"筛选方法",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/4d7618/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/06.%E7%AD%9B%E9%80%89%E6%96%B9%E6%B3%95.html",relativePath:"《前端》笔记《库》/01.JQuery/06.筛选方法.md",key:"v-0753c8e0",path:"/pages/4d7618/",headers:[{level:2,title:"一、获取 父级",slug:"一、获取-父级",normalizedTitle:"一、获取 父级",charIndex:33},{level:2,title:"二、获取 指定祖先元素",slug:"二、获取-指定祖先元素",normalizedTitle:"二、获取 指定祖先元素",charIndex:95},{level:2,title:"三、获取 所有祖先元素",slug:"三、获取-所有祖先元素",normalizedTitle:"三、获取 所有祖先元素",charIndex:178},{level:2,title:"四、获取 当前元素 指定类型的 子代",slug:"四、获取-当前元素-指定类型的-子代",normalizedTitle:"四、获取 当前元素 指定类型的 子代",charIndex:257},{level:2,title:"五、获取 当前元素 指定类型的 后代",slug:"五、获取-当前元素-指定类型的-后代",normalizedTitle:"五、获取 当前元素 指定类型的 后代",charIndex:359},{level:2,title:"六、获取 当前元素 指定类型的 兄弟",slug:"六、获取-当前元素-指定类型的-兄弟",normalizedTitle:"六、获取 当前元素 指定类型的 兄弟",charIndex:440},{level:2,title:"七、获取 当前元素 之后 的所有兄弟元素",slug:"七、获取-当前元素-之后-的所有兄弟元素",normalizedTitle:"七、获取 当前元素 之后 的所有兄弟元素",charIndex:540},{level:2,title:"八、获取 当前元素 之前 的所有兄弟元素",slug:"八、获取-当前元素-之前-的所有兄弟元素",normalizedTitle:"八、获取 当前元素 之前 的所有兄弟元素",charIndex:620},{level:2,title:"九、获取 当前元素 相同类型的兄弟元素",slug:"九、获取-当前元素-相同类型的兄弟元素",normalizedTitle:"九、获取 当前元素 相同类型的兄弟元素",charIndex:704},{level:2,title:"十、）检查 当前元素是否拥有指定的类",slug:"十、-检查-当前元素是否拥有指定的类",normalizedTitle:"十、）检查 当前元素是否拥有指定的类",charIndex:775}],headersStr:"一、获取 父级 二、获取 指定祖先元素 三、获取 所有祖先元素 四、获取 当前元素 指定类型的 子代 五、获取 当前元素 指定类型的 后代 六、获取 当前元素 指定类型的 兄弟 七、获取 当前元素 之后 的所有兄弟元素 八、获取 当前元素 之前 的所有兄弟元素 九、获取 当前元素 相同类型的兄弟元素 十、）检查 当前元素是否拥有指定的类",content:"# 筛选方法\n\n特性： 除了十、，所有的方法都返回伪数组\n\n\n# 一、获取 父级\n\n方法： parent()\n\n$('.item').parent();  // [ol]\n\n\n1\n\n\n\n# 二、获取 指定祖先元素\n\n方法： parents(\"指定祖先元素\")\n\n$('.sib').parents('body');  // [body]\n\n\n1\n\n\n\n# 三、获取 所有祖先元素\n\n方法： parents()\n\n$('.sib').parents();  // [ul, body, html]\n\n\n1\n\n\n\n# 四、获取 当前元素 指定类型的 子代\n\n方法： children(指定类型)\n\n$('ul').children('li');  // [li, li, li, li, li, li]\n\n\n1\n\n\n\n# 五、获取 当前元素 指定类型的 后代\n\n方法： find(指定类型)\n\n$('.find').find('p');  // [p, p, p]\n\n\n1\n\n\n\n# 六、获取 当前元素 指定类型的 兄弟\n\n方法： siblings(指定类型)\n\n$('.sib').siblings('li');  // [li, li, li, li, li]\n\n\n1\n\n\n\n# 七、获取 当前元素 之后 的所有兄弟元素\n\n方法： nextAll()\n\n$('.sib').nextAll();  // [li, li]\n\n\n1\n\n\n\n# 八、获取 当前元素 之前 的所有兄弟元素\n\n方法： prevAll()\n\n$('.sib').prevAll();  // [li, li, li]\n\n\n1\n\n\n\n# 九、获取 当前元素 相同类型的兄弟元素\n\n方法： eq(索引)\n\n$('li').eq(2);  // [li.item]\n\n\n1\n\n\n\n# 十、）检查 当前元素是否拥有指定的类\n\n方法： hasClass(类名)\n\n返回值： true（有）; false（没有）\n\n$('div:first').hasClass('current');  // true\n\n\n1\n",normalizedContent:"# 筛选方法\n\n特性： 除了十、，所有的方法都返回伪数组\n\n\n# 一、获取 父级\n\n方法： parent()\n\n$('.item').parent();  // [ol]\n\n\n1\n\n\n\n# 二、获取 指定祖先元素\n\n方法： parents(\"指定祖先元素\")\n\n$('.sib').parents('body');  // [body]\n\n\n1\n\n\n\n# 三、获取 所有祖先元素\n\n方法： parents()\n\n$('.sib').parents();  // [ul, body, html]\n\n\n1\n\n\n\n# 四、获取 当前元素 指定类型的 子代\n\n方法： children(指定类型)\n\n$('ul').children('li');  // [li, li, li, li, li, li]\n\n\n1\n\n\n\n# 五、获取 当前元素 指定类型的 后代\n\n方法： find(指定类型)\n\n$('.find').find('p');  // [p, p, p]\n\n\n1\n\n\n\n# 六、获取 当前元素 指定类型的 兄弟\n\n方法： siblings(指定类型)\n\n$('.sib').siblings('li');  // [li, li, li, li, li]\n\n\n1\n\n\n\n# 七、获取 当前元素 之后 的所有兄弟元素\n\n方法： nextall()\n\n$('.sib').nextall();  // [li, li]\n\n\n1\n\n\n\n# 八、获取 当前元素 之前 的所有兄弟元素\n\n方法： prevall()\n\n$('.sib').prevall();  // [li, li, li]\n\n\n1\n\n\n\n# 九、获取 当前元素 相同类型的兄弟元素\n\n方法： eq(索引)\n\n$('li').eq(2);  // [li.item]\n\n\n1\n\n\n\n# 十、）检查 当前元素是否拥有指定的类\n\n方法： hasclass(类名)\n\n返回值： true（有）; false（没有）\n\n$('div:first').hasclass('current');  // true\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"排他思想",frontmatter:{title:"排他思想",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/d8b0cc/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/07.%E6%8E%92%E4%BB%96%E6%80%9D%E6%83%B3.html",relativePath:"《前端》笔记《库》/01.JQuery/07.排他思想.md",key:"v-1af13004",path:"/pages/d8b0cc/",headersStr:null,content:'# 知识点：排他思想\n\n排他思想： 当前元素设置样式，其余的兄弟元素清除样式\n\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n$("button").click(function() {\n    $(this).css("background", "pink");\n    $(this).siblings("button").css("background", "");\n});\n\n\n1\n2\n3\n4\n',normalizedContent:'# 知识点：排他思想\n\n排他思想： 当前元素设置样式，其余的兄弟元素清除样式\n\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n<button>快速</button>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n$("button").click(function() {\n    $(this).css("background", "pink");\n    $(this).siblings("button").css("background", "");\n});\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"样式操作",frontmatter:{title:"样式操作",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/2107dd/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/08.%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C.html",relativePath:"《前端》笔记《库》/01.JQuery/08.样式操作.md",key:"v-9d00f62e",path:"/pages/2107dd/",headers:[{level:2,title:"一、获取样式",slug:"一、获取样式",normalizedTitle:"一、获取样式",charIndex:55},{level:2,title:"二、设置单个样式",slug:"二、设置单个样式",normalizedTitle:"二、设置单个样式",charIndex:130},{level:2,title:"三、设置多个样式",slug:"三、设置多个样式",normalizedTitle:"三、设置多个样式",charIndex:236}],headersStr:"一、获取样式 二、设置单个样式 三、设置多个样式",content:"# 知识点：样式操作\n\n特性：\n\n 1. 复合属性必须采用驼峰命名法\n 2. 值是数字，可以省略引号\n\n\n# 一、获取样式\n\n$('选择器').css('属性', '值')\n\n$('div').css('width');  // 200px\n\n\n1\n\n\n\n# 二、设置单个样式\n\n$('选择器').css('属性', '值')\n\n$('div').css('width', '300px');\n$(\"div\").css(\"width\", 300);\n\n\n1\n2\n\n\n\n# 三、设置多个样式\n\n$('选择器').css({ 属性: 值, 属性: 值, ...})\n\n$('div').css({\n    height: 100,\n    backgroundColor: 'pink'\n})\n\n\n1\n2\n3\n4\n",normalizedContent:"# 知识点：样式操作\n\n特性：\n\n 1. 复合属性必须采用驼峰命名法\n 2. 值是数字，可以省略引号\n\n\n# 一、获取样式\n\n$('选择器').css('属性', '值')\n\n$('div').css('width');  // 200px\n\n\n1\n\n\n\n# 二、设置单个样式\n\n$('选择器').css('属性', '值')\n\n$('div').css('width', '300px');\n$(\"div\").css(\"width\", 300);\n\n\n1\n2\n\n\n\n# 三、设置多个样式\n\n$('选择器').css({ 属性: 值, 属性: 值, ...})\n\n$('div').css({\n    height: 100,\n    backgroundcolor: 'pink'\n})\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"类操作",frontmatter:{title:"类操作",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/c3cfb4/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/09.%E7%B1%BB%E6%93%8D%E4%BD%9C.html",relativePath:"《前端》笔记《库》/01.JQuery/09.类操作.md",key:"v-19bad570",path:"/pages/c3cfb4/",headers:[{level:2,title:"一、添加类",slug:"一、添加类",normalizedTitle:"一、添加类",charIndex:80},{level:2,title:"二、移除类",slug:"二、移除类",normalizedTitle:"二、移除类",charIndex:197},{level:2,title:"三、切换类",slug:"三、切换类",normalizedTitle:"三、切换类",charIndex:320}],headersStr:"一、添加类 二、移除类 三、切换类",content:"# 知识点：类操作\n\n特性：\n\n 1. 原生 JS 中 className 会 覆盖原先的类名\n 2. JQuery 中的类操作 不会 覆盖原先的类名\n\n\n# 一、添加类\n\n方法： $('元素').addClass('类名');\n\n$(\"button\").click(function() {\n    $(this).addClass(\"current\");\n});\n\n\n1\n2\n3\n\n\n\n# 二、移除类\n\n方法： $('元素').removeClass('类名');\n\n$(\"button\").click(function() {\n    $(this).removeClass(\"current\");\n});\n\n\n1\n2\n3\n\n\n\n# 三、切换类\n\n方法： $('元素').toggleClass('类名');\n\n$(\"button\").click(function() {\n    $(this).toggleClass(\"current\");\n});\n\n\n1\n2\n3\n",normalizedContent:"# 知识点：类操作\n\n特性：\n\n 1. 原生 js 中 classname 会 覆盖原先的类名\n 2. jquery 中的类操作 不会 覆盖原先的类名\n\n\n# 一、添加类\n\n方法： $('元素').addclass('类名');\n\n$(\"button\").click(function() {\n    $(this).addclass(\"current\");\n});\n\n\n1\n2\n3\n\n\n\n# 二、移除类\n\n方法： $('元素').removeclass('类名');\n\n$(\"button\").click(function() {\n    $(this).removeclass(\"current\");\n});\n\n\n1\n2\n3\n\n\n\n# 三、切换类\n\n方法： $('元素').toggleclass('类名');\n\n$(\"button\").click(function() {\n    $(this).toggleclass(\"current\");\n});\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"动画",frontmatter:{title:"动画",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e9ff3d/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/10.%E5%8A%A8%E7%94%BB.html",relativePath:"《前端》笔记《库》/01.JQuery/10.动画.md",key:"v-2c2d74f6",path:"/pages/e9ff3d/",headers:[{level:2,title:"一、显示 动画",slug:"一、显示-动画",normalizedTitle:"一、显示 动画",charIndex:152},{level:2,title:"二、隐藏 动画",slug:"二、隐藏-动画",normalizedTitle:"二、隐藏 动画",charIndex:368},{level:2,title:"三、显示隐藏切换 动画",slug:"三、显示隐藏切换-动画",normalizedTitle:"三、显示隐藏切换 动画",charIndex:584},{level:2,title:"四、下划 动画",slug:"四、下划-动画",normalizedTitle:"四、下划 动画",charIndex:805},{level:2,title:"五、上划 动画",slug:"五、上划-动画",normalizedTitle:"五、上划 动画",charIndex:1027},{level:2,title:"六、下划上划切换 动画",slug:"六、下划上划切换-动画",normalizedTitle:"六、下划上划切换 动画",charIndex:1243},{level:2,title:"七、淡入 动画",slug:"七、淡入-动画",normalizedTitle:"七、淡入 动画",charIndex:1475},{level:2,title:"八、淡出 动画",slug:"八、淡出-动画",normalizedTitle:"八、淡出 动画",charIndex:1688},{level:2,title:"九、淡入淡出切换 动画",slug:"九、淡入淡出切换-动画",normalizedTitle:"九、淡入淡出切换 动画",charIndex:1904},{level:2,title:"十、调整透明度 动画",slug:"十、调整透明度-动画",normalizedTitle:"十、调整透明度 动画",charIndex:2137},{level:2,title:"十一、自定义动画",slug:"十一、自定义动画",normalizedTitle:"十一、自定义动画",charIndex:2389},{level:2,title:"demo",slug:"demo",normalizedTitle:"demo",charIndex:2882}],headersStr:"一、显示 动画 二、隐藏 动画 三、显示隐藏切换 动画 四、下划 动画 五、上划 动画 六、下划上划切换 动画 七、淡入 动画 八、淡出 动画 九、淡入淡出切换 动画 十、调整透明度 动画 十一、自定义动画 demo",content:'# 动画\n\n特性： 不写参数，则没有动画\n\n提示： 带参数的动画不好看，直接使用不带参数的动画即可\n\n公共参数： 预定速度：\n\n 1. slow（缓慢）\n 2. normal（正常）\n 3. fast（快速）4、毫秒数\n\n切换动画：\n\n 1. swing（慢块慢）\n 2. linear（匀速）\n\n\n# 一、显示 动画\n\n方法： show(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(0).click(function() {\n    // $("div").show("fast", "linear", function () {\n    //     console.log(\'显示\');\n    // });\n    $("div").show()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 二、隐藏 动画\n\n方法： hide(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(1).click(function() {\n    // $("div").hide("fast", "linear", function () {\n    //     console.log(\'隐藏\');\n    // });\n    $("div").hide()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 三、显示隐藏切换 动画\n\n方法： toggle(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(2).click(function() {\n    // $("div").toggle("swing", function () {\n    //     console.log(\'显示隐藏切换\');\n    // });\n    $("div").toggle()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 四、下划 动画\n\n方法： slideDown(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(3).click(function() {\n    // $("div").slideDown("swing", function () {\n    //     console.log(\'下划\');\n    // });\n    $("div").slideDown()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 五、上划 动画\n\n方法： slideUp(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(4).click(function() {\n    // $("div").slideUp("swing", function () {\n    //     console.log(\'上划\');\n    // });\n    $("div").slideUp()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 六、下划上划切换 动画\n\n方法： slideToggle(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(5).click(function() {\n    // $("div").slideToggle("swing", function () {\n    //     console.log(\'上划\');\n    // });\n    $("div").slideToggle()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 七、淡入 动画\n\n方法： fadeIn(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(6).click(function() {\n    // $("div").fadeIn("swing", function () {\n    //     console.log(\'淡入\');\n    // });\n    $("div").fadeIn()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 八、淡出 动画\n\n方法： fadeOut(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(7).click(function() {\n    // $("div").fadeOut("swing", function () {\n    //     console.log(\'淡出\');\n    // });\n    $("div").fadeOut()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 九、淡入淡出切换 动画\n\n方法： fadeToggle(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(8).click(function() {\n    // $("div").fadeToggle("swing", function () {\n    //     console.log(\'淡入淡出切换\');\n    // });\n    $("div").fadeToggle()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 十、调整透明度 动画\n\n方法： fadeTo("预定速度", 透明度,[切换动画],[回调函数])\n\n透明度： 0~1\n\n$("button").eq(9).click(function() {\n    // $("div").fadeTo("swing", 0.5, function () {\n    //     console.log(\'调整透明度 动画\');\n    // });\n    $("div").fadeTo("swing", 0.5)\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 十一、自定义动画\n\n方法： animate({需要做动画的属性},["预定速度"],[切换动画],[回调函数])\n\n特性： 需要做动画的属性，采用驼峰命名法\n\n$("button").eq(10).click(function() {\n    // $("div").animate({\n    //         left: 500,\n    //         top: 300,\n    //         opacity: .4,\n    //         width: 500\n    //     }, 500, \'swing\', function () {\n    //     console.log(\'自定义 动画\');\n    // });\n    $("div").animate({\n        left: 500,\n        top: 300,\n        opacity: .4,\n        width: 500\n    });\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        div {\n            width: 150px;\n            height: 700px;\n            background-color: pink;\n        }\n    </style>\n</head>\n<body>\n    <button>显示  动画</button>\n    <button>隐藏  动画</button>\n    <button>显示隐藏切换  动画</button>\n\n    <button>下划  动画</button>\n    <button>上划  动画</button>\n    <button>下划上划切换  动画</button>\n\n    <button>淡入 动画</button>\n    <button>淡出 动画</button>\n    <button>淡入淡出切换 动画</button>\n\n    <button>调整透明度 动画</button>\n\n    <button>自定义 动画</button>\n\n    <div></div>\n    <script>\n\n        // 一、显示 动画\n            // $("div").show("fast", "linear", function () {\n            //     console.log(\'显示\');\n            // });\n            $("div").show()\n        })\n\n        // 二、隐藏 动画\n            // $("div").hide("fast", "linear", function () {\n            //     console.log(\'隐藏\');\n            // });\n            $("div").hide()\n        })\n\n        // 三、显示隐藏切换 动画\n        $("button").eq(2).click(function() {\n            // $("div").toggle("swing", function () {\n            //     console.log(\'显示隐藏切换\');\n            // });\n            $("div").toggle()\n        })\n\n        // 四、下划 动画\n        $("button").eq(3).click(function() {\n            // $("div").slideDown("swing", function () {\n            //     console.log(\'下划\');\n            // });\n            $("div").slideDown()\n        })\n\n        // 五、上划 动画\n        $("button").eq(4).click(function() {\n            // $("div").slideUp("swing", function () {\n            //     console.log(\'上划\');\n            // });\n            $("div").slideUp()\n        })\n\n        // 六、下划上划切换 动画\n        $("button").eq(5).click(function() {\n            // $("div").slideToggle("swing", function () {\n            //     console.log(\'上划\');\n            // });\n            $("div").slideToggle()\n        })\n\n        // 七、淡入 动画\n        $("button").eq(6).click(function() {\n            // $("div").fadeIn("swing", function () {\n            //     console.log(\'淡入\');\n            // });\n            $("div").fadeIn()\n        })\n\n        // 八、淡出 动画\n        $("button").eq(7).click(function() {\n            // $("div").fadeOut("swing", function () {\n            //     console.log(\'淡出\');\n            // });\n            $("div").fadeOut()\n        })\n\n        // 九、淡入淡出切换 动画\n        $("button").eq(8).click(function() {\n            // $("div").fadeToggle("swing", function () {\n            //     console.log(\'淡入淡出切换\');\n            // });\n            $("div").fadeToggle()\n        })\n\n        // 十、调整透明度 动画\n        $("button").eq(9).click(function() {\n            // $("div").fadeTo("swing", 0.5, function () {\n            //     console.log(\'调整透明度 动画\');\n            // });\n            $("div").fadeTo("swing", 0.5)\n        })\n\n        // 十一、自定义动画\n        $("button").eq(10).click(function() {\n            // $("div").animate({\n            //         left: 500,\n            //         top: 300,\n            //         opacity: .4,\n            //         width: 500\n            //     }, 500, \'swing\', function () {\n            //     console.log(\'自定义 动画\');\n            // });\n            $("div").animate({\n                left: 500,\n                top: 300,\n                opacity: .4,\n                width: 500\n            });\n        })\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n',normalizedContent:'# 动画\n\n特性： 不写参数，则没有动画\n\n提示： 带参数的动画不好看，直接使用不带参数的动画即可\n\n公共参数： 预定速度：\n\n 1. slow（缓慢）\n 2. normal（正常）\n 3. fast（快速）4、毫秒数\n\n切换动画：\n\n 1. swing（慢块慢）\n 2. linear（匀速）\n\n\n# 一、显示 动画\n\n方法： show(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(0).click(function() {\n    // $("div").show("fast", "linear", function () {\n    //     console.log(\'显示\');\n    // });\n    $("div").show()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 二、隐藏 动画\n\n方法： hide(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(1).click(function() {\n    // $("div").hide("fast", "linear", function () {\n    //     console.log(\'隐藏\');\n    // });\n    $("div").hide()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 三、显示隐藏切换 动画\n\n方法： toggle(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(2).click(function() {\n    // $("div").toggle("swing", function () {\n    //     console.log(\'显示隐藏切换\');\n    // });\n    $("div").toggle()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 四、下划 动画\n\n方法： slidedown(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(3).click(function() {\n    // $("div").slidedown("swing", function () {\n    //     console.log(\'下划\');\n    // });\n    $("div").slidedown()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 五、上划 动画\n\n方法： slideup(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(4).click(function() {\n    // $("div").slideup("swing", function () {\n    //     console.log(\'上划\');\n    // });\n    $("div").slideup()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 六、下划上划切换 动画\n\n方法： slidetoggle(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(5).click(function() {\n    // $("div").slidetoggle("swing", function () {\n    //     console.log(\'上划\');\n    // });\n    $("div").slidetoggle()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 七、淡入 动画\n\n方法： fadein(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(6).click(function() {\n    // $("div").fadein("swing", function () {\n    //     console.log(\'淡入\');\n    // });\n    $("div").fadein()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 八、淡出 动画\n\n方法： fadeout(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(7).click(function() {\n    // $("div").fadeout("swing", function () {\n    //     console.log(\'淡出\');\n    // });\n    $("div").fadeout()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 九、淡入淡出切换 动画\n\n方法： fadetoggle(["预定速度"],[切换动画],[回调函数])\n\n$("button").eq(8).click(function() {\n    // $("div").fadetoggle("swing", function () {\n    //     console.log(\'淡入淡出切换\');\n    // });\n    $("div").fadetoggle()\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 十、调整透明度 动画\n\n方法： fadeto("预定速度", 透明度,[切换动画],[回调函数])\n\n透明度： 0~1\n\n$("button").eq(9).click(function() {\n    // $("div").fadeto("swing", 0.5, function () {\n    //     console.log(\'调整透明度 动画\');\n    // });\n    $("div").fadeto("swing", 0.5)\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 十一、自定义动画\n\n方法： animate({需要做动画的属性},["预定速度"],[切换动画],[回调函数])\n\n特性： 需要做动画的属性，采用驼峰命名法\n\n$("button").eq(10).click(function() {\n    // $("div").animate({\n    //         left: 500,\n    //         top: 300,\n    //         opacity: .4,\n    //         width: 500\n    //     }, 500, \'swing\', function () {\n    //     console.log(\'自定义 动画\');\n    // });\n    $("div").animate({\n        left: 500,\n        top: 300,\n        opacity: .4,\n        width: 500\n    });\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        div {\n            width: 150px;\n            height: 700px;\n            background-color: pink;\n        }\n    </style>\n</head>\n<body>\n    <button>显示  动画</button>\n    <button>隐藏  动画</button>\n    <button>显示隐藏切换  动画</button>\n\n    <button>下划  动画</button>\n    <button>上划  动画</button>\n    <button>下划上划切换  动画</button>\n\n    <button>淡入 动画</button>\n    <button>淡出 动画</button>\n    <button>淡入淡出切换 动画</button>\n\n    <button>调整透明度 动画</button>\n\n    <button>自定义 动画</button>\n\n    <div></div>\n    <script>\n\n        // 一、显示 动画\n            // $("div").show("fast", "linear", function () {\n            //     console.log(\'显示\');\n            // });\n            $("div").show()\n        })\n\n        // 二、隐藏 动画\n            // $("div").hide("fast", "linear", function () {\n            //     console.log(\'隐藏\');\n            // });\n            $("div").hide()\n        })\n\n        // 三、显示隐藏切换 动画\n        $("button").eq(2).click(function() {\n            // $("div").toggle("swing", function () {\n            //     console.log(\'显示隐藏切换\');\n            // });\n            $("div").toggle()\n        })\n\n        // 四、下划 动画\n        $("button").eq(3).click(function() {\n            // $("div").slidedown("swing", function () {\n            //     console.log(\'下划\');\n            // });\n            $("div").slidedown()\n        })\n\n        // 五、上划 动画\n        $("button").eq(4).click(function() {\n            // $("div").slideup("swing", function () {\n            //     console.log(\'上划\');\n            // });\n            $("div").slideup()\n        })\n\n        // 六、下划上划切换 动画\n        $("button").eq(5).click(function() {\n            // $("div").slidetoggle("swing", function () {\n            //     console.log(\'上划\');\n            // });\n            $("div").slidetoggle()\n        })\n\n        // 七、淡入 动画\n        $("button").eq(6).click(function() {\n            // $("div").fadein("swing", function () {\n            //     console.log(\'淡入\');\n            // });\n            $("div").fadein()\n        })\n\n        // 八、淡出 动画\n        $("button").eq(7).click(function() {\n            // $("div").fadeout("swing", function () {\n            //     console.log(\'淡出\');\n            // });\n            $("div").fadeout()\n        })\n\n        // 九、淡入淡出切换 动画\n        $("button").eq(8).click(function() {\n            // $("div").fadetoggle("swing", function () {\n            //     console.log(\'淡入淡出切换\');\n            // });\n            $("div").fadetoggle()\n        })\n\n        // 十、调整透明度 动画\n        $("button").eq(9).click(function() {\n            // $("div").fadeto("swing", 0.5, function () {\n            //     console.log(\'调整透明度 动画\');\n            // });\n            $("div").fadeto("swing", 0.5)\n        })\n\n        // 十一、自定义动画\n        $("button").eq(10).click(function() {\n            // $("div").animate({\n            //         left: 500,\n            //         top: 300,\n            //         opacity: .4,\n            //         width: 500\n            //     }, 500, \'swing\', function () {\n            //     console.log(\'自定义 动画\');\n            // });\n            $("div").animate({\n                left: 500,\n                top: 300,\n                opacity: .4,\n                width: 500\n            });\n        })\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"事件切换",frontmatter:{title:"事件切换",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/417a58/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/11.%E4%BA%8B%E4%BB%B6%E5%88%87%E6%8D%A2.html",relativePath:"《前端》笔记《库》/01.JQuery/11.事件切换.md",key:"v-8944309c",path:"/pages/417a58/",headers:[{level:2,title:"demo",slug:"demo",normalizedTitle:"demo",charIndex:362}],headersStr:"demo",content:'# 事件切换\n\n作用： 鼠标移入 和 鼠标移出 的复合写法\n\n方法： hover(out)\n\n参数一： 鼠标移入触发该函数 参数二： 鼠标移出触发该函数\n\n特性： 只写一个参数，鼠标移入和移出都会触发该函数\n\n写两个参数：\n\n$(".nav>li").hover(function() {\n    $(this).children("ul").slideDown(200);\n}, function() {\n    $(this).children("ul").slideUp(200);\n});\n\n\n1\n2\n3\n4\n5\n\n\n写一个参数：\n\n$(".nav>li").hover(function() {\n    $(this).children("ul").slideToggle();\n});\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n        \n        li {\n            list-style-type: none;\n        }\n        \n        a {\n            text-decoration: none;\n            font-size: 14px;\n        }\n        \n        .nav {\n            margin: 100px;\n        }\n        \n        .nav>li {\n            position: relative;\n            float: left;\n            width: 80px;\n            height: 41px;\n            text-align: center;\n        }\n        \n        .nav li a {\n            display: block;\n            width: 100%;\n            height: 100%;\n            line-height: 41px;\n            color: #333;\n        }\n        \n        .nav>li>a:hover {\n            background-color: #eee;\n        }\n        \n        .nav ul {\n            display: none;\n            position: absolute;\n            top: 41px;\n            left: 0;\n            width: 100%;\n            border-left: 1px solid #FECC5B;\n            border-right: 1px solid #FECC5B;\n        }\n        \n        .nav ul li {\n            border-bottom: 1px solid #FECC5B;\n        }\n        \n        .nav ul li a:hover {\n            background-color: #FFF5DA;\n        }\n    </style>\n</head>\n\n<body>\n    <ul class="nav">\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n    </ul>\n    <script>\n        // 写两个参数\n        // $(".nav>li").hover(function() {\n        //     $(this).children("ul").slideDown(200);\n        // }, function() {\n        //     $(this).children("ul").slideUp(200);\n        // });\n\n        // 写一个参数\n        $(".nav>li").hover(function() {\n            $(this).children("ul").slideToggle();\n        });\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n',normalizedContent:'# 事件切换\n\n作用： 鼠标移入 和 鼠标移出 的复合写法\n\n方法： hover(out)\n\n参数一： 鼠标移入触发该函数 参数二： 鼠标移出触发该函数\n\n特性： 只写一个参数，鼠标移入和移出都会触发该函数\n\n写两个参数：\n\n$(".nav>li").hover(function() {\n    $(this).children("ul").slidedown(200);\n}, function() {\n    $(this).children("ul").slideup(200);\n});\n\n\n1\n2\n3\n4\n5\n\n\n写一个参数：\n\n$(".nav>li").hover(function() {\n    $(this).children("ul").slidetoggle();\n});\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n        \n        li {\n            list-style-type: none;\n        }\n        \n        a {\n            text-decoration: none;\n            font-size: 14px;\n        }\n        \n        .nav {\n            margin: 100px;\n        }\n        \n        .nav>li {\n            position: relative;\n            float: left;\n            width: 80px;\n            height: 41px;\n            text-align: center;\n        }\n        \n        .nav li a {\n            display: block;\n            width: 100%;\n            height: 100%;\n            line-height: 41px;\n            color: #333;\n        }\n        \n        .nav>li>a:hover {\n            background-color: #eee;\n        }\n        \n        .nav ul {\n            display: none;\n            position: absolute;\n            top: 41px;\n            left: 0;\n            width: 100%;\n            border-left: 1px solid #fecc5b;\n            border-right: 1px solid #fecc5b;\n        }\n        \n        .nav ul li {\n            border-bottom: 1px solid #fecc5b;\n        }\n        \n        .nav ul li a:hover {\n            background-color: #fff5da;\n        }\n    </style>\n</head>\n\n<body>\n    <ul class="nav">\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n    </ul>\n    <script>\n        // 写两个参数\n        // $(".nav>li").hover(function() {\n        //     $(this).children("ul").slidedown(200);\n        // }, function() {\n        //     $(this).children("ul").slideup(200);\n        // });\n\n        // 写一个参数\n        $(".nav>li").hover(function() {\n            $(this).children("ul").slidetoggle();\n        });\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"停止动画排队",frontmatter:{title:"停止动画排队",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/2c7709/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/12.%E5%81%9C%E6%AD%A2%E5%8A%A8%E7%94%BB%E6%8E%92%E9%98%9F.html",relativePath:"《前端》笔记《库》/01.JQuery/12.停止动画排队.md",key:"v-41617b34",path:"/pages/2c7709/",headersStr:null,content:'# 停止动画排队\n\n作用： 停止动画排队\n\n方法： stop().动画效果\n\n$(".nav>li").hover(function() {\n    $(this).children("ul").stop().slideToggle();\n});\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n        \n        li {\n            list-style-type: none;\n        }\n        \n        a {\n            text-decoration: none;\n            font-size: 14px;\n        }\n        \n        .nav {\n            margin: 100px;\n        }\n        \n        .nav>li {\n            position: relative;\n            float: left;\n            width: 80px;\n            height: 41px;\n            text-align: center;\n        }\n        \n        .nav li a {\n            display: block;\n            width: 100%;\n            height: 100%;\n            line-height: 41px;\n            color: #333;\n        }\n        \n        .nav>li>a:hover {\n            background-color: #eee;\n        }\n        \n        .nav ul {\n            display: none;\n            position: absolute;\n            top: 41px;\n            left: 0;\n            width: 100%;\n            border-left: 1px solid #FECC5B;\n            border-right: 1px solid #FECC5B;\n        }\n        \n        .nav ul li {\n            border-bottom: 1px solid #FECC5B;\n        }\n        \n        .nav ul li a:hover {\n            background-color: #FFF5DA;\n        }\n    </style>\n</head>\n\n<body>\n    <ul class="nav">\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n    </ul>\n    <script>\n        $(".nav>li").hover(function() {\n            $(this).children("ul").stop().slideToggle();\n        });\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n',normalizedContent:'# 停止动画排队\n\n作用： 停止动画排队\n\n方法： stop().动画效果\n\n$(".nav>li").hover(function() {\n    $(this).children("ul").stop().slidetoggle();\n});\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n        }\n        \n        li {\n            list-style-type: none;\n        }\n        \n        a {\n            text-decoration: none;\n            font-size: 14px;\n        }\n        \n        .nav {\n            margin: 100px;\n        }\n        \n        .nav>li {\n            position: relative;\n            float: left;\n            width: 80px;\n            height: 41px;\n            text-align: center;\n        }\n        \n        .nav li a {\n            display: block;\n            width: 100%;\n            height: 100%;\n            line-height: 41px;\n            color: #333;\n        }\n        \n        .nav>li>a:hover {\n            background-color: #eee;\n        }\n        \n        .nav ul {\n            display: none;\n            position: absolute;\n            top: 41px;\n            left: 0;\n            width: 100%;\n            border-left: 1px solid #fecc5b;\n            border-right: 1px solid #fecc5b;\n        }\n        \n        .nav ul li {\n            border-bottom: 1px solid #fecc5b;\n        }\n        \n        .nav ul li a:hover {\n            background-color: #fff5da;\n        }\n    </style>\n</head>\n\n<body>\n    <ul class="nav">\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#">微博</a>\n            <ul>\n                <li>\n                    <a href="">私信</a>\n                </li>\n                <li>\n                    <a href="">评论</a>\n                </li>\n                <li>\n                    <a href="">@我</a>\n                </li>\n            </ul>\n        </li>\n    </ul>\n    <script>\n        $(".nav>li").hover(function() {\n            $(this).children("ul").stop().slidetoggle();\n        });\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"属性操作",frontmatter:{title:"属性操作",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/0e200a/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/13.%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C.html",relativePath:"《前端》笔记《库》/01.JQuery/13.属性操作.md",key:"v-2207ccde",path:"/pages/0e200a/",headers:[{level:2,title:"一、操作元素 固有 属性值",slug:"一、操作元素-固有-属性值",normalizedTitle:"一、操作元素 固有 属性值",charIndex:11},{level:2,title:"二、操作元素 自定义 属性值",slug:"二、操作元素-自定义-属性值",normalizedTitle:"二、操作元素 自定义 属性值",charIndex:138},{level:2,title:"三、数据缓存",slug:"三、数据缓存",normalizedTitle:"三、数据缓存",charIndex:271}],headersStr:"一、操作元素 固有 属性值 二、操作元素 自定义 属性值 三、数据缓存",content:'# 属性操作\n\n\n# 一、操作元素 固有 属性值\n\n获取属性值： prop(\'属性名\')\n\n设置属性值： prop(\'属性名\', \'属性值\')\n\n$("a").prop("title");\n$("a").prop("title", "操作固有属性");\n\n\n1\n2\n\n\n\n# 二、操作元素 自定义 属性值\n\n获取属性值： attr("属性名")\n\n设置属性值： attr("属性名", "属性值")\n\n$("a").attr("data-index");\n$("a").attr("data-index", "3");\n\n\n1\n2\n\n\n\n# 三、数据缓存\n\n作用： 在指定元素上存储数据\n\n返回值： 值为数字返回数字型，值为非数字，返回字符串\n\n特性： 可以获取自定义属性，不需要加 data\n\n生命周期： 页面关闭、页面刷新\n\n获取 数据缓存： data("属性名")\n\n设置 数据缓存： data("属性名", "属性值")\n\n$("a").data("uname", "andy");\n$("a").data("uname");\n$("a").data("index");\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <a href="http://www.itcast.cn" title="都挺好" data-index="2">都挺好</a>\n    <input type="checkbox" name="" id="" checked>\n    <script>\n        // 一、操作元素 固有 属性值\n        $("a").prop("title");\n        $("a").prop("title", "操作固有属性");\n\n        // 二、操作元素 自定义 属性值\n        $("a").attr("data-index");\n        $("a").attr("data-index", "3");\n\n        // 三、数据缓存\n        $("a").data("uname", "andy");\n        $("a").data("uname");\n        $("a").data("index");\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n',normalizedContent:'# 属性操作\n\n\n# 一、操作元素 固有 属性值\n\n获取属性值： prop(\'属性名\')\n\n设置属性值： prop(\'属性名\', \'属性值\')\n\n$("a").prop("title");\n$("a").prop("title", "操作固有属性");\n\n\n1\n2\n\n\n\n# 二、操作元素 自定义 属性值\n\n获取属性值： attr("属性名")\n\n设置属性值： attr("属性名", "属性值")\n\n$("a").attr("data-index");\n$("a").attr("data-index", "3");\n\n\n1\n2\n\n\n\n# 三、数据缓存\n\n作用： 在指定元素上存储数据\n\n返回值： 值为数字返回数字型，值为非数字，返回字符串\n\n特性： 可以获取自定义属性，不需要加 data\n\n生命周期： 页面关闭、页面刷新\n\n获取 数据缓存： data("属性名")\n\n设置 数据缓存： data("属性名", "属性值")\n\n$("a").data("uname", "andy");\n$("a").data("uname");\n$("a").data("index");\n\n\n1\n2\n3\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <a href="http://www.itcast.cn" title="都挺好" data-index="2">都挺好</a>\n    <input type="checkbox" name="" id="" checked>\n    <script>\n        // 一、操作元素 固有 属性值\n        $("a").prop("title");\n        $("a").prop("title", "操作固有属性");\n\n        // 二、操作元素 自定义 属性值\n        $("a").attr("data-index");\n        $("a").attr("data-index", "3");\n\n        // 三、数据缓存\n        $("a").data("uname", "andy");\n        $("a").data("uname");\n        $("a").data("index");\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"（元素内容、表单值）操作",frontmatter:{title:"（元素内容、表单值）操作",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/4a47f8/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/14.%EF%BC%88%E5%85%83%E7%B4%A0%E5%86%85%E5%AE%B9%E3%80%81%E8%A1%A8%E5%8D%95%E5%80%BC%EF%BC%89%E6%93%8D%E4%BD%9C.html",relativePath:"《前端》笔记《库》/01.JQuery/14.（元素内容、表单值）操作.md",key:"v-9eb35d5e",path:"/pages/4a47f8/",headers:[{level:2,title:"一、元素内容 操作",slug:"一、元素内容-操作",normalizedTitle:"一、元素内容 操作",charIndex:23},{level:2,title:"二、元素内容 操作",slug:"二、元素内容-操作",normalizedTitle:"二、元素内容 操作",charIndex:169},{level:2,title:"三、表单值 操作",slug:"三、表单值-操作",normalizedTitle:"三、表单值 操作",charIndex:302}],headersStr:"一、元素内容 操作 二、元素内容 操作 三、表单值 操作",content:'# 知识点：（元素内容、表单值）操作\n\n\n# 一、元素内容 操作\n\n特性： 识别 html 标签\n\n获取 元素内容： html()\n\n设置 元素内容： html("内容")\n\n$("div").html();;  // <span>我是内容</span>\n$("div").html("<h1>哈哈</h1>");\n\n\n1\n2\n\n\n\n# 二、元素内容 操作\n\n特性： 不识别 text 标签\n\n获取 元素内容： text()\n\n设置 元素内容： text("内容")\n\n$("div").text();  // 我是内容\n$("div").text("<h1>哈哈</h1>");\n\n\n1\n2\n\n\n\n# 三、表单值 操作\n\n获取 表单值： val()\n\n设置 表单值： val("表单值")\n\n$("input").val();  // 请输入内容\n$("input").val("哈哈哈");\n\n\n1\n2\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <div>\n        <span>我是内容</span>\n    </div>\n    <input type="text" value="请输入内容">\n    <script>\n        // 一、元素内容 操作\n        // $("div").html();;  // <span>我是内容</span>\n        // $("div").html("<h1>哈哈</h1>");\n\n        // 二、元素内容 操作\n        $("div").text();  // 我是内容\n        $("div").text("<h1>哈哈</h1>");\n\n        // 三、表单值 操作\n        $("input").val();  // 请输入内容\n        $("input").val("哈哈哈");\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',normalizedContent:'# 知识点：（元素内容、表单值）操作\n\n\n# 一、元素内容 操作\n\n特性： 识别 html 标签\n\n获取 元素内容： html()\n\n设置 元素内容： html("内容")\n\n$("div").html();;  // <span>我是内容</span>\n$("div").html("<h1>哈哈</h1>");\n\n\n1\n2\n\n\n\n# 二、元素内容 操作\n\n特性： 不识别 text 标签\n\n获取 元素内容： text()\n\n设置 元素内容： text("内容")\n\n$("div").text();  // 我是内容\n$("div").text("<h1>哈哈</h1>");\n\n\n1\n2\n\n\n\n# 三、表单值 操作\n\n获取 表单值： val()\n\n设置 表单值： val("表单值")\n\n$("input").val();  // 请输入内容\n$("input").val("哈哈哈");\n\n\n1\n2\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <div>\n        <span>我是内容</span>\n    </div>\n    <input type="text" value="请输入内容">\n    <script>\n        // 一、元素内容 操作\n        // $("div").html();;  // <span>我是内容</span>\n        // $("div").html("<h1>哈哈</h1>");\n\n        // 二、元素内容 操作\n        $("div").text();  // 我是内容\n        $("div").text("<h1>哈哈</h1>");\n\n        // 三、表单值 操作\n        $("input").val();  // 请输入内容\n        $("input").val("哈哈哈");\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"遍历元素",frontmatter:{title:"遍历元素",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/3c206b/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/15.%E9%81%8D%E5%8E%86%E5%85%83%E7%B4%A0.html",relativePath:"《前端》笔记《库》/01.JQuery/15.遍历元素.md",key:"v-3bf18bd2",path:"/pages/3c206b/",headers:[{level:2,title:'一、$("元素").each(function (当前元素索引, 当前DOM元素) {}）',slug:"一、-元素-each-function-当前元素索引-当前dom元素",normalizedTitle:"一、$(&quot;元素&quot;).each(function (当前元素索引, 当前dom元素) {}）",charIndex:null},{level:2,title:'二、\\$.each($("元素/数组/对象"), function (当前元素索引/属性名, 当前DOM元素/属性值) {}）',slug:"二、-each-元素-数组-对象-function-当前元素索引-属性名-当前dom元素-属性值",normalizedTitle:"二、$.each($(&quot;元素/数组/对象&quot;), function (当前元素索引/属性名, 当前dom元素/属性值) {}）",charIndex:null},{level:3,title:"（1）遍历 元素",slug:"_1-遍历-元素",normalizedTitle:"（1）遍历 元素",charIndex:450},{level:3,title:"（2）遍历 数组",slug:"_2-遍历-数组",normalizedTitle:"（2）遍历 数组",charIndex:557},{level:3,title:"（3）遍历 对象",slug:"_3-遍历-对象",normalizedTitle:"（3）遍历 对象",charIndex:659}],headersStr:'一、$("元素").each(function (当前元素索引, 当前DOM元素) {}） 二、\\$.each($("元素/数组/对象"), function (当前元素索引/属性名, 当前DOM元素/属性值) {}） （1）遍历 元素 （2）遍历 数组 （3）遍历 对象',content:'# 知识点：遍历元素\n\n隐式迭代： 对同一类元素做 同样 的操作\n\n遍历元素： 对同一类元素做 不同 的操作\n\n作用： 遍历 元素、数组、对象\n\n使用场景： 创建、添加、删除元素操作\n\n\n# 一、$("元素").each(function (当前元素索引, 当前DOM元素) {}）\n\nvar arr = ["red", "green", "blue"];\n// var sum = 0;\n// $("div").each(function(i, ele) {\n//     console.log(i);\n//     console.log(ele);\n//     $(ele).css("color", arr[i]);\n//     sum += parseInt($(ele).text());\n// })\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、$.each($("元素/数组/对象"), function (当前元素索引/属性名, 当前DOM元素/属性值) {}）\n\n\n# （1）遍历 元素\n\n$.each($("div"), function(i, ele) {\n    console.log(i);\n    console.log(ele);\n});\n\n\n1\n2\n3\n4\n\n\n\n# （2）遍历 数组\n\n$.each(arr, function(i, ele) {\n    console.log(i);\n    console.log(ele);\n});\n\n\n1\n2\n3\n4\n\n\n\n# （3）遍历 对象\n\n$.each({\n    name: "andy",\n    age: 18\n}, function(i, ele) {\n    console.log(i);\n    console.log(ele);\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <div>1</div>\n    <div>2</div>\n    <div>3</div>\n    <script>\n        // 一、$("元素").each(function (当前元素索引, 当前DOM元素) {}）\n            var arr = ["red", "green", "blue"];\n            // var sum = 0;\n            // $("div").each(function(i, ele) {\n            //     console.log(i);\n            //     console.log(ele);\n            //     $(ele).css("color", arr[i]);\n            //     sum += parseInt($(ele).text());\n            // })\n\n        // 二、$.each($("元素/数组/对象"), function (当前元素索引/属性名, 当前DOM元素/属性值) {}）\n\n            // 遍历 元素\n            $.each($("div"), function(i, ele) {\n                console.log(i);\n                console.log(ele);\n            });\n\n            // 遍历 数组\n            $.each(arr, function(i, ele) {\n                console.log(i);\n                console.log(ele);\n            });\n\n            // 遍历 对象\n            $.each({\n                name: "andy",\n                age: 18\n            }, function(i, ele) {\n                console.log(i);\n                console.log(ele);\n            })\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n',normalizedContent:'# 知识点：遍历元素\n\n隐式迭代： 对同一类元素做 同样 的操作\n\n遍历元素： 对同一类元素做 不同 的操作\n\n作用： 遍历 元素、数组、对象\n\n使用场景： 创建、添加、删除元素操作\n\n\n# 一、$("元素").each(function (当前元素索引, 当前dom元素) {}）\n\nvar arr = ["red", "green", "blue"];\n// var sum = 0;\n// $("div").each(function(i, ele) {\n//     console.log(i);\n//     console.log(ele);\n//     $(ele).css("color", arr[i]);\n//     sum += parseint($(ele).text());\n// })\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 二、$.each($("元素/数组/对象"), function (当前元素索引/属性名, 当前dom元素/属性值) {}）\n\n\n# （1）遍历 元素\n\n$.each($("div"), function(i, ele) {\n    console.log(i);\n    console.log(ele);\n});\n\n\n1\n2\n3\n4\n\n\n\n# （2）遍历 数组\n\n$.each(arr, function(i, ele) {\n    console.log(i);\n    console.log(ele);\n});\n\n\n1\n2\n3\n4\n\n\n\n# （3）遍历 对象\n\n$.each({\n    name: "andy",\n    age: 18\n}, function(i, ele) {\n    console.log(i);\n    console.log(ele);\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <div>1</div>\n    <div>2</div>\n    <div>3</div>\n    <script>\n        // 一、$("元素").each(function (当前元素索引, 当前dom元素) {}）\n            var arr = ["red", "green", "blue"];\n            // var sum = 0;\n            // $("div").each(function(i, ele) {\n            //     console.log(i);\n            //     console.log(ele);\n            //     $(ele).css("color", arr[i]);\n            //     sum += parseint($(ele).text());\n            // })\n\n        // 二、$.each($("元素/数组/对象"), function (当前元素索引/属性名, 当前dom元素/属性值) {}）\n\n            // 遍历 元素\n            $.each($("div"), function(i, ele) {\n                console.log(i);\n                console.log(ele);\n            });\n\n            // 遍历 数组\n            $.each(arr, function(i, ele) {\n                console.log(i);\n                console.log(ele);\n            });\n\n            // 遍历 对象\n            $.each({\n                name: "andy",\n                age: 18\n            }, function(i, ele) {\n                console.log(i);\n                console.log(ele);\n            })\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"操作元素",frontmatter:{title:"操作元素",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/30ef11/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/16.%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0.html",relativePath:"《前端》笔记《库》/01.JQuery/16.操作元素.md",key:"v-41aeddf3",path:"/pages/30ef11/",headers:[{level:2,title:"一、创建元素",slug:"一、创建元素",normalizedTitle:"一、创建元素",charIndex:11},{level:2,title:"二、添加元素",slug:"二、添加元素",normalizedTitle:"二、添加元素",charIndex:200},{level:3,title:"（一）内部添加",slug:"一-内部添加",normalizedTitle:"（一）内部添加",charIndex:211},{level:3,title:"（二）外部添加",slug:"二-外部添加",normalizedTitle:"（二）外部添加",charIndex:345},{level:2,title:"三、删除元素",slug:"三、删除元素",normalizedTitle:"三、删除元素",charIndex:485}],headersStr:"一、创建元素 二、添加元素 （一）内部添加 （二）外部添加 三、删除元素",content:'# 操作元素\n\n\n# 一、创建元素\n\n特性： 创建的元素只能使用一次\n\n方法： $("元素")\n\nvar li1 = $("<li>动态创建li</li>");\nvar li2 = $("<li>动态创建li</li>");\nvar div1 = $("<div>动态创建div</div>");\nvar div2 = $("<div>动态创建div</div>");\n\n\n1\n2\n3\n4\n\n\n\n# 二、添加元素\n\n\n# （一）内部添加\n\n添加到 子元素 最后面： $("元素").append(元素)\n\n$("ul").append(li1);\n\n\n1\n\n\n添加到 子元素 最前面： $("元素").prepend(元素)\n\n$("ul").prepend(li2);\n\n\n1\n\n\n\n# （二）外部添加\n\n添加到 兄弟元素 最后面： $("元素").after(元素)\n\n$(".test").after(div1);\n\n\n1\n\n\n添加到 兄弟元素 最前面： $("元素").before(元素)\n\n$(".test").before(div2);\n\n\n1\n\n\n\n# 三、删除元素\n\n删除 指定元素： 元素.remove()\n\n$("ul").remove();\n\n\n1\n\n\n删除 指定元素 中所有子节点： 元素.empty()\n\n$("ul").empty();\n\n\n1\n\n\n替换 指定元素 内容： 元素.element.html("")\n\n$("ul").html("<p>haha</p>");\n\n\n1\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <ul>\n        <li>原先的li</li>\n    </ul>\n    <div class="test">我是原先的div</div>\n    <script>\n        // 一、创建元素\n        var li1 = $("<li>动态创建li</li>");\n        var li2 = $("<li>动态创建li</li>");\n        var div1 = $("<div>动态创建div</div>");\n        var div2 = $("<div>动态创建div</div>");\n\n        // 二、添加元素\n            // 内部添加\n                // 添加到 子元素 最后面：$("元素").append(元素)\n                    $("ul").append(li1);\n                // 添加到 子元素 最前面：$("元素").prepend(元素)\n                    $("ul").prepend(li2);\n\n            // 外部添加\n                // 添加到 兄弟元素 最后面：$("元素").after(元素)\n                    $(".test").after(div1);\n                // 添加到 兄弟元素 最前面：$("元素").before(元素)\n                    $(".test").before(div2);\n\n        // 三、删除元素\n            // 删除 指定元素：元素.remove()\n                // $("ul").remove();\n            // 删除 指定元素 中所有子节点：元素.empty()\n                // $("ul").empty();\n            // 替换 指定元素 内容：元素.element.html("")\n                // $("ul").html("<p>haha</p>");\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n',normalizedContent:'# 操作元素\n\n\n# 一、创建元素\n\n特性： 创建的元素只能使用一次\n\n方法： $("元素")\n\nvar li1 = $("<li>动态创建li</li>");\nvar li2 = $("<li>动态创建li</li>");\nvar div1 = $("<div>动态创建div</div>");\nvar div2 = $("<div>动态创建div</div>");\n\n\n1\n2\n3\n4\n\n\n\n# 二、添加元素\n\n\n# （一）内部添加\n\n添加到 子元素 最后面： $("元素").append(元素)\n\n$("ul").append(li1);\n\n\n1\n\n\n添加到 子元素 最前面： $("元素").prepend(元素)\n\n$("ul").prepend(li2);\n\n\n1\n\n\n\n# （二）外部添加\n\n添加到 兄弟元素 最后面： $("元素").after(元素)\n\n$(".test").after(div1);\n\n\n1\n\n\n添加到 兄弟元素 最前面： $("元素").before(元素)\n\n$(".test").before(div2);\n\n\n1\n\n\n\n# 三、删除元素\n\n删除 指定元素： 元素.remove()\n\n$("ul").remove();\n\n\n1\n\n\n删除 指定元素 中所有子节点： 元素.empty()\n\n$("ul").empty();\n\n\n1\n\n\n替换 指定元素 内容： 元素.element.html("")\n\n$("ul").html("<p>haha</p>");\n\n\n1\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <ul>\n        <li>原先的li</li>\n    </ul>\n    <div class="test">我是原先的div</div>\n    <script>\n        // 一、创建元素\n        var li1 = $("<li>动态创建li</li>");\n        var li2 = $("<li>动态创建li</li>");\n        var div1 = $("<div>动态创建div</div>");\n        var div2 = $("<div>动态创建div</div>");\n\n        // 二、添加元素\n            // 内部添加\n                // 添加到 子元素 最后面：$("元素").append(元素)\n                    $("ul").append(li1);\n                // 添加到 子元素 最前面：$("元素").prepend(元素)\n                    $("ul").prepend(li2);\n\n            // 外部添加\n                // 添加到 兄弟元素 最后面：$("元素").after(元素)\n                    $(".test").after(div1);\n                // 添加到 兄弟元素 最前面：$("元素").before(元素)\n                    $(".test").before(div2);\n\n        // 三、删除元素\n            // 删除 指定元素：元素.remove()\n                // $("ul").remove();\n            // 删除 指定元素 中所有子节点：元素.empty()\n                // $("ul").empty();\n            // 替换 指定元素 内容：元素.element.html("")\n                // $("ul").html("<p>haha</p>");\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"操作元素尺寸",frontmatter:{title:"操作元素尺寸",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e5c92d/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/17.%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0%E5%B0%BA%E5%AF%B8.html",relativePath:"《前端》笔记《库》/01.JQuery/17.操作元素尺寸.md",key:"v-1c9728b1",path:"/pages/e5c92d/",headers:[{level:2,title:"一、包含 内容",slug:"一、包含-内容",normalizedTitle:"一、包含 内容",charIndex:54},{level:2,title:"二、包含 内容 / 内边距",slug:"二、包含-内容-内边距",normalizedTitle:"二、包含 内容 / 内边距",charIndex:145},{level:2,title:"三、包含 内容 / 内边距 / 边框",slug:"三、包含-内容-内边距-边框",normalizedTitle:"三、包含 内容 / 内边距 / 边框",charIndex:195},{level:2,title:"四、包含 内容 / 内边距 / 边框 / 外边距",slug:"四、包含-内容-内边距-边框-外边距",normalizedTitle:"四、包含 内容 / 内边距 / 边框 / 外边距",charIndex:250},{level:2,title:"demo",slug:"demo",normalizedTitle:"demo",charIndex:321}],headersStr:"一、包含 内容 二、包含 内容 / 内边距 三、包含 内容 / 内边距 / 边框 四、包含 内容 / 内边距 / 边框 / 外边距 demo",content:'# 知识点：操作元素尺寸\n\n返回值： 数字型，不跟单位\n\n特性： 参数写数字代表设置，不需要跟单位\n\n\n# 一、包含 内容\n\n方法： width() / height()\n\n$("div").width();  // 200\n$("div").width(300);\n\n\n1\n2\n\n\n\n# 二、包含 内容 / 内边距\n\n方法： innerWidth() / innerHeight\n\n\n# 三、包含 内容 / 内边距 / 边框\n\n方法： outerWidth() / outerHeight\n\n\n# 四、包含 内容 / 内边距 / 边框 / 外边距\n\n方法： outerWidth(true) / outerHeight(true)\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        div {\n            width: 200px;\n            height: 200px;\n            background-color: pink;\n            padding: 10px;\n            border: 15px solid red;\n            margin: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div></div>\n    <script>\n        // （1）包含 内容\n        // 方法：width() / height()\n        $("div").width();  // 200\n        $("div").width(300);\n\n        // （2）包含 内容 / 内边距\n        // 方法：innerWidth() / innerHeight\n\n        // （3）包含 内容 / 内边距 / 边框\n        // 方法：outerWidth() / outerHeight\n\n        // （4）包含 内容 / 内边距 / 边框 / 外边距\n        // 方法：outerWidth(true) / outerHeight(true)\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n',normalizedContent:'# 知识点：操作元素尺寸\n\n返回值： 数字型，不跟单位\n\n特性： 参数写数字代表设置，不需要跟单位\n\n\n# 一、包含 内容\n\n方法： width() / height()\n\n$("div").width();  // 200\n$("div").width(300);\n\n\n1\n2\n\n\n\n# 二、包含 内容 / 内边距\n\n方法： innerwidth() / innerheight\n\n\n# 三、包含 内容 / 内边距 / 边框\n\n方法： outerwidth() / outerheight\n\n\n# 四、包含 内容 / 内边距 / 边框 / 外边距\n\n方法： outerwidth(true) / outerheight(true)\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        div {\n            width: 200px;\n            height: 200px;\n            background-color: pink;\n            padding: 10px;\n            border: 15px solid red;\n            margin: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div></div>\n    <script>\n        // （1）包含 内容\n        // 方法：width() / height()\n        $("div").width();  // 200\n        $("div").width(300);\n\n        // （2）包含 内容 / 内边距\n        // 方法：innerwidth() / innerheight\n\n        // （3）包含 内容 / 内边距 / 边框\n        // 方法：outerwidth() / outerheight\n\n        // （4）包含 内容 / 内边距 / 边框 / 外边距\n        // 方法：outerwidth(true) / outerheight(true)\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"操作元素位置",frontmatter:{title:"操作元素位置",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/5b6383/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/18.%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0%E4%BD%8D%E7%BD%AE.html",relativePath:"《前端》笔记《库》/01.JQuery/18.操作元素位置.md",key:"v-4457ccf9",path:"/pages/5b6383/",headers:[{level:2,title:"一、offset()",slug:"一、offset",normalizedTitle:"一、offset()",charIndex:51},{level:2,title:"二、position()",slug:"二、position",normalizedTitle:"二、position()",charIndex:227},{level:2,title:"三、scroll",slug:"三、scroll",normalizedTitle:"三、scroll",charIndex:382}],headersStr:"一、offset() 二、position() 三、scroll",content:'# 知识点：操作元素位置\n\n返回值： 数字型，不跟单位\n\n特性： 设置元素时，需要写在对象里\n\n\n# 一、offset()\n\n操作元素相对于 文档 上边位置： offset().top\n\n操作元素相对于 文档 左边位置： offset().left\n\n// 获取\n$(".son").offset().top;  // 110\n\n// 设置\n$(".son").offset({\n    top: 400\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二、position()\n\n特性： 父级没有单位，则以文档为准\n\n获取元素相对于 定位父级 上边位置： position().top\n\n获取元素相对于 定位父级 左边位置： position().left\n\n// 获取\n$(".son").position().top;  // 300\n\n\n1\n2\n\n\n\n# 三、scroll\n\n操作元素 被卷去 上边位置： scrollTop()\n\n操作元素 被卷去 左边位置： scrollLeft()\n\n// 获取\n$(window).scroll(function() {\n    console.log($(document).scrollTop());\n});\n\n// 设置\n// 特性：刷新时，不会生效。只有页面关闭在打开时，才会生效\n$(document).scrollTop(300)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            height: 888px;\n        }\n        \n        .father {\n            width: 400px;\n            height: 400px;\n            background-color: pink;\n            margin: 100px;\n            position: relative;\n        }\n        \n        .son {\n            width: 150px;\n            height: 150px;\n            background-color: purple;\n            position: absolute;\n            left: 10px;\n            top: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class="father">\n        <div class="son"></div>\n    </div>\n    <script>\n        // 一、offset()\n            // 操作元素相对于 文档 上边位置：offset().top\n            // 操作元素相对于 文档 左边位置：offset().left\n            \n            // 获取\n            $(".son").offset().top;  // 110\n            // 设置\n            $(".son").offset({\n                top: 400\n            })\n\n        // 二、position()\n\n            // 获取\n            $(".son").position().top;  // 300\n\n        // 三、scroll\n\n            // 获取\n            $(window).scroll(function() {\n                console.log($(document).scrollTop());\n            });\n            // 设置\n            // 特性：刷新时，不会生效。只有页面关闭在打开时，才会生效\n            $(document).scrollTop(300)\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n',normalizedContent:'# 知识点：操作元素位置\n\n返回值： 数字型，不跟单位\n\n特性： 设置元素时，需要写在对象里\n\n\n# 一、offset()\n\n操作元素相对于 文档 上边位置： offset().top\n\n操作元素相对于 文档 左边位置： offset().left\n\n// 获取\n$(".son").offset().top;  // 110\n\n// 设置\n$(".son").offset({\n    top: 400\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二、position()\n\n特性： 父级没有单位，则以文档为准\n\n获取元素相对于 定位父级 上边位置： position().top\n\n获取元素相对于 定位父级 左边位置： position().left\n\n// 获取\n$(".son").position().top;  // 300\n\n\n1\n2\n\n\n\n# 三、scroll\n\n操作元素 被卷去 上边位置： scrolltop()\n\n操作元素 被卷去 左边位置： scrollleft()\n\n// 获取\n$(window).scroll(function() {\n    console.log($(document).scrolltop());\n});\n\n// 设置\n// 特性：刷新时，不会生效。只有页面关闭在打开时，才会生效\n$(document).scrolltop(300)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            height: 888px;\n        }\n        \n        .father {\n            width: 400px;\n            height: 400px;\n            background-color: pink;\n            margin: 100px;\n            position: relative;\n        }\n        \n        .son {\n            width: 150px;\n            height: 150px;\n            background-color: purple;\n            position: absolute;\n            left: 10px;\n            top: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class="father">\n        <div class="son"></div>\n    </div>\n    <script>\n        // 一、offset()\n            // 操作元素相对于 文档 上边位置：offset().top\n            // 操作元素相对于 文档 左边位置：offset().left\n            \n            // 获取\n            $(".son").offset().top;  // 110\n            // 设置\n            $(".son").offset({\n                top: 400\n            })\n\n        // 二、position()\n\n            // 获取\n            $(".son").position().top;  // 300\n\n        // 三、scroll\n\n            // 获取\n            $(window).scroll(function() {\n                console.log($(document).scrolltop());\n            });\n            // 设置\n            // 特性：刷新时，不会生效。只有页面关闭在打开时，才会生效\n            $(document).scrolltop(300)\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"事件",frontmatter:{title:"事件",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/d2cbce/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/19.%E4%BA%8B%E4%BB%B6.html",relativePath:"《前端》笔记《库》/01.JQuery/19.事件.md",key:"v-6da7ed1e",path:"/pages/d2cbce/",headers:[{level:2,title:"一、绑定 单个 事件",slug:"一、绑定-单个-事件",normalizedTitle:"一、绑定 单个 事件",charIndex:13},{level:2,title:"二、绑定 多个 事件",slug:"二、绑定-多个-事件",normalizedTitle:"二、绑定 多个 事件",charIndex:143},{level:3,title:"（1）事件处理函数 相同",slug:"_1-事件处理函数-相同",normalizedTitle:"（1）事件处理函数 相同",charIndex:158},{level:3,title:"（2）事件处理函数 不同",slug:"_2-事件处理函数-不同",normalizedTitle:"（2）事件处理函数 不同",charIndex:451},{level:3,title:"（3）事件委派",slug:"_3-事件委派",normalizedTitle:"（3）事件委派",charIndex:1186},{level:3,title:"（4）可以给动态创建的元素绑定事件",slug:"_4-可以给动态创建的元素绑定事件",normalizedTitle:"（4）可以给动态创建的元素绑定事件",charIndex:1349}],headersStr:"一、绑定 单个 事件 二、绑定 多个 事件 （1）事件处理函数 相同 （2）事件处理函数 不同 （3）事件委派 （4）可以给动态创建的元素绑定事件",content:'# 知识点：事件\n\n\n# 一、绑定 单个 事件\n\n方法： $("元素").事件类型(function(){})\n\n$("div").click(function() {\n    $(this).css("background", "purple");\n});\n\n\n1\n2\n3\n\n\n\n# 二、绑定 多个 事件\n\n\n# （1）事件处理函数 相同\n\n重复触发： 元素.on(事件类型 事件类型 ...,[子元素],fn)\n\n$("div").on("mouseenter mouseleave", function() {\n    $(this).toggleClass("current");\n});\n\n\n1\n2\n3\n\n\n触发一次： 元素.one(事件类型 事件类型 ...,[子元素],fn)\n\n$("div").one("mouseenter mouseleave", function() {\n    $(this).toggleClass("current");\n});\n\n\n1\n2\n3\n\n\n\n# （2）事件处理函数 不同\n\n重复触发：\n\n元素.on({\n    事件类型: 事件处理函数,\n    事件类型: 事件处理函数,\n    ...\n})\n\n\n1\n2\n3\n4\n5\n\n\n$("div").on({\n    mouseenter: function() {\n        $(this).css("background", "skyblue");\n    },\n    click: function() {\n        $(this).css("background", "purple");\n    },\n    mouseleave: function() {\n        $(this).css("background", "blue");\n    }\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n触发一次：\n\n元素.one({\n    事件类型: 事件处理函数,\n    事件类型: 事件处理函数,\n    ...\n})\n\n\n1\n2\n3\n4\n5\n\n\n$("div").one({\n    mouseenter: function() {\n        $(this).css("background", "skyblue");\n    },\n    click: function() {\n        $(this).css("background", "purple");\n    },\n    mouseleave: function() {\n        $(this).css("background", "blue");\n    }\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# （3）事件委派\n\n重复触发：\n\n$("ul").on("click", "li", function() {\n    alert(11);\n});\n\n\n1\n2\n3\n\n\n触发一次：\n\n$("ul").one("click", "li", function() {\n    alert(11);\n});\n\n\n1\n2\n3\n\n\n\n# （4）可以给动态创建的元素绑定事件\n\n$("ol").on("click", "li", function() {\n    alert(11);\n})\nvar li = $("<li>我是后来创建的</li>");\n$("ol").append(li);\n\n\n1\n2\n3\n4\n5\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        div {\n            width: 100px;\n            height: 100px;\n            background-color: pink;\n        }\n        \n        .current {\n            background-color: purple;\n        }\n    </style>\n</head>\n<body>\n    <div></div>\n    <ul>\n        <li>我们都是好孩子</li>\n        <li>我们都是好孩子</li>\n        <li>我们都是好孩子</li>\n        <li>我们都是好孩子</li>\n        <li>我们都是好孩子</li>\n    </ul>\n    <ol>\n\n    </ol>\n    <script>\n        // （1）绑定 单个 事件\n        // 方法：$("元素").事件类型(function(){})\n        // $("div").click(function() {\n        //     $(this).css("background", "purple");\n        // });\n\n        // （2）绑定 多个 事件\n            // 1、事件处理函数 相同\n            // 重复触发：元素.on(事件类型 事件类型 ...,[子元素],fn)\n            // 触发一次：元素.one(事件类型 事件类型 ...,[子元素],fn)\n\n                // 重复触发：\n                // $("div").on("mouseenter mouseleave", function() {\n                //     $(this).toggleClass("current");\n                // });\n\n                // 只触发一次：\n                $("div").one("mouseenter mouseleave", function() {\n                    $(this).toggleClass("current");\n                });\n\n\n            // 2、事件处理函数 不同\n            /* \n                重复触发：元素.on({\n                    事件类型: 事件处理函数,\n                    事件类型: 事件处理函数,\n                    ...\n                })\n                触发一次：元素.one({\n                    事件类型: 事件处理函数,\n                    事件类型: 事件处理函数,\n                    ...\n                })\n            */\n                // 重复触发\n                // $("div").on({\n                //     mouseenter: function() {\n                //         $(this).css("background", "skyblue");\n                //     },\n                //     click: function() {\n                //         $(this).css("background", "purple");\n                //     },\n                //     mouseleave: function() {\n                //         $(this).css("background", "blue");\n                //     }\n                // });\n\n                // 触发一次：\n                $("div").one({\n                    mouseenter: function() {\n                        $(this).css("background", "skyblue");\n                    },\n                    click: function() {\n                        $(this).css("background", "purple");\n                    },\n                    mouseleave: function() {\n                        $(this).css("background", "blue");\n                    }\n                });\n            \n            // 3、事件委派\n                // 重复触发：\n                // $("ul").on("click", "li", function() {\n                //     alert(11);\n                // });\n\n                // 触发一次\n                $("ul").one("click", "li", function() {\n                    alert(11);\n                });\n\n            // 4、可以给动态创建的元素绑定事件\n            $("ol").on("click", "li", function() {\n                alert(11);\n            })\n            var li = $("<li>我是后来创建的</li>");\n            $("ol").append(li);\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n',normalizedContent:'# 知识点：事件\n\n\n# 一、绑定 单个 事件\n\n方法： $("元素").事件类型(function(){})\n\n$("div").click(function() {\n    $(this).css("background", "purple");\n});\n\n\n1\n2\n3\n\n\n\n# 二、绑定 多个 事件\n\n\n# （1）事件处理函数 相同\n\n重复触发： 元素.on(事件类型 事件类型 ...,[子元素],fn)\n\n$("div").on("mouseenter mouseleave", function() {\n    $(this).toggleclass("current");\n});\n\n\n1\n2\n3\n\n\n触发一次： 元素.one(事件类型 事件类型 ...,[子元素],fn)\n\n$("div").one("mouseenter mouseleave", function() {\n    $(this).toggleclass("current");\n});\n\n\n1\n2\n3\n\n\n\n# （2）事件处理函数 不同\n\n重复触发：\n\n元素.on({\n    事件类型: 事件处理函数,\n    事件类型: 事件处理函数,\n    ...\n})\n\n\n1\n2\n3\n4\n5\n\n\n$("div").on({\n    mouseenter: function() {\n        $(this).css("background", "skyblue");\n    },\n    click: function() {\n        $(this).css("background", "purple");\n    },\n    mouseleave: function() {\n        $(this).css("background", "blue");\n    }\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n触发一次：\n\n元素.one({\n    事件类型: 事件处理函数,\n    事件类型: 事件处理函数,\n    ...\n})\n\n\n1\n2\n3\n4\n5\n\n\n$("div").one({\n    mouseenter: function() {\n        $(this).css("background", "skyblue");\n    },\n    click: function() {\n        $(this).css("background", "purple");\n    },\n    mouseleave: function() {\n        $(this).css("background", "blue");\n    }\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# （3）事件委派\n\n重复触发：\n\n$("ul").on("click", "li", function() {\n    alert(11);\n});\n\n\n1\n2\n3\n\n\n触发一次：\n\n$("ul").one("click", "li", function() {\n    alert(11);\n});\n\n\n1\n2\n3\n\n\n\n# （4）可以给动态创建的元素绑定事件\n\n$("ol").on("click", "li", function() {\n    alert(11);\n})\nvar li = $("<li>我是后来创建的</li>");\n$("ol").append(li);\n\n\n1\n2\n3\n4\n5\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        div {\n            width: 100px;\n            height: 100px;\n            background-color: pink;\n        }\n        \n        .current {\n            background-color: purple;\n        }\n    </style>\n</head>\n<body>\n    <div></div>\n    <ul>\n        <li>我们都是好孩子</li>\n        <li>我们都是好孩子</li>\n        <li>我们都是好孩子</li>\n        <li>我们都是好孩子</li>\n        <li>我们都是好孩子</li>\n    </ul>\n    <ol>\n\n    </ol>\n    <script>\n        // （1）绑定 单个 事件\n        // 方法：$("元素").事件类型(function(){})\n        // $("div").click(function() {\n        //     $(this).css("background", "purple");\n        // });\n\n        // （2）绑定 多个 事件\n            // 1、事件处理函数 相同\n            // 重复触发：元素.on(事件类型 事件类型 ...,[子元素],fn)\n            // 触发一次：元素.one(事件类型 事件类型 ...,[子元素],fn)\n\n                // 重复触发：\n                // $("div").on("mouseenter mouseleave", function() {\n                //     $(this).toggleclass("current");\n                // });\n\n                // 只触发一次：\n                $("div").one("mouseenter mouseleave", function() {\n                    $(this).toggleclass("current");\n                });\n\n\n            // 2、事件处理函数 不同\n            /* \n                重复触发：元素.on({\n                    事件类型: 事件处理函数,\n                    事件类型: 事件处理函数,\n                    ...\n                })\n                触发一次：元素.one({\n                    事件类型: 事件处理函数,\n                    事件类型: 事件处理函数,\n                    ...\n                })\n            */\n                // 重复触发\n                // $("div").on({\n                //     mouseenter: function() {\n                //         $(this).css("background", "skyblue");\n                //     },\n                //     click: function() {\n                //         $(this).css("background", "purple");\n                //     },\n                //     mouseleave: function() {\n                //         $(this).css("background", "blue");\n                //     }\n                // });\n\n                // 触发一次：\n                $("div").one({\n                    mouseenter: function() {\n                        $(this).css("background", "skyblue");\n                    },\n                    click: function() {\n                        $(this).css("background", "purple");\n                    },\n                    mouseleave: function() {\n                        $(this).css("background", "blue");\n                    }\n                });\n            \n            // 3、事件委派\n                // 重复触发：\n                // $("ul").on("click", "li", function() {\n                //     alert(11);\n                // });\n\n                // 触发一次\n                $("ul").one("click", "li", function() {\n                    alert(11);\n                });\n\n            // 4、可以给动态创建的元素绑定事件\n            $("ol").on("click", "li", function() {\n                alert(11);\n            })\n            var li = $("<li>我是后来创建的</li>");\n            $("ol").append(li);\n\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"事件自动触发",frontmatter:{title:"事件自动触发",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/81b206/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/20.%E4%BA%8B%E4%BB%B6%E8%87%AA%E5%8A%A8%E8%A7%A6%E5%8F%91.html",relativePath:"《前端》笔记《库》/01.JQuery/20.事件自动触发.md",key:"v-516c7555",path:"/pages/81b206/",headers:[{level:2,title:"一、元素.事件类型()",slug:"一、元素-事件类型",normalizedTitle:"一、元素.事件类型()",charIndex:17},{level:2,title:'二、元素.trigger("事件类型")',slug:"二、元素-trigger-事件类型",normalizedTitle:"二、元素.trigger(&quot;事件类型&quot;)",charIndex:null},{level:2,title:'三、元素.triggerHandler("事件类型")',slug:"三、元素-triggerhandler-事件类型",normalizedTitle:"三、元素.triggerhandler(&quot;事件类型&quot;)",charIndex:null}],headersStr:'一、元素.事件类型() 二、元素.trigger("事件类型") 三、元素.triggerHandler("事件类型")',content:'# 知识点：事件自动触发\n\n\n# 一、元素.事件类型()\n\n$("div").click();\n\n\n# 二、元素.trigger("事件类型")\n\n$("input").trigger("focus");\n\n\n# 三、元素.triggerHandler("事件类型")\n\n$("input").triggerHandler("focus");\n\n特性： 不会触发元素的默认行为 如：input 的默认行为是自动对焦\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        div {\n            width: 100px;\n            height: 100px;\n            background-color: pink;\n        }\n    </style>\n</head>\n<body>\n    <div></div>\n    <input type="text">\n    <script>\n        $("div").on("click", function() {\n            alert(11);\n        });\n        $("input").on("focus", function() {\n            $(this).val("你好吗");\n        });\n\n        // 方法一：元素.事件类型()\n            // $("div").click();\n\n        // 方法二：元素.trigger("事件类型")\n            // $("input").trigger("focus");\n        \n        // 方法三：元素.triggerHandler("事件类型")\n        // 特性：不会触发元素的默认行为  如：input 的默认行为是自动对焦\n            $("input").triggerHandler("focus");\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n',normalizedContent:'# 知识点：事件自动触发\n\n\n# 一、元素.事件类型()\n\n$("div").click();\n\n\n# 二、元素.trigger("事件类型")\n\n$("input").trigger("focus");\n\n\n# 三、元素.triggerhandler("事件类型")\n\n$("input").triggerhandler("focus");\n\n特性： 不会触发元素的默认行为 如：input 的默认行为是自动对焦\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n    <style>\n        div {\n            width: 100px;\n            height: 100px;\n            background-color: pink;\n        }\n    </style>\n</head>\n<body>\n    <div></div>\n    <input type="text">\n    <script>\n        $("div").on("click", function() {\n            alert(11);\n        });\n        $("input").on("focus", function() {\n            $(this).val("你好吗");\n        });\n\n        // 方法一：元素.事件类型()\n            // $("div").click();\n\n        // 方法二：元素.trigger("事件类型")\n            // $("input").trigger("focus");\n        \n        // 方法三：元素.triggerhandler("事件类型")\n        // 特性：不会触发元素的默认行为  如：input 的默认行为是自动对焦\n            $("input").triggerhandler("focus");\n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"事件对象",frontmatter:{title:"事件对象",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/dff061/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/21.%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《库》/01.JQuery/21.事件对象.md",key:"v-0cce9194",path:"/pages/dff061/",headers:[{level:2,title:"一、阻止默认行为",slug:"一、阻止默认行为",normalizedTitle:"一、阻止默认行为",charIndex:15},{level:2,title:"二、阻止冒泡",slug:"二、阻止冒泡",normalizedTitle:"二、阻止冒泡",charIndex:52}],headersStr:"一、阻止默认行为 二、阻止冒泡",content:"# 知识点：事件对象\n\n\n# 一、阻止默认行为\n\n方法： e.preventDefault()\n\n\n# 二、阻止冒泡\n\n方法： e.stopPropagation()\n\n$(document).on('click', function () {\n  console.log('点击了document')\n})\n$('div').on('click', function (e) {\n  console.log('点击了div')\n  e.stopPropagation()\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Document</title>\n    <script src=\"sucai/jquery.min.js\"><\/script>\n    <style>\n      div {\n        width: 100px;\n        height: 100px;\n        background-color: pink;\n      }\n    </style>\n  </head>\n  <body>\n    <div></div>\n    <script>\n      // （1）阻止默认行为\n      // 方法：e.preventDefault()\n\n      // （2）阻止冒泡\n      // 方法：e.stopPropagation()\n      $(document).on('click', function () {\n        console.log('点击了document')\n      })\n      $('div').on('click', function (e) {\n        console.log('点击了div')\n        e.stopPropagation()\n      })\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n",normalizedContent:"# 知识点：事件对象\n\n\n# 一、阻止默认行为\n\n方法： e.preventdefault()\n\n\n# 二、阻止冒泡\n\n方法： e.stoppropagation()\n\n$(document).on('click', function () {\n  console.log('点击了document')\n})\n$('div').on('click', function (e) {\n  console.log('点击了div')\n  e.stoppropagation()\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# demo\n\n<!doctype html>\n<html lang=\"zh-cn\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>document</title>\n    <script src=\"sucai/jquery.min.js\"><\/script>\n    <style>\n      div {\n        width: 100px;\n        height: 100px;\n        background-color: pink;\n      }\n    </style>\n  </head>\n  <body>\n    <div></div>\n    <script>\n      // （1）阻止默认行为\n      // 方法：e.preventdefault()\n\n      // （2）阻止冒泡\n      // 方法：e.stoppropagation()\n      $(document).on('click', function () {\n        console.log('点击了document')\n      })\n      $('div').on('click', function (e) {\n        console.log('点击了div')\n        e.stoppropagation()\n      })\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"对象合并",frontmatter:{title:"对象合并",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/341517/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/22.%E5%AF%B9%E8%B1%A1%E5%90%88%E5%B9%B6.html",relativePath:"《前端》笔记《库》/01.JQuery/22.对象合并.md",key:"v-5186b60c",path:"/pages/341517/",headersStr:null,content:'# 知识点：对象合并\n\n作用： 将其它对象，合并到目标对象中\n\n方法： $.extend([true（深拷贝）；false（浅拷贝）], 目标对象, 其它对象, ...)\n\n特性：\n\n 1. 浅拷贝（默认）：拷贝的是地址，修改新对象时，会 影响原对象\n 2. 深拷贝：完全拷贝， 修改新对象时，不会 影响原对象\n 3. 合并对象时，目标对象已经有该属性，则其它对象会覆盖这个属性\n\n$.extend(true, targetObj, obj);\nconsole.log(targetObj);\n\n\n1\n2\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <script>\n        var targetObj = {\n            id: 0,\n            msg: {\n                sex: \'男\'\n            }\n        };\n        var obj = {\n            id: 1,\n            name: "andy",\n            msg: {\n                sex: \'女\',\n                age: 18\n            }\n        };\n        // 知识点：对象合并\n\n        // 作用：将其它对象，合并到目标对象中\n        // 方法：$.extend([true（深拷贝）；false（浅拷贝）], 目标对象, 其它对象, ...)\n        // 特性：\n            // 1、深拷贝：拷贝的是地址，修改新对象时，会 影响原对象\n            // 2、浅拷贝（默认）：完全拷贝，   修改新对象时，不会 影响原对象\n            // 3、合并对象时，目标对象已经有该属性，则其它对象会覆盖这个属性\n        $.extend(true, targetObj, obj);\n        console.log(targetObj);\n        \n\n        \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n',normalizedContent:'# 知识点：对象合并\n\n作用： 将其它对象，合并到目标对象中\n\n方法： $.extend([true（深拷贝）；false（浅拷贝）], 目标对象, 其它对象, ...)\n\n特性：\n\n 1. 浅拷贝（默认）：拷贝的是地址，修改新对象时，会 影响原对象\n 2. 深拷贝：完全拷贝， 修改新对象时，不会 影响原对象\n 3. 合并对象时，目标对象已经有该属性，则其它对象会覆盖这个属性\n\n$.extend(true, targetobj, obj);\nconsole.log(targetobj);\n\n\n1\n2\n\n\n\n# demo\n\n<!doctype html>\n<html lang="zh-cn">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <script>\n        var targetobj = {\n            id: 0,\n            msg: {\n                sex: \'男\'\n            }\n        };\n        var obj = {\n            id: 1,\n            name: "andy",\n            msg: {\n                sex: \'女\',\n                age: 18\n            }\n        };\n        // 知识点：对象合并\n\n        // 作用：将其它对象，合并到目标对象中\n        // 方法：$.extend([true（深拷贝）；false（浅拷贝）], 目标对象, 其它对象, ...)\n        // 特性：\n            // 1、深拷贝：拷贝的是地址，修改新对象时，会 影响原对象\n            // 2、浅拷贝（默认）：完全拷贝，   修改新对象时，不会 影响原对象\n            // 3、合并对象时，目标对象已经有该属性，则其它对象会覆盖这个属性\n        $.extend(true, targetobj, obj);\n        console.log(targetobj);\n        \n\n        \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"多库共存",frontmatter:{title:"多库共存",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e5f77f/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/23.%E5%A4%9A%E5%BA%93%E5%85%B1%E5%AD%98.html",relativePath:"《前端》笔记《库》/01.JQuery/23.多库共存.md",key:"v-f7c2d768",path:"/pages/e5f77f/",headersStr:null,content:'# 知识点：多库共存\n\n作用： 解决 $ 符号，和其它库冲突的问题\n\n方法一： 使用 jquery.方法/属性\n\nconsole.log(jQuery("div"));\n\n\n1\n\n\n方法二： 更改 $ 符号 jQuery.noConflict()\n\nvar suibian = jQuery.noConflict();\nconsole.log(suibian("span"));\n\n\n1\n2\n\n\n\n# demo\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <div></div>\n    <span></span>\n    <script>\n        // 作用：解决 $ 符号，和其它库冲突的问题\n        // 方法一：使用 jquery.方法/属性\n            console.log(jQuery("div"));\n            \n        // 方法二：更改 $ 符号 jQuery.noConflict()\n            var suibian = jQuery.noConflict();\n            console.log(suibian("span"));\n        \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 知识点：多库共存\n\n作用： 解决 $ 符号，和其它库冲突的问题\n\n方法一： 使用 jquery.方法/属性\n\nconsole.log(jquery("div"));\n\n\n1\n\n\n方法二： 更改 $ 符号 jquery.noconflict()\n\nvar suibian = jquery.noconflict();\nconsole.log(suibian("span"));\n\n\n1\n2\n\n\n\n# demo\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>document</title>\n    <script src="sucai/jquery.min.js"><\/script>\n</head>\n<body>\n    <div></div>\n    <span></span>\n    <script>\n        // 作用：解决 $ 符号，和其它库冲突的问题\n        // 方法一：使用 jquery.方法/属性\n            console.log(jquery("div"));\n            \n        // 方法二：更改 $ 符号 jquery.noconflict()\n            var suibian = jquery.noconflict();\n            console.log(suibian("span"));\n        \n    <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"插件",frontmatter:{title:"插件",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/a62464/",categories:["《前端》笔记《库》","JQuery"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/01.JQuery/24.%E6%8F%92%E4%BB%B6.html",relativePath:"《前端》笔记《库》/01.JQuery/24.插件.md",key:"v-409e8d99",path:"/pages/a62464/",headers:[{level:2,title:"jQuery 插件库：https://www.jq22.com/",slug:"jquery-插件库-https-www-jq22-com",normalizedTitle:"jquery 插件库：https://www.jq22.com/",charIndex:20},{level:2,title:"jQuery 之家：http://www.htmleaf.com/",slug:"jquery-之家-http-www-htmleaf-com",normalizedTitle:"jquery 之家：http://www.htmleaf.com/",charIndex:57}],headersStr:"jQuery 插件库：https://www.jq22.com/ jQuery 之家：http://www.htmleaf.com/",content:"# 知识点：jQuery 插件\n\n\n# jQuery 插件库：https://www.jq22.com/\n\n\n# jQuery 之家：http://www.htmleaf.com/",normalizedContent:"# 知识点：jquery 插件\n\n\n# jquery 插件库：https://www.jq22.com/\n\n\n# jquery 之家：http://www.htmleaf.com/",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"介绍",frontmatter:{title:"介绍",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/960d46/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/01.%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《库》/02.EChart/01.介绍.md",key:"v-6aed7fb9",path:"/pages/960d46/",headersStr:null,content:"ECharts\n\n官网：https://echarts.apache.org/zh/index.html\n\n作用：将数据可视化。也就是将数据以图表的方式呈现，这样可以清晰有效地传达信息\n\n特性：https://echarts.apache.org/zh/feature.html 1、由 JS 实现的开源可视化库 2、兼容性强 3、底层依赖 ZRender（矢量图形库） 4、多种数据格式支持 - key-value 数据格式 - 二维表 - TypedArray 格式 5、移动端优化 6、跨平台使用\n\n常见可视化工具：\n\n（1）报表类（面向非技术人员） 缺点：不灵活，数据发送变化，需要手动重新生成图标 实现方式： - Excel - 水晶报表\n\n（2）商业智能BI 缺点： 实现方式： - Microsoft BI - Power-BI\n\n（3）编码类（面向技术人员） 优点：实时生成动态图标 实现方式： - ECharts.js - D3.js\n\n常用图表： 1、柱状图 2、折线图 3、散点图 4、饼图 5、地图 6、雷达图 7、仪表盘图",normalizedContent:"echarts\n\n官网：https://echarts.apache.org/zh/index.html\n\n作用：将数据可视化。也就是将数据以图表的方式呈现，这样可以清晰有效地传达信息\n\n特性：https://echarts.apache.org/zh/feature.html 1、由 js 实现的开源可视化库 2、兼容性强 3、底层依赖 zrender（矢量图形库） 4、多种数据格式支持 - key-value 数据格式 - 二维表 - typedarray 格式 5、移动端优化 6、跨平台使用\n\n常见可视化工具：\n\n（1）报表类（面向非技术人员） 缺点：不灵活，数据发送变化，需要手动重新生成图标 实现方式： - excel - 水晶报表\n\n（2）商业智能bi 缺点： 实现方式： - microsoft bi - power-bi\n\n（3）编码类（面向技术人员） 优点：实时生成动态图标 实现方式： - echarts.js - d3.js\n\n常用图表： 1、柱状图 2、折线图 3、散点图 4、饼图 5、地图 6、雷达图 7、仪表盘图",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"使用步骤",frontmatter:{title:"使用步骤",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/c5d318/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/02.%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4.html",relativePath:"《前端》笔记《库》/02.EChart/02.使用步骤.md",key:"v-79227822",path:"/pages/c5d318/",headers:[{level:2,title:"导入（-- main.js）",slug:"导入-main-js",normalizedTitle:"导入（-- main.js）",charIndex:52},{level:2,title:"挂载到 vue 原型上（-- 同上）",slug:"挂载到-vue-原型上-同上",normalizedTitle:"挂载到 vue 原型上（-- 同上）",charIndex:112},{level:2,title:"（一）准备一个呈现图表的盒子",slug:"一-准备一个呈现图表的盒子",normalizedTitle:"（一）准备一个呈现图表的盒子",charIndex:174},{level:2,title:"（二）配置图表",slug:"二-配置图表",normalizedTitle:"（二）配置图表",charIndex:195},{level:2,title:"（三）初始化实例 并 将图表配置项设置给 echarts 实例",slug:"三-初始化实例-并-将图表配置项设置给-echarts-实例",normalizedTitle:"（三）初始化实例 并 将图表配置项设置给 echarts 实例",charIndex:587},{level:2,title:"（四）调用 xxxChart()",slug:"四-调用-xxxchart",normalizedTitle:"（四）调用 xxxchart()",charIndex:843}],headersStr:"导入（-- main.js） 挂载到 vue 原型上（-- 同上） （一）准备一个呈现图表的盒子 （二）配置图表 （三）初始化实例 并 将图表配置项设置给 echarts 实例 （四）调用 xxxChart()",content:"# 下载：npm install echarts@5.3.3\n\n\n# 一、vue 中的使用步骤\n\n\n# 导入（-- main.js）\n\nimport * as echarts from 'echarts'\n\n\n1\n\n\n\n# 挂载到 vue 原型上（-- 同上）\n\nVue.prototype.$echarts = echarts\n\n\n1\n\n\n\n# （一）准备一个呈现图表的盒子\n\n\n\n\n# （二）配置图表\n\ndata() {\n  return {\n    xxxChartConfig: { // xxx 图表配置项\n      title: { text: '太阳系八大行星的卫星数量' },\n      tooltip: {},\n      xAxis: {\n        data: [\"水星\",\"金星\",\"地球\",\"火星\",\"木星\",\"土星\",\"金王星\",\"海王星\"]\n      },\n      yAxis: {},\n      series: [{\n        name: '数量',\n        type: 'bar',\n        data: [0, 0, 1, 2, 79, 82, 27, 14]\n      }]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# （三）初始化实例 并 将图表配置项设置给 echarts 实例\n\nmethods: {\n  xxxChart() { // xxx图\n    const echarts = this.$echarts.init(document.getElementById('xxx-chart')) // 初始化 eacharts 实例\n    echarts.setOption(this.xxxChartConfig); // 将图表配置项设置给 echarts 实例\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （四）调用 xxxChart()\n\nmounted(){\n  this.xxxChart();\n},\n\n\n1\n2\n3\n\n\n\n# 二、传统页面 中的使用步骤\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n\n  \x3c!-- （1）引入 echarts 文件 --\x3e\n  <script src=\"lib/echarts.min.js\"><\/script>\n\n</head>\n\n<body>\n\n  \x3c!-- （2）准备一个呈现图表的盒子 --\x3e\n  <div style=\"width: 600px;height: 400px\"></div>\n\n  <script>\n\n    // （3）初始化 eacharts 实例对象\n    var mCharts = echarts.init(document.querySelector('div'))\n\n    // （4）设置配置项（设置呈现的图表）（配置项文档：https://echarts.apache.org/zh/option.html#title）\n    var option = {\n      title: {\n        text: '成绩', \n        link: 'http://www.baodu.com'\n      },\n      xAxis: {\n        type: 'category',\n        data: ['小明', '小红', '小王']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          name: '语文',\n          type: 'bar',\n\n          // 标记效果\n          markPoint: {\n            data: [\n              {\n                type: 'max', name: '最大值',\n              },{\n                type: 'min', name: '最小值',\n              }\n            ]\n          },\n          markLine: {\n            data: [\n              {\n                type: 'average', name: '平均值'\n              }\n            ]\n          },\n\n          // 显示效果\n          label: {\n            show: true, \n            position: 'top'\n          },\n          barWidth: '50%',\n          \n\n          data: [70, 92, 87]\n        }\n      ]\n    }\n\n    // （5）将配置项设置给 eacharts 实例对象\n    mCharts.setOption(option)\n\n  <\/script>\n</body>\n\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n",normalizedContent:"# 下载：npm install echarts@5.3.3\n\n\n# 一、vue 中的使用步骤\n\n\n# 导入（-- main.js）\n\nimport * as echarts from 'echarts'\n\n\n1\n\n\n\n# 挂载到 vue 原型上（-- 同上）\n\nvue.prototype.$echarts = echarts\n\n\n1\n\n\n\n# （一）准备一个呈现图表的盒子\n\n\n\n\n# （二）配置图表\n\ndata() {\n  return {\n    xxxchartconfig: { // xxx 图表配置项\n      title: { text: '太阳系八大行星的卫星数量' },\n      tooltip: {},\n      xaxis: {\n        data: [\"水星\",\"金星\",\"地球\",\"火星\",\"木星\",\"土星\",\"金王星\",\"海王星\"]\n      },\n      yaxis: {},\n      series: [{\n        name: '数量',\n        type: 'bar',\n        data: [0, 0, 1, 2, 79, 82, 27, 14]\n      }]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# （三）初始化实例 并 将图表配置项设置给 echarts 实例\n\nmethods: {\n  xxxchart() { // xxx图\n    const echarts = this.$echarts.init(document.getelementbyid('xxx-chart')) // 初始化 eacharts 实例\n    echarts.setoption(this.xxxchartconfig); // 将图表配置项设置给 echarts 实例\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （四）调用 xxxchart()\n\nmounted(){\n  this.xxxchart();\n},\n\n\n1\n2\n3\n\n\n\n# 二、传统页面 中的使用步骤\n\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n  <title>document</title>\n\n  \x3c!-- （1）引入 echarts 文件 --\x3e\n  <script src=\"lib/echarts.min.js\"><\/script>\n\n</head>\n\n<body>\n\n  \x3c!-- （2）准备一个呈现图表的盒子 --\x3e\n  <div style=\"width: 600px;height: 400px\"></div>\n\n  <script>\n\n    // （3）初始化 eacharts 实例对象\n    var mcharts = echarts.init(document.queryselector('div'))\n\n    // （4）设置配置项（设置呈现的图表）（配置项文档：https://echarts.apache.org/zh/option.html#title）\n    var option = {\n      title: {\n        text: '成绩', \n        link: 'http://www.baodu.com'\n      },\n      xaxis: {\n        type: 'category',\n        data: ['小明', '小红', '小王']\n      },\n      yaxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          name: '语文',\n          type: 'bar',\n\n          // 标记效果\n          markpoint: {\n            data: [\n              {\n                type: 'max', name: '最大值',\n              },{\n                type: 'min', name: '最小值',\n              }\n            ]\n          },\n          markline: {\n            data: [\n              {\n                type: 'average', name: '平均值'\n              }\n            ]\n          },\n\n          // 显示效果\n          label: {\n            show: true, \n            position: 'top'\n          },\n          barwidth: '50%',\n          \n\n          data: [70, 92, 87]\n        }\n      ]\n    }\n\n    // （5）将配置项设置给 eacharts 实例对象\n    mcharts.setoption(option)\n\n  <\/script>\n</body>\n\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"通用配置",frontmatter:{title:"通用配置",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/ee2b65/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/03.%E9%80%9A%E7%94%A8%E9%85%8D%E7%BD%AE.html",relativePath:"《前端》笔记《库》/02.EChart/03.通用配置.md",key:"v-78db4470",path:"/pages/ee2b65/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"直角坐标系中的通用配置项",frontmatter:{title:"直角坐标系中的通用配置项",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/247f53/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/04.%E7%9B%B4%E8%A7%92%E5%9D%90%E6%A0%87%E7%B3%BB%E4%B8%AD%E7%9A%84%E9%80%9A%E7%94%A8%E9%85%8D%E7%BD%AE%E9%A1%B9.html",relativePath:"《前端》笔记《库》/02.EChart/04.直角坐标系中的通用配置项.md",key:"v-2d97e714",path:"/pages/247f53/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"柱状图",frontmatter:{title:"柱状图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/265663/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/05.%E6%9F%B1%E7%8A%B6%E5%9B%BE.html",relativePath:"《前端》笔记《库》/02.EChart/05.柱状图.md",key:"v-2431e7cc",path:"/pages/265663/",headers:[{level:2,title:"（一）呈现每一个分类的信息",slug:"一-呈现每一个分类的信息",normalizedTitle:"（一）呈现每一个分类的信息",charIndex:11}],headersStr:"（一）呈现每一个分类的信息",content:"# 应用场景\n\n\n# （一）呈现每一个分类的信息\n\n\n# 配置项\n\npillarChartConfig: { // 柱状图 配置项\n  title: { // 标题组件\n    text: '柱状图', // 主标题\n  },\n  xAxis: { // 直角坐标系中的 x 轴\n    type: 'category', // category：类目轴\n    data: ['小明', '小红', '小王'] // x 轴数据\n  },\n  yAxis: { // 直角坐标系中的 y 轴\n    type: 'value' // value：数值轴\n  },\n  series: [ // 系列列表。每个系列通过 type 决定图表类型\n    {\n      name: '语文',\n      type: 'bar', // bar：柱状图  line：折线图  饼图：pie\n      markPoint: { // 标记效果\n        data: [\n          {\n            type: 'max', name: '最大值',\n          },\n          {\n            type: 'min', name: '最小值',\n          }\n        ]\n      },\n      markLine: {\n        data: [\n          {\n            type: 'average', name: '平均值'\n          }\n        ]\n      },\n      // 显示效果\n      label: {\n        show: true,  // 显示类目的数值\n        position: 'top' // 类目数值的位置\n      },\n      barWidth: '50%',  // 柱的宽度\n      data: [70, 92, 87]  // y 轴数据\n\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 横向柱状图\n\n互换 x轴 和 y轴 中的代码",normalizedContent:"# 应用场景\n\n\n# （一）呈现每一个分类的信息\n\n\n# 配置项\n\npillarchartconfig: { // 柱状图 配置项\n  title: { // 标题组件\n    text: '柱状图', // 主标题\n  },\n  xaxis: { // 直角坐标系中的 x 轴\n    type: 'category', // category：类目轴\n    data: ['小明', '小红', '小王'] // x 轴数据\n  },\n  yaxis: { // 直角坐标系中的 y 轴\n    type: 'value' // value：数值轴\n  },\n  series: [ // 系列列表。每个系列通过 type 决定图表类型\n    {\n      name: '语文',\n      type: 'bar', // bar：柱状图  line：折线图  饼图：pie\n      markpoint: { // 标记效果\n        data: [\n          {\n            type: 'max', name: '最大值',\n          },\n          {\n            type: 'min', name: '最小值',\n          }\n        ]\n      },\n      markline: {\n        data: [\n          {\n            type: 'average', name: '平均值'\n          }\n        ]\n      },\n      // 显示效果\n      label: {\n        show: true,  // 显示类目的数值\n        position: 'top' // 类目数值的位置\n      },\n      barwidth: '50%',  // 柱的宽度\n      data: [70, 92, 87]  // y 轴数据\n\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 横向柱状图\n\n互换 x轴 和 y轴 中的代码",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"折线图",frontmatter:{title:"折线图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/d9763d/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/06.%E6%8A%98%E7%BA%BF%E5%9B%BE.html",relativePath:"《前端》笔记《库》/02.EChart/06.折线图.md",key:"v-677e8b92",path:"/pages/d9763d/",headers:[{level:2,title:"（一）呈现数据随时间的变化趋势",slug:"一-呈现数据随时间的变化趋势",normalizedTitle:"（一）呈现数据随时间的变化趋势",charIndex:11}],headersStr:"（一）呈现数据随时间的变化趋势",content:"# 应用场景\n\n\n# （一）呈现数据随时间的变化趋势\n\n\n# 配置项\n\nfoldingLineChartConfig: { // 折线图 配置项\n  title: { // 标题组件\n    text: '折线图', // 主标题\n  },\n  xAxis: {\n    type: 'category',\n    data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    boundaryGap: false // 紧挨边缘\n  },\n  yAxis: {\n    type: 'value',\n    scale: true // 脱离 0 值比例（适合值差距不大的情况下使用，从最小的值开始，最大的值结束）\n  },\n  series: [\n    {\n      name: '康师傅',\n      type: 'line', // 图标类型：折线图\n      data: [3005, 3003, 3001, 3002, 3009, 3007, 3003, 3001, 3005, 3004, 3001, 3009], // 值差距不大,\n      stack: 'all', // 堆叠图\n      markPoint: {\n        data: [\n          {\n            type: 'max' // 最大值\n          },\n          {\n            type: 'min' // 最小值\n          }\n        ]\n      },\n      markLine: {\n        data: [\n          {\n            type: 'average' // 平均值\n          }\n        ]\n      },\n      markArea: { // 标注区间\n        data: [\n          [\n            {\n              xAxis: '1月' // 开始值\n            },\n            {\n              xAxis: '2月' // 结束值\n            }\n          ],\n          [\n            {\n              xAxis: '7月' // 开始值\n            },\n            {\n              xAxis: '8月' // 结束值\n            }\n          ]\n        ]\n      },\n      smooth: true, // 线条风格：true（平滑）\n      lineStyle: {\n        color: 'green', // 线条颜色\n        type: 'dashed' // 线条类型：dotted（虚线）solid（点线）\n      },\n      areaStyle: { // 填充\n        color: 'pink' // 填充颜色\n      }\n    },\n    {\n      type: 'line',\n      data: [2000, 3800, 1900, 500, 900, 1700, 2400, 300, 1900, 1500, 1800, 200],\n      stack: 'all', // 堆叠图（基于第一个系列的基础上，进行累加）\n      areaStyle: {}\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n",normalizedContent:"# 应用场景\n\n\n# （一）呈现数据随时间的变化趋势\n\n\n# 配置项\n\nfoldinglinechartconfig: { // 折线图 配置项\n  title: { // 标题组件\n    text: '折线图', // 主标题\n  },\n  xaxis: {\n    type: 'category',\n    data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    boundarygap: false // 紧挨边缘\n  },\n  yaxis: {\n    type: 'value',\n    scale: true // 脱离 0 值比例（适合值差距不大的情况下使用，从最小的值开始，最大的值结束）\n  },\n  series: [\n    {\n      name: '康师傅',\n      type: 'line', // 图标类型：折线图\n      data: [3005, 3003, 3001, 3002, 3009, 3007, 3003, 3001, 3005, 3004, 3001, 3009], // 值差距不大,\n      stack: 'all', // 堆叠图\n      markpoint: {\n        data: [\n          {\n            type: 'max' // 最大值\n          },\n          {\n            type: 'min' // 最小值\n          }\n        ]\n      },\n      markline: {\n        data: [\n          {\n            type: 'average' // 平均值\n          }\n        ]\n      },\n      markarea: { // 标注区间\n        data: [\n          [\n            {\n              xaxis: '1月' // 开始值\n            },\n            {\n              xaxis: '2月' // 结束值\n            }\n          ],\n          [\n            {\n              xaxis: '7月' // 开始值\n            },\n            {\n              xaxis: '8月' // 结束值\n            }\n          ]\n        ]\n      },\n      smooth: true, // 线条风格：true（平滑）\n      linestyle: {\n        color: 'green', // 线条颜色\n        type: 'dashed' // 线条类型：dotted（虚线）solid（点线）\n      },\n      areastyle: { // 填充\n        color: 'pink' // 填充颜色\n      }\n    },\n    {\n      type: 'line',\n      data: [2000, 3800, 1900, 500, 900, 1700, 2400, 300, 1900, 1500, 1800, 200],\n      stack: 'all', // 堆叠图（基于第一个系列的基础上，进行累加）\n      areastyle: {}\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"散点图",frontmatter:{title:"散点图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/b8894e/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/07.%E6%95%A3%E7%82%B9%E5%9B%BE.html",relativePath:"《前端》笔记《库》/02.EChart/07.散点图.md",key:"v-fd572a12",path:"/pages/b8894e/",headers:[{level:2,title:"（一）呈现不同维度数据之间的相关性（正相关、负相关、不相关）",slug:"一-呈现不同维度数据之间的相关性-正相关、负相关、不相关",normalizedTitle:"（一）呈现不同维度数据之间的相关性（正相关、负相关、不相关）",charIndex:11},{level:2,title:"（二）用于地图的标注",slug:"二-用于地图的标注",normalizedTitle:"（二）用于地图的标注",charIndex:46},{level:2,title:"1、x轴 和 y轴，都代表数值",slug:"_1、x轴-和-y轴-都代表数值",normalizedTitle:"1、x轴 和 y轴，都代表数值",charIndex:68},{level:2,title:"2、数据为二维数组。  如：数组1:[ [身高1, 体重1], [身高2, 体重2], ... ]",slug:"_2、数据为二维数组。-如-数组1-身高1-体重1-身高2-体重2",normalizedTitle:"2、数据为二维数组。  如：数组1:[ [身高1, 体重1], [身高2, 体重2], ... ]",charIndex:null},{level:2,title:"（一）气泡图效果（每个散点大小根据数据的不同发生变化）",slug:"一-气泡图效果-每个散点大小根据数据的不同发生变化",normalizedTitle:"（一）气泡图效果（每个散点大小根据数据的不同发生变化）",charIndex:150},{level:3,title:"（1）操作 散点大小",slug:"_1-操作-散点大小",normalizedTitle:"（1）操作 散点大小",charIndex:182},{level:3,title:"（2）操作 散点颜色",slug:"_2-操作-散点颜色",normalizedTitle:"（2）操作 散点颜色",charIndex:197},{level:2,title:"（二）涟漪动画效果",slug:"二-涟漪动画效果",normalizedTitle:"（二）涟漪动画效果",charIndex:212},{level:3,title:"（1）将图标类型设置为 effectScatter",slug:"_1-将图标类型设置为-effectscatter",normalizedTitle:"（1）将图标类型设置为 effectscatter",charIndex:226}],headersStr:"（一）呈现不同维度数据之间的相关性（正相关、负相关、不相关） （二）用于地图的标注 1、x轴 和 y轴，都代表数值 2、数据为二维数组。  如：数组1:[ [身高1, 体重1], [身高2, 体重2], ... ] （一）气泡图效果（每个散点大小根据数据的不同发生变化） （1）操作 散点大小 （2）操作 散点颜色 （二）涟漪动画效果 （1）将图标类型设置为 effectScatter",content:'# 应用场景\n\n\n# （一）呈现不同维度数据之间的相关性（正相关、负相关、不相关）\n\n\n# （二）用于地图的标注\n\n\n# 特性\n\n\n# 1、x轴 和 y轴，都代表数值\n\n\n# 2、数据为二维数组。 如：数组1:[ [身高1, 体重1], [身高2, 体重2], ... ]\n\n\n# 常见效果\n\n\n# （一）气泡图效果（每个散点大小根据数据的不同发生变化）\n\n\n# （1）操作 散点大小\n\n\n# （2）操作 散点颜色\n\n\n# （二）涟漪动画效果\n\n\n# （1）将图标类型设置为 effectScatter\n\n\n# 例\n\n<!DOCTYPE html>\n<html lang="en">\n\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <meta http-equiv="X-UA-Compatible" content="ie=edge">\n  <title>Document</title>\n  <script src="lib/echarts.min.js"><\/script>\n</head>\n\n<body>\n  <div style="width: 600px;height:400px"></div>\n  <script>\n    // 507 组数据\n    // height：身高  weight：体重\n    var data = [{ "gender": "female", "height": 161.2, "weight": 51.6 }, { "gender": "female", "height": 167.5, "weight": 59 }, { "gender": "female", "height": 159.5, "weight": 49.2 }, { "gender": "female", "height": 157, "weight": 63 }, { "gender": "female", "height": 155.8, "weight": 53.6 }, { "gender": "female", "height": 170, "weight": 59 }, { "gender": "female", "height": 159.1, "weight": 47.6 }, { "gender": "female", "height": 166, "weight": 69.8 }, { "gender": "female", "height": 176.2, "weight": 66.8 }, { "gender": "female", "height": 160.2, "weight": 75.2 }, { "gender": "female", "height": 172.5, "weight": 55.2 }, { "gender": "female", "height": 170.9, "weight": 54.2 }, { "gender": "female", "height": 172.9, "weight": 62.5 }, { "gender": "female", "height": 153.4, "weight": 42 }, { "gender": "female", "height": 160, "weight": 50 }, { "gender": "female", "height": 147.2, "weight": 49.8 }, { "gender": "female", "height": 168.2, "weight": 49.2 }, { "gender": "female", "height": 175, "weight": 73.2 }, { "gender": "female", "height": 157, "weight": 47.8 }, { "gender": "female", "height": 167.6, "weight": 68.8 }, { "gender": "female", "height": 159.5, "weight": 50.6 }, { "gender": "female", "height": 175, "weight": 82.5 }, { "gender": "female", "height": 166.8, "weight": 57.2 }, { "gender": "female", "height": 176.5, "weight": 87.8 }, { "gender": "female", "height": 170.2, "weight": 72.8 }, { "gender": "female", "height": 174, "weight": 54.5 }, { "gender": "female", "height": 173, "weight": 59.8 }, { "gender": "female", "height": 179.9, "weight": 67.3 }, { "gender": "female", "height": 170.5, "weight": 67.8 }, { "gender": "female", "height": 160, "weight": 47 }, { "gender": "female", "height": 154.4, "weight": 46.2 }, { "gender": "female", "height": 162, "weight": 55 }, { "gender": "female", "height": 176.5, "weight": 83 }, { "gender": "female", "height": 160, "weight": 54.4 }, { "gender": "female", "height": 152, "weight": 45.8 }, { "gender": "female", "height": 162.1, "weight": 53.6 }, { "gender": "female", "height": 170, "weight": 73.2 }, { "gender": "female", "height": 160.2, "weight": 52.1 }, { "gender": "female", "height": 161.3, "weight": 67.9 }, { "gender": "female", "height": 166.4, "weight": 56.6 }, { "gender": "female", "height": 168.9, "weight": 62.3 }, { "gender": "female", "height": 163.8, "weight": 58.5 }, { "gender": "female", "height": 167.6, "weight": 54.5 }, { "gender": "female", "height": 160, "weight": 50.2 }, { "gender": "female", "height": 161.3, "weight": 60.3 }, { "gender": "female", "height": 167.6, "weight": 58.3 }, { "gender": "female", "height": 165.1, "weight": 56.2 }, { "gender": "female", "height": 160, "weight": 50.2 }, { "gender": "female", "height": 170, "weight": 72.9 }, { "gender": "female", "height": 157.5, "weight": 59.8 }, { "gender": "female", "height": 167.6, "weight": 61 }, { "gender": "female", "height": 160.7, "weight": 69.1 }, { "gender": "female", "height": 163.2, "weight": 55.9 }, { "gender": "female", "height": 152.4, "weight": 46.5 }, { "gender": "female", "height": 157.5, "weight": 54.3 }, { "gender": "female", "height": 168.3, "weight": 54.8 }, { "gender": "female", "height": 180.3, "weight": 60.7 }, { "gender": "female", "height": 165.5, "weight": 60 }, { "gender": "female", "height": 165, "weight": 62 }, { "gender": "female", "height": 164.5, "weight": 60.3 }, { "gender": "female", "height": 156, "weight": 52.7 }, { "gender": "female", "height": 160, "weight": 74.3 }, { "gender": "female", "height": 163, "weight": 62 }, { "gender": "female", "height": 165.7, "weight": 73.1 }, { "gender": "female", "height": 161, "weight": 80 }, { "gender": "female", "height": 162, "weight": 54.7 }, { "gender": "female", "height": 166, "weight": 53.2 }, { "gender": "female", "height": 174, "weight": 75.7 }, { "gender": "female", "height": 172.7, "weight": 61.1 }, { "gender": "female", "height": 167.6, "weight": 55.7 }, { "gender": "female", "height": 151.1, "weight": 48.7 }, { "gender": "female", "height": 164.5, "weight": 52.3 }, { "gender": "female", "height": 163.5, "weight": 50 }, { "gender": "female", "height": 152, "weight": 59.3 }, { "gender": "female", "height": 169, "weight": 62.5 }, { "gender": "female", "height": 164, "weight": 55.7 }, { "gender": "female", "height": 161.2, "weight": 54.8 }, { "gender": "female", "height": 155, "weight": 45.9 }, { "gender": "female", "height": 170, "weight": 70.6 }, { "gender": "female", "height": 176.2, "weight": 67.2 }, { "gender": "female", "height": 170, "weight": 69.4 }, { "gender": "female", "height": 162.5, "weight": 58.2 }, { "gender": "female", "height": 170.3, "weight": 64.8 }, { "gender": "female", "height": 164.1, "weight": 71.6 }, { "gender": "female", "height": 169.5, "weight": 52.8 }, { "gender": "female", "height": 163.2, "weight": 59.8 }, { "gender": "female", "height": 154.5, "weight": 49 }, { "gender": "female", "height": 159.8, "weight": 50 }, { "gender": "female", "height": 173.2, "weight": 69.2 }, { "gender": "female", "height": 170, "weight": 55.9 }, { "gender": "female", "height": 161.4, "weight": 63.4 }, { "gender": "female", "height": 169, "weight": 58.2 }, { "gender": "female", "height": 166.2, "weight": 58.6 }, { "gender": "female", "height": 159.4, "weight": 45.7 }, { "gender": "female", "height": 162.5, "weight": 52.2 }, { "gender": "female", "height": 159, "weight": 48.6 }, { "gender": "female", "height": 162.8, "weight": 57.8 }, { "gender": "female", "height": 159, "weight": 55.6 }, { "gender": "female", "height": 179.8, "weight": 66.8 }, { "gender": "female", "height": 162.9, "weight": 59.4 }, { "gender": "female", "height": 161, "weight": 53.6 }, { "gender": "female", "height": 151.1, "weight": 73.2 }, { "gender": "female", "height": 168.2, "weight": 53.4 }, { "gender": "female", "height": 168.9, "weight": 69 }, { "gender": "female", "height": 173.2, "weight": 58.4 }, { "gender": "female", "height": 171.8, "weight": 56.2 }, { "gender": "female", "height": 178, "weight": 70.6 }, { "gender": "female", "height": 164.3, "weight": 59.8 }, { "gender": "female", "height": 163, "weight": 72 }, { "gender": "female", "height": 168.5, "weight": 65.2 }, { "gender": "female", "height": 166.8, "weight": 56.6 }, { "gender": "female", "height": 172.7, "weight": 105.2 }, { "gender": "female", "height": 163.5, "weight": 51.8 }, { "gender": "female", "height": 169.4, "weight": 63.4 }, { "gender": "female", "height": 167.8, "weight": 59 }, { "gender": "female", "height": 159.5, "weight": 47.6 }, { "gender": "female", "height": 167.6, "weight": 63 }, { "gender": "female", "height": 161.2, "weight": 55.2 }, { "gender": "female", "height": 160, "weight": 45 }, { "gender": "female", "height": 163.2, "weight": 54 }, { "gender": "female", "height": 162.2, "weight": 50.2 }, { "gender": "female", "height": 161.3, "weight": 60.2 }, { "gender": "female", "height": 149.5, "weight": 44.8 }, { "gender": "female", "height": 157.5, "weight": 58.8 }, { "gender": "female", "height": 163.2, "weight": 56.4 }, { "gender": "female", "height": 172.7, "weight": 62 }, { "gender": "female", "height": 155, "weight": 49.2 }, { "gender": "female", "height": 156.5, "weight": 67.2 }, { "gender": "female", "height": 164, "weight": 53.8 }, { "gender": "female", "height": 160.9, "weight": 54.4 }, { "gender": "female", "height": 162.8, "weight": 58 }, { "gender": "female", "height": 167, "weight": 59.8 }, { "gender": "female", "height": 160, "weight": 54.8 }, { "gender": "female", "height": 160, "weight": 43.2 }, { "gender": "female", "height": 168.9, "weight": 60.5 }, { "gender": "female", "height": 158.2, "weight": 46.4 }, { "gender": "female", "height": 156, "weight": 64.4 }, { "gender": "female", "height": 160, "weight": 48.8 }, { "gender": "female", "height": 167.1, "weight": 62.2 }, { "gender": "female", "height": 158, "weight": 55.5 }, { "gender": "female", "height": 167.6, "weight": 57.8 }, { "gender": "female", "height": 156, "weight": 54.6 }, { "gender": "female", "height": 162.1, "weight": 59.2 }, { "gender": "female", "height": 173.4, "weight": 52.7 }, { "gender": "female", "height": 159.8, "weight": 53.2 }, { "gender": "female", "height": 170.5, "weight": 64.5 }, { "gender": "female", "height": 159.2, "weight": 51.8 }, { "gender": "female", "height": 157.5, "weight": 56 }, { "gender": "female", "height": 161.3, "weight": 63.6 }, { "gender": "female", "height": 162.6, "weight": 63.2 }, { "gender": "female", "height": 160, "weight": 59.5 }, { "gender": "female", "height": 168.9, "weight": 56.8 }, { "gender": "female", "height": 165.1, "weight": 64.1 }, { "gender": "female", "height": 162.6, "weight": 50 }, { "gender": "female", "height": 165.1, "weight": 72.3 }, { "gender": "female", "height": 166.4, "weight": 55 }, { "gender": "female", "height": 160, "weight": 55.9 }, { "gender": "female", "height": 152.4, "weight": 60.4 }, { "gender": "female", "height": 170.2, "weight": 69.1 }, { "gender": "female", "height": 162.6, "weight": 84.5 }, { "gender": "female", "height": 170.2, "weight": 55.9 }, { "gender": "female", "height": 158.8, "weight": 55.5 }, { "gender": "female", "height": 172.7, "weight": 69.5 }, { "gender": "female", "height": 167.6, "weight": 76.4 }, { "gender": "female", "height": 162.6, "weight": 61.4 }, { "gender": "female", "height": 167.6, "weight": 65.9 }, { "gender": "female", "height": 156.2, "weight": 58.6 }, { "gender": "female", "height": 175.2, "weight": 66.8 }, { "gender": "female", "height": 172.1, "weight": 56.6 }, { "gender": "female", "height": 162.6, "weight": 58.6 }, { "gender": "female", "height": 160, "weight": 55.9 }, { "gender": "female", "height": 165.1, "weight": 59.1 }, { "gender": "female", "height": 182.9, "weight": 81.8 }, { "gender": "female", "height": 166.4, "weight": 70.7 }, { "gender": "female", "height": 165.1, "weight": 56.8 }, { "gender": "female", "height": 177.8, "weight": 60 }, { "gender": "female", "height": 165.1, "weight": 58.2 }, { "gender": "female", "height": 175.3, "weight": 72.7 }, { "gender": "female", "height": 154.9, "weight": 54.1 }, { "gender": "female", "height": 158.8, "weight": 49.1 }, { "gender": "female", "height": 172.7, "weight": 75.9 }, { "gender": "female", "height": 168.9, "weight": 55 }, { "gender": "female", "height": 161.3, "weight": 57.3 }, { "gender": "female", "height": 167.6, "weight": 55 }, { "gender": "female", "height": 165.1, "weight": 65.5 }, { "gender": "female", "height": 175.3, "weight": 65.5 }, { "gender": "female", "height": 157.5, "weight": 48.6 }, { "gender": "female", "height": 163.8, "weight": 58.6 }, { "gender": "female", "height": 167.6, "weight": 63.6 }, { "gender": "female", "height": 165.1, "weight": 55.2 }, { "gender": "female", "height": 165.1, "weight": 62.7 }, { "gender": "female", "height": 168.9, "weight": 56.6 }, { "gender": "female", "height": 162.6, "weight": 53.9 }, { "gender": "female", "height": 164.5, "weight": 63.2 }, { "gender": "female", "height": 176.5, "weight": 73.6 }, { "gender": "female", "height": 168.9, "weight": 62 }, { "gender": "female", "height": 175.3, "weight": 63.6 }, { "gender": "female", "height": 159.4, "weight": 53.2 }, { "gender": "female", "height": 160, "weight": 53.4 }, { "gender": "female", "height": 170.2, "weight": 55 }, { "gender": "female", "height": 162.6, "weight": 70.5 }, { "gender": "female", "height": 167.6, "weight": 54.5 }, { "gender": "female", "height": 162.6, "weight": 54.5 }, { "gender": "female", "height": 160.7, "weight": 55.9 }, { "gender": "female", "height": 160, "weight": 59 }, { "gender": "female", "height": 157.5, "weight": 63.6 }, { "gender": "female", "height": 162.6, "weight": 54.5 }, { "gender": "female", "height": 152.4, "weight": 47.3 }, { "gender": "female", "height": 170.2, "weight": 67.7 }, { "gender": "female", "height": 165.1, "weight": 80.9 }, { "gender": "female", "height": 172.7, "weight": 70.5 }, { "gender": "female", "height": 165.1, "weight": 60.9 }, { "gender": "female", "height": 170.2, "weight": 63.6 }, { "gender": "female", "height": 170.2, "weight": 54.5 }, { "gender": "female", "height": 170.2, "weight": 59.1 }, { "gender": "female", "height": 161.3, "weight": 70.5 }, { "gender": "female", "height": 167.6, "weight": 52.7 }, { "gender": "female", "height": 167.6, "weight": 62.7 }, { "gender": "female", "height": 165.1, "weight": 86.3 }, { "gender": "female", "height": 162.6, "weight": 66.4 }, { "gender": "female", "height": 152.4, "weight": 67.3 }, { "gender": "female", "height": 168.9, "weight": 63 }, { "gender": "female", "height": 170.2, "weight": 73.6 }, { "gender": "female", "height": 175.2, "weight": 62.3 }, { "gender": "female", "height": 175.2, "weight": 57.7 }, { "gender": "female", "height": 160, "weight": 55.4 }, { "gender": "female", "height": 165.1, "weight": 104.1 }, { "gender": "female", "height": 174, "weight": 55.5 }, { "gender": "female", "height": 170.2, "weight": 77.3 }, { "gender": "female", "height": 160, "weight": 80.5 }, { "gender": "female", "height": 167.6, "weight": 64.5 }, { "gender": "female", "height": 167.6, "weight": 72.3 }, { "gender": "female", "height": 167.6, "weight": 61.4 }, { "gender": "female", "height": 154.9, "weight": 58.2 }, { "gender": "female", "height": 162.6, "weight": 81.8 }, { "gender": "female", "height": 175.3, "weight": 63.6 }, { "gender": "female", "height": 171.4, "weight": 53.4 }, { "gender": "female", "height": 157.5, "weight": 54.5 }, { "gender": "female", "height": 165.1, "weight": 53.6 }, { "gender": "female", "height": 160, "weight": 60 }, { "gender": "female", "height": 174, "weight": 73.6 }, { "gender": "female", "height": 162.6, "weight": 61.4 }, { "gender": "female", "height": 174, "weight": 55.5 }, { "gender": "female", "height": 162.6, "weight": 63.6 }, { "gender": "female", "height": 161.3, "weight": 60.9 }, { "gender": "female", "height": 156.2, "weight": 60 }, { "gender": "female", "height": 149.9, "weight": 46.8 }, { "gender": "female", "height": 169.5, "weight": 57.3 }, { "gender": "female", "height": 160, "weight": 64.1 }, { "gender": "female", "height": 175.3, "weight": 63.6 }, { "gender": "female", "height": 169.5, "weight": 67.3 }, { "gender": "female", "height": 160, "weight": 75.5 }, { "gender": "female", "height": 172.7, "weight": 68.2 }, { "gender": "female", "height": 162.6, "weight": 61.4 }, { "gender": "female", "height": 157.5, "weight": 76.8 }, { "gender": "female", "height": 176.5, "weight": 71.8 }, { "gender": "female", "height": 164.4, "weight": 55.5 }, { "gender": "female", "height": 160.7, "weight": 48.6 }, { "gender": "female", "height": 174, "weight": 66.4 }, { "gender": "female", "height": 163.8, "weight": 67.3 }, { "gender": "male", "height": 174, "weight": 65.6 }, { "gender": "male", "height": 175.3, "weight": 71.8 }, { "gender": "male", "height": 193.5, "weight": 80.7 }, { "gender": "male", "height": 186.5, "weight": 72.6 }, { "gender": "male", "height": 187.2, "weight": 78.8 }, { "gender": "male", "height": 181.5, "weight": 74.8 }, { "gender": "male", "height": 184, "weight": 86.4 }, { "gender": "male", "height": 184.5, "weight": 78.4 }, { "gender": "male", "height": 175, "weight": 62 }, { "gender": "male", "height": 184, "weight": 81.6 }, { "gender": "male", "height": 180, "weight": 76.6 }, { "gender": "male", "height": 177.8, "weight": 83.6 }, { "gender": "male", "height": 192, "weight": 90 }, { "gender": "male", "height": 176, "weight": 74.6 }, { "gender": "male", "height": 174, "weight": 71 }, { "gender": "male", "height": 184, "weight": 79.6 }, { "gender": "male", "height": 192.7, "weight": 93.8 }, { "gender": "male", "height": 171.5, "weight": 70 }, { "gender": "male", "height": 173, "weight": 72.4 }, { "gender": "male", "height": 176, "weight": 85.9 }, { "gender": "male", "height": 176, "weight": 78.8 }, { "gender": "male", "height": 180.5, "weight": 77.8 }, { "gender": "male", "height": 172.7, "weight": 66.2 }, { "gender": "male", "height": 176, "weight": 86.4 }, { "gender": "male", "height": 173.5, "weight": 81.8 }, { "gender": "male", "height": 178, "weight": 89.6 }, { "gender": "male", "height": 180.3, "weight": 82.8 }, { "gender": "male", "height": 180.3, "weight": 76.4 }, { "gender": "male", "height": 164.5, "weight": 63.2 }, { "gender": "male", "height": 173, "weight": 60.9 }, { "gender": "male", "height": 183.5, "weight": 74.8 }, { "gender": "male", "height": 175.5, "weight": 70 }, { "gender": "male", "height": 188, "weight": 72.4 }, { "gender": "male", "height": 189.2, "weight": 84.1 }, { "gender": "male", "height": 172.8, "weight": 69.1 }, { "gender": "male", "height": 170, "weight": 59.5 }, { "gender": "male", "height": 182, "weight": 67.2 }, { "gender": "male", "height": 170, "weight": 61.3 }, { "gender": "male", "height": 177.8, "weight": 68.6 }, { "gender": "male", "height": 184.2, "weight": 80.1 }, { "gender": "male", "height": 186.7, "weight": 87.8 }, { "gender": "male", "height": 171.4, "weight": 84.7 }, { "gender": "male", "height": 172.7, "weight": 73.4 }, { "gender": "male", "height": 175.3, "weight": 72.1 }, { "gender": "male", "height": 180.3, "weight": 82.6 }, { "gender": "male", "height": 182.9, "weight": 88.7 }, { "gender": "male", "height": 188, "weight": 84.1 }, { "gender": "male", "height": 177.2, "weight": 94.1 }, { "gender": "male", "height": 172.1, "weight": 74.9 }, { "gender": "male", "height": 167, "weight": 59.1 }, { "gender": "male", "height": 169.5, "weight": 75.6 }, { "gender": "male", "height": 174, "weight": 86.2 }, { "gender": "male", "height": 172.7, "weight": 75.3 }, { "gender": "male", "height": 182.2, "weight": 87.1 }, { "gender": "male", "height": 164.1, "weight": 55.2 }, { "gender": "male", "height": 163, "weight": 57 }, { "gender": "male", "height": 171.5, "weight": 61.4 }, { "gender": "male", "height": 184.2, "weight": 76.8 }, { "gender": "male", "height": 174, "weight": 86.8 }, { "gender": "male", "height": 174, "weight": 72.2 }, { "gender": "male", "height": 177, "weight": 71.6 }, { "gender": "male", "height": 186, "weight": 84.8 }, { "gender": "male", "height": 167, "weight": 68.2 }, { "gender": "male", "height": 171.8, "weight": 66.1 }, { "gender": "male", "height": 182, "weight": 72 }, { "gender": "male", "height": 167, "weight": 64.6 }, { "gender": "male", "height": 177.8, "weight": 74.8 }, { "gender": "male", "height": 164.5, "weight": 70 }, { "gender": "male", "height": 192, "weight": 101.6 }, { "gender": "male", "height": 175.5, "weight": 63.2 }, { "gender": "male", "height": 171.2, "weight": 79.1 }, { "gender": "male", "height": 181.6, "weight": 78.9 }, { "gender": "male", "height": 167.4, "weight": 67.7 }, { "gender": "male", "height": 181.1, "weight": 66 }, { "gender": "male", "height": 177, "weight": 68.2 }, { "gender": "male", "height": 174.5, "weight": 63.9 }, { "gender": "male", "height": 177.5, "weight": 72 }, { "gender": "male", "height": 170.5, "weight": 56.8 }, { "gender": "male", "height": 182.4, "weight": 74.5 }, { "gender": "male", "height": 197.1, "weight": 90.9 }, { "gender": "male", "height": 180.1, "weight": 93 }, { "gender": "male", "height": 175.5, "weight": 80.9 }, { "gender": "male", "height": 180.6, "weight": 72.7 }, { "gender": "male", "height": 184.4, "weight": 68 }, { "gender": "male", "height": 175.5, "weight": 70.9 }, { "gender": "male", "height": 180.6, "weight": 72.5 }, { "gender": "male", "height": 177, "weight": 72.5 }, { "gender": "male", "height": 177.1, "weight": 83.4 }, { "gender": "male", "height": 181.6, "weight": 75.5 }, { "gender": "male", "height": 176.5, "weight": 73 }, { "gender": "male", "height": 175, "weight": 70.2 }, { "gender": "male", "height": 174, "weight": 73.4 }, { "gender": "male", "height": 165.1, "weight": 70.5 }, { "gender": "male", "height": 177, "weight": 68.9 }, { "gender": "male", "height": 192, "weight": 102.3 }, { "gender": "male", "height": 176.5, "weight": 68.4 }, { "gender": "male", "height": 169.4, "weight": 65.9 }, { "gender": "male", "height": 182.1, "weight": 75.7 }, { "gender": "male", "height": 179.8, "weight": 84.5 }, { "gender": "male", "height": 175.3, "weight": 87.7 }, { "gender": "male", "height": 184.9, "weight": 86.4 }, { "gender": "male", "height": 177.3, "weight": 73.2 }, { "gender": "male", "height": 167.4, "weight": 53.9 }, { "gender": "male", "height": 178.1, "weight": 72 }, { "gender": "male", "height": 168.9, "weight": 55.5 }, { "gender": "male", "height": 157.2, "weight": 58.4 }, { "gender": "male", "height": 180.3, "weight": 83.2 }, { "gender": "male", "height": 170.2, "weight": 72.7 }, { "gender": "male", "height": 177.8, "weight": 64.1 }, { "gender": "male", "height": 172.7, "weight": 72.3 }, { "gender": "male", "height": 165.1, "weight": 65 }, { "gender": "male", "height": 186.7, "weight": 86.4 }, { "gender": "male", "height": 165.1, "weight": 65 }, { "gender": "male", "height": 174, "weight": 88.6 }, { "gender": "male", "height": 175.3, "weight": 84.1 }, { "gender": "male", "height": 185.4, "weight": 66.8 }, { "gender": "male", "height": 177.8, "weight": 75.5 }, { "gender": "male", "height": 180.3, "weight": 93.2 }, { "gender": "male", "height": 180.3, "weight": 82.7 }, { "gender": "male", "height": 177.8, "weight": 58 }, { "gender": "male", "height": 177.8, "weight": 79.5 }, { "gender": "male", "height": 177.8, "weight": 78.6 }, { "gender": "male", "height": 177.8, "weight": 71.8 }, { "gender": "male", "height": 177.8, "weight": 116.4 }, { "gender": "male", "height": 163.8, "weight": 72.2 }, { "gender": "male", "height": 188, "weight": 83.6 }, { "gender": "male", "height": 198.1, "weight": 85.5 }, { "gender": "male", "height": 175.3, "weight": 90.9 }, { "gender": "male", "height": 166.4, "weight": 85.9 }, { "gender": "male", "height": 190.5, "weight": 89.1 }, { "gender": "male", "height": 166.4, "weight": 75 }, { "gender": "male", "height": 177.8, "weight": 77.7 }, { "gender": "male", "height": 179.7, "weight": 86.4 }, { "gender": "male", "height": 172.7, "weight": 90.9 }, { "gender": "male", "height": 190.5, "weight": 73.6 }, { "gender": "male", "height": 185.4, "weight": 76.4 }, { "gender": "male", "height": 168.9, "weight": 69.1 }, { "gender": "male", "height": 167.6, "weight": 84.5 }, { "gender": "male", "height": 175.3, "weight": 64.5 }, { "gender": "male", "height": 170.2, "weight": 69.1 }, { "gender": "male", "height": 190.5, "weight": 108.6 }, { "gender": "male", "height": 177.8, "weight": 86.4 }, { "gender": "male", "height": 190.5, "weight": 80.9 }, { "gender": "male", "height": 177.8, "weight": 87.7 }, { "gender": "male", "height": 184.2, "weight": 94.5 }, { "gender": "male", "height": 176.5, "weight": 80.2 }, { "gender": "male", "height": 177.8, "weight": 72 }, { "gender": "male", "height": 180.3, "weight": 71.4 }, { "gender": "male", "height": 171.4, "weight": 72.7 }, { "gender": "male", "height": 172.7, "weight": 84.1 }, { "gender": "male", "height": 172.7, "weight": 76.8 }, { "gender": "male", "height": 177.8, "weight": 63.6 }, { "gender": "male", "height": 177.8, "weight": 80.9 }, { "gender": "male", "height": 182.9, "weight": 80.9 }, { "gender": "male", "height": 170.2, "weight": 85.5 }, { "gender": "male", "height": 167.6, "weight": 68.6 }, { "gender": "male", "height": 175.3, "weight": 67.7 }, { "gender": "male", "height": 165.1, "weight": 66.4 }, { "gender": "male", "height": 185.4, "weight": 102.3 }, { "gender": "male", "height": 181.6, "weight": 70.5 }, { "gender": "male", "height": 172.7, "weight": 95.9 }, { "gender": "male", "height": 190.5, "weight": 84.1 }, { "gender": "male", "height": 179.1, "weight": 87.3 }, { "gender": "male", "height": 175.3, "weight": 71.8 }, { "gender": "male", "height": 170.2, "weight": 65.9 }, { "gender": "male", "height": 193, "weight": 95.9 }, { "gender": "male", "height": 171.4, "weight": 91.4 }, { "gender": "male", "height": 177.8, "weight": 81.8 }, { "gender": "male", "height": 177.8, "weight": 96.8 }, { "gender": "male", "height": 167.6, "weight": 69.1 }, { "gender": "male", "height": 167.6, "weight": 82.7 }, { "gender": "male", "height": 180.3, "weight": 75.5 }, { "gender": "male", "height": 182.9, "weight": 79.5 }, { "gender": "male", "height": 176.5, "weight": 73.6 }, { "gender": "male", "height": 186.7, "weight": 91.8 }, { "gender": "male", "height": 188, "weight": 84.1 }, { "gender": "male", "height": 188, "weight": 85.9 }, { "gender": "male", "height": 177.8, "weight": 81.8 }, { "gender": "male", "height": 174, "weight": 82.5 }, { "gender": "male", "height": 177.8, "weight": 80.5 }, { "gender": "male", "height": 171.4, "weight": 70 }, { "gender": "male", "height": 185.4, "weight": 81.8 }, { "gender": "male", "height": 185.4, "weight": 84.1 }, { "gender": "male", "height": 188, "weight": 90.5 }, { "gender": "male", "height": 188, "weight": 91.4 }, { "gender": "male", "height": 182.9, "weight": 89.1 }, { "gender": "male", "height": 176.5, "weight": 85 }, { "gender": "male", "height": 175.3, "weight": 69.1 }, { "gender": "male", "height": 175.3, "weight": 73.6 }, { "gender": "male", "height": 188, "weight": 80.5 }, { "gender": "male", "height": 188, "weight": 82.7 }, { "gender": "male", "height": 175.3, "weight": 86.4 }, { "gender": "male", "height": 170.5, "weight": 67.7 }, { "gender": "male", "height": 179.1, "weight": 92.7 }, { "gender": "male", "height": 177.8, "weight": 93.6 }, { "gender": "male", "height": 175.3, "weight": 70.9 }, { "gender": "male", "height": 182.9, "weight": 75 }, { "gender": "male", "height": 170.8, "weight": 93.2 }, { "gender": "male", "height": 188, "weight": 93.2 }, { "gender": "male", "height": 180.3, "weight": 77.7 }, { "gender": "male", "height": 177.8, "weight": 61.4 }, { "gender": "male", "height": 185.4, "weight": 94.1 }, { "gender": "male", "height": 168.9, "weight": 75 }, { "gender": "male", "height": 185.4, "weight": 83.6 }, { "gender": "male", "height": 180.3, "weight": 85.5 }, { "gender": "male", "height": 174, "weight": 73.9 }, { "gender": "male", "height": 167.6, "weight": 66.8 }, { "gender": "male", "height": 182.9, "weight": 87.3 }, { "gender": "male", "height": 160, "weight": 72.3 }, { "gender": "male", "height": 180.3, "weight": 88.6 }, { "gender": "male", "height": 167.6, "weight": 75.5 }, { "gender": "male", "height": 186.7, "weight": 101.4 }, { "gender": "male", "height": 175.3, "weight": 91.1 }, { "gender": "male", "height": 175.3, "weight": 67.3 }, { "gender": "male", "height": 175.9, "weight": 77.7 }, { "gender": "male", "height": 175.3, "weight": 81.8 }, { "gender": "male", "height": 179.1, "weight": 75.5 }, { "gender": "male", "height": 181.6, "weight": 84.5 }, { "gender": "male", "height": 177.8, "weight": 76.6 }, { "gender": "male", "height": 182.9, "weight": 85 }, { "gender": "male", "height": 177.8, "weight": 102.5 }, { "gender": "male", "height": 184.2, "weight": 77.3 }, { "gender": "male", "height": 179.1, "weight": 71.8 }, { "gender": "male", "height": 176.5, "weight": 87.9 }, { "gender": "male", "height": 188, "weight": 94.3 }, { "gender": "male", "height": 174, "weight": 70.9 }, { "gender": "male", "height": 167.6, "weight": 64.5 }, { "gender": "male", "height": 170.2, "weight": 77.3 }, { "gender": "male", "height": 167.6, "weight": 72.3 }, { "gender": "male", "height": 188, "weight": 87.3 }, { "gender": "male", "height": 174, "weight": 80 }, { "gender": "male", "height": 176.5, "weight": 82.3 }, { "gender": "male", "height": 180.3, "weight": 73.6 }, { "gender": "male", "height": 167.6, "weight": 74.1 }, { "gender": "male", "height": 188, "weight": 85.9 }, { "gender": "male", "height": 180.3, "weight": 73.2 }, { "gender": "male", "height": 167.6, "weight": 76.3 }, { "gender": "male", "height": 183, "weight": 65.9 }, { "gender": "male", "height": 183, "weight": 90.9 }, { "gender": "male", "height": 179.1, "weight": 89.1 }, { "gender": "male", "height": 170.2, "weight": 62.3 }, { "gender": "male", "height": 177.8, "weight": 82.7 }, { "gender": "male", "height": 179.1, "weight": 79.1 }, { "gender": "male", "height": 190.5, "weight": 98.2 }, { "gender": "male", "height": 177.8, "weight": 84.1 }, { "gender": "male", "height": 180.3, "weight": 83.2 }, { "gender": "male", "height": 180.3, "weight": 83.2 }]\n    var axisData = []\n    for( var i=0;i<data.length;i++) {  // 循环遍历原始数据到 axisData 数组中\n      var height = data[i].height  // 取出身高\n      var weight = data[i].weight  // 取出性别\n      var newArr = [height, weight]\n      axisData.push(newArr)\n    }\n    console.log(axisData)\n    var mCharts = echarts.init(document.querySelector("div"))\n    var option = {\n      xAxis: {\n        type: \'value\',\n        scale: true  // 脱离 0 值比例（适合值差距不大的情况下使用，从最小的值开始，最大的值结束）\n      },\n      yAxis: {\n        type: \'value\',\n        scale: true  // 脱离 0 值比例（适合值差距不大的情况下使用，从最小的值开始，最大的值结束）\n      },\n      series: [\n        {\n          // type: \'scatter\', // 图表类型：散点图\n          type: \'effectScatter\',  // 图标类型：涟漪动画\n          showEffectOn: \'emphasis\',  // 触发方式：render（加载完散点后自动触发）（默认）emphasis（鼠标移入触发）\n          rippleEffect: {\n            scale: 5  // 涟漪动画范围比\n          },\n\n          data: axisData,\n\n          // 功能：bmi 大于 28，代表肥胖，让散点大小变为 20，否则为 5\n          symbolSize: function (arg) {  // 散点大小\n            var height = arg[0] / 100\n            var weight = arg[1]\n            var bmi - weight / (height * height)\n            if (bmi > 28) {\n              return 20\n            }\n            return 5\n          },\n          itemStyle: {\n            // 功能：bmi 大于 28，代表肥胖，让散点颜色变为红色，否则为 绿色\n            color: function (arg) {  // 散点颜色\n              var height = arg.data[0] / 100\n              var weight = arg.data[1]\n              var bmi - weight / (height * height)\n              if (bmi > 28) {\n                return \'red\'\n              }\n              return \'green\'\n            }\n          }\n        }\n      ]\n    }\n    mCharts.setOption(option)\n  <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n',normalizedContent:'# 应用场景\n\n\n# （一）呈现不同维度数据之间的相关性（正相关、负相关、不相关）\n\n\n# （二）用于地图的标注\n\n\n# 特性\n\n\n# 1、x轴 和 y轴，都代表数值\n\n\n# 2、数据为二维数组。 如：数组1:[ [身高1, 体重1], [身高2, 体重2], ... ]\n\n\n# 常见效果\n\n\n# （一）气泡图效果（每个散点大小根据数据的不同发生变化）\n\n\n# （1）操作 散点大小\n\n\n# （2）操作 散点颜色\n\n\n# （二）涟漪动画效果\n\n\n# （1）将图标类型设置为 effectscatter\n\n\n# 例\n\n<!doctype html>\n<html lang="en">\n\n<head>\n  <meta charset="utf-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <meta http-equiv="x-ua-compatible" content="ie=edge">\n  <title>document</title>\n  <script src="lib/echarts.min.js"><\/script>\n</head>\n\n<body>\n  <div style="width: 600px;height:400px"></div>\n  <script>\n    // 507 组数据\n    // height：身高  weight：体重\n    var data = [{ "gender": "female", "height": 161.2, "weight": 51.6 }, { "gender": "female", "height": 167.5, "weight": 59 }, { "gender": "female", "height": 159.5, "weight": 49.2 }, { "gender": "female", "height": 157, "weight": 63 }, { "gender": "female", "height": 155.8, "weight": 53.6 }, { "gender": "female", "height": 170, "weight": 59 }, { "gender": "female", "height": 159.1, "weight": 47.6 }, { "gender": "female", "height": 166, "weight": 69.8 }, { "gender": "female", "height": 176.2, "weight": 66.8 }, { "gender": "female", "height": 160.2, "weight": 75.2 }, { "gender": "female", "height": 172.5, "weight": 55.2 }, { "gender": "female", "height": 170.9, "weight": 54.2 }, { "gender": "female", "height": 172.9, "weight": 62.5 }, { "gender": "female", "height": 153.4, "weight": 42 }, { "gender": "female", "height": 160, "weight": 50 }, { "gender": "female", "height": 147.2, "weight": 49.8 }, { "gender": "female", "height": 168.2, "weight": 49.2 }, { "gender": "female", "height": 175, "weight": 73.2 }, { "gender": "female", "height": 157, "weight": 47.8 }, { "gender": "female", "height": 167.6, "weight": 68.8 }, { "gender": "female", "height": 159.5, "weight": 50.6 }, { "gender": "female", "height": 175, "weight": 82.5 }, { "gender": "female", "height": 166.8, "weight": 57.2 }, { "gender": "female", "height": 176.5, "weight": 87.8 }, { "gender": "female", "height": 170.2, "weight": 72.8 }, { "gender": "female", "height": 174, "weight": 54.5 }, { "gender": "female", "height": 173, "weight": 59.8 }, { "gender": "female", "height": 179.9, "weight": 67.3 }, { "gender": "female", "height": 170.5, "weight": 67.8 }, { "gender": "female", "height": 160, "weight": 47 }, { "gender": "female", "height": 154.4, "weight": 46.2 }, { "gender": "female", "height": 162, "weight": 55 }, { "gender": "female", "height": 176.5, "weight": 83 }, { "gender": "female", "height": 160, "weight": 54.4 }, { "gender": "female", "height": 152, "weight": 45.8 }, { "gender": "female", "height": 162.1, "weight": 53.6 }, { "gender": "female", "height": 170, "weight": 73.2 }, { "gender": "female", "height": 160.2, "weight": 52.1 }, { "gender": "female", "height": 161.3, "weight": 67.9 }, { "gender": "female", "height": 166.4, "weight": 56.6 }, { "gender": "female", "height": 168.9, "weight": 62.3 }, { "gender": "female", "height": 163.8, "weight": 58.5 }, { "gender": "female", "height": 167.6, "weight": 54.5 }, { "gender": "female", "height": 160, "weight": 50.2 }, { "gender": "female", "height": 161.3, "weight": 60.3 }, { "gender": "female", "height": 167.6, "weight": 58.3 }, { "gender": "female", "height": 165.1, "weight": 56.2 }, { "gender": "female", "height": 160, "weight": 50.2 }, { "gender": "female", "height": 170, "weight": 72.9 }, { "gender": "female", "height": 157.5, "weight": 59.8 }, { "gender": "female", "height": 167.6, "weight": 61 }, { "gender": "female", "height": 160.7, "weight": 69.1 }, { "gender": "female", "height": 163.2, "weight": 55.9 }, { "gender": "female", "height": 152.4, "weight": 46.5 }, { "gender": "female", "height": 157.5, "weight": 54.3 }, { "gender": "female", "height": 168.3, "weight": 54.8 }, { "gender": "female", "height": 180.3, "weight": 60.7 }, { "gender": "female", "height": 165.5, "weight": 60 }, { "gender": "female", "height": 165, "weight": 62 }, { "gender": "female", "height": 164.5, "weight": 60.3 }, { "gender": "female", "height": 156, "weight": 52.7 }, { "gender": "female", "height": 160, "weight": 74.3 }, { "gender": "female", "height": 163, "weight": 62 }, { "gender": "female", "height": 165.7, "weight": 73.1 }, { "gender": "female", "height": 161, "weight": 80 }, { "gender": "female", "height": 162, "weight": 54.7 }, { "gender": "female", "height": 166, "weight": 53.2 }, { "gender": "female", "height": 174, "weight": 75.7 }, { "gender": "female", "height": 172.7, "weight": 61.1 }, { "gender": "female", "height": 167.6, "weight": 55.7 }, { "gender": "female", "height": 151.1, "weight": 48.7 }, { "gender": "female", "height": 164.5, "weight": 52.3 }, { "gender": "female", "height": 163.5, "weight": 50 }, { "gender": "female", "height": 152, "weight": 59.3 }, { "gender": "female", "height": 169, "weight": 62.5 }, { "gender": "female", "height": 164, "weight": 55.7 }, { "gender": "female", "height": 161.2, "weight": 54.8 }, { "gender": "female", "height": 155, "weight": 45.9 }, { "gender": "female", "height": 170, "weight": 70.6 }, { "gender": "female", "height": 176.2, "weight": 67.2 }, { "gender": "female", "height": 170, "weight": 69.4 }, { "gender": "female", "height": 162.5, "weight": 58.2 }, { "gender": "female", "height": 170.3, "weight": 64.8 }, { "gender": "female", "height": 164.1, "weight": 71.6 }, { "gender": "female", "height": 169.5, "weight": 52.8 }, { "gender": "female", "height": 163.2, "weight": 59.8 }, { "gender": "female", "height": 154.5, "weight": 49 }, { "gender": "female", "height": 159.8, "weight": 50 }, { "gender": "female", "height": 173.2, "weight": 69.2 }, { "gender": "female", "height": 170, "weight": 55.9 }, { "gender": "female", "height": 161.4, "weight": 63.4 }, { "gender": "female", "height": 169, "weight": 58.2 }, { "gender": "female", "height": 166.2, "weight": 58.6 }, { "gender": "female", "height": 159.4, "weight": 45.7 }, { "gender": "female", "height": 162.5, "weight": 52.2 }, { "gender": "female", "height": 159, "weight": 48.6 }, { "gender": "female", "height": 162.8, "weight": 57.8 }, { "gender": "female", "height": 159, "weight": 55.6 }, { "gender": "female", "height": 179.8, "weight": 66.8 }, { "gender": "female", "height": 162.9, "weight": 59.4 }, { "gender": "female", "height": 161, "weight": 53.6 }, { "gender": "female", "height": 151.1, "weight": 73.2 }, { "gender": "female", "height": 168.2, "weight": 53.4 }, { "gender": "female", "height": 168.9, "weight": 69 }, { "gender": "female", "height": 173.2, "weight": 58.4 }, { "gender": "female", "height": 171.8, "weight": 56.2 }, { "gender": "female", "height": 178, "weight": 70.6 }, { "gender": "female", "height": 164.3, "weight": 59.8 }, { "gender": "female", "height": 163, "weight": 72 }, { "gender": "female", "height": 168.5, "weight": 65.2 }, { "gender": "female", "height": 166.8, "weight": 56.6 }, { "gender": "female", "height": 172.7, "weight": 105.2 }, { "gender": "female", "height": 163.5, "weight": 51.8 }, { "gender": "female", "height": 169.4, "weight": 63.4 }, { "gender": "female", "height": 167.8, "weight": 59 }, { "gender": "female", "height": 159.5, "weight": 47.6 }, { "gender": "female", "height": 167.6, "weight": 63 }, { "gender": "female", "height": 161.2, "weight": 55.2 }, { "gender": "female", "height": 160, "weight": 45 }, { "gender": "female", "height": 163.2, "weight": 54 }, { "gender": "female", "height": 162.2, "weight": 50.2 }, { "gender": "female", "height": 161.3, "weight": 60.2 }, { "gender": "female", "height": 149.5, "weight": 44.8 }, { "gender": "female", "height": 157.5, "weight": 58.8 }, { "gender": "female", "height": 163.2, "weight": 56.4 }, { "gender": "female", "height": 172.7, "weight": 62 }, { "gender": "female", "height": 155, "weight": 49.2 }, { "gender": "female", "height": 156.5, "weight": 67.2 }, { "gender": "female", "height": 164, "weight": 53.8 }, { "gender": "female", "height": 160.9, "weight": 54.4 }, { "gender": "female", "height": 162.8, "weight": 58 }, { "gender": "female", "height": 167, "weight": 59.8 }, { "gender": "female", "height": 160, "weight": 54.8 }, { "gender": "female", "height": 160, "weight": 43.2 }, { "gender": "female", "height": 168.9, "weight": 60.5 }, { "gender": "female", "height": 158.2, "weight": 46.4 }, { "gender": "female", "height": 156, "weight": 64.4 }, { "gender": "female", "height": 160, "weight": 48.8 }, { "gender": "female", "height": 167.1, "weight": 62.2 }, { "gender": "female", "height": 158, "weight": 55.5 }, { "gender": "female", "height": 167.6, "weight": 57.8 }, { "gender": "female", "height": 156, "weight": 54.6 }, { "gender": "female", "height": 162.1, "weight": 59.2 }, { "gender": "female", "height": 173.4, "weight": 52.7 }, { "gender": "female", "height": 159.8, "weight": 53.2 }, { "gender": "female", "height": 170.5, "weight": 64.5 }, { "gender": "female", "height": 159.2, "weight": 51.8 }, { "gender": "female", "height": 157.5, "weight": 56 }, { "gender": "female", "height": 161.3, "weight": 63.6 }, { "gender": "female", "height": 162.6, "weight": 63.2 }, { "gender": "female", "height": 160, "weight": 59.5 }, { "gender": "female", "height": 168.9, "weight": 56.8 }, { "gender": "female", "height": 165.1, "weight": 64.1 }, { "gender": "female", "height": 162.6, "weight": 50 }, { "gender": "female", "height": 165.1, "weight": 72.3 }, { "gender": "female", "height": 166.4, "weight": 55 }, { "gender": "female", "height": 160, "weight": 55.9 }, { "gender": "female", "height": 152.4, "weight": 60.4 }, { "gender": "female", "height": 170.2, "weight": 69.1 }, { "gender": "female", "height": 162.6, "weight": 84.5 }, { "gender": "female", "height": 170.2, "weight": 55.9 }, { "gender": "female", "height": 158.8, "weight": 55.5 }, { "gender": "female", "height": 172.7, "weight": 69.5 }, { "gender": "female", "height": 167.6, "weight": 76.4 }, { "gender": "female", "height": 162.6, "weight": 61.4 }, { "gender": "female", "height": 167.6, "weight": 65.9 }, { "gender": "female", "height": 156.2, "weight": 58.6 }, { "gender": "female", "height": 175.2, "weight": 66.8 }, { "gender": "female", "height": 172.1, "weight": 56.6 }, { "gender": "female", "height": 162.6, "weight": 58.6 }, { "gender": "female", "height": 160, "weight": 55.9 }, { "gender": "female", "height": 165.1, "weight": 59.1 }, { "gender": "female", "height": 182.9, "weight": 81.8 }, { "gender": "female", "height": 166.4, "weight": 70.7 }, { "gender": "female", "height": 165.1, "weight": 56.8 }, { "gender": "female", "height": 177.8, "weight": 60 }, { "gender": "female", "height": 165.1, "weight": 58.2 }, { "gender": "female", "height": 175.3, "weight": 72.7 }, { "gender": "female", "height": 154.9, "weight": 54.1 }, { "gender": "female", "height": 158.8, "weight": 49.1 }, { "gender": "female", "height": 172.7, "weight": 75.9 }, { "gender": "female", "height": 168.9, "weight": 55 }, { "gender": "female", "height": 161.3, "weight": 57.3 }, { "gender": "female", "height": 167.6, "weight": 55 }, { "gender": "female", "height": 165.1, "weight": 65.5 }, { "gender": "female", "height": 175.3, "weight": 65.5 }, { "gender": "female", "height": 157.5, "weight": 48.6 }, { "gender": "female", "height": 163.8, "weight": 58.6 }, { "gender": "female", "height": 167.6, "weight": 63.6 }, { "gender": "female", "height": 165.1, "weight": 55.2 }, { "gender": "female", "height": 165.1, "weight": 62.7 }, { "gender": "female", "height": 168.9, "weight": 56.6 }, { "gender": "female", "height": 162.6, "weight": 53.9 }, { "gender": "female", "height": 164.5, "weight": 63.2 }, { "gender": "female", "height": 176.5, "weight": 73.6 }, { "gender": "female", "height": 168.9, "weight": 62 }, { "gender": "female", "height": 175.3, "weight": 63.6 }, { "gender": "female", "height": 159.4, "weight": 53.2 }, { "gender": "female", "height": 160, "weight": 53.4 }, { "gender": "female", "height": 170.2, "weight": 55 }, { "gender": "female", "height": 162.6, "weight": 70.5 }, { "gender": "female", "height": 167.6, "weight": 54.5 }, { "gender": "female", "height": 162.6, "weight": 54.5 }, { "gender": "female", "height": 160.7, "weight": 55.9 }, { "gender": "female", "height": 160, "weight": 59 }, { "gender": "female", "height": 157.5, "weight": 63.6 }, { "gender": "female", "height": 162.6, "weight": 54.5 }, { "gender": "female", "height": 152.4, "weight": 47.3 }, { "gender": "female", "height": 170.2, "weight": 67.7 }, { "gender": "female", "height": 165.1, "weight": 80.9 }, { "gender": "female", "height": 172.7, "weight": 70.5 }, { "gender": "female", "height": 165.1, "weight": 60.9 }, { "gender": "female", "height": 170.2, "weight": 63.6 }, { "gender": "female", "height": 170.2, "weight": 54.5 }, { "gender": "female", "height": 170.2, "weight": 59.1 }, { "gender": "female", "height": 161.3, "weight": 70.5 }, { "gender": "female", "height": 167.6, "weight": 52.7 }, { "gender": "female", "height": 167.6, "weight": 62.7 }, { "gender": "female", "height": 165.1, "weight": 86.3 }, { "gender": "female", "height": 162.6, "weight": 66.4 }, { "gender": "female", "height": 152.4, "weight": 67.3 }, { "gender": "female", "height": 168.9, "weight": 63 }, { "gender": "female", "height": 170.2, "weight": 73.6 }, { "gender": "female", "height": 175.2, "weight": 62.3 }, { "gender": "female", "height": 175.2, "weight": 57.7 }, { "gender": "female", "height": 160, "weight": 55.4 }, { "gender": "female", "height": 165.1, "weight": 104.1 }, { "gender": "female", "height": 174, "weight": 55.5 }, { "gender": "female", "height": 170.2, "weight": 77.3 }, { "gender": "female", "height": 160, "weight": 80.5 }, { "gender": "female", "height": 167.6, "weight": 64.5 }, { "gender": "female", "height": 167.6, "weight": 72.3 }, { "gender": "female", "height": 167.6, "weight": 61.4 }, { "gender": "female", "height": 154.9, "weight": 58.2 }, { "gender": "female", "height": 162.6, "weight": 81.8 }, { "gender": "female", "height": 175.3, "weight": 63.6 }, { "gender": "female", "height": 171.4, "weight": 53.4 }, { "gender": "female", "height": 157.5, "weight": 54.5 }, { "gender": "female", "height": 165.1, "weight": 53.6 }, { "gender": "female", "height": 160, "weight": 60 }, { "gender": "female", "height": 174, "weight": 73.6 }, { "gender": "female", "height": 162.6, "weight": 61.4 }, { "gender": "female", "height": 174, "weight": 55.5 }, { "gender": "female", "height": 162.6, "weight": 63.6 }, { "gender": "female", "height": 161.3, "weight": 60.9 }, { "gender": "female", "height": 156.2, "weight": 60 }, { "gender": "female", "height": 149.9, "weight": 46.8 }, { "gender": "female", "height": 169.5, "weight": 57.3 }, { "gender": "female", "height": 160, "weight": 64.1 }, { "gender": "female", "height": 175.3, "weight": 63.6 }, { "gender": "female", "height": 169.5, "weight": 67.3 }, { "gender": "female", "height": 160, "weight": 75.5 }, { "gender": "female", "height": 172.7, "weight": 68.2 }, { "gender": "female", "height": 162.6, "weight": 61.4 }, { "gender": "female", "height": 157.5, "weight": 76.8 }, { "gender": "female", "height": 176.5, "weight": 71.8 }, { "gender": "female", "height": 164.4, "weight": 55.5 }, { "gender": "female", "height": 160.7, "weight": 48.6 }, { "gender": "female", "height": 174, "weight": 66.4 }, { "gender": "female", "height": 163.8, "weight": 67.3 }, { "gender": "male", "height": 174, "weight": 65.6 }, { "gender": "male", "height": 175.3, "weight": 71.8 }, { "gender": "male", "height": 193.5, "weight": 80.7 }, { "gender": "male", "height": 186.5, "weight": 72.6 }, { "gender": "male", "height": 187.2, "weight": 78.8 }, { "gender": "male", "height": 181.5, "weight": 74.8 }, { "gender": "male", "height": 184, "weight": 86.4 }, { "gender": "male", "height": 184.5, "weight": 78.4 }, { "gender": "male", "height": 175, "weight": 62 }, { "gender": "male", "height": 184, "weight": 81.6 }, { "gender": "male", "height": 180, "weight": 76.6 }, { "gender": "male", "height": 177.8, "weight": 83.6 }, { "gender": "male", "height": 192, "weight": 90 }, { "gender": "male", "height": 176, "weight": 74.6 }, { "gender": "male", "height": 174, "weight": 71 }, { "gender": "male", "height": 184, "weight": 79.6 }, { "gender": "male", "height": 192.7, "weight": 93.8 }, { "gender": "male", "height": 171.5, "weight": 70 }, { "gender": "male", "height": 173, "weight": 72.4 }, { "gender": "male", "height": 176, "weight": 85.9 }, { "gender": "male", "height": 176, "weight": 78.8 }, { "gender": "male", "height": 180.5, "weight": 77.8 }, { "gender": "male", "height": 172.7, "weight": 66.2 }, { "gender": "male", "height": 176, "weight": 86.4 }, { "gender": "male", "height": 173.5, "weight": 81.8 }, { "gender": "male", "height": 178, "weight": 89.6 }, { "gender": "male", "height": 180.3, "weight": 82.8 }, { "gender": "male", "height": 180.3, "weight": 76.4 }, { "gender": "male", "height": 164.5, "weight": 63.2 }, { "gender": "male", "height": 173, "weight": 60.9 }, { "gender": "male", "height": 183.5, "weight": 74.8 }, { "gender": "male", "height": 175.5, "weight": 70 }, { "gender": "male", "height": 188, "weight": 72.4 }, { "gender": "male", "height": 189.2, "weight": 84.1 }, { "gender": "male", "height": 172.8, "weight": 69.1 }, { "gender": "male", "height": 170, "weight": 59.5 }, { "gender": "male", "height": 182, "weight": 67.2 }, { "gender": "male", "height": 170, "weight": 61.3 }, { "gender": "male", "height": 177.8, "weight": 68.6 }, { "gender": "male", "height": 184.2, "weight": 80.1 }, { "gender": "male", "height": 186.7, "weight": 87.8 }, { "gender": "male", "height": 171.4, "weight": 84.7 }, { "gender": "male", "height": 172.7, "weight": 73.4 }, { "gender": "male", "height": 175.3, "weight": 72.1 }, { "gender": "male", "height": 180.3, "weight": 82.6 }, { "gender": "male", "height": 182.9, "weight": 88.7 }, { "gender": "male", "height": 188, "weight": 84.1 }, { "gender": "male", "height": 177.2, "weight": 94.1 }, { "gender": "male", "height": 172.1, "weight": 74.9 }, { "gender": "male", "height": 167, "weight": 59.1 }, { "gender": "male", "height": 169.5, "weight": 75.6 }, { "gender": "male", "height": 174, "weight": 86.2 }, { "gender": "male", "height": 172.7, "weight": 75.3 }, { "gender": "male", "height": 182.2, "weight": 87.1 }, { "gender": "male", "height": 164.1, "weight": 55.2 }, { "gender": "male", "height": 163, "weight": 57 }, { "gender": "male", "height": 171.5, "weight": 61.4 }, { "gender": "male", "height": 184.2, "weight": 76.8 }, { "gender": "male", "height": 174, "weight": 86.8 }, { "gender": "male", "height": 174, "weight": 72.2 }, { "gender": "male", "height": 177, "weight": 71.6 }, { "gender": "male", "height": 186, "weight": 84.8 }, { "gender": "male", "height": 167, "weight": 68.2 }, { "gender": "male", "height": 171.8, "weight": 66.1 }, { "gender": "male", "height": 182, "weight": 72 }, { "gender": "male", "height": 167, "weight": 64.6 }, { "gender": "male", "height": 177.8, "weight": 74.8 }, { "gender": "male", "height": 164.5, "weight": 70 }, { "gender": "male", "height": 192, "weight": 101.6 }, { "gender": "male", "height": 175.5, "weight": 63.2 }, { "gender": "male", "height": 171.2, "weight": 79.1 }, { "gender": "male", "height": 181.6, "weight": 78.9 }, { "gender": "male", "height": 167.4, "weight": 67.7 }, { "gender": "male", "height": 181.1, "weight": 66 }, { "gender": "male", "height": 177, "weight": 68.2 }, { "gender": "male", "height": 174.5, "weight": 63.9 }, { "gender": "male", "height": 177.5, "weight": 72 }, { "gender": "male", "height": 170.5, "weight": 56.8 }, { "gender": "male", "height": 182.4, "weight": 74.5 }, { "gender": "male", "height": 197.1, "weight": 90.9 }, { "gender": "male", "height": 180.1, "weight": 93 }, { "gender": "male", "height": 175.5, "weight": 80.9 }, { "gender": "male", "height": 180.6, "weight": 72.7 }, { "gender": "male", "height": 184.4, "weight": 68 }, { "gender": "male", "height": 175.5, "weight": 70.9 }, { "gender": "male", "height": 180.6, "weight": 72.5 }, { "gender": "male", "height": 177, "weight": 72.5 }, { "gender": "male", "height": 177.1, "weight": 83.4 }, { "gender": "male", "height": 181.6, "weight": 75.5 }, { "gender": "male", "height": 176.5, "weight": 73 }, { "gender": "male", "height": 175, "weight": 70.2 }, { "gender": "male", "height": 174, "weight": 73.4 }, { "gender": "male", "height": 165.1, "weight": 70.5 }, { "gender": "male", "height": 177, "weight": 68.9 }, { "gender": "male", "height": 192, "weight": 102.3 }, { "gender": "male", "height": 176.5, "weight": 68.4 }, { "gender": "male", "height": 169.4, "weight": 65.9 }, { "gender": "male", "height": 182.1, "weight": 75.7 }, { "gender": "male", "height": 179.8, "weight": 84.5 }, { "gender": "male", "height": 175.3, "weight": 87.7 }, { "gender": "male", "height": 184.9, "weight": 86.4 }, { "gender": "male", "height": 177.3, "weight": 73.2 }, { "gender": "male", "height": 167.4, "weight": 53.9 }, { "gender": "male", "height": 178.1, "weight": 72 }, { "gender": "male", "height": 168.9, "weight": 55.5 }, { "gender": "male", "height": 157.2, "weight": 58.4 }, { "gender": "male", "height": 180.3, "weight": 83.2 }, { "gender": "male", "height": 170.2, "weight": 72.7 }, { "gender": "male", "height": 177.8, "weight": 64.1 }, { "gender": "male", "height": 172.7, "weight": 72.3 }, { "gender": "male", "height": 165.1, "weight": 65 }, { "gender": "male", "height": 186.7, "weight": 86.4 }, { "gender": "male", "height": 165.1, "weight": 65 }, { "gender": "male", "height": 174, "weight": 88.6 }, { "gender": "male", "height": 175.3, "weight": 84.1 }, { "gender": "male", "height": 185.4, "weight": 66.8 }, { "gender": "male", "height": 177.8, "weight": 75.5 }, { "gender": "male", "height": 180.3, "weight": 93.2 }, { "gender": "male", "height": 180.3, "weight": 82.7 }, { "gender": "male", "height": 177.8, "weight": 58 }, { "gender": "male", "height": 177.8, "weight": 79.5 }, { "gender": "male", "height": 177.8, "weight": 78.6 }, { "gender": "male", "height": 177.8, "weight": 71.8 }, { "gender": "male", "height": 177.8, "weight": 116.4 }, { "gender": "male", "height": 163.8, "weight": 72.2 }, { "gender": "male", "height": 188, "weight": 83.6 }, { "gender": "male", "height": 198.1, "weight": 85.5 }, { "gender": "male", "height": 175.3, "weight": 90.9 }, { "gender": "male", "height": 166.4, "weight": 85.9 }, { "gender": "male", "height": 190.5, "weight": 89.1 }, { "gender": "male", "height": 166.4, "weight": 75 }, { "gender": "male", "height": 177.8, "weight": 77.7 }, { "gender": "male", "height": 179.7, "weight": 86.4 }, { "gender": "male", "height": 172.7, "weight": 90.9 }, { "gender": "male", "height": 190.5, "weight": 73.6 }, { "gender": "male", "height": 185.4, "weight": 76.4 }, { "gender": "male", "height": 168.9, "weight": 69.1 }, { "gender": "male", "height": 167.6, "weight": 84.5 }, { "gender": "male", "height": 175.3, "weight": 64.5 }, { "gender": "male", "height": 170.2, "weight": 69.1 }, { "gender": "male", "height": 190.5, "weight": 108.6 }, { "gender": "male", "height": 177.8, "weight": 86.4 }, { "gender": "male", "height": 190.5, "weight": 80.9 }, { "gender": "male", "height": 177.8, "weight": 87.7 }, { "gender": "male", "height": 184.2, "weight": 94.5 }, { "gender": "male", "height": 176.5, "weight": 80.2 }, { "gender": "male", "height": 177.8, "weight": 72 }, { "gender": "male", "height": 180.3, "weight": 71.4 }, { "gender": "male", "height": 171.4, "weight": 72.7 }, { "gender": "male", "height": 172.7, "weight": 84.1 }, { "gender": "male", "height": 172.7, "weight": 76.8 }, { "gender": "male", "height": 177.8, "weight": 63.6 }, { "gender": "male", "height": 177.8, "weight": 80.9 }, { "gender": "male", "height": 182.9, "weight": 80.9 }, { "gender": "male", "height": 170.2, "weight": 85.5 }, { "gender": "male", "height": 167.6, "weight": 68.6 }, { "gender": "male", "height": 175.3, "weight": 67.7 }, { "gender": "male", "height": 165.1, "weight": 66.4 }, { "gender": "male", "height": 185.4, "weight": 102.3 }, { "gender": "male", "height": 181.6, "weight": 70.5 }, { "gender": "male", "height": 172.7, "weight": 95.9 }, { "gender": "male", "height": 190.5, "weight": 84.1 }, { "gender": "male", "height": 179.1, "weight": 87.3 }, { "gender": "male", "height": 175.3, "weight": 71.8 }, { "gender": "male", "height": 170.2, "weight": 65.9 }, { "gender": "male", "height": 193, "weight": 95.9 }, { "gender": "male", "height": 171.4, "weight": 91.4 }, { "gender": "male", "height": 177.8, "weight": 81.8 }, { "gender": "male", "height": 177.8, "weight": 96.8 }, { "gender": "male", "height": 167.6, "weight": 69.1 }, { "gender": "male", "height": 167.6, "weight": 82.7 }, { "gender": "male", "height": 180.3, "weight": 75.5 }, { "gender": "male", "height": 182.9, "weight": 79.5 }, { "gender": "male", "height": 176.5, "weight": 73.6 }, { "gender": "male", "height": 186.7, "weight": 91.8 }, { "gender": "male", "height": 188, "weight": 84.1 }, { "gender": "male", "height": 188, "weight": 85.9 }, { "gender": "male", "height": 177.8, "weight": 81.8 }, { "gender": "male", "height": 174, "weight": 82.5 }, { "gender": "male", "height": 177.8, "weight": 80.5 }, { "gender": "male", "height": 171.4, "weight": 70 }, { "gender": "male", "height": 185.4, "weight": 81.8 }, { "gender": "male", "height": 185.4, "weight": 84.1 }, { "gender": "male", "height": 188, "weight": 90.5 }, { "gender": "male", "height": 188, "weight": 91.4 }, { "gender": "male", "height": 182.9, "weight": 89.1 }, { "gender": "male", "height": 176.5, "weight": 85 }, { "gender": "male", "height": 175.3, "weight": 69.1 }, { "gender": "male", "height": 175.3, "weight": 73.6 }, { "gender": "male", "height": 188, "weight": 80.5 }, { "gender": "male", "height": 188, "weight": 82.7 }, { "gender": "male", "height": 175.3, "weight": 86.4 }, { "gender": "male", "height": 170.5, "weight": 67.7 }, { "gender": "male", "height": 179.1, "weight": 92.7 }, { "gender": "male", "height": 177.8, "weight": 93.6 }, { "gender": "male", "height": 175.3, "weight": 70.9 }, { "gender": "male", "height": 182.9, "weight": 75 }, { "gender": "male", "height": 170.8, "weight": 93.2 }, { "gender": "male", "height": 188, "weight": 93.2 }, { "gender": "male", "height": 180.3, "weight": 77.7 }, { "gender": "male", "height": 177.8, "weight": 61.4 }, { "gender": "male", "height": 185.4, "weight": 94.1 }, { "gender": "male", "height": 168.9, "weight": 75 }, { "gender": "male", "height": 185.4, "weight": 83.6 }, { "gender": "male", "height": 180.3, "weight": 85.5 }, { "gender": "male", "height": 174, "weight": 73.9 }, { "gender": "male", "height": 167.6, "weight": 66.8 }, { "gender": "male", "height": 182.9, "weight": 87.3 }, { "gender": "male", "height": 160, "weight": 72.3 }, { "gender": "male", "height": 180.3, "weight": 88.6 }, { "gender": "male", "height": 167.6, "weight": 75.5 }, { "gender": "male", "height": 186.7, "weight": 101.4 }, { "gender": "male", "height": 175.3, "weight": 91.1 }, { "gender": "male", "height": 175.3, "weight": 67.3 }, { "gender": "male", "height": 175.9, "weight": 77.7 }, { "gender": "male", "height": 175.3, "weight": 81.8 }, { "gender": "male", "height": 179.1, "weight": 75.5 }, { "gender": "male", "height": 181.6, "weight": 84.5 }, { "gender": "male", "height": 177.8, "weight": 76.6 }, { "gender": "male", "height": 182.9, "weight": 85 }, { "gender": "male", "height": 177.8, "weight": 102.5 }, { "gender": "male", "height": 184.2, "weight": 77.3 }, { "gender": "male", "height": 179.1, "weight": 71.8 }, { "gender": "male", "height": 176.5, "weight": 87.9 }, { "gender": "male", "height": 188, "weight": 94.3 }, { "gender": "male", "height": 174, "weight": 70.9 }, { "gender": "male", "height": 167.6, "weight": 64.5 }, { "gender": "male", "height": 170.2, "weight": 77.3 }, { "gender": "male", "height": 167.6, "weight": 72.3 }, { "gender": "male", "height": 188, "weight": 87.3 }, { "gender": "male", "height": 174, "weight": 80 }, { "gender": "male", "height": 176.5, "weight": 82.3 }, { "gender": "male", "height": 180.3, "weight": 73.6 }, { "gender": "male", "height": 167.6, "weight": 74.1 }, { "gender": "male", "height": 188, "weight": 85.9 }, { "gender": "male", "height": 180.3, "weight": 73.2 }, { "gender": "male", "height": 167.6, "weight": 76.3 }, { "gender": "male", "height": 183, "weight": 65.9 }, { "gender": "male", "height": 183, "weight": 90.9 }, { "gender": "male", "height": 179.1, "weight": 89.1 }, { "gender": "male", "height": 170.2, "weight": 62.3 }, { "gender": "male", "height": 177.8, "weight": 82.7 }, { "gender": "male", "height": 179.1, "weight": 79.1 }, { "gender": "male", "height": 190.5, "weight": 98.2 }, { "gender": "male", "height": 177.8, "weight": 84.1 }, { "gender": "male", "height": 180.3, "weight": 83.2 }, { "gender": "male", "height": 180.3, "weight": 83.2 }]\n    var axisdata = []\n    for( var i=0;i<data.length;i++) {  // 循环遍历原始数据到 axisdata 数组中\n      var height = data[i].height  // 取出身高\n      var weight = data[i].weight  // 取出性别\n      var newarr = [height, weight]\n      axisdata.push(newarr)\n    }\n    console.log(axisdata)\n    var mcharts = echarts.init(document.queryselector("div"))\n    var option = {\n      xaxis: {\n        type: \'value\',\n        scale: true  // 脱离 0 值比例（适合值差距不大的情况下使用，从最小的值开始，最大的值结束）\n      },\n      yaxis: {\n        type: \'value\',\n        scale: true  // 脱离 0 值比例（适合值差距不大的情况下使用，从最小的值开始，最大的值结束）\n      },\n      series: [\n        {\n          // type: \'scatter\', // 图表类型：散点图\n          type: \'effectscatter\',  // 图标类型：涟漪动画\n          showeffecton: \'emphasis\',  // 触发方式：render（加载完散点后自动触发）（默认）emphasis（鼠标移入触发）\n          rippleeffect: {\n            scale: 5  // 涟漪动画范围比\n          },\n\n          data: axisdata,\n\n          // 功能：bmi 大于 28，代表肥胖，让散点大小变为 20，否则为 5\n          symbolsize: function (arg) {  // 散点大小\n            var height = arg[0] / 100\n            var weight = arg[1]\n            var bmi - weight / (height * height)\n            if (bmi > 28) {\n              return 20\n            }\n            return 5\n          },\n          itemstyle: {\n            // 功能：bmi 大于 28，代表肥胖，让散点颜色变为红色，否则为 绿色\n            color: function (arg) {  // 散点颜色\n              var height = arg.data[0] / 100\n              var weight = arg.data[1]\n              var bmi - weight / (height * height)\n              if (bmi > 28) {\n                return \'red\'\n              }\n              return \'green\'\n            }\n          }\n        }\n      ]\n    }\n    mcharts.setoption(option)\n  <\/script>\n</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"饼图",frontmatter:{title:"饼图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/b963e8/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/08.%E9%A5%BC%E5%9B%BE.html",relativePath:"《前端》笔记《库》/02.EChart/08.饼图.md",key:"v-585a6335",path:"/pages/b963e8/",headersStr:null,content:"# 应用场景：呈现数据占比\n\n\n# 配置项\n\ncakeChartConfig: { // 饼图 配置项\n  title: { // 标题组件\n    text: '饼图' // 主标题\n  },\n  series: [\n    {\n      type: 'pie', // 饼图\n      data: [ // 数据格式：数组中的成员是对象类型，且要包含 name 和 value 属性\n        {\n          name: '淘宝',\n          value: 11231\n        },\n        {\n          name: '京东',\n          value: 22673\n        },\n        {\n          name: '唯品会',\n          value: 6123\n        },\n        {\n          name: '1号店',\n          value: 8989\n        },\n        {\n          name: '聚美优品',\n          value: 6700\n        }\n      ],\n      label: {\n        formatter: function (arg) { // 格式文本\n          return arg.name + '平台' + arg.value + '元\\n' + arg.percent + '%'\n        }\n      },\n      radius: 100, // 饼图半径（饼图大小)\n      // radius: 20%,  // 饼图半径（饼图大小)：百分比（参照宽度和高度较小的一边的一半来进行百分比设置）\n      // radius: ['50%', '75%']  // 饼图半径（饼图大小)：[内圆半径, 外圆半径]\n      roseType: 'radius', // 南丁格尔图（类目的半径取决于占比）\n      selectedMode: 'single', // 选中效果：single（当前选中的类目分离）multiple（选中的类目分离）\n      selectedOffset: 30 // 选中分离距离\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n",normalizedContent:"# 应用场景：呈现数据占比\n\n\n# 配置项\n\ncakechartconfig: { // 饼图 配置项\n  title: { // 标题组件\n    text: '饼图' // 主标题\n  },\n  series: [\n    {\n      type: 'pie', // 饼图\n      data: [ // 数据格式：数组中的成员是对象类型，且要包含 name 和 value 属性\n        {\n          name: '淘宝',\n          value: 11231\n        },\n        {\n          name: '京东',\n          value: 22673\n        },\n        {\n          name: '唯品会',\n          value: 6123\n        },\n        {\n          name: '1号店',\n          value: 8989\n        },\n        {\n          name: '聚美优品',\n          value: 6700\n        }\n      ],\n      label: {\n        formatter: function (arg) { // 格式文本\n          return arg.name + '平台' + arg.value + '元\\n' + arg.percent + '%'\n        }\n      },\n      radius: 100, // 饼图半径（饼图大小)\n      // radius: 20%,  // 饼图半径（饼图大小)：百分比（参照宽度和高度较小的一边的一半来进行百分比设置）\n      // radius: ['50%', '75%']  // 饼图半径（饼图大小)：[内圆半径, 外圆半径]\n      rosetype: 'radius', // 南丁格尔图（类目的半径取决于占比）\n      selectedmode: 'single', // 选中效果：single（当前选中的类目分离）multiple（选中的类目分离）\n      selectedoffset: 30 // 选中分离距离\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"地图",frontmatter:{title:"地图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/294d22/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/09.%E5%9C%B0%E5%9B%BE.html",relativePath:"《前端》笔记《库》/02.EChart/09.地图.md",key:"v-1c340074",path:"/pages/294d22/",headers:[{level:2,title:"（一）呈现地理位置上的数据",slug:"一-呈现地理位置上的数据",normalizedTitle:"（一）呈现地理位置上的数据",charIndex:11},{level:2,title:"（1）将矢量地图 json 文件放到 json/map 目录下（矢量地图 json 文件请到课件中查找）",slug:"_1-将矢量地图-json-文件放到-json-map-目录下-矢量地图-json-文件请到课件中查找",normalizedTitle:"（1）将矢量地图 json 文件放到 json/map 目录下（矢量地图 json 文件请到课件中查找）",charIndex:88},{level:2,title:"（2）使用 Ajax 获取矢量地图",slug:"_2-使用-ajax-获取矢量地图",normalizedTitle:"（2）使用 ajax 获取矢量地图",charIndex:145},{level:2,title:"（3）注册地图的 json 数据",slug:"_3-注册地图的-json-数据",normalizedTitle:"（3）注册地图的 json 数据",charIndex:167},{level:2,title:"（4）设置依赖的数据",slug:"_4-设置依赖的数据",normalizedTitle:"（4）设置依赖的数据",charIndex:188},{level:2,title:"（1）设置散点显示区域的坐标值",slug:"_1-设置散点显示区域的坐标值",normalizedTitle:"（1）设置散点显示区域的坐标值",charIndex:214},{level:2,title:"（2）将类型设置为 涟漪动画效果",slug:"_2-将类型设置为-涟漪动画效果",normalizedTitle:"（2）将类型设置为 涟漪动画效果",charIndex:234},{level:2,title:"（3）指明散点使用的坐标系统",slug:"_3-指明散点使用的坐标系统",normalizedTitle:"（3）指明散点使用的坐标系统",charIndex:255},{level:2,title:"（4）设置涟漪动画范围比",slug:"_4-设置涟漪动画范围比",normalizedTitle:"（4）设置涟漪动画范围比",charIndex:274}],headersStr:"（一）呈现地理位置上的数据 （1）将矢量地图 json 文件放到 json/map 目录下（矢量地图 json 文件请到课件中查找） （2）使用 Ajax 获取矢量地图 （3）注册地图的 json 数据 （4）设置依赖的数据 （1）设置散点显示区域的坐标值 （2）将类型设置为 涟漪动画效果 （3）指明散点使用的坐标系统 （4）设置涟漪动画范围比",content:"# 应用场景\n\n\n# （一）呈现地理位置上的数据\n\n\n# 效果一。百度地图 API（需要申请百度地图 ak）\n\n\n# 效果二。矢量地图（需要准备 json 文件数据）\n\n\n# （1）将矢量地图 json 文件放到 json/map 目录下（矢量地图 json 文件请到课件中查找）\n\n\n# （2）使用 Ajax 获取矢量地图\n\n\n# （3）注册地图的 json 数据\n\n\n# （4）设置依赖的数据\n\n\n# 涟漪动画效果\n\n\n# （1）设置散点显示区域的坐标值\n\n\n# （2）将类型设置为 涟漪动画效果\n\n\n# （3）指明散点使用的坐标系统\n\n\n# （4）设置涟漪动画范围比\n\n\n# 配置项\n\nmapChartConfig: { // 地图 配置项\n  geo: {\n    type: 'map',\n    map: 'chinaMap', // 4、设置依赖的数据\n    roam: true, // 允许滚轮缩放、点击拖拽\n    label: {\n      show: true // 显示标签\n    },\n    zoom: 1, // 初始化缩放比例\n    center: [87.617733, 43.792818] // 地图中心点（查看标签的中心点：ret.features[下标].properties.cp）\n  },\n  series: [\n    {\n      data: [\n      { name: '北京', value: 39.92 },\n      { name: '天津', value: 39.13 },\n      { name: '上海', value: 31.22 },\n      { name: '重庆', value: 66 },\n      { name: '河北', value: 147 },\n      { name: '河南', value: 113 },\n      { name: '云南', value: 25.04 },\n      { name: '辽宁', value: 50 },\n      { name: '黑龙江', value: 114 },\n      { name: '湖南', value: 175 },\n      { name: '安徽', value: 117 },\n      { name: '山东', value: 92 },\n      { name: '新疆', value: 84 },\n      { name: '江苏', value: 67 },\n      { name: '浙江', value: 84 },\n      { name: '江西', value: 96 },\n      { name: '湖北', value: 273 },\n      { name: '广西', value: 59 },\n      { name: '甘肃', value: 99 },\n      { name: '山西', value: 39 },\n      { name: '内蒙古', value: 58 },\n      { name: '陕西', value: 61 },\n      { name: '吉林', value: 51 },\n      { name: '福建', value: 29 },\n      { name: '贵州', value: 71 },\n      { name: '广东', value: 38 },\n      { name: '青海', value: 57 },\n      { name: '西藏', value: 24 },\n      { name: '四川', value: 58 },\n      { name: '宁夏', value: 52 },\n      { name: '海南', value: 54 },\n      { name: '台湾', value: 88 },\n      { name: '香港', value: 66 },\n      { name: '澳门', value: 77 },\n      { name: '南海诸岛', value: 55 }\n    ],\n      geoIndex: 0, // 将数据和第0个geo配置关联在一起\n      type: 'map'  // 图表类型：地图\n    },\n    {\n      data: {  // （1）设置散点显示区域的坐标值\n        value: [117.283042, 31.86119]\n      },\n      type: 'effectScatter',  // （2）将类型设置为 涟漪动画效果\n      coordinateSystem: 'geo', // （3）指明散点使用的坐标系统\n      rippleEffect: {\n        scale: 10 // （4）设置涟漪动画范围比\n      }\n    }\n  ],\n  visualMap: {  // 筛选区域\n    // 区域根据最小值和最大值显示不同的颜色\n    min: 0,\n    max: 300,\n    inRange: {\n      color: ['white', 'red'] // 控制颜色渐变的范围\n    },\n    calculable: true // 允许操作筛选区域\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n\n\n\n# 例\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n  <script src=\"lib/echarts.min.js\"><\/script>\n  <script src=\"lib/jquery.min.js\"><\/script>\n</head>\n\n<body>\n  <div style=\"width: 600px;height:400px;border: 1px solid #f00\"></div>\n\n  <script>\n    var airData = [\n      { name: '北京', value: 39.92 },\n      { name: '天津', value: 39.13 },\n      { name: '上海', value: 31.22 },\n      { name: '重庆', value: 66 },\n      { name: '河北', value: 147 },\n      { name: '河南', value: 113 },\n      { name: '云南', value: 25.04 },\n      { name: '辽宁', value: 50 },\n      { name: '黑龙江', value: 114 },\n      { name: '湖南', value: 175 },\n      { name: '安徽', value: 117 },\n      { name: '山东', value: 92 },\n      { name: '新疆', value: 84 },\n      { name: '江苏', value: 67 },\n      { name: '浙江', value: 84 },\n      { name: '江西', value: 96 },\n      { name: '湖北', value: 273 },\n      { name: '广西', value: 59 },\n      { name: '甘肃', value: 99 },\n      { name: '山西', value: 39 },\n      { name: '内蒙古', value: 58 },\n      { name: '陕西', value: 61 },\n      { name: '吉林', value: 51 },\n      { name: '福建', value: 29 },\n      { name: '贵州', value: 71 },\n      { name: '广东', value: 38 },\n      { name: '青海', value: 57 },\n      { name: '西藏', value: 24 },\n      { name: '四川', value: 58 },\n      { name: '宁夏', value: 52 },\n      { name: '海南', value: 54 },\n      { name: '台湾', value: 88 },\n      { name: '香港', value: 66 },\n      { name: '澳门', value: 77 },\n      { name: '南海诸岛', value: 55 }\n    ]\n    var scatterData = [\n      \n    ]\n    var mCharts = echarts.init(document.querySelector(\"div\"))\n    $.get('json/map/china.json', function (ret) {  // 2、使用 Ajax 获取矢量地图\n      // 矢量地图数据\n      // console.log(ret)\n\n      echarts.registerMap('chinaMap', ret)  // 3、注册地图的 json 数据\n      var option = {\n        geo: {\n          type: 'map',\n          map: 'chinaMap', // 4、设置依赖的数据\n          roam: true, // 允许滚轮缩放、点击拖拽\n          label: {\n            show: true // 显示标签\n          },\n          zoom: 1, // 初始化缩放比例\n          center: [87.617733, 43.792818] // 地图中心点（查看标签的中心点：ret.features[下标].properties.cp）\n        },\n        series: [\n          {\n            data: airData,\n            geoIndex: 0, // 将数据和第0个geo配置关联在一起\n            type: 'map'  // 图表类型：地图\n          },\n          {\n            data: {  // （1）设置散点显示区域的坐标值\n              value: [117.283042, 31.86119]\n            },\n            type: 'effectScatter',  // （2）将类型设置为 涟漪动画效果\n            coordinateSystem: 'geo', // （3）指明散点使用的坐标系统\n            rippleEffect: {\n              scale: 10 // （4）设置涟漪动画范围比\n            }\n          }\n        ],\n        visualMap: {  // 筛选区域\n          // 区域根据最小值和最大值显示不同的颜色\n          min: 0,\n          max: 300,\n          inRange: {\n            color: ['white', 'red'] // 控制颜色渐变的范围\n          },\n          calculable: true // 允许操作筛选区域\n        }\n      }\n      mCharts.setOption(option)\n    })\n\n  <\/script>\n</body>\n\n</html>\n```html\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n",normalizedContent:"# 应用场景\n\n\n# （一）呈现地理位置上的数据\n\n\n# 效果一。百度地图 api（需要申请百度地图 ak）\n\n\n# 效果二。矢量地图（需要准备 json 文件数据）\n\n\n# （1）将矢量地图 json 文件放到 json/map 目录下（矢量地图 json 文件请到课件中查找）\n\n\n# （2）使用 ajax 获取矢量地图\n\n\n# （3）注册地图的 json 数据\n\n\n# （4）设置依赖的数据\n\n\n# 涟漪动画效果\n\n\n# （1）设置散点显示区域的坐标值\n\n\n# （2）将类型设置为 涟漪动画效果\n\n\n# （3）指明散点使用的坐标系统\n\n\n# （4）设置涟漪动画范围比\n\n\n# 配置项\n\nmapchartconfig: { // 地图 配置项\n  geo: {\n    type: 'map',\n    map: 'chinamap', // 4、设置依赖的数据\n    roam: true, // 允许滚轮缩放、点击拖拽\n    label: {\n      show: true // 显示标签\n    },\n    zoom: 1, // 初始化缩放比例\n    center: [87.617733, 43.792818] // 地图中心点（查看标签的中心点：ret.features[下标].properties.cp）\n  },\n  series: [\n    {\n      data: [\n      { name: '北京', value: 39.92 },\n      { name: '天津', value: 39.13 },\n      { name: '上海', value: 31.22 },\n      { name: '重庆', value: 66 },\n      { name: '河北', value: 147 },\n      { name: '河南', value: 113 },\n      { name: '云南', value: 25.04 },\n      { name: '辽宁', value: 50 },\n      { name: '黑龙江', value: 114 },\n      { name: '湖南', value: 175 },\n      { name: '安徽', value: 117 },\n      { name: '山东', value: 92 },\n      { name: '新疆', value: 84 },\n      { name: '江苏', value: 67 },\n      { name: '浙江', value: 84 },\n      { name: '江西', value: 96 },\n      { name: '湖北', value: 273 },\n      { name: '广西', value: 59 },\n      { name: '甘肃', value: 99 },\n      { name: '山西', value: 39 },\n      { name: '内蒙古', value: 58 },\n      { name: '陕西', value: 61 },\n      { name: '吉林', value: 51 },\n      { name: '福建', value: 29 },\n      { name: '贵州', value: 71 },\n      { name: '广东', value: 38 },\n      { name: '青海', value: 57 },\n      { name: '西藏', value: 24 },\n      { name: '四川', value: 58 },\n      { name: '宁夏', value: 52 },\n      { name: '海南', value: 54 },\n      { name: '台湾', value: 88 },\n      { name: '香港', value: 66 },\n      { name: '澳门', value: 77 },\n      { name: '南海诸岛', value: 55 }\n    ],\n      geoindex: 0, // 将数据和第0个geo配置关联在一起\n      type: 'map'  // 图表类型：地图\n    },\n    {\n      data: {  // （1）设置散点显示区域的坐标值\n        value: [117.283042, 31.86119]\n      },\n      type: 'effectscatter',  // （2）将类型设置为 涟漪动画效果\n      coordinatesystem: 'geo', // （3）指明散点使用的坐标系统\n      rippleeffect: {\n        scale: 10 // （4）设置涟漪动画范围比\n      }\n    }\n  ],\n  visualmap: {  // 筛选区域\n    // 区域根据最小值和最大值显示不同的颜色\n    min: 0,\n    max: 300,\n    inrange: {\n      color: ['white', 'red'] // 控制颜色渐变的范围\n    },\n    calculable: true // 允许操作筛选区域\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n\n\n\n# 例\n\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n  <title>document</title>\n  <script src=\"lib/echarts.min.js\"><\/script>\n  <script src=\"lib/jquery.min.js\"><\/script>\n</head>\n\n<body>\n  <div style=\"width: 600px;height:400px;border: 1px solid #f00\"></div>\n\n  <script>\n    var airdata = [\n      { name: '北京', value: 39.92 },\n      { name: '天津', value: 39.13 },\n      { name: '上海', value: 31.22 },\n      { name: '重庆', value: 66 },\n      { name: '河北', value: 147 },\n      { name: '河南', value: 113 },\n      { name: '云南', value: 25.04 },\n      { name: '辽宁', value: 50 },\n      { name: '黑龙江', value: 114 },\n      { name: '湖南', value: 175 },\n      { name: '安徽', value: 117 },\n      { name: '山东', value: 92 },\n      { name: '新疆', value: 84 },\n      { name: '江苏', value: 67 },\n      { name: '浙江', value: 84 },\n      { name: '江西', value: 96 },\n      { name: '湖北', value: 273 },\n      { name: '广西', value: 59 },\n      { name: '甘肃', value: 99 },\n      { name: '山西', value: 39 },\n      { name: '内蒙古', value: 58 },\n      { name: '陕西', value: 61 },\n      { name: '吉林', value: 51 },\n      { name: '福建', value: 29 },\n      { name: '贵州', value: 71 },\n      { name: '广东', value: 38 },\n      { name: '青海', value: 57 },\n      { name: '西藏', value: 24 },\n      { name: '四川', value: 58 },\n      { name: '宁夏', value: 52 },\n      { name: '海南', value: 54 },\n      { name: '台湾', value: 88 },\n      { name: '香港', value: 66 },\n      { name: '澳门', value: 77 },\n      { name: '南海诸岛', value: 55 }\n    ]\n    var scatterdata = [\n      \n    ]\n    var mcharts = echarts.init(document.queryselector(\"div\"))\n    $.get('json/map/china.json', function (ret) {  // 2、使用 ajax 获取矢量地图\n      // 矢量地图数据\n      // console.log(ret)\n\n      echarts.registermap('chinamap', ret)  // 3、注册地图的 json 数据\n      var option = {\n        geo: {\n          type: 'map',\n          map: 'chinamap', // 4、设置依赖的数据\n          roam: true, // 允许滚轮缩放、点击拖拽\n          label: {\n            show: true // 显示标签\n          },\n          zoom: 1, // 初始化缩放比例\n          center: [87.617733, 43.792818] // 地图中心点（查看标签的中心点：ret.features[下标].properties.cp）\n        },\n        series: [\n          {\n            data: airdata,\n            geoindex: 0, // 将数据和第0个geo配置关联在一起\n            type: 'map'  // 图表类型：地图\n          },\n          {\n            data: {  // （1）设置散点显示区域的坐标值\n              value: [117.283042, 31.86119]\n            },\n            type: 'effectscatter',  // （2）将类型设置为 涟漪动画效果\n            coordinatesystem: 'geo', // （3）指明散点使用的坐标系统\n            rippleeffect: {\n              scale: 10 // （4）设置涟漪动画范围比\n            }\n          }\n        ],\n        visualmap: {  // 筛选区域\n          // 区域根据最小值和最大值显示不同的颜色\n          min: 0,\n          max: 300,\n          inrange: {\n            color: ['white', 'red'] // 控制颜色渐变的范围\n          },\n          calculable: true // 允许操作筛选区域\n        }\n      }\n      mcharts.setoption(option)\n    })\n\n  <\/script>\n</body>\n\n</html>\n```html\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"雷达图",frontmatter:{title:"雷达图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e855fb/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/10.%E9%9B%B7%E8%BE%BE%E5%9B%BE.html",relativePath:"《前端》笔记《库》/02.EChart/10.雷达图.md",key:"v-5731bc7a",path:"/pages/e855fb/",headers:[{level:2,title:"（一）呈现类目与多个维度和最大数据的对比",slug:"一-呈现类目与多个维度和最大数据的对比",normalizedTitle:"（一）呈现类目与多个维度和最大数据的对比",charIndex:11},{level:2,title:"1、定义各个维度的最大值, 通过radar属性配置",slug:"_1、定义各个维度的最大值-通过radar属性配置",normalizedTitle:"1、定义各个维度的最大值, 通过radar属性配置",charIndex:45},{level:2,title:"2、配置各个维度的最大值",slug:"_2、配置各个维度的最大值",normalizedTitle:"2、配置各个维度的最大值",charIndex:75},{level:2,title:"3、配置数据",slug:"_3、配置数据",normalizedTitle:"3、配置数据",charIndex:92}],headersStr:"（一）呈现类目与多个维度和最大数据的对比 1、定义各个维度的最大值, 通过radar属性配置 2、配置各个维度的最大值 3、配置数据",content:"# 应用场景\n\n\n# （一）呈现类目与多个维度和最大数据的对比\n\n\n# 使用步骤\n\n\n# 1、定义各个维度的最大值, 通过radar属性配置\n\n\n# 2、配置各个维度的最大值\n\n\n# 3、配置数据\n\n\n# 配置项\n\nradarChartConfig: { // 雷达图 配置项\n  title: { // 标题组件\n    text: '雷达图' // 主标题\n  },\n  radar: { // 各个维度的最大值\n    indicator: [{\n      name: '易用性',\n      max: 100\n    },\n    {\n      name: '功能',\n      max: 100\n    },\n    {\n      name: '拍照',\n      max: 100\n    },\n    {\n      name: '跑分',\n      max: 100\n    },\n    {\n      name: '续航',\n      max: 100\n    }],\n    shape: 'polygon' // 配置雷达图最外层的图形：polygon（多边形）（默认值）circle （圆形）\n  },\n  series: [\n    {\n      type: 'radar', // 图标类型：雷达图\n      label: { // 设置标签的样式\n        show: true // 显示数值\n      },\n      areaStyle: {}, // 填充\n      data: [ // （3）配置数据\n        {\n          name: '华为手机1',\n          value: [80, 90, 80, 82, 90]\n        },\n        {\n          name: '中兴手机1',\n          value: [70, 82, 75, 70, 78]\n        }\n      ]\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n",normalizedContent:"# 应用场景\n\n\n# （一）呈现类目与多个维度和最大数据的对比\n\n\n# 使用步骤\n\n\n# 1、定义各个维度的最大值, 通过radar属性配置\n\n\n# 2、配置各个维度的最大值\n\n\n# 3、配置数据\n\n\n# 配置项\n\nradarchartconfig: { // 雷达图 配置项\n  title: { // 标题组件\n    text: '雷达图' // 主标题\n  },\n  radar: { // 各个维度的最大值\n    indicator: [{\n      name: '易用性',\n      max: 100\n    },\n    {\n      name: '功能',\n      max: 100\n    },\n    {\n      name: '拍照',\n      max: 100\n    },\n    {\n      name: '跑分',\n      max: 100\n    },\n    {\n      name: '续航',\n      max: 100\n    }],\n    shape: 'polygon' // 配置雷达图最外层的图形：polygon（多边形）（默认值）circle （圆形）\n  },\n  series: [\n    {\n      type: 'radar', // 图标类型：雷达图\n      label: { // 设置标签的样式\n        show: true // 显示数值\n      },\n      areastyle: {}, // 填充\n      data: [ // （3）配置数据\n        {\n          name: '华为手机1',\n          value: [80, 90, 80, 82, 90]\n        },\n        {\n          name: '中兴手机1',\n          value: [70, 82, 75, 70, 78]\n        }\n      ]\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"仪表盘",frontmatter:{title:"仪表盘",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/cbcf49/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/11.%E4%BB%AA%E8%A1%A8%E7%9B%98.html",relativePath:"《前端》笔记《库》/02.EChart/11.仪表盘.md",key:"v-3413de38",path:"/pages/cbcf49/",headers:[{level:2,title:"（一）呈现指标进度及把控情况",slug:"一-呈现指标进度及把控情况",normalizedTitle:"（一）呈现指标进度及把控情况",charIndex:null}],headersStr:"（一）呈现指标进度及把控情况",content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"主题",frontmatter:{title:"主题",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/23e617/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/12.%E4%B8%BB%E9%A2%98.html",relativePath:"《前端》笔记《库》/02.EChart/12.主题.md",key:"v-0be85f30",path:"/pages/23e617/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"调色盘",frontmatter:{title:"调色盘",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/3026e7/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/13.%E8%B0%83%E8%89%B2%E7%9B%98.html",relativePath:"《前端》笔记《库》/02.EChart/13.调色盘.md",key:"v-58228608",path:"/pages/3026e7/",headersStr:null,content:"知识点：调色盘\n\n概念：一组颜色，图像、系列会自动从其中选择颜色\n\n主题调色盘 -- 主题.js echarts.registerTheme('itcast', { \"color\": [ // 主题调色盘 \"#893448\", \"#d95850\", \"#eb8146\", \"#ffb248\", \"#f2d643\", \"#ebdba4\" ] }\n\n全局调色盘 特性： 1、会覆盖主题调色盘 2、允许使用单词、16进制 -- 图标.html var option = { color: ['red', 'green', 'blue', 'skyblue', 'purple'] // 全局调色盘 }\n\n局部调色盘 特性：会覆盖全局调色盘 -- 图标.html var option = { series: [ { color: ['pink', 'yellow', 'black', 'orange', 'red'] // 局部调色盘 } ] // 全局调色盘 }",normalizedContent:"知识点：调色盘\n\n概念：一组颜色，图像、系列会自动从其中选择颜色\n\n主题调色盘 -- 主题.js echarts.registertheme('itcast', { \"color\": [ // 主题调色盘 \"#893448\", \"#d95850\", \"#eb8146\", \"#ffb248\", \"#f2d643\", \"#ebdba4\" ] }\n\n全局调色盘 特性： 1、会覆盖主题调色盘 2、允许使用单词、16进制 -- 图标.html var option = { color: ['red', 'green', 'blue', 'skyblue', 'purple'] // 全局调色盘 }\n\n局部调色盘 特性：会覆盖全局调色盘 -- 图标.html var option = { series: [ { color: ['pink', 'yellow', 'black', 'orange', 'red'] // 局部调色盘 } ] // 全局调色盘 }",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"颜色渐变",frontmatter:{title:"颜色渐变",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/be046a/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/14.%E9%A2%9C%E8%89%B2%E6%B8%90%E5%8F%98.html",relativePath:"《前端》笔记《库》/02.EChart/14.颜色渐变.md",key:"v-60a2e194",path:"/pages/be046a/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"样式",frontmatter:{title:"样式",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/fe0229/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/15.%E6%A0%B7%E5%BC%8F.html",relativePath:"《前端》笔记《库》/02.EChart/15.样式.md",key:"v-2bc4fe24",path:"/pages/fe0229/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"自适应",frontmatter:{title:"自适应",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/93d13a/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/16.%E8%87%AA%E9%80%82%E5%BA%94.html",relativePath:"《前端》笔记《库》/02.EChart/16.自适应.md",key:"v-50dd6d1f",path:"/pages/93d13a/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"加载动画",frontmatter:{title:"加载动画",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/22face/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/17.%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB.html",relativePath:"《前端》笔记《库》/02.EChart/17.加载动画.md",key:"v-52558656",path:"/pages/22face/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"增量动画",frontmatter:{title:"增量动画",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/288120/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/18.%E5%A2%9E%E9%87%8F%E5%8A%A8%E7%94%BB.html",relativePath:"《前端》笔记《库》/02.EChart/18.增量动画.md",key:"v-7dcc7da2",path:"/pages/288120/",headersStr:null,content:"\n修改数据 增加数据",normalizedContent:"\n修改数据 增加数据",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"动画配置项",frontmatter:{title:"动画配置项",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/f93ec3/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/19.%E5%8A%A8%E7%94%BB%E9%85%8D%E7%BD%AE%E9%A1%B9.html",relativePath:"《前端》笔记《库》/02.EChart/19.动画配置项.md",key:"v-92e1d46e",path:"/pages/f93ec3/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"交互API-全局 echarts 对象",frontmatter:{title:"交互API-全局 echarts 对象",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/463c49/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/20.%E4%BA%A4%E4%BA%92API-%E5%85%A8%E5%B1%80%20echarts%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《库》/02.EChart/20.交互API-全局 echarts 对象.md",key:"v-39b8722d",path:"/pages/463c49/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"交互API-echartsInstance 对象",frontmatter:{title:"交互API-echartsInstance 对象",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/60605e/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/21.%E4%BA%A4%E4%BA%92API-echartsInstance%20%E5%AF%B9%E8%B1%A1.html",relativePath:"《前端》笔记《库》/02.EChart/21.交互API-echartsInstance 对象.md",key:"v-9605ca52",path:"/pages/60605e/",headersStr:null,content:"\n触发行为 clear setOption dispose",normalizedContent:"\n触发行为 clear setoption dispose",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"koa2",frontmatter:{title:"koa2",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e17a64/",categories:["《前端》笔记《库》","EChart"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/02.EChart/22.koa2.html",relativePath:"《前端》笔记《库》/02.EChart/22.koa2.md",key:"v-8e121888",path:"/pages/e17a64/",headersStr:null,content:"// 知识点：koa2\n\n// \b概念：基于 node.js 平台的 web 开发框架\n\n// 特性： // 1、支持 async / await 语法糖 // 2、支持 洋葱模型中间件（浏览器发送请求，在到服务器前会被中间件拦截，如果设置了三层中间件，请求会先进入到第一层中间件，然后第二层，第三层，然后开始往外走，第二层，第一层，然后将数据响应会浏览器，就像洋葱一样，一层层的）\n\n// 作用：解决 Express 使用回调函数处理异步任务导致回调地狱的问题\n\n// 解决方法：async / await（需要 Node 在 v7.6.0 版本以上）\n\n// 使用步骤： // （1）检测 Node 版本是否在 v7.6.0 版本以上 // （2）npm init -y // （3）npm install koa // （4）创建 koa 实例对象（ -- app.js） // （5）定义中间件 // （6）监听端口 // （7）启动服务器（node app.js）\n\nconst Koa = require('koa') const app = new Koa() // （4）创建 koa 实例对象\n\n// ctx：上下文（web 容器） next：执行下一个中间件 // ctx.request：获取 请求对象 // ctx.response：获取 响应对象 // ctx.response.body：响应数据\n\n// 疑问：为什么会响应两次相同的数据？ // 解：第一次是输入地址时发起的请求，第二次是请求 ico 图标发起的请求\n\napp.use((ctx, next) => { // （5）定义中间件 ctx.response.body = 'hello world' console.log('第一层往里走'); next(); console.log('第一层往外走'); })\n\napp.use( async (ctx, next) => { console.log('第二层往里走'); next(); console.log('第二层往外走'); })\n\napp.use((ctx, next) => { console.log('第三层'); })\n\n// ----------------------------------- // 特性：使用 return 后会从第一个中间件开始往外走\n\n// app.use((ctx, next) => { // （5）定义中间件 // ctx.response.body = 'hello world' // console.log('第一层往里走'); // next(); // console.log('第一层往外走'); // })\n\n// app.use( async (ctx, next) => { // console.log('第二层往里走'); // const ret = await next(); // next 方法返回的是一个 promise 对象，使用异步函数就可以拿到返回的值了 // next(); // console.log('第二层往外走'); // console.log(ret); // })\n\n// app.use((ctx, next) => { // console.log('第三层'); // return 'i love the dog' // })\n\napp.listen(3000) // （6）监听端口",normalizedContent:"// 知识点：koa2\n\n// \b概念：基于 node.js 平台的 web 开发框架\n\n// 特性： // 1、支持 async / await 语法糖 // 2、支持 洋葱模型中间件（浏览器发送请求，在到服务器前会被中间件拦截，如果设置了三层中间件，请求会先进入到第一层中间件，然后第二层，第三层，然后开始往外走，第二层，第一层，然后将数据响应会浏览器，就像洋葱一样，一层层的）\n\n// 作用：解决 express 使用回调函数处理异步任务导致回调地狱的问题\n\n// 解决方法：async / await（需要 node 在 v7.6.0 版本以上）\n\n// 使用步骤： // （1）检测 node 版本是否在 v7.6.0 版本以上 // （2）npm init -y // （3）npm install koa // （4）创建 koa 实例对象（ -- app.js） // （5）定义中间件 // （6）监听端口 // （7）启动服务器（node app.js）\n\nconst koa = require('koa') const app = new koa() // （4）创建 koa 实例对象\n\n// ctx：上下文（web 容器） next：执行下一个中间件 // ctx.request：获取 请求对象 // ctx.response：获取 响应对象 // ctx.response.body：响应数据\n\n// 疑问：为什么会响应两次相同的数据？ // 解：第一次是输入地址时发起的请求，第二次是请求 ico 图标发起的请求\n\napp.use((ctx, next) => { // （5）定义中间件 ctx.response.body = 'hello world' console.log('第一层往里走'); next(); console.log('第一层往外走'); })\n\napp.use( async (ctx, next) => { console.log('第二层往里走'); next(); console.log('第二层往外走'); })\n\napp.use((ctx, next) => { console.log('第三层'); })\n\n// ----------------------------------- // 特性：使用 return 后会从第一个中间件开始往外走\n\n// app.use((ctx, next) => { // （5）定义中间件 // ctx.response.body = 'hello world' // console.log('第一层往里走'); // next(); // console.log('第一层往外走'); // })\n\n// app.use( async (ctx, next) => { // console.log('第二层往里走'); // const ret = await next(); // next 方法返回的是一个 promise 对象，使用异步函数就可以拿到返回的值了 // next(); // console.log('第二层往外走'); // console.log(ret); // })\n\n// app.use((ctx, next) => { // console.log('第三层'); // return 'i love the dog' // })\n\napp.listen(3000) // （6）监听端口",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"介绍",frontmatter:{title:"介绍",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/cc62b5/",categories:["《前端》笔记《库》","Element-ui"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/03.Element-ui/01.%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《库》/03.Element-ui/01.介绍.md",key:"v-56b945d9",path:"/pages/cc62b5/",headersStr:null,content:"介绍：一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\n\n作用：\b传统网站开发中，要想将页面设计的非常漂亮，需要自己设计和编写样式，这样会导致工作量的增加，而 Element-UI 提供了现成的组件库，很好的解决了这个问题\n\n科普： A端：开发界面（开发者） B端：商家界面（面向公司内部的客户、后端） C端：用户界面（面向客户、浏览器端、APP）\n\n应用场景：B端（因为C端有专门的UI设计师，所以更适合B端）\n\nvue2 的项目使用旧版的 Element UI（https://element.eleme.cn/#/zh-CN） vue3 的项目使用新版的 Element Plus（https://element-plus.gitee.io/#/zh-CN）\n\n下载：npm i element-ui -S\n\n自定义主题（在线主题编辑器：https://element.eleme.cn/#/zh-CN/component/custom-theme） 不需要自己手动调，交给 UI 设计师调整往后在下载使用即可\n\n使用步骤：\n\n引入方法：\n\n完整引入：操作简单，但是会额外引入一些用不到的组件，导致项目体积过大\n  使用步骤：\n    （1）完整引入 element ui 组件（-- main.js）\n      import ElementUI from 'element-ui'\n\n    （2）导入 element-ui 组件的样式（-- main.js）\n      import 'element-ui/lib/theme-chalk/index.css'\n\n    （3）把 Element 注册为 vue 的插件（-- main.js）\n      Vue.use(ElementUI)\n\n按需引入：只会引入用到的组件，但是打包的时候还是会把整个包打进来，能起到优化项目体积的目的（推荐）\n  配置：\n    （1）下载\n      npm i babel-plugin-component -D\n\n    （2）在 babel.config.js 中新增 plugins 节点，并配置以下代码\n      module.exports = {\n        \"presets\": [\n          '@vue/cli-plugin-babel/preset'  // 预制了很多插件\n        ],\n        \"plugins\": [\n          [\n            \"component\",\n            {\n              \"libraryName\": \"element-ui\",  // UI 框架名称\n              \"styleLibraryName\": \"theme-chalk\"  // 样式库\n            }\n          ]\n        ]\n      }\n\n\n使用步骤：\n\n方法一：直接使用（组件）（局部使用）\n  （1）按需导入 element ui 组件\n    import { Message } from 'element-ui'\n  \n  （2）使用组件\n    Message.warning('商品至少保留一件')\n\n方法二：（全局使用）（方法）\n  （1）引入需要的组件（-- main.js）\n    import { Message } from 'element-ui'\n\n  （2）挂载到 vue 原型上（-- main.js）\n    Vue.prototype.$message = Message\n\n  （3）使用（-- 组件）\n    this.$message.success('删除成功')\n    \n    特性：在 main.js 中应使用 Message.success('删除成功')\n\n方法三：（全局使用）（标签）\n  （1）引入需要的组件（-- main.js）\n    import { Button } from 'element-ui'\n\n  （2）注册组件（-- main.js）\n    语法：Vue.component(全局注册的名称, 全局注册的组件)\n    // Vue.component(Button.name, Button)\n    简写：\n      Vue.use(Button)\n\n  （3）使用（-- 组件）\n    <el-Button>按钮</el-button>\n\n\n封装 element ui 组件的导入注册 解决：element ui 组件的导入注册放在 main.js 里导致该文件代码凌乱的问题 \b使用步骤： 完整导入： 在 src 目录下新建 element-ui/index.js 模块，添加以下代码 import ElementUI from 'element-ui' import 'element-ui/lib/theme-chalk/index.css'\n\n按需导入：\n  （1）在 src 目录下新建 element-ui/index.js 模块\n\n  （2）添加以下代码\n  ```js\n  import Vue from 'vue'\n  import { Button, Input  } from 'element-ui'\n\n  Vue.use(Button)\n  Vue.use(Input)\n  ```\n\n  （3）导入 element-ui 模块（-- main.js）\n  ```js\n  // 封装后的 element-ui 模块\n  import '@/element-ui' \n  ```",normalizedContent:"介绍：一套为开发者、设计师和产品经理准备的基于 vue 2.0 的桌面端组件库\n\n作用：\b传统网站开发中，要想将页面设计的非常漂亮，需要自己设计和编写样式，这样会导致工作量的增加，而 element-ui 提供了现成的组件库，很好的解决了这个问题\n\n科普： a端：开发界面（开发者） b端：商家界面（面向公司内部的客户、后端） c端：用户界面（面向客户、浏览器端、app）\n\n应用场景：b端（因为c端有专门的ui设计师，所以更适合b端）\n\nvue2 的项目使用旧版的 element ui（https://element.eleme.cn/#/zh-cn） vue3 的项目使用新版的 element plus（https://element-plus.gitee.io/#/zh-cn）\n\n下载：npm i element-ui -s\n\n自定义主题（在线主题编辑器：https://element.eleme.cn/#/zh-cn/component/custom-theme） 不需要自己手动调，交给 ui 设计师调整往后在下载使用即可\n\n使用步骤：\n\n引入方法：\n\n完整引入：操作简单，但是会额外引入一些用不到的组件，导致项目体积过大\n  使用步骤：\n    （1）完整引入 element ui 组件（-- main.js）\n      import elementui from 'element-ui'\n\n    （2）导入 element-ui 组件的样式（-- main.js）\n      import 'element-ui/lib/theme-chalk/index.css'\n\n    （3）把 element 注册为 vue 的插件（-- main.js）\n      vue.use(elementui)\n\n按需引入：只会引入用到的组件，但是打包的时候还是会把整个包打进来，能起到优化项目体积的目的（推荐）\n  配置：\n    （1）下载\n      npm i babel-plugin-component -d\n\n    （2）在 babel.config.js 中新增 plugins 节点，并配置以下代码\n      module.exports = {\n        \"presets\": [\n          '@vue/cli-plugin-babel/preset'  // 预制了很多插件\n        ],\n        \"plugins\": [\n          [\n            \"component\",\n            {\n              \"libraryname\": \"element-ui\",  // ui 框架名称\n              \"stylelibraryname\": \"theme-chalk\"  // 样式库\n            }\n          ]\n        ]\n      }\n\n\n使用步骤：\n\n方法一：直接使用（组件）（局部使用）\n  （1）按需导入 element ui 组件\n    import { message } from 'element-ui'\n  \n  （2）使用组件\n    message.warning('商品至少保留一件')\n\n方法二：（全局使用）（方法）\n  （1）引入需要的组件（-- main.js）\n    import { message } from 'element-ui'\n\n  （2）挂载到 vue 原型上（-- main.js）\n    vue.prototype.$message = message\n\n  （3）使用（-- 组件）\n    this.$message.success('删除成功')\n    \n    特性：在 main.js 中应使用 message.success('删除成功')\n\n方法三：（全局使用）（标签）\n  （1）引入需要的组件（-- main.js）\n    import { button } from 'element-ui'\n\n  （2）注册组件（-- main.js）\n    语法：vue.component(全局注册的名称, 全局注册的组件)\n    // vue.component(button.name, button)\n    简写：\n      vue.use(button)\n\n  （3）使用（-- 组件）\n    <el-button>按钮</el-button>\n\n\n封装 element ui 组件的导入注册 解决：element ui 组件的导入注册放在 main.js 里导致该文件代码凌乱的问题 \b使用步骤： 完整导入： 在 src 目录下新建 element-ui/index.js 模块，添加以下代码 import elementui from 'element-ui' import 'element-ui/lib/theme-chalk/index.css'\n\n按需导入：\n  （1）在 src 目录下新建 element-ui/index.js 模块\n\n  （2）添加以下代码\n  ```js\n  import vue from 'vue'\n  import { button, input  } from 'element-ui'\n\n  vue.use(button)\n  vue.use(input)\n  ```\n\n  （3）导入 element-ui 模块（-- main.js）\n  ```js\n  // 封装后的 element-ui 模块\n  import '@/element-ui' \n  ```",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"栅格布局",frontmatter:{title:"栅格布局",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/290baf/",categories:["《前端》笔记《库》","Element-ui"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/03.Element-ui/02.%E6%A0%85%E6%A0%BC%E5%B8%83%E5%B1%80.html",relativePath:"《前端》笔记《库》/03.Element-ui/02.栅格布局.md",key:"v-102c6808",path:"/pages/290baf/",headersStr:null,content:'# 知识点：Layout 布局（栅格布局）\n\n文档： https://element.eleme.cn/#/zh-CN/component/layout#layout-bu-ju\n\n特性： 1、一行分成了 24 列\n\n标签：\n\n<el-row>：一行（大盒子）\n<el-col>：一个栅格（小盒子）\n\n\n1\n2\n\n\n<el-row> 属性描述：\n\n\x3c!-- gutter：每个桑格之间的间距 --\x3e\n<el-row :gutter="20">\n\x3c!-- type：开启 flex 布局；justify：对齐方式 --\x3e\n<el-row type="flex" justify="center">\n\n\n1\n2\n3\n4\n\n\n<el-col> 属性描述：\n\n\x3c!-- span：占几列 --\x3e\n<el-col :span="5">\n\x3c!-- offset：左侧的间隔列数 --\x3e \n<el-col :offset="6"></el-col>\n\n\n1\n2\n3\n4\n\n\n使用步骤： （1）按需导入\n\nimport { Row, Col } from \'element-ui\'\n\n\n1\n\n\n（2）全局注册组件\n\nVue.use(Row)\nVue.use(Col)\n\n\n1\n2\n',normalizedContent:'# 知识点：layout 布局（栅格布局）\n\n文档： https://element.eleme.cn/#/zh-cn/component/layout#layout-bu-ju\n\n特性： 1、一行分成了 24 列\n\n标签：\n\n<el-row>：一行（大盒子）\n<el-col>：一个栅格（小盒子）\n\n\n1\n2\n\n\n<el-row> 属性描述：\n\n\x3c!-- gutter：每个桑格之间的间距 --\x3e\n<el-row :gutter="20">\n\x3c!-- type：开启 flex 布局；justify：对齐方式 --\x3e\n<el-row type="flex" justify="center">\n\n\n1\n2\n3\n4\n\n\n<el-col> 属性描述：\n\n\x3c!-- span：占几列 --\x3e\n<el-col :span="5">\n\x3c!-- offset：左侧的间隔列数 --\x3e \n<el-col :offset="6"></el-col>\n\n\n1\n2\n3\n4\n\n\n使用步骤： （1）按需导入\n\nimport { row, col } from \'element-ui\'\n\n\n1\n\n\n（2）全局注册组件\n\nvue.use(row)\nvue.use(col)\n\n\n1\n2\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"组件",frontmatter:{title:"组件",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/3e78f3/",categories:["《前端》笔记《库》","Element-ui"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/03.Element-ui/03.%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《库》/03.Element-ui/03.组件.md",key:"v-d1ae67ce",path:"/pages/3e78f3/",headers:[{level:2,title:"el-form 属性",slug:"el-form-属性",normalizedTitle:"el-form 属性",charIndex:111},{level:2,title:"el-form-item 属性",slug:"el-form-item-属性",normalizedTitle:"el-form-item 属性",charIndex:163},{level:2,title:"（一）基础结构",slug:"一-基础结构",normalizedTitle:"（一）基础结构",charIndex:200},{level:2,title:"（二）为输入框添加 icon 图标",slug:"二-为输入框添加-icon-图标",normalizedTitle:"（二）为输入框添加 icon 图标",charIndex:738},{level:2,title:"（三）表单验证",slug:"三-表单验证",normalizedTitle:"（三）表单验证",charIndex:1142},{level:3,title:"（1）定义验证规则（-- 定义 data）",slug:"_1-定义验证规则-定义-data",normalizedTitle:"（1）定义验证规则（-- 定义 data）",charIndex:1226},{level:3,title:"（2）为表单绑定验证规则对象（:rules）",slug:"_2-为表单绑定验证规则对象-rules",normalizedTitle:"（2）为表单绑定验证规则对象（:rules）",charIndex:1799},{level:3,title:"（3）为表单项添加验证规则（prop 属性）",slug:"_3-为表单项添加验证规则-prop-属性",normalizedTitle:"（3）为表单项添加验证规则（prop 属性）",charIndex:1864},{level:3,title:"【BUG】el-select 不能为空的验证规则，即使有值也显示为空的问题",slug:"【bug】el-select-不能为空的验证规则-即使有值也显示为空的问题",normalizedTitle:"【bug】el-select 不能为空的验证规则，即使有值也显示为空的问题",charIndex:1928},{level:3,title:"【可选】validator 配置项的使用步骤：",slug:"【可选】validator-配置项的使用步骤",normalizedTitle:"【可选】validator 配置项的使用步骤：",charIndex:2142},{level:3,title:"其它",slug:"其它",normalizedTitle:"其它",charIndex:2775},{level:2,title:"（四）表单预验证",slug:"四-表单预验证",normalizedTitle:"（四）表单预验证",charIndex:2966},{level:2,title:"（五）表单重置",slug:"五-表单重置",normalizedTitle:"（五）表单重置",charIndex:3218},{level:3,title:"（1）获取表单实例对象",slug:"_1-获取表单实例对象",normalizedTitle:"（1）获取表单实例对象",charIndex:2976},{level:3,title:"（2）调用 resetFields() 重置表单",slug:"_2-调用-resetfields-重置表单",normalizedTitle:"（2）调用 resetfields() 重置表单",charIndex:3315},{level:3,title:"【BUG】点击编辑子部门，数据回写后在点击新增部门，这时候数据重置的是回写时的数据",slug:"【bug】点击编辑子部门-数据回写后在点击新增部门-这时候数据重置的是回写时的数据",normalizedTitle:"【bug】点击编辑子部门，数据回写后在点击新增部门，这时候数据重置的是回写时的数据",charIndex:3491},{level:3,title:'【BUG】报错 vue.runtime.esm.js?2b0e:619 [Vue warn]: Error in v-on handler: "TypeError: this.$refs.formRef.resetFields is not a function"',slug:"【bug】报错-vue-runtime-esm-js-2b0e-619-vue-warn-error-in-v-on-handler-typeerror-this-refs-formref-resetfields-is-not-a-function",normalizedTitle:"【bug】报错 vue.runtime.esm.js?2b0e:619 [vue warn]: error in v-on handler: &quot;typeerror: this.$refs.formref.resetfields is not a function&quot;",charIndex:null},{level:3,title:"【BUG】点击重置没有效果",slug:"【bug】点击重置没有效果",normalizedTitle:"【bug】点击重置没有效果",charIndex:4356},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:119},{level:2,title:"侧栏",slug:"侧栏",normalizedTitle:"侧栏",charIndex:5372},{level:3,title:"（一）基础结构",slug:"一-基础结构-2",normalizedTitle:"（一）基础结构",charIndex:200},{level:3,title:"（二） 为每个一级菜单指定不同的图标",slug:"二-为每个一级菜单指定不同的图标",normalizedTitle:"（二） 为每个一级菜单指定不同的图标",charIndex:6174},{level:3,title:"（三）点击菜单时显示不同的路由",slug:"三-点击菜单时显示不同的路由",normalizedTitle:"（三）点击菜单时显示不同的路由",charIndex:6460},{level:3,title:"（四）点击菜单时，让菜单高亮显示",slug:"四-点击菜单时-让菜单高亮显示",normalizedTitle:"（四）点击菜单时，让菜单高亮显示",charIndex:6776},{level:2,title:"（一）基础结构",slug:"一-基础结构-3",normalizedTitle:"（一）基础结构",charIndex:200},{level:2,title:"（二）图片分隔符",slug:"二-图片分隔符",normalizedTitle:"（二）图片分隔符",charIndex:7425},{level:2,title:"属性",slug:"属性-2",normalizedTitle:"属性",charIndex:119},{level:2,title:"（一）基础结构",slug:"一-基础结构-4",normalizedTitle:"（一）基础结构",charIndex:200},{level:2,title:"（二）复合型输入框",slug:"二-复合型输入框",normalizedTitle:"（二）复合型输入框",charIndex:8311},{level:2,title:"属性",slug:"属性-3",normalizedTitle:"属性",charIndex:119},{level:2,title:"属性",slug:"属性-4",normalizedTitle:"属性",charIndex:119},{level:2,title:"（一）基础结构",slug:"一-基础结构-5",normalizedTitle:"（一）基础结构",charIndex:200},{level:2,title:"（二）树形表格",slug:"二-树形表格",normalizedTitle:"（二）树形表格",charIndex:9434},{level:3,title:"（1）添加 row-kwy 属性",slug:"_1-添加-row-kwy-属性",normalizedTitle:"（1）添加 row-kwy 属性",charIndex:9467},{level:3,title:"只显示前两层，后面的层级不显示，且第二层不显示添加按钮",slug:"只显示前两层-后面的层级不显示-且第二层不显示添加按钮",normalizedTitle:"只显示前两层，后面的层级不显示，且第二层不显示添加按钮",charIndex:9562},{level:2,title:"获取当前数据项的对象",slug:"获取当前数据项的对象",normalizedTitle:"获取当前数据项的对象",charIndex:9656},{level:2,title:"通过枚举数据格式化字段数据",slug:"通过枚举数据格式化字段数据",normalizedTitle:"通过枚举数据格式化字段数据",charIndex:10461},{level:2,title:"格式字段为时间的数据",slug:"格式字段为时间的数据",normalizedTitle:"格式字段为时间的数据",charIndex:11379},{level:2,title:"属性",slug:"属性-5",normalizedTitle:"属性",charIndex:119},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:2932},{level:2,title:"（一）基础结构",slug:"一-基础结构-6",normalizedTitle:"（一）基础结构",charIndex:200},{level:2,title:"（二）自定义节点内容",slug:"二-自定义节点内容",normalizedTitle:"（二）自定义节点内容",charIndex:13965},{level:3,title:"属性",slug:"属性-6",normalizedTitle:"属性",charIndex:119},{level:2,title:"（三）默认展开和默认选中",slug:"三-默认展开和默认选中",normalizedTitle:"（三）默认展开和默认选中",charIndex:14739},{level:3,title:"（1）添加 node-key 属性",slug:"_1-添加-node-key-属性",normalizedTitle:"（1）添加 node-key 属性",charIndex:14756},{level:3,title:"（2）添加 default-checked-keys 属性",slug:"_2-添加-default-checked-keys-属性",normalizedTitle:"（2）添加 default-checked-keys 属性",charIndex:14866},{level:3,title:"（3）获取选中的节点",slug:"_3-获取选中的节点",normalizedTitle:"（3）获取选中的节点",charIndex:14984},{level:4,title:"1、获取  的实例",slug:"_1、获取-的实例",normalizedTitle:"1、获取  的实例",charIndex:null},{level:4,title:"2、获取选中的节点",slug:"_2、获取选中的节点",normalizedTitle:"2、获取选中的节点",charIndex:15049},{level:3,title:"【BUG】取消已选的节点，关闭对话框在打开对话框时，取消的已选的节点并没有取消，只有第二次打开对话框才正常显示",slug:"【bug】取消已选的节点-关闭对话框在打开对话框时-取消的已选的节点并没有取消-只有第二次打开对话框才正常显示",normalizedTitle:"【bug】取消已选的节点，关闭对话框在打开对话框时，取消的已选的节点并没有取消，只有第二次打开对话框才正常显示",charIndex:15104},{level:2,title:"将响应的数组数据转换成树形结构",slug:"将响应的数组数据转换成树形结构",normalizedTitle:"将响应的数组数据转换成树形结构",charIndex:11981},{level:2,title:"el-dropdown 属性",slug:"el-dropdown-属性",normalizedTitle:"el-dropdown 属性",charIndex:16547},{level:2,title:"el-dropdown 事件",slug:"el-dropdown-事件",normalizedTitle:"el-dropdown 事件",charIndex:16594},{level:2,title:"el-dropdown-item 属性",slug:"el-dropdown-item-属性",normalizedTitle:"el-dropdown-item 属性",charIndex:16632},{level:2,title:"（一）基础用法",slug:"一-基础用法",normalizedTitle:"（一）基础用法",charIndex:16683},{level:2,title:"（二）指令事件",slug:"二-指令事件",normalizedTitle:"（二）指令事件",charIndex:17158},{level:2,title:"属性",slug:"属性-7",normalizedTitle:"属性",charIndex:119},{level:2,title:"el-dialog 事件",slug:"el-dialog-事件",normalizedTitle:"el-dialog 事件",charIndex:18202},{level:2,title:"（一）基础用法",slug:"一-基础用法-2",normalizedTitle:"（一）基础用法",charIndex:16683},{level:2,title:"（二）数据回写",slug:"二-数据回写",normalizedTitle:"（二）数据回写",charIndex:19099},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:6869},{level:3,title:"el-select",slug:"el-select",normalizedTitle:"el-select",charIndex:1933},{level:2,title:"基础用法",slug:"基础用法",normalizedTitle:"基础用法",charIndex:16686},{level:2,title:"（一）通过枚举数据格式化数据",slug:"一-通过枚举数据格式化数据",normalizedTitle:"（一）通过枚举数据格式化数据",charIndex:19772},{level:2,title:"<el-tabs> 属性",slug:"el-tabs-属性",normalizedTitle:"<el-tabs> 属性",charIndex:20567},{level:2,title:"（一）基础用法",slug:"一-基础用法-3",normalizedTitle:"（一）基础用法",charIndex:16683},{level:2,title:"属性",slug:"属性-8",normalizedTitle:"属性",charIndex:119},{level:2,title:"（一）基本结构",slug:"一-基本结构",normalizedTitle:"（一）基本结构",charIndex:21132},{level:2,title:"属性",slug:"属性-9",normalizedTitle:"属性",charIndex:119},{level:2,title:"事件",slug:"事件-2",normalizedTitle:"事件",charIndex:6869},{level:2,title:"（一）基本结构",slug:"一-基本结构-2",normalizedTitle:"（一）基本结构",charIndex:21132},{level:2,title:"属性",slug:"属性-10",normalizedTitle:"属性",charIndex:119},{level:2,title:"（一）基础用法",slug:"一-基础用法-4",normalizedTitle:"（一）基础用法",charIndex:16683},{level:2,title:"（一）基础用法",slug:"一-基础用法-5",normalizedTitle:"（一）基础用法",charIndex:16683},{level:2,title:"el-upload 属性",slug:"el-upload-属性",normalizedTitle:"el-upload 属性",charIndex:22940},{level:2,title:"（一）用户头像上传",slug:"一-用户头像上传",normalizedTitle:"（一）用户头像上传",charIndex:24131},{level:3,title:"基础结构",slug:"基础结构",normalizedTitle:"基础结构",charIndex:203},{level:3,title:"获取用户头像",slug:"获取用户头像",normalizedTitle:"获取用户头像",charIndex:24992},{level:4,title:"（1）配置",slug:"_1-配置",normalizedTitle:"（1）配置",charIndex:25002},{level:3,title:"根据上传数量，控制  组件的显示隐藏",slug:"根据上传数量-控制-组件的显示隐藏",normalizedTitle:"根据上传数量，控制  组件的显示隐藏",charIndex:null},{level:4,title:"（1）动态添加样式",slug:"_1-动态添加样式",normalizedTitle:"（1）动态添加样式",charIndex:25308},{level:4,title:"（2）定义计算属性（-- computed 配置项）",slug:"_2-定义计算属性-computed-配置项",normalizedTitle:"（2）定义计算属性（-- computed 配置项）",charIndex:25384},{level:4,title:"（3）定义样式",slug:"_3-定义样式",normalizedTitle:"（3）定义样式",charIndex:25478},{level:3,title:"上传前检查。控制上传图片的类型和上传大小（该功能要配合 上传到腾讯云功能才能实现，否则会报 404）",slug:"上传前检查。控制上传图片的类型和上传大小-该功能要配合-上传到腾讯云功能才能实现-否则会报-404",normalizedTitle:"上传前检查。控制上传图片的类型和上传大小（该功能要配合 上传到腾讯云功能才能实现，否则会报 404）",charIndex:25577},{level:3,title:"上传进度条",slug:"上传进度条",normalizedTitle:"上传进度条",charIndex:26316},{level:3,title:"获取用户头像",slug:"获取用户头像-2",normalizedTitle:"获取用户头像",charIndex:24992},{level:3,title:"上传头像",slug:"上传头像",normalizedTitle:"上传头像",charIndex:27505},{level:2,title:"属性",slug:"属性-11",normalizedTitle:"属性",charIndex:119},{level:2,title:"基础结构",slug:"基础结构-2",normalizedTitle:"基础结构",charIndex:203},{level:2,title:"（一）基础结构",slug:"一-基础结构-7",normalizedTitle:"（一）基础结构",charIndex:200},{level:2,title:"（二）显示值，和存储值不相同",slug:"二-显示值-和存储值不相同",normalizedTitle:"（二）显示值，和存储值不相同",charIndex:29150}],headersStr:'el-form 属性 el-form-item 属性 （一）基础结构 （二）为输入框添加 icon 图标 （三）表单验证 （1）定义验证规则（-- 定义 data） （2）为表单绑定验证规则对象（:rules） （3）为表单项添加验证规则（prop 属性） 【BUG】el-select 不能为空的验证规则，即使有值也显示为空的问题 【可选】validator 配置项的使用步骤： 其它 （四）表单预验证 （五）表单重置 （1）获取表单实例对象 （2）调用 resetFields() 重置表单 【BUG】点击编辑子部门，数据回写后在点击新增部门，这时候数据重置的是回写时的数据 【BUG】报错 vue.runtime.esm.js?2b0e:619 [Vue warn]: Error in v-on handler: "TypeError: this.$refs.formRef.resetFields is not a function" 【BUG】点击重置没有效果 属性 侧栏 （一）基础结构 （二） 为每个一级菜单指定不同的图标 （三）点击菜单时显示不同的路由 （四）点击菜单时，让菜单高亮显示 （一）基础结构 （二）图片分隔符 属性 （一）基础结构 （二）复合型输入框 属性 属性 （一）基础结构 （二）树形表格 （1）添加 row-kwy 属性 只显示前两层，后面的层级不显示，且第二层不显示添加按钮 获取当前数据项的对象 通过枚举数据格式化字段数据 格式字段为时间的数据 属性 方法 （一）基础结构 （二）自定义节点内容 属性 （三）默认展开和默认选中 （1）添加 node-key 属性 （2）添加 default-checked-keys 属性 （3）获取选中的节点 1、获取  的实例 2、获取选中的节点 【BUG】取消已选的节点，关闭对话框在打开对话框时，取消的已选的节点并没有取消，只有第二次打开对话框才正常显示 将响应的数组数据转换成树形结构 el-dropdown 属性 el-dropdown 事件 el-dropdown-item 属性 （一）基础用法 （二）指令事件 属性 el-dialog 事件 （一）基础用法 （二）数据回写 事件 el-select 基础用法 （一）通过枚举数据格式化数据 <el-tabs> 属性 （一）基础用法 属性 （一）基本结构 属性 事件 （一）基本结构 属性 （一）基础用法 （一）基础用法 el-upload 属性 （一）用户头像上传 基础结构 获取用户头像 （1）配置 根据上传数量，控制  组件的显示隐藏 （1）动态添加样式 （2）定义计算属性（-- computed 配置项） （3）定义样式 上传前检查。控制上传图片的类型和上传大小（该功能要配合 上传到腾讯云功能才能实现，否则会报 404） 上传进度条 获取用户头像 上传头像 属性 基础结构 （一）基础结构 （二）显示值，和存储值不相同',content:'# 知识点：Element-ui 组件\n\n文档（icon 图标）： https://element.eleme.cn/#/zh-CN/component/icon#icon-tu-biao\n\n\n# Form 表单\n\n\n# el-form 属性\n\n:model： 表单数据 label-width： label 的宽度\n\n\n# el-form-item 属性\n\nlabel： 表单项左边的文本\n\n\n# （一）基础结构\n\n文档： https://element.eleme.cn/#/zh-CN/component/form#dian-xing-biao-dan\n\n\x3c!-- XXX 表单 --\x3e\n<el-form :model="XXXFormData">\n  <el-form-item label="活动名称" label-width="100px">\n    <el-input v-model="XXXFormData.username"></el-input>\n  </el-form-item>\n  <el-form-item label="活动名称" label-width="100px">\n    <el-input v-model="XXXFormData.password"></el-input>\n  </el-form-item>\n</el-form>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\ndata() {\n  return {\n    XXXFormData: { // XXX 表单数据\n      username: \'\',\n      password: \'\',\n    },\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# （二）为输入框添加 icon 图标\n\n文档（带 icon 的输入框）： https://element.eleme.cn/#/zh-CN/component/input#dai-icon-de-shu-ru-kuang 文档（icon 图标）： https://element.eleme.cn/#/zh-CN/component/icon#icon-tu-biao\n\n使用步骤： 添加 prefix-icon / suffix-icon 属性 prefix-icon：在前面添加图标 suffix-icon：在后面添加图标\n\n<el-input prefix-icon="el-icon-search"></el-input>\n\n\n1\n\n\n使用第三方图标（阿里矢量图）：\n\n<el-input prefix-icon="iconfont icon-search"></el-input>\n\n\n1\n\n\n\n# （三）表单验证\n\n文档： https://element.eleme.cn/#/zh-CN/component/form#biao-dan-yan-zheng\n\n\n# （1）定义验证规则（-- 定义 data）\n\nrequire： 是否为必填项 trigger： 验证方式（change：表单值发生变化时校验）（blue：表单失去焦点时进行校验） message： 校验不通过，提示消息 validator： 自定义验证规则（建议在内置配置无法满足的情况下，在使用自定义验证规则） pattern： 正则表达式（true：验证通过）（false：验证不通过）\n\nXXXFormRules: { // 表单验证规则\n  username: [\n    { required: true, trigger: \'blur\', message: \'不能为空\'}, // 不能为空\n    { min: 3, max: 10, message: \'长度在 3 到 10 个字符之间\', trigger: \'blur\' }, // 长度最少 3 位，最多不能超过 10 位\n    { pattern: /^1[3-9]\\d{9}$/, message: \'手机号格式不正确\', trigger: \'blur\' } // 手机号格式\n    // { trigger: \'blur\', validator: validateImgCode }  // 第三条验证规则\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# （2）为表单绑定验证规则对象（:rules）\n\n<el-form :rules="XXXFormRules">\n\n\n1\n\n\n\n# （3）为表单项添加验证规则（prop 属性）\n\n<el-form-item prop="username">\n\n\n1\n\n\n\n# 【BUG】el-select 不能为空的验证规则，即使有值也显示为空的问题\n\n1、trigger 设置为 change 2、type 设置为 number（value 的值是什么类型的这里就填什么类型）\n\ndistrictId: [\n  { required: true, trigger: \'change\', message: \'不能为空\', type: \'string\' } // 不能为空\n],\n\n\n1\n2\n3\n\n\n\n# 【可选】validator 配置项的使用步骤：\n\n（1）定义验证规则（-- @/utils/validate.js）\n\n// 手机号\nexport function validMobile(str) {\n  return /^1[3-9]\\d{9}$/.test(str)\n}\n\n\n1\n2\n3\n4\n\n\n（2）导入验证规则（-- 组件）\n\nimport { validMobile } from \'@/utils/validate\'\n\n\n1\n\n\n（3）定义验证规则\n\n// 二维码验证规则\nconst validateUsername = (rule, value, callback) => {\n    if (!validUsername(value)) {\n      // 校验失败\n      callback(new Error(\'手机号格式不正确\'))\n    } else {\n      // 校验成功\n      callback()\n    }\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n（4）配置验证规则\n\nloginFormRules: {\n  username: [\n    ...\n    \n    -- 增\n    { trigger: \'blur\', validator: validateImgCode }  // 第三条验证规则\n    --\n\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 其它\n\n隐藏验证失败时，浏览器控制台输出 async-validator 验证警告 （1）打开 node_modules\\async-validator\\es\\util.js 文件 （2）将 console.warn(type, errors) 注释掉\n\nbug： （1）表单验证明明有值，却一直提示不能为空 解决方法：prop 的值和 表单数据对象对应的属性名 必须相同\n\n\n# （四）表单预验证\n\n（1）获取表单实例对象 语法： ref="标识符Ref"\n\n<el-form ref="XXXFormRef"></el-form>\n\n\n1\n\n\n（2）调用表单实例对象上的 validate 预验证方法\n\nsure() {\n  this.$refs.XXXFormRef.validate(async isOK => {\n    if (isOK) { // isOK：验证结果（true：通过）（false：不通过）\n    }\n  })\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （五）表单重置\n\n说明： 显示时是什么样子的，重置后就是什么样子的\n\n\n# （1）获取表单实例对象\n\n<el-form ref="XXXFormRef"></el-form>\n\n\n1\n\n\n\n# （2）调用 resetFields() 重置表单\n\n提示： 如果是对话框，推荐放在取消方法中，这样可以少调用一次方法\n\nsetTimeout(() => { // 解决对话框连续点击确定按钮，导致提交空数据的问题\n  this.$refs.addAuthorityFormRef.resetFields()\n}, 1000)\n\n\n1\n2\n3\n\n\n\n# 【BUG】点击编辑子部门，数据回写后在点击新增部门，这时候数据重置的是回写时的数据\n\n解决方法： 将回写的数据放到 $nextTick 中\n\nshowDialog(type, data) { // 显示对话框\n    if (type === \'add\') {\n      this.dialogConfig.title = \'添加子部门\'\n      this.formData.pid = data.id\n    }\n    if (type === \'edit\') {\n      this.dialogConfig.title = \'编辑子部门\'\n\n      -- 改（旧）\n      this.formData = data\n      --\n\n      -- 改（新）\n      this.$nextTick(() => {\n        this.formData = data\n      })\n      --\n    }\n    if (type === \'del\') {\n      this.dialogConfig.title = \'删除子部门\'\n    }\n    this.dialogConfig.isShowDialog = true\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 【BUG】报错 vue.runtime.esm.js?2b0e:619 [Vue warn]: Error in v-on handler: "TypeError: this.$refs.formRef.resetFields is not a function"\n\n说明： this.$refs.formRef 可能已经存在，请重新命名\n\n-- 改（旧）\nthis.$refs.formRef\n--\n\n-- 改（新）\nthis.$refs.formRef1\n--\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 【BUG】点击重置没有效果\n\n解决方法： 组件必须要有 prop 属性，也就是要有表单验证的功能 <el-form-item prop="password">\n\n\n# Button 按钮\n\n文档： https://element.eleme.cn/#/zh-CN/component/button\n\n\n# 属性\n\ntype： （primary：原色）（success）（warning）（danger）（info）（text） icon： 图标 disabled： 是否禁用\n\n\n# Container 布局容器\n\n文档： https://element.eleme.cn/#/zh-CN/component/container#container-bu-ju-rong-qi\n\n（1）按需导入组件（-- plugins/element.js）\n\nimport { Container, Header, Aside, Main } from \'element-ui\'\n\n\n1\n\n\n（2）全局注册（-- plugins/element.js）\n\nVue.use(Container)\nVue.use(Header)\nVue.use(Aside)\nVue.use(Main)\n\n\n1\n2\n3\n4\n\n\n（3）选择合适的常见页面布局，并将结构复制到代码中（-- 组件.vue）：https://element.eleme.cn/#/zh-CN/component/container#chang-jian-ye-mian-bu-ju\n\n<el-container>\n  \x3c!-- 头部 容器 --\x3e\n  <el-header>Header</el-header>\n  \x3c!-- 外层 容器 --\x3e\n  <el-container>\n    \x3c!-- 侧边栏 容器 --\x3e\n    <el-aside width="200px">Aside</el-aside>\n    \x3c!-- 主体 容器 --\x3e\n    <el-main>Main</el-main>\n  </el-container>\n</el-container>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# NavMenu 导航菜单\n\n文档： https://element.eleme.cn/#/zh-CN/component/menu#ce-lan\n\n\n# 侧栏\n\n\n# （一）基础结构\n\n（1）按需导入（-- plugins/element.js）\n\nimport { Menu, Submenu, MenuItem } from \'element-ui\'\n\n\n1\n\n\n（2）全局注册组件（-- plugins/element.js）\n\nVue.use(Menu)\nVue.use(Submenu)\nVue.use(MenuItem)\n\n\n1\n2\n3\n\n\n（3）导入结构（-- 组件） 属性描述： <el-menu>：\n\nbackground-color="#333744"：背景颜色\ntext-color="#fff"：文本颜色\nactive-text-color：当前项文本颜色\n\n\n1\n2\n3\n\n\n\x3c!-- 侧边栏菜单 区 --\x3e\n<el-menu background-color="#333744" text-color="#fff">\n  \x3c!-- 一级菜单 --\x3e\n  <el-submenu index="1">\n    \x3c!-- 模板区域 --\x3e\n    <template slot="title">\n      \x3c!-- 图标 --\x3e\n      <i class="el-icon-menu"></i>\n      \x3c!-- 文本 --\x3e\n      <span>一级菜单</span>\n    </template>\n    \x3c!-- 二级菜单 --\x3e\n    <el-menu-item>\n      <i class="el-icon-menu"></i>\n      <span slot="title">二级菜单</span>\n    </el-menu-item>\n  </el-submenu>\n</el-menu>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# （二） 为每个一级菜单指定不同的图标\n\n（1）定义一个对象，用于存放图标名，属性名为一级菜单项 id\n\n// 一级菜单图标\niconsObj: {\n  \'0\': \'el-icon-user-solid\',\n  \'1\': \'el-icon-key\',\n  \'2\': \'el-icon-s-cooperation\',\n  \'3\': \'el-icon-s-claim\',\n  \'4\': \'el-icon-s-help\',\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n（2）动态添加类名\n\n<i :class="iconsObj[item.id]"></i>\n\n\n1\n\n\n\n# （三）点击菜单时显示不同的路由\n\n传统方法：为每个菜单添加 router-link 推荐方法：开启 vue-router 路由模式 说明：启用该模式会在激活导航时以 index（菜单id） 作为 path 进行路由跳转（如：localhost:8080/#/110） 提示：使用 菜单id 作为 path 进行路由跳转并不合适，推荐使用 path 例： （1）为 添加 router 属性\n\n（2）将 <el-menu-item> 中的 index 改为 path\n  <el-menu-item :index="\'/\' + subItem.path" v-for="subItem in item.children">\n\n\n\n# （四）点击菜单时，让菜单高亮显示\n\n原理：default-active="index"> 语法：为 添加 default-active="index"> 属性 使用步骤： （1）绑定点击事件 <el-menu-item @click="saveNavState(\'/\' + children.path)">\n\n（2）将当前菜单项的 index 存储起来\n  // 存储当前菜单项的 index\n  saveNavState(activePath) {\n    window.sessionStorage.setItem(\'activePath\', activePath)\n    this.activePath = activePath\n  }\n\n（3）定义数据\n  // 当前菜单项的 index\n  activePath: \'\'\n\n（4）动态绑定 default-active 属性\n  <el-menu :default-active="activePath">\n\n（5）为 activePath 赋值\n  created() {\n    this.activePath = window.sessionStorage.getItem(\'activePath\')\n  }\n\n\n\n# 面包屑导航\n\n文档： https://element.eleme.cn/#/zh-CN/component/breadcrumb#breadcrumb-mian-bao-xie\n\n\n# （一）基础结构\n\n\n# （二）图片分隔符\n\n（1）按需导入\n\nimport { Breadcrumb, BreadcrumbItem } from \'element-ui\'\n\n\n1\n\n\n（2）注册\n\nVue.use(Breadcrumb)\nVue.use(BreadcrumbItem)\n\n\n1\n2\n\n\n（3）导入结构\n\n\x3c!-- 面包屑导航（图标分隔符） --\x3e\n<el-breadcrumb separator-class="el-icon-arrow-right" style="margin-bottom: 20px">\n  <el-breadcrumb-item :to="{ path: \'/\' }">首页</el-breadcrumb-item>\n  <el-breadcrumb-item>活动管理</el-breadcrumb-item>\n  <el-breadcrumb-item>活动列表</el-breadcrumb-item>\n  <el-breadcrumb-item>活动详情</el-breadcrumb-item>\n</el-breadcrumb>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 卡片视图（简单卡片）\n\n文档： https://element.eleme.cn/#/zh-CN/component/card#jian-dan-qia-pian\n\n（1）导入结构\n\n\x3c!-- 卡片视图（简单卡片） --\x3e\n<el-card></el-card>\n\n\n1\n2\n\n\n\n# Input 输入框\n\n文档： https://element.eleme.cn/#/zh-CN/component/input#fu-he-xing-shu-ru-kuang\n\n\n# 属性\n\n属性         说明                            默认值\nrows       输入框行数。仅对 type=\'textarea\' 生效   2\ndisabled   禁用状态                          \n\n\n# （一）基础结构\n\n\n# （二）复合型输入框\n\n（1）导入结构\n\n\x3c!-- Input 输入框（复合输入框） --\x3e\n<el-input placeholder="请输入内容">\n  <el-button slot="append" icon="el-icon-search"></el-button>\n</el-input>\n\n\n1\n2\n3\n4\n\n\n\n# Table 表格（基础表格）\n\n文档： https://element.eleme.cn/#/zh-CN/component/table#ji-chu-biao-ge\n\n\n# 属性\n\n| 参数 | 说明 | 类型 | 默认值 | | data | 渲染的列表数据 | - | - | | border | 显示边框线 | | - | - | | stripe | 隔行变色 | | - | - | | node-key | 用于区分层级。值为节点数据中的一个字段名，这个字段名必须是唯一的 | String | - |\n\n\n# 属性\n\nprop： 该字段的数据 type： （index：序号） align： 对齐方式 width： 宽度 sortable： 排序 formatter： 格式化字段数据【值：（函数）】\n\n\n# （一）基础结构\n\n\x3c!-- xxx 表格 --\x3e\n<el-table :data="xxxTableList" border stripe>\n  <el-table-column label="序号" type="index" align="left" width="80px"></el-table-column>\n  <el-table-column label="邮箱" prop="email" align="center"></el-table-column>\n  <el-table-column label="电话" prop="mobile" align="center"></el-table-column>\n</el-table>\n\n\n1\n2\n3\n4\n5\n6\n\n\ndata() {\n  return {\n    xxxTableList: [ // xxx 表格数据\n      {\n        email: \'123@qq.com\',\n        mobile: \'123456789\'\n      },\n      {\n        email: \'312@qq.com\',\n        mobile: \'987654321\'\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# （二）树形表格\n\n说明： data 数据必须是树形结构的\n\n\n# （1）添加 row-kwy 属性\n\nnode-key： 用于区分层级。值为节点数据中的一个字段名，这个字段名必须是唯一的\n\n<el-table row-key="id">\n\n\n1\n\n\n\n# 只显示前两层，后面的层级不显示，且第二层不显示添加按钮\n\n感觉用不上，就没做，如果有需求可以看视频【3-11 权限设计和管理/3.2获取权限数据并转化树形_.mp4；12 分钟】\n\n\n# 获取当前数据项的对象\n\n原理： 通过 template 中的 slot-scope/v-slot（作用域插槽）中的 row 属性来获取列表数据中的 当前数据项 - row： 当前数据项的字段信息\n\n<el-table :data="userList" border stripe>\n  <el-table-column label="操作" prop="mobile" align="center">\n    <template slot-scope="{ row }">\n      <el-button type="danger" @click="delete(row.id)">删除</el-button>\n    </template>\n  </el-table-column>\n</el-table>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nmethods() {\n  async deleteRole(id) {\n    // 这里没有使用 .catch，而是使用了 async/await，为了监听失败时的回调函数，可以使用 try/catch 来替代 .catch\n    try {\n      await this.$confirm(\'确认删除该角色吗？\')\n      // 只有执行成功才会执行以下代码（作用：替代 .then）\n      await deleteRole(id)\n      this.getRoleList()\n      this.$message.success(\'删除角色成功\')\n    } catch(error) {\n      // 只有执行失败才会进入到该作用域（作用：替代 .catch）\n      console.log(error)\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 通过枚举数据格式化字段数据\n\n使用场景： 该字段响应的数据为 1，需要把这个 1 变为特定的格式，如字段值为 1，则格式化为 正式\n\n（1）定义枚举数据（枚举数据：字段的值根据枚举数据进行变化）（-- @/api/新建 constant/employees.js） 枚举数据：\n\nexport default {\n  // 聘用形式\n  hireType: [\n    {\n      id: 1,\n      value: \'正式\'\n    },\n    {\n      id: 2,\n      value: \'非正式\'\n    }\n  ],\n  // 在职状态\n  workingState: [\n    {\n      id: \'1\',\n      value: \'在职\'\n    },\n    {\n      id: \'2\',\n      value: \'离职\'\n    }\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n（2）导入枚举数据（-- 组件）\n\nimport EmployeeEnum from \'@/api/constant/employees\'\n\n\n1\n\n\n（3）绑定 formatter 属性（-- 同上）\n\n * formatter： 格式化内容【值：（函数）】\n\n<el-table-column label="聘用形式" :formatter="formatEmployment" />\n\n\n1\n\n\n（4）定义格式化方法（-- 同上; methods 配置项）\n\n// 格式化 聘用字段的数据\nformatEmployment(row, column, cellValue, index) {\n  // cellValue：当前字段的数据\n  \n  const obj = EmployeeEnum.hireType.find(item => item.id === cellValue)\n  return obj ? obj.value : \'未知\'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 格式字段为时间的数据\n\n使用场景： 将 2018-11-02T08:00:00.000+0000 格式化为 2018-11-02\n\n原理： 作用域插槽 + 过滤器\n\n（1）将定义好的过滤器方法放到项目中（-- @/新建 filters/index.js）\n\n（2）导入过滤器（-- @/main.js）\n\nimport * as filters from \'@/filters\'\n\n\n1\n\n\n（3）全局注册过滤器（-- 同上）\n\nObject.keys(filters).forEach(key => {\n  Vue.filter(key, filters[key])\n})\n\n\n1\n2\n3\n\n\n（4）使用过滤器（-- 组件）\n\n<el-table-column label="入职时间">\n\n  -- 增\n  <template slot-scope="{ row }">{{ row.timeOfEntry | formatDate }}</template>\n  --\n\n</el-table-column>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# Tree 树形控件\n\n文档： https://element.eleme.cn/#/zh-CN/component/tree#tree-shu-xing-kong-jian\n\n原理： 1、通过 props 指定 children、label 2、将响应的数组数据转换成树形结构，并渲染到组件中\n\n\n# 属性\n\n| 参数 | 说明 | 类型 | 默认值 | | :----------------- | :------------------: | -----: | | | default-expand-all | 是否默认展开所有节点 | | | | :props | 指定 children、label | object | | | show-checkbox | 节点是否可被选择 | boolean | false | | node-key | 用于区分层级。值为节点数据中的一个字段名，这个字段名必须是唯一的 | String | - | | default-checked-keys | 默认勾选的节点 | array | - | | check-strictly | 选择父组件后，并不会选择所有的子组件 | boolean | false |\n\n\n# 方法\n\n@node-click： 点击节点时触发（参数一：当前节点对象） getCheckedKeys： 获取选中的节点，选中节点的值为 node-key 设置的值\n\n\n# （一）基础结构\n\n<el-tree :data="xxxTreeData" :props="defaultProps" default-expand-all></el-tree>\n\n\n1\n\n\ndata() {\n  return {\n    xxxTreeData: [ // 树形控件数据\n      {\n        label: \'一级 1\',\n        children: [\n          {\n            label: \'二级 1-1\',\n            children: [\n              {\n                label: \'三级 1-1-1\'\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: \'一级 2\',\n        children: [\n          {\n            label: \'二级 2-1\',\n            children: [\n              {\n                label: \'三级 2-1-1\'\n              }\n            ]\n          },\n          {\n            label: \'二级 2-2\',\n            children: [\n              {\n                label: \'三级 2-2-1\'\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: \'一级 3\',\n        children: [\n          {\n            label: \'二级 3-1\',\n            children: [\n              {\n                label: \'三级 3-1-1\'\n              }\n            ]\n          },\n          {\n            label: \'二级 3-2\',\n            children: [\n              {\n                label: \'三级 3-2-1\'\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    defaultProps: { // 指定渲染的数据\n      children: \'children\', // 从 data 中指定渲染 children 数据\n      label: \'label\' // 从 data 指定渲染 label 数据\n    }\n  }\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n\n# （二）自定义节点内容\n\n<el-tree :data="xxxTreeData" :props="defaultProps" default-expand-all>\n\n  -- 增（原理：插槽）（slot-scope：作用域插槽，接收传递给插槽的数据）（{ data }：每个节点的数据对象）\n  <el-row slot-scope="{ data }" type="flex" class="box" style="width: 100%">\n    <el-col class="title">{{ data.label }}</el-col>\n    <el-col :span="2" class="operate">\n      <el-dropdown>\n        <span class="el-dropdown-link">\n          操作<i class="el-icon-arrow-down el-icon--right" />\n        </span>\n        <el-dropdown-menu slot="dropdown">\n          <el-dropdown-item>添加子部门</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </el-col>\n  </el-row>\n  --\n\n</el-tree>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 属性\n\n参数                  说明            类型\nslot-scope（作用域插槽）   当前 itme 的数据   \n\n\n# （三）默认展开和默认选中\n\n\n# （1）添加 node-key 属性\n\n原理： 当一个值在 node-key 和 selectNode 中都存在时，这个值就会被选中\n\n<el-tree node-key="id"></el-tree>\n\n\n1\n\n\n\n# （2）添加 default-checked-keys 属性\n\n<el-tree :default-checked-keys="selectNode" :check-strictly="true"></el-tree>\n\n\n1\n\n\n\n# （3）获取选中的节点\n\n# 1、获取 的实例\n\n<el-tree ref="xxxRef"></el-tree>\n\n\n1\n\n\n# 2、获取选中的节点\n\nthis.$refs.xxxRef.getCheckedKeys()\n\n\n1\n\n\n\n# 【BUG】取消已选的节点，关闭对话框在打开对话框时，取消的已选的节点并没有取消，只有第二次打开对话框才正常显示\n\n解决方法： 清空已选择的节点 提示： 推荐在对话框取消事件中清空，这样就不需要再确定按钮中在写一次了\n\ndata() {\n  return {\n    selectNode: [] // 已选择的节点\n  }\n},\nmethods: {\n  cancel() { // 取消\n    this.selectNode = []\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 将响应的数组数据转换成树形结构\n\n如：\n\n// 响应的数据\n[\n  { id: 1, pid: \'\', text: \'菜单1\' },\n  { id: 11, pid: 1, text: \'菜单1-1\' },\n  { id: 12, pid: 1, text: \'菜单1-2\' },\n  { id: 2, pid: \'\', text: \'菜单2\' },\n  { id: 21, pid: 2, text: \'菜单2-1\' },\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n// 转换成树形结构的数据\n[\n  {\n    id: 1, pid: \'\', text: \'菜单1\', children: [\n      { id: 11, pid: 1, text: \'菜单1-1\' },\n      { id: 12, pid: 1, text: \'菜单1-2\' },\n    ]\n  },\n  {\n    id: 2, pid: \'\', text: \'菜单2\', children: [\n      { id: 21, pid: 2, text: \'菜单2-1\' },\n    ]\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n原理： 递归算法\n\n（1） 定义方法（-- utils/新建 dataConvert.js）\n\nexport function tranListToTreeData(list, rootValue) { // 将数组数据转换成树形结构\n  var arr = []\n  list.forEach(item => {\n    if (item.pid === rootValue) {\n      const children = tranListToTreeData(list, item.id)\n      if (children.length) {\n        item.children = children\n      }\n      arr.push(item)\n    }\n  })\n  return arr\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n（2）导入方法\n\nimport { tranListToTreeData } from \'@/utils/dataConvert\'\n\n\n1\n\n\n（2）调用方法\n\nthis.departs = tranListToTreeData(result.depts, \'\') // 将数组数据转换成树形结构\n\n\n1\n\n\n\n# Dropdown 下拉菜单\n\n文档： https://element.eleme.cn/#/zh-CN/component/dropdown#dropdown-xia-la-cai-dan\n\n\n# el-dropdown 属性\n\ntrigger：（click：点击时才显示下拉菜单）\n\n\n# el-dropdown 事件\n\n@command：点击菜单项后触发\n\n\n# el-dropdown-item 属性\n\ncommand: 向 command 事件传递参数\n\n\n# （一）基础用法\n\n<el-dropdown>\n  <span class="el-dropdown-link">\n    下拉菜单<i class="el-icon-arrow-down el-icon--right"></i>\n  </span>\n  <el-dropdown-menu slot="dropdown">\n    <el-dropdown-item>黄金糕</el-dropdown-item>\n    <el-dropdown-item>狮子头</el-dropdown-item>\n    <el-dropdown-item>螺蛳粉</el-dropdown-item>\n    <el-dropdown-item disabled>双皮奶</el-dropdown-item>\n    <el-dropdown-item divided>蚵仔煎</el-dropdown-item>\n  </el-dropdown-menu>\n</el-dropdown>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# （二）指令事件\n\n（1）监听 @command 事件（@command：点击菜单项后触发）\n\n<el-dropdown @command="operateDepts">\n\n\n1\n\n\n（2）绑定 command 属性（作用：向 operateDepts 传递参数）\n\n<el-dropdown-item command="add">添加子部门</el-dropdown-item>\n<el-dropdown-item command="edit">编辑部门</el-dropdown-item>\n<el-dropdown-item command="del">删除部门</el-dropdown-item>\n\n\n1\n2\n3\n\n\n（3）定义 @command 事件的方法\n\noperateDepts(type) {\n  if (type === \'add\') {\n    \n  } else if (type === \'edit\') {\n\n  } else if (type === \'del\') {\n    // （确定 进入 .then）（取消 进入 .catch）\n    this.$confirm(\'您确定要删除该组织部门吗？\').then(() => {\n      // 这里不推荐使用 async/await，因为这是写在 .then 里面的，推荐按照 .then 的顺序进行书写\n      // 这里不推荐在后面加 .then，会变成嵌套形语法，可读性差\n      // 因为这段代码是 Promise 对象，所以推荐使用 return\n      return delDepartments(this.treeNode.id)\n    }).then(() => {\n      // 调用父组件的方法，重新获取数据\n      this.$emit(\'delDepts\')\n\n      this.$message.success(\'删除部门成功\')\n    })\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# Dialog 对话框\n\n文档： https://element.eleme.cn/#/zh-CN/component/dialog#dialog-dui-hua-kuang\n\n\n# 属性\n\nvisible： 显示隐藏对话框 width： 对话框宽度（推荐百分比）\n\n\n# el-dialog 事件\n\n@close：关闭对话框时触发\n\n\n# （一）基础用法\n\n\x3c!-- 对话框 --\x3e\n<el-dialog :title="dialogConfig.title" :visible="dialogConfig.isShowDialog" width="30%" @close="cancel">\n  <span>这是一段信息</span>\n  <el-row slot="footer" class="dialog-footer">\n    <el-button @click="cancel">取 消</el-button>\n    <el-button type="primary" @click="sure">确 定</el-button>\n  </el-row>\n</el-dialog>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\ndata() {\n  return {\n    dialogConfig: { // 对话框 配置项\n      isShowDialog: false, // 是否显示对话框\n      title: \'\' // 标题\n    },\n  }\n},\nmethods: {\n  showXXXDialog(type) { // 显示 XXX 对话框\n    this.dialogConfig.title = type\n    this.dialogConfig.isShowDialog = true\n  },\n  sure() { // 确定\n    if (this.dialogConfig.title === \'新增角色\') console.log(\'处理代码\')\n    this.dialogConfig.isShowDialog = false\n  },\n  cancel() { // 取消\n    this.dialogConfig.isShowDialog = false\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# （二）数据回写\n\n原理： 父组件调用子组件的方法\n\n-- 父组件\n// 显示对话框\nshowDialog(type, row) {\n  this.isShowDialog = true\n  this.type = type\n  if (row) {\n    this.$refs.dialogRef.dataWriteback(row)\n  }\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n-- 子组件\n// 数据回写\ndataWriteback(dataItem) {\n  // 深拷贝。解决修改 editFormData 中的属性时，dataItem 的属性也发送变化的问题\n  Object.assign(this.editFormData, dataItem)\n},\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Select 选择器\n\n文档： https://element.eleme.cn/#/zh-CN/component/select#select-xuan-ze-qi\n\n\n# 事件\n\n\n# el-select\n\n@focus： 点击该组件时触发\n\n\n# 基础用法\n\n<el-select v-model="value" placeholder="请选择">\n  <el-option v-for="item in options" :key="item.value" :label="item.label" :value="item.value"></el-option>\n</el-select>\n\n\n1\n2\n3\n\n\n\n# （一）通过枚举数据格式化数据\n\n（1）定义枚举数据（枚举数据：字段的值根据枚举数据进行变化）（-- @/api/新建 constant/employees.js） 模板：\n\nexport default {\n  // 聘用形式\n  hireType: [\n    {\n      id: 1,\n      value: \'正式\'\n    },\n    {\n      id: 2,\n      value: \'非正式\'\n    }\n  ],\n  // 在职状态\n  workingState: [\n    {\n      id: \'1\',\n      value: \'在职\'\n    },\n    {\n      id: \'2\',\n      value: \'离职\'\n    }\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n（2）导入枚举数据（-- 组件）\n\nimport EmployeeEnum from \'@/api/constant/employees\'\n\n\n1\n\n\n（3）将枚举数据存到 data 中（-- 同上）\n\ndata() {\n  return {\n    EmployeeEnum\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n（4）\b渲染枚举数据\n\n<el-option v-for="item in EmployeeEnum.hireType" :key="item.id" :label="item.value" :value="item.id"></el-option>\n\n\n1\n\n\n\b\n\n\n# Tabs 标签页\n\n文档： https://element.eleme.cn/#/zh-CN/component/tabs#tabs-biao-qian-ye\n\n\n# <el-tabs> 属性\n\n： 默认选中的 tab 项。\n\n参数        说明         类型       可选值   默认值\nv-model   默认选中的选项卡   string   -     name\n\n\n# （一）基础用法\n\n<el-tabs v-model="activeName">\n  \x3c!-- 用户管理 tab --\x3e\n  <el-tab-pane label="用户管理" name="user">用户管理</el-tab-pane>\n  \x3c!-- 配置管理 tab --\x3e\n  <el-tab-pane label="配置管理" name="config">配置管理</el-tab-pane>\n</el-tabs>\n\n\n1\n2\n3\n4\n5\n6\n\n\ndata() {\n  return {\n    activeName: \'user\', // 当前选项卡\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# Alert 警告\n\n文档： https://element.eleme.cn/#/zh-CN/component/alert#alert-jing-gao\n\n\n# 属性\n\ntype：（info：消息）（warning：警告）（error：错误） show-icon： 是否显示内置图标\n\n\n# （一）基本结构\n\n<el-alert class="el-icon-video-camera-solid" title="对公司名称、公司地址、营业执照、公司地区的更新，将使得公司资料被重新审核，请谨慎修改" type="info"></el-alert>\n\n\n1\n\n\n\n# Pagination 分页\n\n文档： https://element.eleme.cn/#/zh-CN/component/pagination#pagination-fen-ye\n\n\n# 属性\n\ntotal： 共多少条数据 :current-page： 当前页数 :page-size： 每页显示多少条数据 layout： 控件布局\n\n\n# 事件\n\n@current-change： 页码改变时触发（参数一：当前页）\n\n\n# （一）基本结构\n\n\x3c!-- 分页组件 --\x3e\n<el-pagination \n  :page-size="paginationObj.pagesize"\n  :current-page="paginationObj.page"\n  layout="prev, pager, next"\n  :total="paginationObj.total"\n  @current-change="changePage">\n</el-pagination>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\ndata() {\n  return {\n    demoList: [], // Demo 列表\n    paginationObj: { // 分页器对象\n      page: 1, // 页码\n      pagesize: 10, // 每页显示多少条数据\n      total: 0, // 共多少条数据\n    },\n  }\n}\nmethods: {\n  async getDemoList() { // 获取 Demo 列表\n    const res = await getDemoList({ page: this.paginationObj.page, pagesize: this.paginationObj.pagesize })\n    this.roleList = res.rows\n    this.paginationObj.total = res.total\n  },\n  changePage(newPage) { // 监听页码\n    this.paginationObj.page = newPage\n    this.getDemoList()\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# Switch 开关\n\n文档： https://element.eleme.cn/#/zh-CN/component/switch#switch-kai-guan\n\n\n# 属性\n\n| 参数 | 说明 | 类型 | 默认值 | | value | 显示状态【值：（布尔值）】 | - | - | | active-value | 开启时的值 | boolean / string / number | true | | inactive-value | 关闭时的值 | boolean / string / number | false |\n\n\n# （一）基础用法\n\n<el-switch value="1" active-value="1" inactive-value="0"></el-switch>\n\n\n1\n\n\n\n# DatePicker 日期选择器\n\n文档： https://element.eleme.cn/#/zh-CN/component/date-picker#datepicker-ri-qi-xuan-ze-qi\n\n\n# （一）基础用法\n\n<el-date-picker v-model="formData.timeOfEntry" placeholder="请选择入职时间" />\n\n\n1\n\n\n\n# Upload 上传\n\n文档： https://element.eleme.cn/#/zh-CN/component/upload#upload-shang-chuan\n\n\n# el-upload 属性\n\n属性              说明                                       类型                                            可选值\nlist-type       样式                                       string                                        （picture-card：虚线）\n:limit          文件最大上传数量                                 number                                        -\naction          上传地址                                     string                                        -\n:on-preview     预览文件事件，点击预览后触发                           function(【file：文件对象】)                         -\n:on-remove      删除文件事件，点击删除后触发                           function(【file：文件对象】, 【fileList：删除之后的文件列表】)   -\n:on-change      添加文件事件，点击添加后触发。该事件添加成功、上传成功、添加失败，都会被调用   function(【file：文件对象】, 【fileList：添加之后的文件列表】)   -\nbefore-upload   上传文件之前触发，返回 true 允许上传，返回 false 则停止上传     function(【file：文件对象。包含文件大小、类型】)               -\n:file-list      上传的文件列表                                  array                                         -\n:http-request   覆盖默认的上传行为，实现自定义上传                        function                                      -\ndisabled        是否禁用删除功能                                 -                                             -\n\n\n# （一）用户头像上传\n\n\n# 基础结构\n\n\x3c!-- 用户头像上传 --\x3e\n<el-upload list-type="picture-card" :limit="1" action="#" :on-preview="preview" :on-change="changeFile" :on-remove="handleRemove" :file-list="fileList">\n  <i class="el-icon-plus"></i>\n</el-upload>\n<el-dialog :visible.sync="isShowFileUploadDialog" title="图片预览">\n  <img :src="uploadImgUrl" alt="" style="width: 100%">\n</el-dialog>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n（-- data 配置项）\n\nfileList: [], // 上传图片列表\nisShowFileUploadDialog: false, // 是否显示文件上传 对话框\nuploadImgUrl: \'\', // 上传图片的 url 地址\n\n\n1\n2\n3\n\n\n（-- methods 配置项）\n\npreview(file) { // 预览 文件事件\n  this.uploadImgUrl = file.url\n  this.isShowFileUploadDialog = true\n},\nchangeFile(file, fileList) { // 添加 文件事件\n  提示：该事件会连续触发两次，添加成功一次，上传成功一次，所以不能使用 push\n  this.fileList = fileList.map(item => item)\n},\nhandleRemove(file, fileList) { // 删除 文件事件\n  this.fileList = fileList\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 获取用户头像\n\n# （1）配置\n\ndata() {\n  return {\n    fileList: [{ url: \'\' }], // 上传图片列表\n  }\n}\nmethods() {\n  async getStaffInfo(id) { // 获取 员工信息\n    const result = await getStaffInfo(id)\n    this.formData = result\n    this.fileList[0].url = result.staffPhoto // 获取头像\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 根据上传数量，控制 组件的显示隐藏\n\n# （1）动态添加样式\n\n<el-upload disabled :class="{ disabled: fileComputed }">\n\n\n1\n\n\n# （2）定义计算属性（-- computed 配置项）\n\nfileComputed() {\n  return this.fileList.length >= 1\n}\n\n\n1\n2\n3\n\n\n# （3）定义样式\n\n::v-deep.disabled {\n  .el-upload--picture-card {\n    display: none\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 上传前检查。控制上传图片的类型和上传大小（该功能要配合 上传到腾讯云功能才能实现，否则会报 404）\n\n（1）绑定 before-upload 属性\n\n<el-upload :before-upload="beforeUpload">\n\n\n1\n\n\n（2）定义变量 (-- data 配置项)\n\ncurrentFileUid: null // 记录当前正在上传的 uid\n\n\n1\n\n\n（3）定义事件（-- methods 配置项）\n\n// 上传前检查。控制上传图片的类型和上传大小\nbeforeUpload(file) {\n  // 允许上传的文件类型\n  const types = [\'image/jpeg\', \'image/gif\', \'image/bmp\', \'image/png\']\n  // 判断上传类型是否正确\n  if (!types.some(item => item === file.type)) {\n    this.$message.error(\'上传图片只能是 JPG、GIF、BMP、PNG 格式！\')\n    return false\n  }\n\n  const maxSize = 5 * 1024 * 1024\n  // 文件大小不能超过 5M\n  if (file.size > maxSize) {\n    this.$message.error(\'上传的图片大小不能大于 5M\')\n    return false\n  }\n\n  this.currentFileUid = file.uid\n  return true\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 上传进度条\n\n（1）定义 Progress 进度条组件 的基础结构\n\n（2）定义上传进度条回调函数\n\n// 上传进度事件\nonProgress: (progressData) => {\n\n  -- 增\n  // 将数据格式化为百分比\n  this.percent = progressData.percent * 100\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n（3）开启进度条\n\n// 上传前检查。控制上传图片的类型和上传大小\nbeforeUpload(file) {\n  ...\n\n  // 文件大小不能超过 5M\n  if (file.size > maxSize) {\n    this.$message.error(\'上传的图片大小不能大于 5M\')\n    return false\n  }\n\n  this.currentFileUid = file.uid\n\n  -- 增\n  this.isShowPercent = true\n  --\n\n  return true\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n（4）上传成功后关闭进度条，并重置进度条当前百分比\n\n// 判断文件是否上传成功\nif (!err && data.statusCode === 200) {\n  this.fileList[0] = {\n    // 将上传成功后响应的图片地址赋值给原来的 url 属性\n    url: \'http://\' + data.Location,\n  }\n\n  -- 增\n  // 解决图片上传速度太快，看不到进度条的问题\n  setTimeout(() => {\n    this.isShowPercent = false\n    this.percent = 0\n  }, 1000)\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 获取用户头像\n\n（1）绑定 ref（-- @/views/employees/detail.vue）\n\n<ImageUpload ref="ImageUpload"></ImageUpload>\n\n\n1\n\n\n（2）通过组件实例将用户头像放到 fileList 中\n\n// 获取员工基本信息\nasync getEmployeeInfo() {\n  this.formData = await getEmployeeInfo(this.id)\n\n  -- 增\n  this.$refs.ImageUpload.fileList = [{ url: this.formData.staffPhoto }]\n  --\n  \n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 上传头像\n\n（1）为上传成功的文件添加 upload 属性来判断是否上传完成（-- @/components/ImageUpload/index.vue）\n\n// 判断文件是否上传成功\nif (!err && data.statusCode === 200) {\n  this.fileList[0] = {\n    // 将上传成功后响应的图片地址赋值给原来的 url 属性\n    url: \'http://\' + data.Location,\n\n    -- 增\n    upload: true\n    --\n\n  }\n  setTimeout(() => {\n    this.isShowPercent = false\n    this.percent = 0\n  }, 1000)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n（2）定义上传方法（-- @/views/employees/detail.vue; methods 配置项）\n\n// 保存更新\nasync saveUpdate() {\n  // 判断文件是否上传完成\n  if (fileList.some(item => !item.upload)) {\n    this.$message.warning(\'图片还没上传完成\')\n    return\n  }\n  this.formData.staffPhoto = this.$refs.ImageUpload.fileList[0].url\n  await keepEmployeeInfo(this.id, this.formData)\n  this.$message.success(\'保存成功\')\n  this.getEmployeeInfo()\n  }\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Progress 进度条\n\n文档： https://element.eleme.cn/#/zh-CN/component/progress#progress-jin-du-tiao\n\n提示： 如果上传的文件太小，上传的速度会很快，可能都看不到进度条。可以使用的定时器，或大一点的文件进行测试\n\n\n# 属性\n\n属性           说明           类型       可选值     默认值\npercentage   进度条百分比（必填）   number   0-100   0\n\n\n# 基础结构\n\n<el-progress v-if="isShowPercent" :percentage="percent" style="width: 180px"></el-progress>\n\n\n1\n\n\n（-- data 配置项）\n\npercent: 0, // 进度条当前百分比\nisShowPercent: false, // 是否显示进度条\n\n\n1\n2\n\n\n\n# Checkbox 多选框\n\n文档： https://element.eleme.cn/#/zh-CN/component/checkbox#checkbox-duo-xuan-kuang\n\n\n# （一）基础结构\n\n<el-checkbox-group v-model="checkList">\n  <el-checkbox label="复选框 A"></el-checkbox>\n  <el-checkbox label="复选框 B"></el-checkbox>\n  <el-checkbox label="复选框 C"></el-checkbox>\n</el-checkbox-group>\n\n\n1\n2\n3\n4\n5\n\n\ndata() {\n  return {\n    checkList: [\'选中且禁用\',\'复选框 A\'] // 选中项\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （二）显示值，和存储值不相同\n\n说明： 因为 label 的值即是显示值也是存储值\n\n原理： 将显示值写到 插槽 中\n\n<el-checkbox-group v-model="checkList">\n  <el-checkbox label="复选框 A">\n    \x3c!-- 显示值 --\x3e\n    {{\'显示值\'}}\n  </el-checkbox>\n</el-checkbox-group>\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# 知识点：element-ui 组件\n\n文档（icon 图标）： https://element.eleme.cn/#/zh-cn/component/icon#icon-tu-biao\n\n\n# form 表单\n\n\n# el-form 属性\n\n:model： 表单数据 label-width： label 的宽度\n\n\n# el-form-item 属性\n\nlabel： 表单项左边的文本\n\n\n# （一）基础结构\n\n文档： https://element.eleme.cn/#/zh-cn/component/form#dian-xing-biao-dan\n\n\x3c!-- xxx 表单 --\x3e\n<el-form :model="xxxformdata">\n  <el-form-item label="活动名称" label-width="100px">\n    <el-input v-model="xxxformdata.username"></el-input>\n  </el-form-item>\n  <el-form-item label="活动名称" label-width="100px">\n    <el-input v-model="xxxformdata.password"></el-input>\n  </el-form-item>\n</el-form>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\ndata() {\n  return {\n    xxxformdata: { // xxx 表单数据\n      username: \'\',\n      password: \'\',\n    },\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# （二）为输入框添加 icon 图标\n\n文档（带 icon 的输入框）： https://element.eleme.cn/#/zh-cn/component/input#dai-icon-de-shu-ru-kuang 文档（icon 图标）： https://element.eleme.cn/#/zh-cn/component/icon#icon-tu-biao\n\n使用步骤： 添加 prefix-icon / suffix-icon 属性 prefix-icon：在前面添加图标 suffix-icon：在后面添加图标\n\n<el-input prefix-icon="el-icon-search"></el-input>\n\n\n1\n\n\n使用第三方图标（阿里矢量图）：\n\n<el-input prefix-icon="iconfont icon-search"></el-input>\n\n\n1\n\n\n\n# （三）表单验证\n\n文档： https://element.eleme.cn/#/zh-cn/component/form#biao-dan-yan-zheng\n\n\n# （1）定义验证规则（-- 定义 data）\n\nrequire： 是否为必填项 trigger： 验证方式（change：表单值发生变化时校验）（blue：表单失去焦点时进行校验） message： 校验不通过，提示消息 validator： 自定义验证规则（建议在内置配置无法满足的情况下，在使用自定义验证规则） pattern： 正则表达式（true：验证通过）（false：验证不通过）\n\nxxxformrules: { // 表单验证规则\n  username: [\n    { required: true, trigger: \'blur\', message: \'不能为空\'}, // 不能为空\n    { min: 3, max: 10, message: \'长度在 3 到 10 个字符之间\', trigger: \'blur\' }, // 长度最少 3 位，最多不能超过 10 位\n    { pattern: /^1[3-9]\\d{9}$/, message: \'手机号格式不正确\', trigger: \'blur\' } // 手机号格式\n    // { trigger: \'blur\', validator: validateimgcode }  // 第三条验证规则\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# （2）为表单绑定验证规则对象（:rules）\n\n<el-form :rules="xxxformrules">\n\n\n1\n\n\n\n# （3）为表单项添加验证规则（prop 属性）\n\n<el-form-item prop="username">\n\n\n1\n\n\n\n# 【bug】el-select 不能为空的验证规则，即使有值也显示为空的问题\n\n1、trigger 设置为 change 2、type 设置为 number（value 的值是什么类型的这里就填什么类型）\n\ndistrictid: [\n  { required: true, trigger: \'change\', message: \'不能为空\', type: \'string\' } // 不能为空\n],\n\n\n1\n2\n3\n\n\n\n# 【可选】validator 配置项的使用步骤：\n\n（1）定义验证规则（-- @/utils/validate.js）\n\n// 手机号\nexport function validmobile(str) {\n  return /^1[3-9]\\d{9}$/.test(str)\n}\n\n\n1\n2\n3\n4\n\n\n（2）导入验证规则（-- 组件）\n\nimport { validmobile } from \'@/utils/validate\'\n\n\n1\n\n\n（3）定义验证规则\n\n// 二维码验证规则\nconst validateusername = (rule, value, callback) => {\n    if (!validusername(value)) {\n      // 校验失败\n      callback(new error(\'手机号格式不正确\'))\n    } else {\n      // 校验成功\n      callback()\n    }\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n（4）配置验证规则\n\nloginformrules: {\n  username: [\n    ...\n    \n    -- 增\n    { trigger: \'blur\', validator: validateimgcode }  // 第三条验证规则\n    --\n\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 其它\n\n隐藏验证失败时，浏览器控制台输出 async-validator 验证警告 （1）打开 node_modules\\async-validator\\es\\util.js 文件 （2）将 console.warn(type, errors) 注释掉\n\nbug： （1）表单验证明明有值，却一直提示不能为空 解决方法：prop 的值和 表单数据对象对应的属性名 必须相同\n\n\n# （四）表单预验证\n\n（1）获取表单实例对象 语法： ref="标识符ref"\n\n<el-form ref="xxxformref"></el-form>\n\n\n1\n\n\n（2）调用表单实例对象上的 validate 预验证方法\n\nsure() {\n  this.$refs.xxxformref.validate(async isok => {\n    if (isok) { // isok：验证结果（true：通过）（false：不通过）\n    }\n  })\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# （五）表单重置\n\n说明： 显示时是什么样子的，重置后就是什么样子的\n\n\n# （1）获取表单实例对象\n\n<el-form ref="xxxformref"></el-form>\n\n\n1\n\n\n\n# （2）调用 resetfields() 重置表单\n\n提示： 如果是对话框，推荐放在取消方法中，这样可以少调用一次方法\n\nsettimeout(() => { // 解决对话框连续点击确定按钮，导致提交空数据的问题\n  this.$refs.addauthorityformref.resetfields()\n}, 1000)\n\n\n1\n2\n3\n\n\n\n# 【bug】点击编辑子部门，数据回写后在点击新增部门，这时候数据重置的是回写时的数据\n\n解决方法： 将回写的数据放到 $nexttick 中\n\nshowdialog(type, data) { // 显示对话框\n    if (type === \'add\') {\n      this.dialogconfig.title = \'添加子部门\'\n      this.formdata.pid = data.id\n    }\n    if (type === \'edit\') {\n      this.dialogconfig.title = \'编辑子部门\'\n\n      -- 改（旧）\n      this.formdata = data\n      --\n\n      -- 改（新）\n      this.$nexttick(() => {\n        this.formdata = data\n      })\n      --\n    }\n    if (type === \'del\') {\n      this.dialogconfig.title = \'删除子部门\'\n    }\n    this.dialogconfig.isshowdialog = true\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 【bug】报错 vue.runtime.esm.js?2b0e:619 [vue warn]: error in v-on handler: "typeerror: this.$refs.formref.resetfields is not a function"\n\n说明： this.$refs.formref 可能已经存在，请重新命名\n\n-- 改（旧）\nthis.$refs.formref\n--\n\n-- 改（新）\nthis.$refs.formref1\n--\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 【bug】点击重置没有效果\n\n解决方法： 组件必须要有 prop 属性，也就是要有表单验证的功能 <el-form-item prop="password">\n\n\n# button 按钮\n\n文档： https://element.eleme.cn/#/zh-cn/component/button\n\n\n# 属性\n\ntype： （primary：原色）（success）（warning）（danger）（info）（text） icon： 图标 disabled： 是否禁用\n\n\n# container 布局容器\n\n文档： https://element.eleme.cn/#/zh-cn/component/container#container-bu-ju-rong-qi\n\n（1）按需导入组件（-- plugins/element.js）\n\nimport { container, header, aside, main } from \'element-ui\'\n\n\n1\n\n\n（2）全局注册（-- plugins/element.js）\n\nvue.use(container)\nvue.use(header)\nvue.use(aside)\nvue.use(main)\n\n\n1\n2\n3\n4\n\n\n（3）选择合适的常见页面布局，并将结构复制到代码中（-- 组件.vue）：https://element.eleme.cn/#/zh-cn/component/container#chang-jian-ye-mian-bu-ju\n\n<el-container>\n  \x3c!-- 头部 容器 --\x3e\n  <el-header>header</el-header>\n  \x3c!-- 外层 容器 --\x3e\n  <el-container>\n    \x3c!-- 侧边栏 容器 --\x3e\n    <el-aside width="200px">aside</el-aside>\n    \x3c!-- 主体 容器 --\x3e\n    <el-main>main</el-main>\n  </el-container>\n</el-container>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# navmenu 导航菜单\n\n文档： https://element.eleme.cn/#/zh-cn/component/menu#ce-lan\n\n\n# 侧栏\n\n\n# （一）基础结构\n\n（1）按需导入（-- plugins/element.js）\n\nimport { menu, submenu, menuitem } from \'element-ui\'\n\n\n1\n\n\n（2）全局注册组件（-- plugins/element.js）\n\nvue.use(menu)\nvue.use(submenu)\nvue.use(menuitem)\n\n\n1\n2\n3\n\n\n（3）导入结构（-- 组件） 属性描述： <el-menu>：\n\nbackground-color="#333744"：背景颜色\ntext-color="#fff"：文本颜色\nactive-text-color：当前项文本颜色\n\n\n1\n2\n3\n\n\n\x3c!-- 侧边栏菜单 区 --\x3e\n<el-menu background-color="#333744" text-color="#fff">\n  \x3c!-- 一级菜单 --\x3e\n  <el-submenu index="1">\n    \x3c!-- 模板区域 --\x3e\n    <template slot="title">\n      \x3c!-- 图标 --\x3e\n      <i class="el-icon-menu"></i>\n      \x3c!-- 文本 --\x3e\n      <span>一级菜单</span>\n    </template>\n    \x3c!-- 二级菜单 --\x3e\n    <el-menu-item>\n      <i class="el-icon-menu"></i>\n      <span slot="title">二级菜单</span>\n    </el-menu-item>\n  </el-submenu>\n</el-menu>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# （二） 为每个一级菜单指定不同的图标\n\n（1）定义一个对象，用于存放图标名，属性名为一级菜单项 id\n\n// 一级菜单图标\niconsobj: {\n  \'0\': \'el-icon-user-solid\',\n  \'1\': \'el-icon-key\',\n  \'2\': \'el-icon-s-cooperation\',\n  \'3\': \'el-icon-s-claim\',\n  \'4\': \'el-icon-s-help\',\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n（2）动态添加类名\n\n<i :class="iconsobj[item.id]"></i>\n\n\n1\n\n\n\n# （三）点击菜单时显示不同的路由\n\n传统方法：为每个菜单添加 router-link 推荐方法：开启 vue-router 路由模式 说明：启用该模式会在激活导航时以 index（菜单id） 作为 path 进行路由跳转（如：localhost:8080/#/110） 提示：使用 菜单id 作为 path 进行路由跳转并不合适，推荐使用 path 例： （1）为 添加 router 属性\n\n（2）将 <el-menu-item> 中的 index 改为 path\n  <el-menu-item :index="\'/\' + subitem.path" v-for="subitem in item.children">\n\n\n\n# （四）点击菜单时，让菜单高亮显示\n\n原理：default-active="index"> 语法：为 添加 default-active="index"> 属性 使用步骤： （1）绑定点击事件 <el-menu-item @click="savenavstate(\'/\' + children.path)">\n\n（2）将当前菜单项的 index 存储起来\n  // 存储当前菜单项的 index\n  savenavstate(activepath) {\n    window.sessionstorage.setitem(\'activepath\', activepath)\n    this.activepath = activepath\n  }\n\n（3）定义数据\n  // 当前菜单项的 index\n  activepath: \'\'\n\n（4）动态绑定 default-active 属性\n  <el-menu :default-active="activepath">\n\n（5）为 activepath 赋值\n  created() {\n    this.activepath = window.sessionstorage.getitem(\'activepath\')\n  }\n\n\n\n# 面包屑导航\n\n文档： https://element.eleme.cn/#/zh-cn/component/breadcrumb#breadcrumb-mian-bao-xie\n\n\n# （一）基础结构\n\n\n# （二）图片分隔符\n\n（1）按需导入\n\nimport { breadcrumb, breadcrumbitem } from \'element-ui\'\n\n\n1\n\n\n（2）注册\n\nvue.use(breadcrumb)\nvue.use(breadcrumbitem)\n\n\n1\n2\n\n\n（3）导入结构\n\n\x3c!-- 面包屑导航（图标分隔符） --\x3e\n<el-breadcrumb separator-class="el-icon-arrow-right" style="margin-bottom: 20px">\n  <el-breadcrumb-item :to="{ path: \'/\' }">首页</el-breadcrumb-item>\n  <el-breadcrumb-item>活动管理</el-breadcrumb-item>\n  <el-breadcrumb-item>活动列表</el-breadcrumb-item>\n  <el-breadcrumb-item>活动详情</el-breadcrumb-item>\n</el-breadcrumb>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 卡片视图（简单卡片）\n\n文档： https://element.eleme.cn/#/zh-cn/component/card#jian-dan-qia-pian\n\n（1）导入结构\n\n\x3c!-- 卡片视图（简单卡片） --\x3e\n<el-card></el-card>\n\n\n1\n2\n\n\n\n# input 输入框\n\n文档： https://element.eleme.cn/#/zh-cn/component/input#fu-he-xing-shu-ru-kuang\n\n\n# 属性\n\n属性         说明                            默认值\nrows       输入框行数。仅对 type=\'textarea\' 生效   2\ndisabled   禁用状态                          \n\n\n# （一）基础结构\n\n\n# （二）复合型输入框\n\n（1）导入结构\n\n\x3c!-- input 输入框（复合输入框） --\x3e\n<el-input placeholder="请输入内容">\n  <el-button slot="append" icon="el-icon-search"></el-button>\n</el-input>\n\n\n1\n2\n3\n4\n\n\n\n# table 表格（基础表格）\n\n文档： https://element.eleme.cn/#/zh-cn/component/table#ji-chu-biao-ge\n\n\n# 属性\n\n| 参数 | 说明 | 类型 | 默认值 | | data | 渲染的列表数据 | - | - | | border | 显示边框线 | | - | - | | stripe | 隔行变色 | | - | - | | node-key | 用于区分层级。值为节点数据中的一个字段名，这个字段名必须是唯一的 | string | - |\n\n\n# 属性\n\nprop： 该字段的数据 type： （index：序号） align： 对齐方式 width： 宽度 sortable： 排序 formatter： 格式化字段数据【值：（函数）】\n\n\n# （一）基础结构\n\n\x3c!-- xxx 表格 --\x3e\n<el-table :data="xxxtablelist" border stripe>\n  <el-table-column label="序号" type="index" align="left" width="80px"></el-table-column>\n  <el-table-column label="邮箱" prop="email" align="center"></el-table-column>\n  <el-table-column label="电话" prop="mobile" align="center"></el-table-column>\n</el-table>\n\n\n1\n2\n3\n4\n5\n6\n\n\ndata() {\n  return {\n    xxxtablelist: [ // xxx 表格数据\n      {\n        email: \'123@qq.com\',\n        mobile: \'123456789\'\n      },\n      {\n        email: \'312@qq.com\',\n        mobile: \'987654321\'\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# （二）树形表格\n\n说明： data 数据必须是树形结构的\n\n\n# （1）添加 row-kwy 属性\n\nnode-key： 用于区分层级。值为节点数据中的一个字段名，这个字段名必须是唯一的\n\n<el-table row-key="id">\n\n\n1\n\n\n\n# 只显示前两层，后面的层级不显示，且第二层不显示添加按钮\n\n感觉用不上，就没做，如果有需求可以看视频【3-11 权限设计和管理/3.2获取权限数据并转化树形_.mp4；12 分钟】\n\n\n# 获取当前数据项的对象\n\n原理： 通过 template 中的 slot-scope/v-slot（作用域插槽）中的 row 属性来获取列表数据中的 当前数据项 - row： 当前数据项的字段信息\n\n<el-table :data="userlist" border stripe>\n  <el-table-column label="操作" prop="mobile" align="center">\n    <template slot-scope="{ row }">\n      <el-button type="danger" @click="delete(row.id)">删除</el-button>\n    </template>\n  </el-table-column>\n</el-table>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nmethods() {\n  async deleterole(id) {\n    // 这里没有使用 .catch，而是使用了 async/await，为了监听失败时的回调函数，可以使用 try/catch 来替代 .catch\n    try {\n      await this.$confirm(\'确认删除该角色吗？\')\n      // 只有执行成功才会执行以下代码（作用：替代 .then）\n      await deleterole(id)\n      this.getrolelist()\n      this.$message.success(\'删除角色成功\')\n    } catch(error) {\n      // 只有执行失败才会进入到该作用域（作用：替代 .catch）\n      console.log(error)\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 通过枚举数据格式化字段数据\n\n使用场景： 该字段响应的数据为 1，需要把这个 1 变为特定的格式，如字段值为 1，则格式化为 正式\n\n（1）定义枚举数据（枚举数据：字段的值根据枚举数据进行变化）（-- @/api/新建 constant/employees.js） 枚举数据：\n\nexport default {\n  // 聘用形式\n  hiretype: [\n    {\n      id: 1,\n      value: \'正式\'\n    },\n    {\n      id: 2,\n      value: \'非正式\'\n    }\n  ],\n  // 在职状态\n  workingstate: [\n    {\n      id: \'1\',\n      value: \'在职\'\n    },\n    {\n      id: \'2\',\n      value: \'离职\'\n    }\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n（2）导入枚举数据（-- 组件）\n\nimport employeeenum from \'@/api/constant/employees\'\n\n\n1\n\n\n（3）绑定 formatter 属性（-- 同上）\n\n * formatter： 格式化内容【值：（函数）】\n\n<el-table-column label="聘用形式" :formatter="formatemployment" />\n\n\n1\n\n\n（4）定义格式化方法（-- 同上; methods 配置项）\n\n// 格式化 聘用字段的数据\nformatemployment(row, column, cellvalue, index) {\n  // cellvalue：当前字段的数据\n  \n  const obj = employeeenum.hiretype.find(item => item.id === cellvalue)\n  return obj ? obj.value : \'未知\'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 格式字段为时间的数据\n\n使用场景： 将 2018-11-02t08:00:00.000+0000 格式化为 2018-11-02\n\n原理： 作用域插槽 + 过滤器\n\n（1）将定义好的过滤器方法放到项目中（-- @/新建 filters/index.js）\n\n（2）导入过滤器（-- @/main.js）\n\nimport * as filters from \'@/filters\'\n\n\n1\n\n\n（3）全局注册过滤器（-- 同上）\n\nobject.keys(filters).foreach(key => {\n  vue.filter(key, filters[key])\n})\n\n\n1\n2\n3\n\n\n（4）使用过滤器（-- 组件）\n\n<el-table-column label="入职时间">\n\n  -- 增\n  <template slot-scope="{ row }">{{ row.timeofentry | formatdate }}</template>\n  --\n\n</el-table-column>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# tree 树形控件\n\n文档： https://element.eleme.cn/#/zh-cn/component/tree#tree-shu-xing-kong-jian\n\n原理： 1、通过 props 指定 children、label 2、将响应的数组数据转换成树形结构，并渲染到组件中\n\n\n# 属性\n\n| 参数 | 说明 | 类型 | 默认值 | | :----------------- | :------------------: | -----: | | | default-expand-all | 是否默认展开所有节点 | | | | :props | 指定 children、label | object | | | show-checkbox | 节点是否可被选择 | boolean | false | | node-key | 用于区分层级。值为节点数据中的一个字段名，这个字段名必须是唯一的 | string | - | | default-checked-keys | 默认勾选的节点 | array | - | | check-strictly | 选择父组件后，并不会选择所有的子组件 | boolean | false |\n\n\n# 方法\n\n@node-click： 点击节点时触发（参数一：当前节点对象） getcheckedkeys： 获取选中的节点，选中节点的值为 node-key 设置的值\n\n\n# （一）基础结构\n\n<el-tree :data="xxxtreedata" :props="defaultprops" default-expand-all></el-tree>\n\n\n1\n\n\ndata() {\n  return {\n    xxxtreedata: [ // 树形控件数据\n      {\n        label: \'一级 1\',\n        children: [\n          {\n            label: \'二级 1-1\',\n            children: [\n              {\n                label: \'三级 1-1-1\'\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: \'一级 2\',\n        children: [\n          {\n            label: \'二级 2-1\',\n            children: [\n              {\n                label: \'三级 2-1-1\'\n              }\n            ]\n          },\n          {\n            label: \'二级 2-2\',\n            children: [\n              {\n                label: \'三级 2-2-1\'\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: \'一级 3\',\n        children: [\n          {\n            label: \'二级 3-1\',\n            children: [\n              {\n                label: \'三级 3-1-1\'\n              }\n            ]\n          },\n          {\n            label: \'二级 3-2\',\n            children: [\n              {\n                label: \'三级 3-2-1\'\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    defaultprops: { // 指定渲染的数据\n      children: \'children\', // 从 data 中指定渲染 children 数据\n      label: \'label\' // 从 data 指定渲染 label 数据\n    }\n  }\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n\n# （二）自定义节点内容\n\n<el-tree :data="xxxtreedata" :props="defaultprops" default-expand-all>\n\n  -- 增（原理：插槽）（slot-scope：作用域插槽，接收传递给插槽的数据）（{ data }：每个节点的数据对象）\n  <el-row slot-scope="{ data }" type="flex" class="box" style="width: 100%">\n    <el-col class="title">{{ data.label }}</el-col>\n    <el-col :span="2" class="operate">\n      <el-dropdown>\n        <span class="el-dropdown-link">\n          操作<i class="el-icon-arrow-down el-icon--right" />\n        </span>\n        <el-dropdown-menu slot="dropdown">\n          <el-dropdown-item>添加子部门</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </el-col>\n  </el-row>\n  --\n\n</el-tree>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 属性\n\n参数                  说明            类型\nslot-scope（作用域插槽）   当前 itme 的数据   \n\n\n# （三）默认展开和默认选中\n\n\n# （1）添加 node-key 属性\n\n原理： 当一个值在 node-key 和 selectnode 中都存在时，这个值就会被选中\n\n<el-tree node-key="id"></el-tree>\n\n\n1\n\n\n\n# （2）添加 default-checked-keys 属性\n\n<el-tree :default-checked-keys="selectnode" :check-strictly="true"></el-tree>\n\n\n1\n\n\n\n# （3）获取选中的节点\n\n# 1、获取 的实例\n\n<el-tree ref="xxxref"></el-tree>\n\n\n1\n\n\n# 2、获取选中的节点\n\nthis.$refs.xxxref.getcheckedkeys()\n\n\n1\n\n\n\n# 【bug】取消已选的节点，关闭对话框在打开对话框时，取消的已选的节点并没有取消，只有第二次打开对话框才正常显示\n\n解决方法： 清空已选择的节点 提示： 推荐在对话框取消事件中清空，这样就不需要再确定按钮中在写一次了\n\ndata() {\n  return {\n    selectnode: [] // 已选择的节点\n  }\n},\nmethods: {\n  cancel() { // 取消\n    this.selectnode = []\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 将响应的数组数据转换成树形结构\n\n如：\n\n// 响应的数据\n[\n  { id: 1, pid: \'\', text: \'菜单1\' },\n  { id: 11, pid: 1, text: \'菜单1-1\' },\n  { id: 12, pid: 1, text: \'菜单1-2\' },\n  { id: 2, pid: \'\', text: \'菜单2\' },\n  { id: 21, pid: 2, text: \'菜单2-1\' },\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n// 转换成树形结构的数据\n[\n  {\n    id: 1, pid: \'\', text: \'菜单1\', children: [\n      { id: 11, pid: 1, text: \'菜单1-1\' },\n      { id: 12, pid: 1, text: \'菜单1-2\' },\n    ]\n  },\n  {\n    id: 2, pid: \'\', text: \'菜单2\', children: [\n      { id: 21, pid: 2, text: \'菜单2-1\' },\n    ]\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n原理： 递归算法\n\n（1） 定义方法（-- utils/新建 dataconvert.js）\n\nexport function tranlisttotreedata(list, rootvalue) { // 将数组数据转换成树形结构\n  var arr = []\n  list.foreach(item => {\n    if (item.pid === rootvalue) {\n      const children = tranlisttotreedata(list, item.id)\n      if (children.length) {\n        item.children = children\n      }\n      arr.push(item)\n    }\n  })\n  return arr\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n（2）导入方法\n\nimport { tranlisttotreedata } from \'@/utils/dataconvert\'\n\n\n1\n\n\n（2）调用方法\n\nthis.departs = tranlisttotreedata(result.depts, \'\') // 将数组数据转换成树形结构\n\n\n1\n\n\n\n# dropdown 下拉菜单\n\n文档： https://element.eleme.cn/#/zh-cn/component/dropdown#dropdown-xia-la-cai-dan\n\n\n# el-dropdown 属性\n\ntrigger：（click：点击时才显示下拉菜单）\n\n\n# el-dropdown 事件\n\n@command：点击菜单项后触发\n\n\n# el-dropdown-item 属性\n\ncommand: 向 command 事件传递参数\n\n\n# （一）基础用法\n\n<el-dropdown>\n  <span class="el-dropdown-link">\n    下拉菜单<i class="el-icon-arrow-down el-icon--right"></i>\n  </span>\n  <el-dropdown-menu slot="dropdown">\n    <el-dropdown-item>黄金糕</el-dropdown-item>\n    <el-dropdown-item>狮子头</el-dropdown-item>\n    <el-dropdown-item>螺蛳粉</el-dropdown-item>\n    <el-dropdown-item disabled>双皮奶</el-dropdown-item>\n    <el-dropdown-item divided>蚵仔煎</el-dropdown-item>\n  </el-dropdown-menu>\n</el-dropdown>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# （二）指令事件\n\n（1）监听 @command 事件（@command：点击菜单项后触发）\n\n<el-dropdown @command="operatedepts">\n\n\n1\n\n\n（2）绑定 command 属性（作用：向 operatedepts 传递参数）\n\n<el-dropdown-item command="add">添加子部门</el-dropdown-item>\n<el-dropdown-item command="edit">编辑部门</el-dropdown-item>\n<el-dropdown-item command="del">删除部门</el-dropdown-item>\n\n\n1\n2\n3\n\n\n（3）定义 @command 事件的方法\n\noperatedepts(type) {\n  if (type === \'add\') {\n    \n  } else if (type === \'edit\') {\n\n  } else if (type === \'del\') {\n    // （确定 进入 .then）（取消 进入 .catch）\n    this.$confirm(\'您确定要删除该组织部门吗？\').then(() => {\n      // 这里不推荐使用 async/await，因为这是写在 .then 里面的，推荐按照 .then 的顺序进行书写\n      // 这里不推荐在后面加 .then，会变成嵌套形语法，可读性差\n      // 因为这段代码是 promise 对象，所以推荐使用 return\n      return deldepartments(this.treenode.id)\n    }).then(() => {\n      // 调用父组件的方法，重新获取数据\n      this.$emit(\'deldepts\')\n\n      this.$message.success(\'删除部门成功\')\n    })\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# dialog 对话框\n\n文档： https://element.eleme.cn/#/zh-cn/component/dialog#dialog-dui-hua-kuang\n\n\n# 属性\n\nvisible： 显示隐藏对话框 width： 对话框宽度（推荐百分比）\n\n\n# el-dialog 事件\n\n@close：关闭对话框时触发\n\n\n# （一）基础用法\n\n\x3c!-- 对话框 --\x3e\n<el-dialog :title="dialogconfig.title" :visible="dialogconfig.isshowdialog" width="30%" @close="cancel">\n  <span>这是一段信息</span>\n  <el-row slot="footer" class="dialog-footer">\n    <el-button @click="cancel">取 消</el-button>\n    <el-button type="primary" @click="sure">确 定</el-button>\n  </el-row>\n</el-dialog>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\ndata() {\n  return {\n    dialogconfig: { // 对话框 配置项\n      isshowdialog: false, // 是否显示对话框\n      title: \'\' // 标题\n    },\n  }\n},\nmethods: {\n  showxxxdialog(type) { // 显示 xxx 对话框\n    this.dialogconfig.title = type\n    this.dialogconfig.isshowdialog = true\n  },\n  sure() { // 确定\n    if (this.dialogconfig.title === \'新增角色\') console.log(\'处理代码\')\n    this.dialogconfig.isshowdialog = false\n  },\n  cancel() { // 取消\n    this.dialogconfig.isshowdialog = false\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# （二）数据回写\n\n原理： 父组件调用子组件的方法\n\n-- 父组件\n// 显示对话框\nshowdialog(type, row) {\n  this.isshowdialog = true\n  this.type = type\n  if (row) {\n    this.$refs.dialogref.datawriteback(row)\n  }\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n-- 子组件\n// 数据回写\ndatawriteback(dataitem) {\n  // 深拷贝。解决修改 editformdata 中的属性时，dataitem 的属性也发送变化的问题\n  object.assign(this.editformdata, dataitem)\n},\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# select 选择器\n\n文档： https://element.eleme.cn/#/zh-cn/component/select#select-xuan-ze-qi\n\n\n# 事件\n\n\n# el-select\n\n@focus： 点击该组件时触发\n\n\n# 基础用法\n\n<el-select v-model="value" placeholder="请选择">\n  <el-option v-for="item in options" :key="item.value" :label="item.label" :value="item.value"></el-option>\n</el-select>\n\n\n1\n2\n3\n\n\n\n# （一）通过枚举数据格式化数据\n\n（1）定义枚举数据（枚举数据：字段的值根据枚举数据进行变化）（-- @/api/新建 constant/employees.js） 模板：\n\nexport default {\n  // 聘用形式\n  hiretype: [\n    {\n      id: 1,\n      value: \'正式\'\n    },\n    {\n      id: 2,\n      value: \'非正式\'\n    }\n  ],\n  // 在职状态\n  workingstate: [\n    {\n      id: \'1\',\n      value: \'在职\'\n    },\n    {\n      id: \'2\',\n      value: \'离职\'\n    }\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n（2）导入枚举数据（-- 组件）\n\nimport employeeenum from \'@/api/constant/employees\'\n\n\n1\n\n\n（3）将枚举数据存到 data 中（-- 同上）\n\ndata() {\n  return {\n    employeeenum\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n（4）\b渲染枚举数据\n\n<el-option v-for="item in employeeenum.hiretype" :key="item.id" :label="item.value" :value="item.id"></el-option>\n\n\n1\n\n\n\b\n\n\n# tabs 标签页\n\n文档： https://element.eleme.cn/#/zh-cn/component/tabs#tabs-biao-qian-ye\n\n\n# <el-tabs> 属性\n\n： 默认选中的 tab 项。\n\n参数        说明         类型       可选值   默认值\nv-model   默认选中的选项卡   string   -     name\n\n\n# （一）基础用法\n\n<el-tabs v-model="activename">\n  \x3c!-- 用户管理 tab --\x3e\n  <el-tab-pane label="用户管理" name="user">用户管理</el-tab-pane>\n  \x3c!-- 配置管理 tab --\x3e\n  <el-tab-pane label="配置管理" name="config">配置管理</el-tab-pane>\n</el-tabs>\n\n\n1\n2\n3\n4\n5\n6\n\n\ndata() {\n  return {\n    activename: \'user\', // 当前选项卡\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# alert 警告\n\n文档： https://element.eleme.cn/#/zh-cn/component/alert#alert-jing-gao\n\n\n# 属性\n\ntype：（info：消息）（warning：警告）（error：错误） show-icon： 是否显示内置图标\n\n\n# （一）基本结构\n\n<el-alert class="el-icon-video-camera-solid" title="对公司名称、公司地址、营业执照、公司地区的更新，将使得公司资料被重新审核，请谨慎修改" type="info"></el-alert>\n\n\n1\n\n\n\n# pagination 分页\n\n文档： https://element.eleme.cn/#/zh-cn/component/pagination#pagination-fen-ye\n\n\n# 属性\n\ntotal： 共多少条数据 :current-page： 当前页数 :page-size： 每页显示多少条数据 layout： 控件布局\n\n\n# 事件\n\n@current-change： 页码改变时触发（参数一：当前页）\n\n\n# （一）基本结构\n\n\x3c!-- 分页组件 --\x3e\n<el-pagination \n  :page-size="paginationobj.pagesize"\n  :current-page="paginationobj.page"\n  layout="prev, pager, next"\n  :total="paginationobj.total"\n  @current-change="changepage">\n</el-pagination>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\ndata() {\n  return {\n    demolist: [], // demo 列表\n    paginationobj: { // 分页器对象\n      page: 1, // 页码\n      pagesize: 10, // 每页显示多少条数据\n      total: 0, // 共多少条数据\n    },\n  }\n}\nmethods: {\n  async getdemolist() { // 获取 demo 列表\n    const res = await getdemolist({ page: this.paginationobj.page, pagesize: this.paginationobj.pagesize })\n    this.rolelist = res.rows\n    this.paginationobj.total = res.total\n  },\n  changepage(newpage) { // 监听页码\n    this.paginationobj.page = newpage\n    this.getdemolist()\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# switch 开关\n\n文档： https://element.eleme.cn/#/zh-cn/component/switch#switch-kai-guan\n\n\n# 属性\n\n| 参数 | 说明 | 类型 | 默认值 | | value | 显示状态【值：（布尔值）】 | - | - | | active-value | 开启时的值 | boolean / string / number | true | | inactive-value | 关闭时的值 | boolean / string / number | false |\n\n\n# （一）基础用法\n\n<el-switch value="1" active-value="1" inactive-value="0"></el-switch>\n\n\n1\n\n\n\n# datepicker 日期选择器\n\n文档： https://element.eleme.cn/#/zh-cn/component/date-picker#datepicker-ri-qi-xuan-ze-qi\n\n\n# （一）基础用法\n\n<el-date-picker v-model="formdata.timeofentry" placeholder="请选择入职时间" />\n\n\n1\n\n\n\n# upload 上传\n\n文档： https://element.eleme.cn/#/zh-cn/component/upload#upload-shang-chuan\n\n\n# el-upload 属性\n\n属性              说明                                       类型                                            可选值\nlist-type       样式                                       string                                        （picture-card：虚线）\n:limit          文件最大上传数量                                 number                                        -\naction          上传地址                                     string                                        -\n:on-preview     预览文件事件，点击预览后触发                           function(【file：文件对象】)                         -\n:on-remove      删除文件事件，点击删除后触发                           function(【file：文件对象】, 【filelist：删除之后的文件列表】)   -\n:on-change      添加文件事件，点击添加后触发。该事件添加成功、上传成功、添加失败，都会被调用   function(【file：文件对象】, 【filelist：添加之后的文件列表】)   -\nbefore-upload   上传文件之前触发，返回 true 允许上传，返回 false 则停止上传     function(【file：文件对象。包含文件大小、类型】)               -\n:file-list      上传的文件列表                                  array                                         -\n:http-request   覆盖默认的上传行为，实现自定义上传                        function                                      -\ndisabled        是否禁用删除功能                                 -                                             -\n\n\n# （一）用户头像上传\n\n\n# 基础结构\n\n\x3c!-- 用户头像上传 --\x3e\n<el-upload list-type="picture-card" :limit="1" action="#" :on-preview="preview" :on-change="changefile" :on-remove="handleremove" :file-list="filelist">\n  <i class="el-icon-plus"></i>\n</el-upload>\n<el-dialog :visible.sync="isshowfileuploaddialog" title="图片预览">\n  <img :src="uploadimgurl" alt="" style="width: 100%">\n</el-dialog>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n（-- data 配置项）\n\nfilelist: [], // 上传图片列表\nisshowfileuploaddialog: false, // 是否显示文件上传 对话框\nuploadimgurl: \'\', // 上传图片的 url 地址\n\n\n1\n2\n3\n\n\n（-- methods 配置项）\n\npreview(file) { // 预览 文件事件\n  this.uploadimgurl = file.url\n  this.isshowfileuploaddialog = true\n},\nchangefile(file, filelist) { // 添加 文件事件\n  提示：该事件会连续触发两次，添加成功一次，上传成功一次，所以不能使用 push\n  this.filelist = filelist.map(item => item)\n},\nhandleremove(file, filelist) { // 删除 文件事件\n  this.filelist = filelist\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 获取用户头像\n\n# （1）配置\n\ndata() {\n  return {\n    filelist: [{ url: \'\' }], // 上传图片列表\n  }\n}\nmethods() {\n  async getstaffinfo(id) { // 获取 员工信息\n    const result = await getstaffinfo(id)\n    this.formdata = result\n    this.filelist[0].url = result.staffphoto // 获取头像\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 根据上传数量，控制 组件的显示隐藏\n\n# （1）动态添加样式\n\n<el-upload disabled :class="{ disabled: filecomputed }">\n\n\n1\n\n\n# （2）定义计算属性（-- computed 配置项）\n\nfilecomputed() {\n  return this.filelist.length >= 1\n}\n\n\n1\n2\n3\n\n\n# （3）定义样式\n\n::v-deep.disabled {\n  .el-upload--picture-card {\n    display: none\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 上传前检查。控制上传图片的类型和上传大小（该功能要配合 上传到腾讯云功能才能实现，否则会报 404）\n\n（1）绑定 before-upload 属性\n\n<el-upload :before-upload="beforeupload">\n\n\n1\n\n\n（2）定义变量 (-- data 配置项)\n\ncurrentfileuid: null // 记录当前正在上传的 uid\n\n\n1\n\n\n（3）定义事件（-- methods 配置项）\n\n// 上传前检查。控制上传图片的类型和上传大小\nbeforeupload(file) {\n  // 允许上传的文件类型\n  const types = [\'image/jpeg\', \'image/gif\', \'image/bmp\', \'image/png\']\n  // 判断上传类型是否正确\n  if (!types.some(item => item === file.type)) {\n    this.$message.error(\'上传图片只能是 jpg、gif、bmp、png 格式！\')\n    return false\n  }\n\n  const maxsize = 5 * 1024 * 1024\n  // 文件大小不能超过 5m\n  if (file.size > maxsize) {\n    this.$message.error(\'上传的图片大小不能大于 5m\')\n    return false\n  }\n\n  this.currentfileuid = file.uid\n  return true\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 上传进度条\n\n（1）定义 progress 进度条组件 的基础结构\n\n（2）定义上传进度条回调函数\n\n// 上传进度事件\nonprogress: (progressdata) => {\n\n  -- 增\n  // 将数据格式化为百分比\n  this.percent = progressdata.percent * 100\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n（3）开启进度条\n\n// 上传前检查。控制上传图片的类型和上传大小\nbeforeupload(file) {\n  ...\n\n  // 文件大小不能超过 5m\n  if (file.size > maxsize) {\n    this.$message.error(\'上传的图片大小不能大于 5m\')\n    return false\n  }\n\n  this.currentfileuid = file.uid\n\n  -- 增\n  this.isshowpercent = true\n  --\n\n  return true\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n（4）上传成功后关闭进度条，并重置进度条当前百分比\n\n// 判断文件是否上传成功\nif (!err && data.statuscode === 200) {\n  this.filelist[0] = {\n    // 将上传成功后响应的图片地址赋值给原来的 url 属性\n    url: \'http://\' + data.location,\n  }\n\n  -- 增\n  // 解决图片上传速度太快，看不到进度条的问题\n  settimeout(() => {\n    this.isshowpercent = false\n    this.percent = 0\n  }, 1000)\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 获取用户头像\n\n（1）绑定 ref（-- @/views/employees/detail.vue）\n\n<imageupload ref="imageupload"></imageupload>\n\n\n1\n\n\n（2）通过组件实例将用户头像放到 filelist 中\n\n// 获取员工基本信息\nasync getemployeeinfo() {\n  this.formdata = await getemployeeinfo(this.id)\n\n  -- 增\n  this.$refs.imageupload.filelist = [{ url: this.formdata.staffphoto }]\n  --\n  \n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 上传头像\n\n（1）为上传成功的文件添加 upload 属性来判断是否上传完成（-- @/components/imageupload/index.vue）\n\n// 判断文件是否上传成功\nif (!err && data.statuscode === 200) {\n  this.filelist[0] = {\n    // 将上传成功后响应的图片地址赋值给原来的 url 属性\n    url: \'http://\' + data.location,\n\n    -- 增\n    upload: true\n    --\n\n  }\n  settimeout(() => {\n    this.isshowpercent = false\n    this.percent = 0\n  }, 1000)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n（2）定义上传方法（-- @/views/employees/detail.vue; methods 配置项）\n\n// 保存更新\nasync saveupdate() {\n  // 判断文件是否上传完成\n  if (filelist.some(item => !item.upload)) {\n    this.$message.warning(\'图片还没上传完成\')\n    return\n  }\n  this.formdata.staffphoto = this.$refs.imageupload.filelist[0].url\n  await keepemployeeinfo(this.id, this.formdata)\n  this.$message.success(\'保存成功\')\n  this.getemployeeinfo()\n  }\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# progress 进度条\n\n文档： https://element.eleme.cn/#/zh-cn/component/progress#progress-jin-du-tiao\n\n提示： 如果上传的文件太小，上传的速度会很快，可能都看不到进度条。可以使用的定时器，或大一点的文件进行测试\n\n\n# 属性\n\n属性           说明           类型       可选值     默认值\npercentage   进度条百分比（必填）   number   0-100   0\n\n\n# 基础结构\n\n<el-progress v-if="isshowpercent" :percentage="percent" style="width: 180px"></el-progress>\n\n\n1\n\n\n（-- data 配置项）\n\npercent: 0, // 进度条当前百分比\nisshowpercent: false, // 是否显示进度条\n\n\n1\n2\n\n\n\n# checkbox 多选框\n\n文档： https://element.eleme.cn/#/zh-cn/component/checkbox#checkbox-duo-xuan-kuang\n\n\n# （一）基础结构\n\n<el-checkbox-group v-model="checklist">\n  <el-checkbox label="复选框 a"></el-checkbox>\n  <el-checkbox label="复选框 b"></el-checkbox>\n  <el-checkbox label="复选框 c"></el-checkbox>\n</el-checkbox-group>\n\n\n1\n2\n3\n4\n5\n\n\ndata() {\n  return {\n    checklist: [\'选中且禁用\',\'复选框 a\'] // 选中项\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# （二）显示值，和存储值不相同\n\n说明： 因为 label 的值即是显示值也是存储值\n\n原理： 将显示值写到 插槽 中\n\n<el-checkbox-group v-model="checklist">\n  <el-checkbox label="复选框 a">\n    \x3c!-- 显示值 --\x3e\n    {{\'显示值\'}}\n  </el-checkbox>\n</el-checkbox-group>\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"编程式组件",frontmatter:{title:"编程式组件",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/5d424a/",categories:["《前端》笔记《库》","Element-ui"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BA%93%E3%80%8B/03.Element-ui/04.%E7%BC%96%E7%A8%8B%E5%BC%8F%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《库》/03.Element-ui/04.编程式组件.md",key:"v-47bf13d4",path:"/pages/5d424a/",headers:[{level:2,title:"（一）基础用法",slug:"一-基础用法",normalizedTitle:"（一）基础用法",charIndex:44}],headersStr:"（一）基础用法",content:"# 知识点：Element-ui 编程式组件\n\n\n# 一、Dialog 对话框\n\n\n# （一）基础用法\n\ntry {\n  await this.$confirm('确认删除该角色吗')\n  await deleteRole(id)\n} catch (error) {\n  console.log(error)\n}\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"# 知识点：element-ui 编程式组件\n\n\n# 一、dialog 对话框\n\n\n# （一）基础用法\n\ntry {\n  await this.$confirm('确认删除该角色吗')\n  await deleterole(id)\n} catch (error) {\n  console.log(error)\n}\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"项目初始化",frontmatter:{title:"项目初始化",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ee7afe/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/01.%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"《前端》笔记《框架》/01.vue2/01.项目初始化.md",key:"v-98fad160",path:"/pages/ee7afe/",headers:[{level:2,title:"1、定义公共代码（-- style/新建 index.scss）",slug:"_1、定义公共代码-style-新建-index-scss",normalizedTitle:"1、定义公共代码（-- style/新建 index.scss）",charIndex:11899},{level:2,title:"2、导入公共代码（-- main.js）",slug:"_2、导入公共代码-main-js",normalizedTitle:"2、导入公共代码（-- main.js）",charIndex:13323},{level:2,title:"1、下载 element-ui 组件库包",slug:"_1、下载-element-ui-组件库包",normalizedTitle:"1、下载 element-ui 组件库包",charIndex:13586},{level:2,title:"2、完整引入 element ui 组件（-- main.js）",slug:"_2、完整引入-element-ui-组件-main-js",normalizedTitle:"2、完整引入 element ui 组件（-- main.js）",charIndex:13636},{level:2,title:"3、导入 element-ui 组件的样式（-- 同上）",slug:"_3、导入-element-ui-组件的样式-同上",normalizedTitle:"3、导入 element-ui 组件的样式（-- 同上）",charIndex:13714},{level:2,title:"4、把 Element 注册为 vue 的插件（-- 同上）",slug:"_4、把-element-注册为-vue-的插件-同上",normalizedTitle:"4、把 element 注册为 vue 的插件（-- 同上）",charIndex:13799},{level:2,title:"1、下载 vuex-persistedstate 包",slug:"_1、下载-vuex-persistedstate-包",normalizedTitle:"1、下载 vuex-persistedstate 包",charIndex:13892},{level:2,title:"2、配置 vuex-persistedstate（重构）（-- store/index.js）",slug:"_2、配置-vuex-persistedstate-重构-store-index-js",normalizedTitle:"2、配置 vuex-persistedstate（重构）（-- store/index.js）",charIndex:13956},{level:2,title:"3、模块骨架示例（-- store/modules/新建 demo.js）",slug:"_3、模块骨架示例-store-modules-新建-demo-js",normalizedTitle:"3、模块骨架示例（-- store/modules/新建 demo.js）",charIndex:14445},{level:2,title:"1、下载 axios 包",slug:"_1、下载-axios-包",normalizedTitle:"1、下载 axios 包",charIndex:15081},{level:2,title:"2、封装 axios（-- utils/request.js）",slug:"_2、封装-axios-utils-request-js",normalizedTitle:"2、封装 axios（-- utils/request.js）",charIndex:15118},{level:2,title:"【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx）",slug:"【可选】解决请求参数格式和服务端参数格式不一致的问题-main-jx",normalizedTitle:"【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx）",charIndex:15848},{level:3,title:"1、下载 qs 包",slug:"_1、下载-qs-包",normalizedTitle:"1、下载 qs 包",charIndex:16052},{level:3,title:"2、导入 qs 包（-- utils/request.js）",slug:"_2、导入-qs-包-utils-request-js",normalizedTitle:"2、导入 qs 包（-- utils/request.js）",charIndex:16150},{level:3,title:"2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式",slug:"_2、将-application-json-格式转换为-application-x-www-form-urlencoded-格式",normalizedTitle:"2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式",charIndex:16211},{level:2,title:"1、导入以下代码（-- utils/新建 auth.js）",slug:"_1、导入以下代码-utils-新建-auth-js",normalizedTitle:"1、导入以下代码（-- utils/新建 auth.js）",charIndex:16552},{level:2,title:"2、按需导入（-- store/modules/新建 user.js）",slug:"_2、按需导入-store-modules-新建-user-js",normalizedTitle:"2、按需导入（-- store/modules/新建 user.js）",charIndex:16910}],headersStr:"1、定义公共代码（-- style/新建 index.scss） 2、导入公共代码（-- main.js） 1、下载 element-ui 组件库包 2、完整引入 element ui 组件（-- main.js） 3、导入 element-ui 组件的样式（-- 同上） 4、把 Element 注册为 vue 的插件（-- 同上） 1、下载 vuex-persistedstate 包 2、配置 vuex-persistedstate（重构）（-- store/index.js） 3、模块骨架示例（-- store/modules/新建 demo.js） 1、下载 axios 包 2、封装 axios（-- utils/request.js） 【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx） 1、下载 qs 包 2、导入 qs 包（-- utils/request.js） 2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式 1、导入以下代码（-- utils/新建 auth.js） 2、按需导入（-- store/modules/新建 user.js）",content:"# 使用 vue-cli 脚手架创建项目\n\n预设： vue2 / node-sass / babel / router / vuex / eslint (Use config files)\n\n\n# 在 vue ui 图形界面中启动一次项目\n\n\n# 配置 ESLint（可以根据个人的喜好配置）（-- .eslintrc.js）\n\nmodule.exports = {\n  root: true, // 当前项目使用这个配置文件, 不会往父级目录找 .eslintrc.js 文件\n  parserOptions: { // 对新语法使用eslint\n    parser: 'babel-eslint',  // 使用 babel-eslint 来解析新语法 ES6\n    sourceType: 'module'\n  },\n  env: { // 指定 eslint 启动环境\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: { // 自定义规则\n    /* value 值：\n    （1）\"off\"/0：关闭规则\n    （2）\"warn\"/1：将规则视为一个警告（不会影响退出码）, 只警告，不会退出程序\n    （3）\"error\"/2：将规则视为一个错误 (退出码为1)，报错并退出程序\n    */\n\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowFirstLine\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"PascalCase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowSingleLine': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'SwitchCase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforeColon': false,\n      'afterColon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newIsCap': true,\n      'capIsNew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowLoop': false,\n      'allowSwitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {  // 不允许有连续多行空行\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultAssignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': 1,\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidEscape': true,\n      'allowTemplateLiterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'object-curly-spacing': [2, 'always', {\n      objectsInObjects: false\n    }],\n    'array-bracket-spacing': [2, 'never'],\n    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off', // 上线环境用打印就报警告, 开发环境关闭此规则\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off', // debugger 可以终止代码执行\n    // 要求使用骆驼拼写法\n    // 'camelcase': 'none',\n    // 要求使用 === 和 !==\n    'eqeqeq': 0,\n    // 函数和圆括号之间没有空格\n    'space-before-function-paren': 0,\n    // 要求或禁止使用拖尾逗号\n    // \"comma-dangle\": [\"error\", {\n    //   \"arrays\": \"always-multiline\",\n    //   \"objects\": \"always-multiline\",\n    //   \"imports\": \"never\",\n    //   \"exports\": \"always\",\n    //   \"functions\": \"never\"\n    // }],\n    // 要求或禁止文件末尾保留一行空行\n    'eol-last': ['error', 'always'],\n    // 要求对象字面量属性名称用引号括起来：\"consistent\" 要求对象字面量属性名称使用一致的引号，要么全部用引号，要么都不用\n    'quote-props': ['error', 'consistent'],\n    // 要求注释后要有一个空格\n    'spaced-comment': ['error', 'always'],\n    // 要求操作符前后都要有一个空格\n    'space-infix-ops': 'error',\n    // 要求圆括号中的前后都要有一个空格\n    /* \"space-in-parens\": [\"error\", \"always\"], */\n    // 要求花括号中的前后都要有一个空格\n    'object-curly-spacing': ['error', 'always'],\n    // 要求数组中逗号后要使用一个空格\n    'comma-spacing': ['error', { 'before': false, 'after': true }],\n    // 自动补充分号\n    // \"semi\": [2, \"always\"],\n    // 禁止多个空格\n    'no-multi-spaces': 'error',\n    // 使用单引号\n    'quotes': ['error', 'single'],\n    //在computed properties中禁用异步actions\n    'vue/no-async-in-computed-properties': 'error',\n    //不允许重复的keys\n    'vue/no-dupe-keys': 'error',\n    //不允许重复的attributes\n    'vue/no-duplicate-attributes': 'warn',\n    //在 <template> 标签下不允许解析错误\n    'vue/no-parsing-error': [\n      'error',\n      {\n        'x-invalid-end-tag': false,\n      },\n    ],\n    //不允许覆盖保留关键字\n    'vue/no-reserved-keys': 'error',\n    //强制data必须是一个带返回值的函数\n    // 'vue/no-shared-component-data': 'error',\n    //不允许在computed properties中出现副作用。\n    'vue/no-side-effects-in-computed-properties': 'error',\n    //<template>不允许key属性\n    'vue/no-template-key': 'warn',\n    //在 <textarea> 中不允许mustaches\n    'vue/no-textarea-mustache': 'error',\n    //不允许在v-for或者范围内的属性出现未使用的变量定义\n    'vue/no-unused-vars': 'warn',\n    //<component>标签需要v-bind:is属性\n    'vue/require-component-is': 'error',\n    // render 函数必须有一个返回值\n    'vue/require-render-return': 'error',\n    //保证 v-bind:key 和 v-for 指令成对出现\n    'vue/require-v-for-key': 'error',\n    // 检查默认的prop值是否有效\n    'vue/require-valid-default-prop': 'error',\n    // 保证computed属性中有return语句\n    'vue/return-in-computed-property': 'error',\n    // 强制校验 template 根节点\n    'vue/valid-template-root': 'error',\n    // 强制校验 v-bind 指令\n    'vue/valid-v-bind': 'error',\n    // 强制校验 v-cloak 指令\n    'vue/valid-v-cloak': 'error',\n    // 强制校验 v-else-if 指令\n    'vue/valid-v-else-if': 'error',\n    // 强制校验 v-else 指令\n    'vue/valid-v-else': 'error',\n    // 强制校验 v-for 指令\n    'vue/valid-v-for': 'error',\n    // 强制校验 v-html 指令\n    'vue/valid-v-html': 'error',\n    // 强制校验 v-if 指令\n    'vue/valid-v-if': 'error',\n    // 强制校验 v-model 指令\n    'vue/valid-v-model': 'error',\n    // 强制校验 v-on 指令\n    'vue/valid-v-on': 'error',\n    // 强制校验 v-once 指令\n    'vue/valid-v-once': 'error',\n    // 强制校验 v-pre 指令\n    'vue/valid-v-pre': 'error',\n    // 强制校验 v-show 指令\n    'vue/valid-v-show': 'error',\n    // 强制校验 v-text 指令\n    'vue/valid-v-text': 'error',\n    'vue/comment-directive': 0,\n    // 标签内没有内容时，删除结尾标签\n    \"vue/html-self-closing\": [\"off\", {\n      \"html\": {\n        \"void\": \"never\",\n        \"normal\": \"always\",\n        \"component\": \"always\"\n      },\n      \"svg\": \"always\",\n      \"math\": \"always\"\n    }]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n\n\n\n# 删除多余的文件和代码\n\n * 删除 assets/logo.png\n * 删除 components 目录里的所有文件\n * 删除 router 里的 index.js 里的 routes 数组中的所有路由\n * 删除 views 目录中的所有文件\n * 删除 App.vue 中的示例代码\n\n\n# 添加目录结构\n\nnode_modules                         // 存放 第三方包\npublic                               // 存放 页面图标、index.html\nsrc                                  // 存放 项目源代码\napi                       【手动创建】 // 存放 可复用的 api 接口       \n  assets                             // 存放 静态资源\n    product               【手动创建】 // 存放 商品图片（大图片）          \n    images                【手动创建】 // 存放 小图标（小图片）（该目录里的图片会被转换为 base64）  \n    styles                【手动创建】 // 存放 CSS样式表       \n      mixins.scss         【手动创建】 // 样式函数混入\n      init.scss           【手动创建】 // 样式初始化   \n  components                         // 存放 组件\n  router                             // 存放 路由模块\n  store                              // vuex（状态管理）\n    modules               【手动创建】 // 存储数据模块。让 vuex 中的数据持久化         \n  utils                   【手动创建】 // 存放 工具性质的函数和模块       \n    request.js          【手动创建】 // 请求相关配置        \n  vender                  【手动创建】 // 手动添加的第三方 js 库（npm 下载不到的）     \n  views                              // 存放 通过路由动态切换的组件\n  storage                 【手动创建】 // 数据存储工具箱                \n  App.vue                            // 项目 根组件\n  main.js                            // 项目 入口文件（主要职责：创建 vue 应用）\n  store.js                           // vuex 配置文件\n  theme.scss              【手动创建】 // 主题定制                    \n.browserslistrc                      // 将 css 转换为浏览器兼容的版本（在 CSS 前面添加浏览器对应的兼容前缀）\n.editorconfig                        // 编辑器配置文件（配置缩进、空格、字体大小 等）\n.eslintrc.js                         // ESLint 配置文件\n.gitignore                           // 忽略清单\nbabel.config.js                      // babel 配置文件（ES降级配置文件）\npackage.json                         // 包管理配置文件\nvue.config.js             【手动创建】 // 项目配置文件                 \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 为空目录添加 .gitkeep（解决远程仓库不能上传空目录的问题）\n\n\n# 初始化样式\n\n\n# 1、定义公共代码（-- style/新建 index.scss）\n\nbody {\n  height: 100%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizeLegibility;\n  font-family: Helvetica Neue, Helvetica, Arial, Microsoft Yahei, Hiragino Sans GB, Heiti SC, WenQuanYi Micro Hei, sans-serif;\n  font-weight: bold;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nhtml {\n  height: 100%;\n  box-sizing: border-box;\n}\n\n#app {\n  height: 100%;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\na:focus,\na:active {\n  outline: none;\n}\n\na,\na:focus,\na:hover {\n  cursor: pointer;\n  color: inherit;\n  text-decoration: none;\n}\n\ndiv:focus {\n  outline: none;\n}\n\n.clearfix {\n  &:after {\n    visibility: hidden;\n    display: block;\n    font-size: 0;\n    content: \" \";\n    clear: both;\n    height: 0;\n  }\n}\n\n// main-container global css\n.app-container {\n  padding: 20px;\n}\n\ninput,\nbutton {\n  border: 0;\n  font-weight: bold;\n}\n\nbutton {\n  cursor: pointer;\n}\n\ninput {\n  outline: none;\n}\n\nli {\n  list-style: none;\n}\n\n.w {\n  width: 1300px;\n  margin: 0 auto;\n}\n\nul,\nli,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  padding: 0;\n}\n\nimg {\n  vertical-align: bottom;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\n\n\n# 2、导入公共代码（-- main.js）\n\nimport '@/styles/index.scss'\n\n\n1\n\n\n\n# 定义 Demo 路由【可选】（个人喜好，用于测试代码）\n\n\n# 下载插件\n\n1、规范化 css 代码 2、element-ui 组件库 3、cookie 库\n\nnpm i normalize.css@8.0.1 js-cookie@2.2.0\n\n\n# 导入 规范化 css 代码（-- main.js）\n\nimport 'normalize.css'\n\n\n1\n\n\n\n# 配置 element-ui\n\n\n# 1、下载 element-ui 组件库包\n\nnpm i element-ui@2.15.6\n\n\n# 2、完整引入 element ui 组件（-- main.js）\n\nimport ElementUI from 'element-ui'\n\n\n1\n\n\n\n# 3、导入 element-ui 组件的样式（-- 同上）\n\nimport 'element-ui/lib/theme-chalk/index.css'\n\n\n1\n\n\n\n# 4、把 Element 注册为 vue 的插件（-- 同上）\n\nVue.use(ElementUI)\n\n\n1\n\n\n\n# 配置 vuex-persistedstate 数据持久化\n\n\n# 1、下载 vuex-persistedstate 包\n\nnpm i vuex-persistedstate@4.1.0\n\n\n# 2、配置 vuex-persistedstate（重构）（-- store/index.js）\n\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport demo from '@/store/modules/demo.js'\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  modules: { // 注册模块\n    demo\n  },\n  plugins: [\n    createPersistedState({ // 数据持久化插件 配置\n      key: 'store', // 本地仓库名字\n      paths: ['demo'] // 指定需要持久化的模块\n    })\n  ]\n})\n\nexport default store\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 3、模块骨架示例（-- store/modules/新建 demo.js）\n\nimport { getUsernameLogin } from '@/api/user-management.js'\n\nconst state = { // 公共数据\n  token: ''\n}\n\nconst mutations = { // 修改 store 中的数据\n  setToken(state, token) {\n    state.token = token\n  }\n}\n\nconst actions = { // 处理异步任务\n  async getUsernameLogin(context, data) { // 用户登录[用户名]\n    const result = await getUsernameLogin(data)\n    context.commit('setToken', result)\n  }\n}\n\nconst modules = { // 计算属性。监听 state 数据\n\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  modules\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 封装 axios\n\n\n# 1、下载 axios 包\n\nnpm i axios@0.25.0\n\n\n# 2、封装 axios（-- utils/request.js）\n\nimport axios from 'axios'\nimport { Message } from 'element-ui'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: '/api', // 请求根路径\n  timeout: 8000 // 请求超时时间\n})\n\n// 请求 拦截器\nservice.interceptors.request.use(request => {\n  return request\n}, error => {\n  return Promise.reject(error)\n})\n\n// 响应 拦截器\nservice.interceptors.response.use(response => {\n  // 返回响应结果\n  if (response.data.msg === 'success') {\n    return response.data.data\n  } \n  Message.error(response.data.msg)\n  // 把异步API执行失败的结果传递出去\n  return Promise.reject(response.data.msg)\n}, error => {\n  return Promise.reject(error)\n})\n\nexport default service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx）\n\n解决方法： 将请求参数转换成字符串格式。因为 content-type 会根据请求参数的格式自动变换请求格式\n\n * application/x-www-form-urlencoded 格式：categoryId=263919\n * application/json 格式：{\"categoryId\": 263919}\n\n\n# 1、下载 qs 包\n\n作用： 将 application/json 格式转换为 application/x-www-form-urlencoded 格式\n\nnpm i qs@6.10.3\n\n\n# 2、导入 qs 包（-- utils/request.js）\n\nimport qs from 'qs'\n\n\n1\n\n\n\n# 2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式\n\n// 请求 拦截器\naxios.interceptors.request.use(request => {\n\n  -- 增    \n  if (request.data) {\n    request.data = qs.stringify(request.data) // 将 application/json 格式转换为 application/x-www-form-urlencoded 格式\n  }\n  --\n\n  return request\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 配置 cookie 库\n\n\n# 1、导入以下代码（-- utils/新建 auth.js）\n\nimport Cookies from 'js-cookie'\n\nconst TokenKey = 'vue_admin_template_token'\n\nexport function getToken() {\n  return Cookies.get(TokenKey)\n}\n\nexport function setToken(token) {\n  return Cookies.set(TokenKey, token)\n}\n\nexport function removeToken() {\n  return Cookies.remove(TokenKey)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 2、按需导入（-- store/modules/新建 user.js）\n\nimport { getToken, setToken, removeToken, setTimeStamp } from '@/utils/auth'\n\n\n1\n\n\n\n# 配置 开发 环境下的接口代理（-- vue.config.js）\n\nmodule.exports = {\n  devServer: { // 开发环境下的服务器配置\n    host: 'localhost',\n    port: 8080,\n    // 代理配置\n    proxy:{\n      // 拦截携带 /api 的接口\n      '/api': {\n        // 代理到的目标地址\n        target: 'https://api.it120.cc/zcr',\n        // 是否开启跨域\n        changeOrigin: true,\n        // 路径重写\n        pathRewrite:{\n          // 将 /api 转换为 空\n          '^/api': ''\n        }\n      }\n    }\n  },\n  configureWebpack: {\n    devtool: 'source-map'\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 【可选】配置远程仓库",normalizedContent:"# 使用 vue-cli 脚手架创建项目\n\n预设： vue2 / node-sass / babel / router / vuex / eslint (use config files)\n\n\n# 在 vue ui 图形界面中启动一次项目\n\n\n# 配置 eslint（可以根据个人的喜好配置）（-- .eslintrc.js）\n\nmodule.exports = {\n  root: true, // 当前项目使用这个配置文件, 不会往父级目录找 .eslintrc.js 文件\n  parseroptions: { // 对新语法使用eslint\n    parser: 'babel-eslint',  // 使用 babel-eslint 来解析新语法 es6\n    sourcetype: 'module'\n  },\n  env: { // 指定 eslint 启动环境\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: { // 自定义规则\n    /* value 值：\n    （1）\"off\"/0：关闭规则\n    （2）\"warn\"/1：将规则视为一个警告（不会影响退出码）, 只警告，不会退出程序\n    （3）\"error\"/2：将规则视为一个错误 (退出码为1)，报错并退出程序\n    */\n\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowfirstline\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"pascalcase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowsingleline': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'switchcase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforecolon': false,\n      'aftercolon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newiscap': true,\n      'capisnew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowloop': false,\n      'allowswitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {  // 不允许有连续多行空行\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultassignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': 1,\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidescape': true,\n      'allowtemplateliterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'object-curly-spacing': [2, 'always', {\n      objectsinobjects: false\n    }],\n    'array-bracket-spacing': [2, 'never'],\n    'no-console': process.env.node_env === 'production' ? 'warn' : 'off', // 上线环境用打印就报警告, 开发环境关闭此规则\n    'no-debugger': process.env.node_env === 'production' ? 'warn' : 'off', // debugger 可以终止代码执行\n    // 要求使用骆驼拼写法\n    // 'camelcase': 'none',\n    // 要求使用 === 和 !==\n    'eqeqeq': 0,\n    // 函数和圆括号之间没有空格\n    'space-before-function-paren': 0,\n    // 要求或禁止使用拖尾逗号\n    // \"comma-dangle\": [\"error\", {\n    //   \"arrays\": \"always-multiline\",\n    //   \"objects\": \"always-multiline\",\n    //   \"imports\": \"never\",\n    //   \"exports\": \"always\",\n    //   \"functions\": \"never\"\n    // }],\n    // 要求或禁止文件末尾保留一行空行\n    'eol-last': ['error', 'always'],\n    // 要求对象字面量属性名称用引号括起来：\"consistent\" 要求对象字面量属性名称使用一致的引号，要么全部用引号，要么都不用\n    'quote-props': ['error', 'consistent'],\n    // 要求注释后要有一个空格\n    'spaced-comment': ['error', 'always'],\n    // 要求操作符前后都要有一个空格\n    'space-infix-ops': 'error',\n    // 要求圆括号中的前后都要有一个空格\n    /* \"space-in-parens\": [\"error\", \"always\"], */\n    // 要求花括号中的前后都要有一个空格\n    'object-curly-spacing': ['error', 'always'],\n    // 要求数组中逗号后要使用一个空格\n    'comma-spacing': ['error', { 'before': false, 'after': true }],\n    // 自动补充分号\n    // \"semi\": [2, \"always\"],\n    // 禁止多个空格\n    'no-multi-spaces': 'error',\n    // 使用单引号\n    'quotes': ['error', 'single'],\n    //在computed properties中禁用异步actions\n    'vue/no-async-in-computed-properties': 'error',\n    //不允许重复的keys\n    'vue/no-dupe-keys': 'error',\n    //不允许重复的attributes\n    'vue/no-duplicate-attributes': 'warn',\n    //在 <template> 标签下不允许解析错误\n    'vue/no-parsing-error': [\n      'error',\n      {\n        'x-invalid-end-tag': false,\n      },\n    ],\n    //不允许覆盖保留关键字\n    'vue/no-reserved-keys': 'error',\n    //强制data必须是一个带返回值的函数\n    // 'vue/no-shared-component-data': 'error',\n    //不允许在computed properties中出现副作用。\n    'vue/no-side-effects-in-computed-properties': 'error',\n    //<template>不允许key属性\n    'vue/no-template-key': 'warn',\n    //在 <textarea> 中不允许mustaches\n    'vue/no-textarea-mustache': 'error',\n    //不允许在v-for或者范围内的属性出现未使用的变量定义\n    'vue/no-unused-vars': 'warn',\n    //<component>标签需要v-bind:is属性\n    'vue/require-component-is': 'error',\n    // render 函数必须有一个返回值\n    'vue/require-render-return': 'error',\n    //保证 v-bind:key 和 v-for 指令成对出现\n    'vue/require-v-for-key': 'error',\n    // 检查默认的prop值是否有效\n    'vue/require-valid-default-prop': 'error',\n    // 保证computed属性中有return语句\n    'vue/return-in-computed-property': 'error',\n    // 强制校验 template 根节点\n    'vue/valid-template-root': 'error',\n    // 强制校验 v-bind 指令\n    'vue/valid-v-bind': 'error',\n    // 强制校验 v-cloak 指令\n    'vue/valid-v-cloak': 'error',\n    // 强制校验 v-else-if 指令\n    'vue/valid-v-else-if': 'error',\n    // 强制校验 v-else 指令\n    'vue/valid-v-else': 'error',\n    // 强制校验 v-for 指令\n    'vue/valid-v-for': 'error',\n    // 强制校验 v-html 指令\n    'vue/valid-v-html': 'error',\n    // 强制校验 v-if 指令\n    'vue/valid-v-if': 'error',\n    // 强制校验 v-model 指令\n    'vue/valid-v-model': 'error',\n    // 强制校验 v-on 指令\n    'vue/valid-v-on': 'error',\n    // 强制校验 v-once 指令\n    'vue/valid-v-once': 'error',\n    // 强制校验 v-pre 指令\n    'vue/valid-v-pre': 'error',\n    // 强制校验 v-show 指令\n    'vue/valid-v-show': 'error',\n    // 强制校验 v-text 指令\n    'vue/valid-v-text': 'error',\n    'vue/comment-directive': 0,\n    // 标签内没有内容时，删除结尾标签\n    \"vue/html-self-closing\": [\"off\", {\n      \"html\": {\n        \"void\": \"never\",\n        \"normal\": \"always\",\n        \"component\": \"always\"\n      },\n      \"svg\": \"always\",\n      \"math\": \"always\"\n    }]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n\n\n\n# 删除多余的文件和代码\n\n * 删除 assets/logo.png\n * 删除 components 目录里的所有文件\n * 删除 router 里的 index.js 里的 routes 数组中的所有路由\n * 删除 views 目录中的所有文件\n * 删除 app.vue 中的示例代码\n\n\n# 添加目录结构\n\nnode_modules                         // 存放 第三方包\npublic                               // 存放 页面图标、index.html\nsrc                                  // 存放 项目源代码\napi                       【手动创建】 // 存放 可复用的 api 接口       \n  assets                             // 存放 静态资源\n    product               【手动创建】 // 存放 商品图片（大图片）          \n    images                【手动创建】 // 存放 小图标（小图片）（该目录里的图片会被转换为 base64）  \n    styles                【手动创建】 // 存放 css样式表       \n      mixins.scss         【手动创建】 // 样式函数混入\n      init.scss           【手动创建】 // 样式初始化   \n  components                         // 存放 组件\n  router                             // 存放 路由模块\n  store                              // vuex（状态管理）\n    modules               【手动创建】 // 存储数据模块。让 vuex 中的数据持久化         \n  utils                   【手动创建】 // 存放 工具性质的函数和模块       \n    request.js          【手动创建】 // 请求相关配置        \n  vender                  【手动创建】 // 手动添加的第三方 js 库（npm 下载不到的）     \n  views                              // 存放 通过路由动态切换的组件\n  storage                 【手动创建】 // 数据存储工具箱                \n  app.vue                            // 项目 根组件\n  main.js                            // 项目 入口文件（主要职责：创建 vue 应用）\n  store.js                           // vuex 配置文件\n  theme.scss              【手动创建】 // 主题定制                    \n.browserslistrc                      // 将 css 转换为浏览器兼容的版本（在 css 前面添加浏览器对应的兼容前缀）\n.editorconfig                        // 编辑器配置文件（配置缩进、空格、字体大小 等）\n.eslintrc.js                         // eslint 配置文件\n.gitignore                           // 忽略清单\nbabel.config.js                      // babel 配置文件（es降级配置文件）\npackage.json                         // 包管理配置文件\nvue.config.js             【手动创建】 // 项目配置文件                 \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 为空目录添加 .gitkeep（解决远程仓库不能上传空目录的问题）\n\n\n# 初始化样式\n\n\n# 1、定义公共代码（-- style/新建 index.scss）\n\nbody {\n  height: 100%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizelegibility;\n  font-family: helvetica neue, helvetica, arial, microsoft yahei, hiragino sans gb, heiti sc, wenquanyi micro hei, sans-serif;\n  font-weight: bold;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nhtml {\n  height: 100%;\n  box-sizing: border-box;\n}\n\n#app {\n  height: 100%;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\na:focus,\na:active {\n  outline: none;\n}\n\na,\na:focus,\na:hover {\n  cursor: pointer;\n  color: inherit;\n  text-decoration: none;\n}\n\ndiv:focus {\n  outline: none;\n}\n\n.clearfix {\n  &:after {\n    visibility: hidden;\n    display: block;\n    font-size: 0;\n    content: \" \";\n    clear: both;\n    height: 0;\n  }\n}\n\n// main-container global css\n.app-container {\n  padding: 20px;\n}\n\ninput,\nbutton {\n  border: 0;\n  font-weight: bold;\n}\n\nbutton {\n  cursor: pointer;\n}\n\ninput {\n  outline: none;\n}\n\nli {\n  list-style: none;\n}\n\n.w {\n  width: 1300px;\n  margin: 0 auto;\n}\n\nul,\nli,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  padding: 0;\n}\n\nimg {\n  vertical-align: bottom;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\n\n\n# 2、导入公共代码（-- main.js）\n\nimport '@/styles/index.scss'\n\n\n1\n\n\n\n# 定义 demo 路由【可选】（个人喜好，用于测试代码）\n\n\n# 下载插件\n\n1、规范化 css 代码 2、element-ui 组件库 3、cookie 库\n\nnpm i normalize.css@8.0.1 js-cookie@2.2.0\n\n\n# 导入 规范化 css 代码（-- main.js）\n\nimport 'normalize.css'\n\n\n1\n\n\n\n# 配置 element-ui\n\n\n# 1、下载 element-ui 组件库包\n\nnpm i element-ui@2.15.6\n\n\n# 2、完整引入 element ui 组件（-- main.js）\n\nimport elementui from 'element-ui'\n\n\n1\n\n\n\n# 3、导入 element-ui 组件的样式（-- 同上）\n\nimport 'element-ui/lib/theme-chalk/index.css'\n\n\n1\n\n\n\n# 4、把 element 注册为 vue 的插件（-- 同上）\n\nvue.use(elementui)\n\n\n1\n\n\n\n# 配置 vuex-persistedstate 数据持久化\n\n\n# 1、下载 vuex-persistedstate 包\n\nnpm i vuex-persistedstate@4.1.0\n\n\n# 2、配置 vuex-persistedstate（重构）（-- store/index.js）\n\nimport vue from 'vue'\nimport vuex from 'vuex'\nimport createpersistedstate from 'vuex-persistedstate'\nimport demo from '@/store/modules/demo.js'\n\nvue.use(vuex)\n\nconst store = new vuex.store({\n  modules: { // 注册模块\n    demo\n  },\n  plugins: [\n    createpersistedstate({ // 数据持久化插件 配置\n      key: 'store', // 本地仓库名字\n      paths: ['demo'] // 指定需要持久化的模块\n    })\n  ]\n})\n\nexport default store\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 3、模块骨架示例（-- store/modules/新建 demo.js）\n\nimport { getusernamelogin } from '@/api/user-management.js'\n\nconst state = { // 公共数据\n  token: ''\n}\n\nconst mutations = { // 修改 store 中的数据\n  settoken(state, token) {\n    state.token = token\n  }\n}\n\nconst actions = { // 处理异步任务\n  async getusernamelogin(context, data) { // 用户登录[用户名]\n    const result = await getusernamelogin(data)\n    context.commit('settoken', result)\n  }\n}\n\nconst modules = { // 计算属性。监听 state 数据\n\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  modules\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 封装 axios\n\n\n# 1、下载 axios 包\n\nnpm i axios@0.25.0\n\n\n# 2、封装 axios（-- utils/request.js）\n\nimport axios from 'axios'\nimport { message } from 'element-ui'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseurl: '/api', // 请求根路径\n  timeout: 8000 // 请求超时时间\n})\n\n// 请求 拦截器\nservice.interceptors.request.use(request => {\n  return request\n}, error => {\n  return promise.reject(error)\n})\n\n// 响应 拦截器\nservice.interceptors.response.use(response => {\n  // 返回响应结果\n  if (response.data.msg === 'success') {\n    return response.data.data\n  } \n  message.error(response.data.msg)\n  // 把异步api执行失败的结果传递出去\n  return promise.reject(response.data.msg)\n}, error => {\n  return promise.reject(error)\n})\n\nexport default service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx）\n\n解决方法： 将请求参数转换成字符串格式。因为 content-type 会根据请求参数的格式自动变换请求格式\n\n * application/x-www-form-urlencoded 格式：categoryid=263919\n * application/json 格式：{\"categoryid\": 263919}\n\n\n# 1、下载 qs 包\n\n作用： 将 application/json 格式转换为 application/x-www-form-urlencoded 格式\n\nnpm i qs@6.10.3\n\n\n# 2、导入 qs 包（-- utils/request.js）\n\nimport qs from 'qs'\n\n\n1\n\n\n\n# 2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式\n\n// 请求 拦截器\naxios.interceptors.request.use(request => {\n\n  -- 增    \n  if (request.data) {\n    request.data = qs.stringify(request.data) // 将 application/json 格式转换为 application/x-www-form-urlencoded 格式\n  }\n  --\n\n  return request\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 配置 cookie 库\n\n\n# 1、导入以下代码（-- utils/新建 auth.js）\n\nimport cookies from 'js-cookie'\n\nconst tokenkey = 'vue_admin_template_token'\n\nexport function gettoken() {\n  return cookies.get(tokenkey)\n}\n\nexport function settoken(token) {\n  return cookies.set(tokenkey, token)\n}\n\nexport function removetoken() {\n  return cookies.remove(tokenkey)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 2、按需导入（-- store/modules/新建 user.js）\n\nimport { gettoken, settoken, removetoken, settimestamp } from '@/utils/auth'\n\n\n1\n\n\n\n# 配置 开发 环境下的接口代理（-- vue.config.js）\n\nmodule.exports = {\n  devserver: { // 开发环境下的服务器配置\n    host: 'localhost',\n    port: 8080,\n    // 代理配置\n    proxy:{\n      // 拦截携带 /api 的接口\n      '/api': {\n        // 代理到的目标地址\n        target: 'https://api.it120.cc/zcr',\n        // 是否开启跨域\n        changeorigin: true,\n        // 路径重写\n        pathrewrite:{\n          // 将 /api 转换为 空\n          '^/api': ''\n        }\n      }\n    }\n  },\n  configurewebpack: {\n    devtool: 'source-map'\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 【可选】配置远程仓库",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"使用步骤",frontmatter:{title:"使用步骤",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7f9266/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/02.%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4.html",relativePath:"《前端》笔记《框架》/01.vue2/02.使用步骤.md",key:"v-20d6151f",path:"/pages/7f9266/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"介绍",frontmatter:{title:"介绍",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/9913d3/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/00.%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《框架》/01.vue2/00.介绍.md",key:"v-96c274c4",path:"/pages/9913d3/",headers:[{level:2,title:"（一）传统 构建用户界面的方法（模板引擎 + jQuery）",slug:"一-传统-构建用户界面的方法-模板引擎-jquery",normalizedTitle:"（一）传统 构建用户界面的方法（模板引擎 + jquery）",charIndex:181},{level:3,title:"（1）编写页面结构（模板引擎）",slug:"_1-编写页面结构-模板引擎",normalizedTitle:"（1）编写页面结构（模板引擎）",charIndex:216},{level:3,title:"（2）处理交互（jQuery）",slug:"_2-处理交互-jquery",normalizedTitle:"（2）处理交互（jquery）",charIndex:337},{level:2,title:"（二）Vue 构建用户界面的方法",slug:"二-vue-构建用户界面的方法",normalizedTitle:"（二）vue 构建用户界面的方法",charIndex:447},{level:2,title:"Vue 全家桶",slug:"vue-全家桶",normalizedTitle:"vue 全家桶",charIndex:527},{level:2,title:"Vue 辅助开发工具",slug:"vue-辅助开发工具",normalizedTitle:"vue 辅助开发工具",charIndex:597},{level:2,title:"MVVM 编程思想",slug:"mvvm-编程思想",normalizedTitle:"mvvm 编程思想",charIndex:884},{level:2,title:"安装 @ 路径提示插件",slug:"安装-路径提示插件",normalizedTitle:"安装 @ 路径提示插件",charIndex:1237},{level:2,title:"安装 组件标签 自动补全 插件",slug:"安装-组件标签-自动补全-插件",normalizedTitle:"安装 组件标签 自动补全 插件",charIndex:1527},{level:2,title:"安装 一键生成 Vue 模板",slug:"安装-一键生成-vue-模板",normalizedTitle:"安装 一键生成 vue 模板",charIndex:1584}],headersStr:"（一）传统 构建用户界面的方法（模板引擎 + jQuery） （1）编写页面结构（模板引擎） （2）处理交互（jQuery） （二）Vue 构建用户界面的方法 Vue 全家桶 Vue 辅助开发工具 MVVM 编程思想 安装 @ 路径提示插件 安装 组件标签 自动补全 插件 安装 一键生成 Vue 模板",content:'安装： sudo npm i -g @vue/cli\n\n卸载： sudo npm uninstall @vue/cli -g\n\n兼容性： 不支持 IE8 及以下版本\n\n作用：\n\n 1. 用于构建用户界面的前端框架\n 2. 在前端工程化项目组，Vue 要做的事情很单纯，通过 main.js 把 App.vue 渲染到 index.html 的指定区域中\n\n\n# （一）传统 构建用户界面的方法（模板引擎 + jQuery）\n\n\n# （1）编写页面结构（模板引擎）\n\n优点： 解决开发者手动拼接字符串来渲染页面结构繁琐的问题\n\n缺点：\n\n 1. 需要定义大量模板结构\n 2. 缺少语法高亮和智能显示\n 3. 数据变化时需要重新调用模板编译的函数，否则页面结构不会更新\n\n\n# （2）处理交互（jQuery）\n\n优点： 优化 DOM API 兼容性，提高 DOM 操作效率\n\n缺点： 当业务复杂、数据变化频繁时，开发者需要把大量的时间和精力浪费在 DOM 的操作上，而不是核心业务的处理上\n\n\n# （二）Vue 构建用户界面的方法\n\n优点： 解决 模板引擎 和 jQuery 的缺点\n\n编写页面结构： 指令 + 数据驱动视图\n\n处理交互： 事情绑定\n\n\n# Vue 全家桶\n\nVue： 核心库 vue-router： 路由 vuex： 状态管理 vue 组件库： 快速搭建页面 UI 效果\n\n\n# Vue 辅助开发工具\n\nvue-cli（快速搭建 webpack） vite（快速搭建工程化 Vue 项目） vue-devtools（浏览器 插件：Vue调试工具。安装完毕后需重启浏览器才会生效） vetur（vscode 插件：提供语法高亮和智能提示）\n\n特性： 1、数据驱动视图（响应式）\n\n作用： 单向数据绑定（数据发送变化，才会自动渲染页面结构，页面结构发送变化是不会同步到数据的）\n\n优点： 无需操作 DOM\n\n2、双向数据绑定\n\n概念： 数据发送变化，会自动渲染页面结构，页面结构发送变化也会同步到数据\n\n作用： 无需操作 DOM\n\n应用场景： 表单\n\n\n# MVVM 编程思想\n\nMVVM 把页面分成了三部分：\n\n（1）Model：当前页面渲染时所依赖的数据源\n\n（2）View：当前页面所渲染的 DOM 结构\n\n（3）ViewModel：vue 的实例，也是 MVVM 的核心（是 ViewModel 将 Model 和 View 连接在了一起，并监听它们的变化，才实现了 数据驱动视图 和 双向数据绑定）\n\n安装 Vue2.x 调试工具：\n\n * 下载：https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd\n\n在插件详细信息中打开： 1、在无痕模式下启用 2、允许访问文件网址\n\n科普： Root：根节点（el 控制的区域）\n\n\n# 安装 @ 路径提示插件\n\n使用步骤： 1、在 VScode 商店中搜索 Path Autocomplete\n\n2、在 VScode settings.json 配置文件的最上面添加 如下代码：\n\n// 导入文件时是否携带文件的扩展名\n"path-autocomplete.extensionOnImport": true,\n// 配置 @ 的路径提示\n"path-autocomplete.pathMappings": {\n    "@": "${folder}/src"\n},\n\n\n1\n2\n3\n4\n5\n6\n\n\n注意： 只有 VScode资源管理器 在项目根目录才会生效\n\n\n# 安装 组件标签 自动补全 插件\n\n使用步骤： 在 VScode 商店中搜索 Auto Close Tag\n\n\n# 安装 一键生成 Vue 模板\n\n使用步骤： 在 VScode 商店中搜索 Vetur\n\n使用语法： 输入 < 会有下拉列表，选择定义好的模板即可',normalizedContent:'安装： sudo npm i -g @vue/cli\n\n卸载： sudo npm uninstall @vue/cli -g\n\n兼容性： 不支持 ie8 及以下版本\n\n作用：\n\n 1. 用于构建用户界面的前端框架\n 2. 在前端工程化项目组，vue 要做的事情很单纯，通过 main.js 把 app.vue 渲染到 index.html 的指定区域中\n\n\n# （一）传统 构建用户界面的方法（模板引擎 + jquery）\n\n\n# （1）编写页面结构（模板引擎）\n\n优点： 解决开发者手动拼接字符串来渲染页面结构繁琐的问题\n\n缺点：\n\n 1. 需要定义大量模板结构\n 2. 缺少语法高亮和智能显示\n 3. 数据变化时需要重新调用模板编译的函数，否则页面结构不会更新\n\n\n# （2）处理交互（jquery）\n\n优点： 优化 dom api 兼容性，提高 dom 操作效率\n\n缺点： 当业务复杂、数据变化频繁时，开发者需要把大量的时间和精力浪费在 dom 的操作上，而不是核心业务的处理上\n\n\n# （二）vue 构建用户界面的方法\n\n优点： 解决 模板引擎 和 jquery 的缺点\n\n编写页面结构： 指令 + 数据驱动视图\n\n处理交互： 事情绑定\n\n\n# vue 全家桶\n\nvue： 核心库 vue-router： 路由 vuex： 状态管理 vue 组件库： 快速搭建页面 ui 效果\n\n\n# vue 辅助开发工具\n\nvue-cli（快速搭建 webpack） vite（快速搭建工程化 vue 项目） vue-devtools（浏览器 插件：vue调试工具。安装完毕后需重启浏览器才会生效） vetur（vscode 插件：提供语法高亮和智能提示）\n\n特性： 1、数据驱动视图（响应式）\n\n作用： 单向数据绑定（数据发送变化，才会自动渲染页面结构，页面结构发送变化是不会同步到数据的）\n\n优点： 无需操作 dom\n\n2、双向数据绑定\n\n概念： 数据发送变化，会自动渲染页面结构，页面结构发送变化也会同步到数据\n\n作用： 无需操作 dom\n\n应用场景： 表单\n\n\n# mvvm 编程思想\n\nmvvm 把页面分成了三部分：\n\n（1）model：当前页面渲染时所依赖的数据源\n\n（2）view：当前页面所渲染的 dom 结构\n\n（3）viewmodel：vue 的实例，也是 mvvm 的核心（是 viewmodel 将 model 和 view 连接在了一起，并监听它们的变化，才实现了 数据驱动视图 和 双向数据绑定）\n\n安装 vue2.x 调试工具：\n\n * 下载：https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd\n\n在插件详细信息中打开： 1、在无痕模式下启用 2、允许访问文件网址\n\n科普： root：根节点（el 控制的区域）\n\n\n# 安装 @ 路径提示插件\n\n使用步骤： 1、在 vscode 商店中搜索 path autocomplete\n\n2、在 vscode settings.json 配置文件的最上面添加 如下代码：\n\n// 导入文件时是否携带文件的扩展名\n"path-autocomplete.extensiononimport": true,\n// 配置 @ 的路径提示\n"path-autocomplete.pathmappings": {\n    "@": "${folder}/src"\n},\n\n\n1\n2\n3\n4\n5\n6\n\n\n注意： 只有 vscode资源管理器 在项目根目录才会生效\n\n\n# 安装 组件标签 自动补全 插件\n\n使用步骤： 在 vscode 商店中搜索 auto close tag\n\n\n# 安装 一键生成 vue 模板\n\n使用步骤： 在 vscode 商店中搜索 vetur\n\n使用语法： 输入 < 会有下拉列表，选择定义好的模板即可',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"动态添加样式",frontmatter:{title:"动态添加样式",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/5202a1/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/03.%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F.html",relativePath:"《前端》笔记《框架》/01.vue2/03.动态添加样式.md",key:"v-65ff4861",path:"/pages/5202a1/",headersStr:null,content:'.thin {\n  font-width: 200;\n}\n.italic {\n  font-style: italic;\n}\n.delete {\n  text-decoration: line-through;\n}\n\n\n动态添加 class （1）三元表达式： 应用场景：动态添加 两个 样式\n\n    <h3 class="thin" :class="isItalic ? \'italic\' : \'\'">MyDeep 组件</h3>\n    <button @click="isItalic=!isItalic">Toggle Italic</button>\n\n    data() {\n      return { isItalic: true }\n    }\n\n（2）数组\n  应用场景：动态添加 多个 样式\n  缺点：模板结构臃肿\n  解决方法：使用对象形式\n\n    <h3 class="thin" :class="[isItalic ? \'italic\' : \'\', isDelete ? \'delete\' : \'\']">\n      MyDeep 组件\n    </h3>\n\n    <button @click="isItalic=!isItalic">Toogle Italic</button>\n    <button @click="isDelete=!isDelete">Toogle Delete</button>\n\n    data() {\n      return {\n        isItalic: true,\n        isDelete: false,\n      }\n    }\n\n（3）对象\n  应用场景：动态添加 多个 样式\n\n    <h3 class="thin" :class="classObj">MyDeep 组件</h3>\n\n    <button @click="classObj.italic = !classObj.italic">Toggle Italic</button>\n    <button @click="classObj.delete = !classObj.delete">Toggle Delete</button>\n\n    data() {\n      return {\n        classObj: {\n          italic: true,\n          delete: false,\n        }\n      }\n    }\n\n\n动态添加 style 内联样式\n\n<div :style="{color: active, fontSize: fsize + \'px\', \'background-color\': bgcolor}">黑马程序员</div>\n\n<button @click="fsize += 1">字号 +1</button>\n<button @click="fsize -= 1">字号 -1</button>\n\ndata() {\n  return {\n    active: \'red\',\n    fsize: 30,\n    bgcolor: \'pink\',\n  }\n}',normalizedContent:'.thin {\n  font-width: 200;\n}\n.italic {\n  font-style: italic;\n}\n.delete {\n  text-decoration: line-through;\n}\n\n\n动态添加 class （1）三元表达式： 应用场景：动态添加 两个 样式\n\n    <h3 class="thin" :class="isitalic ? \'italic\' : \'\'">mydeep 组件</h3>\n    <button @click="isitalic=!isitalic">toggle italic</button>\n\n    data() {\n      return { isitalic: true }\n    }\n\n（2）数组\n  应用场景：动态添加 多个 样式\n  缺点：模板结构臃肿\n  解决方法：使用对象形式\n\n    <h3 class="thin" :class="[isitalic ? \'italic\' : \'\', isdelete ? \'delete\' : \'\']">\n      mydeep 组件\n    </h3>\n\n    <button @click="isitalic=!isitalic">toogle italic</button>\n    <button @click="isdelete=!isdelete">toogle delete</button>\n\n    data() {\n      return {\n        isitalic: true,\n        isdelete: false,\n      }\n    }\n\n（3）对象\n  应用场景：动态添加 多个 样式\n\n    <h3 class="thin" :class="classobj">mydeep 组件</h3>\n\n    <button @click="classobj.italic = !classobj.italic">toggle italic</button>\n    <button @click="classobj.delete = !classobj.delete">toggle delete</button>\n\n    data() {\n      return {\n        classobj: {\n          italic: true,\n          delete: false,\n        }\n      }\n    }\n\n\n动态添加 style 内联样式\n\n<div :style="{color: active, fontsize: fsize + \'px\', \'background-color\': bgcolor}">黑马程序员</div>\n\n<button @click="fsize += 1">字号 +1</button>\n<button @click="fsize -= 1">字号 -1</button>\n\ndata() {\n  return {\n    active: \'red\',\n    fsize: 30,\n    bgcolor: \'pink\',\n  }\n}',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"过滤器",frontmatter:{title:"过滤器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ae2ef8/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/04.%E8%BF%87%E6%BB%A4%E5%99%A8.html",relativePath:"《前端》笔记《框架》/01.vue2/04.过滤器.md",key:"v-fe22f704",path:"/pages/ae2ef8/",headersStr:null,content:"message 的值是：{{ message | capi }}\n\n{{ data | dateFormat }}",normalizedContent:"message 的值是：{{ message | capi }}\n\n{{ data | dateformat }}",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"侦听器",frontmatter:{title:"侦听器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ee2297/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/05.%E4%BE%A6%E5%90%AC%E5%99%A8.html",relativePath:"《前端》笔记《框架》/01.vue2/05.侦听器.md",key:"v-082def39",path:"/pages/ee2297/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"计算属性",frontmatter:{title:"计算属性",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/4e87f6/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/06.%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7.html",relativePath:"《前端》笔记《框架》/01.vue2/06.计算属性.md",key:"v-472ff7fa",path:"/pages/4e87f6/",headersStr:null,content:'      （2）和 data 数据的使用方式一样\n        <div>{{ rgb }}</div>\n--\x3e\n\n<div id="app">\n    <div>\n      <span>R：</span>\n      <input type="text" v-model.number="r">\n    </div>\n    <div>\n      <span>G：</span>\n      <input type="text" v-model.number="g">\n    </div>\n    <div>\n      <span>B：</span>\n      <input type="text" v-model.number="b">\n    </div>\n    <hr>\n\n\x3c!-- 传统方法：如果要改成 rgba 就要改三个地方，复用性很低--\x3e\n\x3c!-- 计算属性：只需要改 compited 里定义的计算属性即可 --\x3e\n\n\x3c!-- 传统方法：<div class="box" :style="{ backgroundColor: `rgb(${r}, ${g}, ${b})` }"> --\x3e\n<div class="box" :style="{ backgroundColor: rgb }"></div>\n    \n  \x3c!-- 传统方法：{{ `rgb(${r}, ${g}, ${b})` }} --\x3e\n  \x3c!-- 特性：调用计算书属性时，后面不用跟括号 --\x3e\n  {{ rgb }}\n\n</div>\n<button @click="show">按钮</button>\n',normalizedContent:'      （2）和 data 数据的使用方式一样\n        <div>{{ rgb }}</div>\n--\x3e\n\n<div id="app">\n    <div>\n      <span>r：</span>\n      <input type="text" v-model.number="r">\n    </div>\n    <div>\n      <span>g：</span>\n      <input type="text" v-model.number="g">\n    </div>\n    <div>\n      <span>b：</span>\n      <input type="text" v-model.number="b">\n    </div>\n    <hr>\n\n\x3c!-- 传统方法：如果要改成 rgba 就要改三个地方，复用性很低--\x3e\n\x3c!-- 计算属性：只需要改 compited 里定义的计算属性即可 --\x3e\n\n\x3c!-- 传统方法：<div class="box" :style="{ backgroundcolor: `rgb(${r}, ${g}, ${b})` }"> --\x3e\n<div class="box" :style="{ backgroundcolor: rgb }"></div>\n    \n  \x3c!-- 传统方法：{{ `rgb(${r}, ${g}, ${b})` }} --\x3e\n  \x3c!-- 特性：调用计算书属性时，后面不用跟括号 --\x3e\n  {{ rgb }}\n\n</div>\n<button @click="show">按钮</button>\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"axios 发送请求",frontmatter:{title:"axios 发送请求",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/37b216/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/07.axios%20%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82.html",relativePath:"《前端》笔记《框架》/01.vue2/07.axios 发送请求.md",key:"v-6fc9318d",path:"/pages/37b216/",headersStr:null,content:"发起POST请求 发起GET请求\n\n<script src=\"sucai/axios.js\"><\/script>\n<script>\n  // 知识点：axios 发送请求\n  // 作用：专注于数据请求的库\n  // 安装：\n  // 方法一：npm install axios\n  // 方法二：图形可视化界面（Vue cli）\n  // 依赖 → 安装依赖 → 运行依赖 → 搜索 axios 并安装\n\n  // 引入：import axios from 'axios'\n\n  // 特性：会将服务端响应的数据进行包装，并返回一个 Promise 对象，只有 data 属性是服务端返回的数据，其它属性都是 axios 包装的（可以使用 Postman 查看服务端响应的真实数据）\n  // 提示：以后只推荐使用 axios发送请求，不推荐使用 jQuery发送请求\n\n  // 在请求头中添加字段\n  // 方法一\n  axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded'\n  // 方法二\n  this.axios\n    .post(\n      '/shop/goods/list/v2',\n      {\n        categoryId: ['263919'],\n      },\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      }\n    )\n    .then(res => {\n      this.goodsList = res\n    })\n\n  // 请求 POST\n  document.querySelector('#btnPost').addEventListener('click', async function () {\n    const { data } = await axios({\n      // 请求方式\n      method: 'POST',\n      // 请求的地址\n      url: 'http://www.liulongbin.top:3006/api/post',\n      // 请求体 参数（POST 传参）\n      data: {\n        name: 'zs',\n        age: 20,\n      },\n    })\n    console.log(data)\n  })\n\n  // 请求 GET\n  document.querySelector('#btnGet').addEventListener('click', async function () {\n    const { data: res } = await axios({\n      method: 'GET',\n      url: 'http://www.liulongbin.top:3006/api/getbooks',\n      // params：存储在 URL 中的参数（GET 传参）\n      params: {\n        id: 1,\n        name: 'zs',\n        age: 20,\n      },\n    })\n    console.log(res.data)\n  })\n<\/script>\n",normalizedContent:"发起post请求 发起get请求\n\n<script src=\"sucai/axios.js\"><\/script>\n<script>\n  // 知识点：axios 发送请求\n  // 作用：专注于数据请求的库\n  // 安装：\n  // 方法一：npm install axios\n  // 方法二：图形可视化界面（vue cli）\n  // 依赖 → 安装依赖 → 运行依赖 → 搜索 axios 并安装\n\n  // 引入：import axios from 'axios'\n\n  // 特性：会将服务端响应的数据进行包装，并返回一个 promise 对象，只有 data 属性是服务端返回的数据，其它属性都是 axios 包装的（可以使用 postman 查看服务端响应的真实数据）\n  // 提示：以后只推荐使用 axios发送请求，不推荐使用 jquery发送请求\n\n  // 在请求头中添加字段\n  // 方法一\n  axios.defaults.headers.common['content-type'] = 'application/x-www-form-urlencoded'\n  // 方法二\n  this.axios\n    .post(\n      '/shop/goods/list/v2',\n      {\n        categoryid: ['263919'],\n      },\n      {\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded',\n        },\n      }\n    )\n    .then(res => {\n      this.goodslist = res\n    })\n\n  // 请求 post\n  document.queryselector('#btnpost').addeventlistener('click', async function () {\n    const { data } = await axios({\n      // 请求方式\n      method: 'post',\n      // 请求的地址\n      url: 'http://www.liulongbin.top:3006/api/post',\n      // 请求体 参数（post 传参）\n      data: {\n        name: 'zs',\n        age: 20,\n      },\n    })\n    console.log(data)\n  })\n\n  // 请求 get\n  document.queryselector('#btnget').addeventlistener('click', async function () {\n    const { data: res } = await axios({\n      method: 'get',\n      url: 'http://www.liulongbin.top:3006/api/getbooks',\n      // params：存储在 url 中的参数（get 传参）\n      params: {\n        id: 1,\n        name: 'zs',\n        age: 20,\n      },\n    })\n    console.log(res.data)\n  })\n<\/script>\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"axios 发送请求 简写",frontmatter:{title:"axios 发送请求 简写",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c0b227/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/08.axios%20%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%20%E7%AE%80%E5%86%99.html",relativePath:"《前端》笔记《框架》/01.vue2/08.axios 发送请求 简写.md",key:"v-46372f8f",path:"/pages/c0b227/",headersStr:null,content:"GET POST",normalizedContent:"get post",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"axios 全局配置",frontmatter:{title:"axios 全局配置",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6d2a87/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/09.axios%20%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE.html",relativePath:"《前端》笔记《框架》/01.vue2/09.axios 全局配置.md",key:"v-90fe2772",path:"/pages/6d2a87/",headersStr:null,content:"解决： 1、每个组件中都要导入 axios，导致代码臃肿的 问题 2、每次发请求都要填写完整的请求路径，导致代码不利于后期维护 的问题\n\n使用步骤： （1）导入 axios （2）配置请求根路径 （3）将 axios 挂载到 Vue 的自定义属性中 （4）通过 this.$http 使用 axios\n\n-- main.js import axios from 'axios' // （1）导入 axios axios.defaults.baseURL = 'https://www.escook.cn' // （2）配置请求根路劲 Vue.prototype.$http = axios // （3）将 axios 挂载到 Vue 的自定义属性中\n\n-- 组件 this.$http.get('/users') // （4）通过 this.$http 使用 axios",normalizedContent:"解决： 1、每个组件中都要导入 axios，导致代码臃肿的 问题 2、每次发请求都要填写完整的请求路径，导致代码不利于后期维护 的问题\n\n使用步骤： （1）导入 axios （2）配置请求根路径 （3）将 axios 挂载到 vue 的自定义属性中 （4）通过 this.$http 使用 axios\n\n-- main.js import axios from 'axios' // （1）导入 axios axios.defaults.baseurl = 'https://www.escook.cn' // （2）配置请求根路劲 vue.prototype.$http = axios // （3）将 axios 挂载到 vue 的自定义属性中\n\n-- 组件 this.$http.get('/users') // （4）通过 this.$http 使用 axios",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"axios 拦截器",frontmatter:{title:"axios 拦截器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/36b5ae/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/10.axios%20%E6%8B%A6%E6%88%AA%E5%99%A8.html",relativePath:"《前端》笔记《框架》/01.vue2/10.axios 拦截器.md",key:"v-dd90940e",path:"/pages/36b5ae/",headers:[{level:2,title:"创建 axios 实例",slug:"创建-axios-实例",normalizedTitle:"创建 axios 实例",charIndex:38},{level:2,title:"请求 拦截器：",slug:"请求-拦截器",normalizedTitle:"请求 拦截器：",charIndex:124},{level:2,title:"响应 拦截器：",slug:"响应-拦截器",normalizedTitle:"响应 拦截器：",charIndex:264},{level:2,title:"使用场景",slug:"使用场景",normalizedTitle:"使用场景",charIndex:407},{level:3,title:"相同的 使用场景",slug:"相同的-使用场景",normalizedTitle:"相同的 使用场景",charIndex:416},{level:4,title:"（一）抛出失败",slug:"一-抛出失败",normalizedTitle:"（一）抛出失败",charIndex:428},{level:4,title:"（二）Loading 效果",slug:"二-loading-效果",normalizedTitle:"（二）loading 效果",charIndex:735},{level:3,title:"请求拦截器 的使用场景",slug:"请求拦截器-的使用场景",normalizedTitle:"请求拦截器 的使用场景",charIndex:1257},{level:4,title:"（一）携带 token",slug:"一-携带-token",normalizedTitle:"（一）携带 token",charIndex:1272},{level:4,title:"（二）请求参数格式的处理。如：将 json 的参数格式改为 x-www-form-urlencoded",slug:"二-请求参数格式的处理。如-将-json-的参数格式改为-x-www-form-urlencoded",normalizedTitle:"（二）请求参数格式的处理。如：将 json 的参数格式改为 x-www-form-urlencoded",charIndex:1477},{level:3,title:"响应拦截器 的使用场景",slug:"响应拦截器-的使用场景",normalizedTitle:"响应拦截器 的使用场景",charIndex:2056},{level:4,title:"（一）去除多余的响应信息，只返回需要的 data 数据",slug:"一-去除多余的响应信息-只返回需要的-data-数据",normalizedTitle:"（一）去除多余的响应信息，只返回需要的 data 数据",charIndex:2071},{level:3,title:"（二）判断 token 是否过期",slug:"二-判断-token-是否过期",normalizedTitle:"（二）判断 token 是否过期",charIndex:2435}],headersStr:"创建 axios 实例 请求 拦截器： 响应 拦截器： 使用场景 相同的 使用场景 （一）抛出失败 （二）Loading 效果 请求拦截器 的使用场景 （一）携带 token （二）请求参数格式的处理。如：将 json 的参数格式改为 x-www-form-urlencoded 响应拦截器 的使用场景 （一）去除多余的响应信息，只返回需要的 data 数据 （二）判断 token 是否过期",content:"特性： 在每次发起 ajax 请求 和得到 响应 的时候自动被触发\n\n\n# 创建 axios 实例\n\nimport axios from 'axios'\n\nconst service = service.create()\n\n\n1\n2\n3\n\n\n\n# 请求 拦截器：\n\n语法翻译： 服务.拦截器s.请求.使用().请求\n\nservice.interceptors.request.use(request => {\n  // 参数一：成功的回调（请求对象）\n  // 参数二：失败的回调（错误对象）\n}\n\n\n1\n2\n3\n4\n\n\n\n# 响应 拦截器：\n\n语法翻译： 服务.拦截器s.响应.使用().响应\n\nservice.interceptors.response.use(response => {\n  // 参数一：成功的回调（响应对象）\n  // 参数二：失败的回调（错误对象）\n})\n\n\n1\n2\n3\n4\n\n\n\n# 使用场景\n\n\n# 相同的 使用场景\n\n# （一）抛出失败\n\n// 请求拦截器\nservice.interceptors.request.use(config => {}, error => {\n  return Promise.reject(error)\n})\n\n\n1\n2\n3\n4\n\n\n// 响应拦截器\nservice.interceptors.response.use(response => {}, error => {\n  Message.error(error)\n\n  // 抛出错误。只会进入 .catch() 不会进入 .then()\n  return Promise.reject(error)\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# （二）Loading 效果\n\n原理： 借助于 element ui 提供的 Loading 效果组件（https://element.eleme.cn/#/zh-CN/component/loading）\n\nimport { Loading } from 'element-ui'\n\nlet loadingInstance = null  // 存储 Loading 组件的实例对象\n\nservice.interceptors.request.use(confin => {  // 请求拦截器\n  loadingInstance = Loading.service({ fullscreen: true }) // 创建 Loading 组件的实例，并全屏展示 Loading 效果\n  return config\n})\n\nservice.interceptors.response.use(response => {  // 响应拦截器\n  loadingInstance.close() // 关闭 Loading 效果\n  return response\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 请求拦截器 的使用场景\n\n# （一）携带 token\n\n原理： 在参数一，也就是请求对象身上添加 属性\n\nservice.interceptors.request.use(config => {\n  if (store.getters.token) {\n    config.headers['Authorization'] = `Bearer ${store.getters.token}`\n  }\n})\n\n\n1\n2\n3\n4\n5\n\n\n# （二）请求参数格式的处理。如：将 json 的参数格式改为 x-www-form-urlencoded\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  /*\n    BUG：请求参数格式和服务端参数格式不一致，导致传递的参数无效\n\n    解决原理：将请求参数转换成字符串格式。因为 content-type 会根据请求参数的格式自动变换请求格式\n    - application/x-www-form-urlencoded 格式：categoryId=263919\n    - application/json                  格式：{\"categoryId\": 263919}\n\n    解决方法：\n    - new URLSearchParams(data)：定义了很多处理 URL 的参数的方法\n    - URLSearchParams 对象.toString()：将参数转换成字符串\n  */\n  if (config.data) {\n    config.data = new URLSearchParams(data).toString()\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 响应拦截器 的使用场景\n\n# （一）去除多余的响应信息，只返回需要的 data 数据\n\n原理： 判断参数一，就是响应对象中的状态码，如果为 200 就 return 需要的 data 数据\n\nservice.interceptors.response.use(response => {\n  // 返回响应结果\n  if (response.data.code === 0) {\n    return response.data.data\n  } else {\n    Message.error(response.data.msg)\n\n    // 把异步 API 执行失败的结果传递出去\n    return Promise.reject(response.data.msg)\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# （二）判断 token 是否过期\n\n原理： 在响应拦截器中判断后端响应的状态码，如果是 401 则表示 token 过期，然后清空 token、和 vuex 中的 token 即可\n\nservice.interceptors.response.use(response => {\n}, error => {\n  if (error.response.status === 401) { // 判断 token 是否过期\n    Message.warning('token 过期，请重新登录')\n    store.commit('user/setToken', '')\n  }\n  return Promise.reject(error)\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n",normalizedContent:"特性： 在每次发起 ajax 请求 和得到 响应 的时候自动被触发\n\n\n# 创建 axios 实例\n\nimport axios from 'axios'\n\nconst service = service.create()\n\n\n1\n2\n3\n\n\n\n# 请求 拦截器：\n\n语法翻译： 服务.拦截器s.请求.使用().请求\n\nservice.interceptors.request.use(request => {\n  // 参数一：成功的回调（请求对象）\n  // 参数二：失败的回调（错误对象）\n}\n\n\n1\n2\n3\n4\n\n\n\n# 响应 拦截器：\n\n语法翻译： 服务.拦截器s.响应.使用().响应\n\nservice.interceptors.response.use(response => {\n  // 参数一：成功的回调（响应对象）\n  // 参数二：失败的回调（错误对象）\n})\n\n\n1\n2\n3\n4\n\n\n\n# 使用场景\n\n\n# 相同的 使用场景\n\n# （一）抛出失败\n\n// 请求拦截器\nservice.interceptors.request.use(config => {}, error => {\n  return promise.reject(error)\n})\n\n\n1\n2\n3\n4\n\n\n// 响应拦截器\nservice.interceptors.response.use(response => {}, error => {\n  message.error(error)\n\n  // 抛出错误。只会进入 .catch() 不会进入 .then()\n  return promise.reject(error)\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# （二）loading 效果\n\n原理： 借助于 element ui 提供的 loading 效果组件（https://element.eleme.cn/#/zh-cn/component/loading）\n\nimport { loading } from 'element-ui'\n\nlet loadinginstance = null  // 存储 loading 组件的实例对象\n\nservice.interceptors.request.use(confin => {  // 请求拦截器\n  loadinginstance = loading.service({ fullscreen: true }) // 创建 loading 组件的实例，并全屏展示 loading 效果\n  return config\n})\n\nservice.interceptors.response.use(response => {  // 响应拦截器\n  loadinginstance.close() // 关闭 loading 效果\n  return response\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 请求拦截器 的使用场景\n\n# （一）携带 token\n\n原理： 在参数一，也就是请求对象身上添加 属性\n\nservice.interceptors.request.use(config => {\n  if (store.getters.token) {\n    config.headers['authorization'] = `bearer ${store.getters.token}`\n  }\n})\n\n\n1\n2\n3\n4\n5\n\n\n# （二）请求参数格式的处理。如：将 json 的参数格式改为 x-www-form-urlencoded\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  /*\n    bug：请求参数格式和服务端参数格式不一致，导致传递的参数无效\n\n    解决原理：将请求参数转换成字符串格式。因为 content-type 会根据请求参数的格式自动变换请求格式\n    - application/x-www-form-urlencoded 格式：categoryid=263919\n    - application/json                  格式：{\"categoryid\": 263919}\n\n    解决方法：\n    - new urlsearchparams(data)：定义了很多处理 url 的参数的方法\n    - urlsearchparams 对象.tostring()：将参数转换成字符串\n  */\n  if (config.data) {\n    config.data = new urlsearchparams(data).tostring()\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 响应拦截器 的使用场景\n\n# （一）去除多余的响应信息，只返回需要的 data 数据\n\n原理： 判断参数一，就是响应对象中的状态码，如果为 200 就 return 需要的 data 数据\n\nservice.interceptors.response.use(response => {\n  // 返回响应结果\n  if (response.data.code === 0) {\n    return response.data.data\n  } else {\n    message.error(response.data.msg)\n\n    // 把异步 api 执行失败的结果传递出去\n    return promise.reject(response.data.msg)\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# （二）判断 token 是否过期\n\n原理： 在响应拦截器中判断后端响应的状态码，如果是 401 则表示 token 过期，然后清空 token、和 vuex 中的 token 即可\n\nservice.interceptors.response.use(response => {\n}, error => {\n  if (error.response.status === 401) { // 判断 token 是否过期\n    message.warning('token 过期，请重新登录')\n    store.commit('user/settoken', '')\n  }\n  return promise.reject(error)\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"proxy 跨域代理",frontmatter:{title:"proxy 跨域代理",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/8e1497/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/11.proxy%20%E8%B7%A8%E5%9F%9F%E4%BB%A3%E7%90%86.html",relativePath:"《前端》笔记《框架》/01.vue2/11.proxy 跨域代理.md",key:"v-a96d079e",path:"/pages/8e1497/",headersStr:null,content:"vue 项目运行的地址：http://localhost:8080/ API 接口运行的地址：https://www.escook.cn/api/users\n\n以上因为 协议、IP地址、端口号 的不同，当项目请求接口的时候，会存在跨域问题，当 API 接口没有开启 CORS 跨域资源共享，因此默认情况下，这个接口无法请求成功\n\n方法一：开启 CORS 跨域资源共享 缺点：需要叫后端人员开启跨域资源共享，如果后端人员没时间，则项目无法正常开发\n\n方法二：通过 proxy 代理接口 特性： 1、通过 vue-cli 创建的项目在遇到接口跨域问题时，可以通过代理的方式来解决 2、代理接口不受跨域限制 3、proxy 代理接口，仅在开发调试阶段生效，项目上线发布时，依旧需要 API 接口服务器开启 CORS 跨域资源共享\n\n原理： （1）把 axios 的请求根路径修改为 vue 项目的运行地址（接口请求不再跨域） （2）vue 项目发现请求的接口不存在，把请求转交给 proxy 代理 （3）代理把请求根路径替换为 devServer.proxy 属性的值，发起真正的数据请求 （4）代理把请求到的数据，转发给 axios\n\n例子： -- App.vue\n\n<button type=\"success\" @click=\"getUsers\">获取用户列表</button>\n\nmethods: {\n  async getUsers() {\n    const {data: res} = await this.$http.get('/api/users')\n    console.log(res)\n  }\n}\n\n\n-- main.js\n\n// axios.defaults.baseURL = 'https://www.escook.cn'\naxios.defaults.baseURL = 'http://localhost:8080'  // （1）把 axios 的请求根路径修改为 vue 项目的运行地址（接口请求不再跨域）\n\n\n-- vue.config.js // （2）在项目根目录下创建 vue-config.js，并添加以下代码\n\nmodule.exports = {\n  devServer: {\n    proxy: 'https://www.escook.cn',  // （3）将没有匹配到静态文件的请求，代理到指定请求地址中\n  }\n}",normalizedContent:"vue 项目运行的地址：http://localhost:8080/ api 接口运行的地址：https://www.escook.cn/api/users\n\n以上因为 协议、ip地址、端口号 的不同，当项目请求接口的时候，会存在跨域问题，当 api 接口没有开启 cors 跨域资源共享，因此默认情况下，这个接口无法请求成功\n\n方法一：开启 cors 跨域资源共享 缺点：需要叫后端人员开启跨域资源共享，如果后端人员没时间，则项目无法正常开发\n\n方法二：通过 proxy 代理接口 特性： 1、通过 vue-cli 创建的项目在遇到接口跨域问题时，可以通过代理的方式来解决 2、代理接口不受跨域限制 3、proxy 代理接口，仅在开发调试阶段生效，项目上线发布时，依旧需要 api 接口服务器开启 cors 跨域资源共享\n\n原理： （1）把 axios 的请求根路径修改为 vue 项目的运行地址（接口请求不再跨域） （2）vue 项目发现请求的接口不存在，把请求转交给 proxy 代理 （3）代理把请求根路径替换为 devserver.proxy 属性的值，发起真正的数据请求 （4）代理把请求到的数据，转发给 axios\n\n例子： -- app.vue\n\n<button type=\"success\" @click=\"getusers\">获取用户列表</button>\n\nmethods: {\n  async getusers() {\n    const {data: res} = await this.$http.get('/api/users')\n    console.log(res)\n  }\n}\n\n\n-- main.js\n\n// axios.defaults.baseurl = 'https://www.escook.cn'\naxios.defaults.baseurl = 'http://localhost:8080'  // （1）把 axios 的请求根路径修改为 vue 项目的运行地址（接口请求不再跨域）\n\n\n-- vue.config.js // （2）在项目根目录下创建 vue-config.js，并添加以下代码\n\nmodule.exports = {\n  devserver: {\n    proxy: 'https://www.escook.cn',  // （3）将没有匹配到静态文件的请求，代理到指定请求地址中\n  }\n}",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"SPA",frontmatter:{title:"SPA",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/dd342d/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/12.SPA.html",relativePath:"《前端》笔记《框架》/01.vue2/12.SPA.md",key:"v-7e96e1a9",path:"/pages/dd342d/",headersStr:null,content:"SPA：单页面应用程序（一个 web 网站中，只有唯一一个 HTML 页面，所有的功能和交互，都在这个页面中完成） 优点： 1、良好的交互体验 - 单页应用的内容的改变不需要重新加载整个页面 - 获取数据也是通过 Ajax 异步获取 - 没有页面之间的跳转，不会出现“白屏现象”\n\n    2、良好的前后端工作分离模式\n        - 后端专注于提供 API 接口，更易实现 API 接口的复用\n        - 前端专注于页面的渲染，更利于前端工程化的发展\n\n    3、减轻服务器的压力\n        - 服务器只提供数据，不负责页面的合成与逻辑的处理，吞吐能力会提高几倍\n\n缺点：\n    1、首屏加载慢\n        解决方法：\n            1、路由懒加载\n            2、代码压缩\n            3、CDN 加速\n            4、网络传输压缩\n\n    2、不利于 SEO\n        解决方法：\n            SSR 服务器端渲染\n\n\n快速搭建基于 Vue 的 SPA 方法： vite vue-cli 支持的 Vue 版本 Vue3.x Vue2.x、Vue3.x 是否基于 webpack 否 是 运行速度 快 较慢 功能完整度 小而巧（逐渐完善） 大而全 是否建议在企业级开发中使用 目前不建议（还不成熟） 建议",normalizedContent:"spa：单页面应用程序（一个 web 网站中，只有唯一一个 html 页面，所有的功能和交互，都在这个页面中完成） 优点： 1、良好的交互体验 - 单页应用的内容的改变不需要重新加载整个页面 - 获取数据也是通过 ajax 异步获取 - 没有页面之间的跳转，不会出现“白屏现象”\n\n    2、良好的前后端工作分离模式\n        - 后端专注于提供 api 接口，更易实现 api 接口的复用\n        - 前端专注于页面的渲染，更利于前端工程化的发展\n\n    3、减轻服务器的压力\n        - 服务器只提供数据，不负责页面的合成与逻辑的处理，吞吐能力会提高几倍\n\n缺点：\n    1、首屏加载慢\n        解决方法：\n            1、路由懒加载\n            2、代码压缩\n            3、cdn 加速\n            4、网络传输压缩\n\n    2、不利于 seo\n        解决方法：\n            ssr 服务器端渲染\n\n\n快速搭建基于 vue 的 spa 方法： vite vue-cli 支持的 vue 版本 vue3.x vue2.x、vue3.x 是否基于 webpack 否 是 运行速度 快 较慢 功能完整度 小而巧（逐渐完善） 大而全 是否建议在企业级开发中使用 目前不建议（还不成熟） 建议",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"vue-cli（脚手架）",frontmatter:{title:"vue-cli（脚手架）",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/f1a7da/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/13.vue-cli%EF%BC%88%E8%84%9A%E6%89%8B%E6%9E%B6%EF%BC%89.html",relativePath:"《前端》笔记《框架》/01.vue2/13.vue-cli（脚手架）.md",key:"v-575ab7b2",path:"/pages/f1a7da/",headersStr:null,content:"文档：https://cli.vuejs.org/zh/guide/\n\n概念：vue 开发的标准工具\n\n作用：快速搭建基于 Vue 的 SPA\n\n特性：\n    1、开箱即用\n    2、基于 webpack\n    3、功能丰富且易于扩展\n    4、支持创建 vue2 和 vue3 的项目\n\n下载：npm install -g @vue/cli\n提示：\n    1、如果报错说没有权限，请在前面加上 sudo，如：sudo npm install -g @vue/cli\n    2、学习时使用的是 4.0 版本\n\n创建项目（在命令行工作目录中创建）\n\n    方法一：命令行工具\n        vue create 项目名称\n        报错：gyp: No Xcode or CLT version detected!\n        解决方法：\n            1、sudo rm -rf $(xcode-select -print-path)\n            2、xcode-select --install\n\n        命令行提示：\n            Please pick a preset:(Use arrow keys)      // 使用上下箭头选择一个 预设，回车确定\n                Default([Vue 2] babel, eslint)         // 创建 Vue2 项目，并自动配置 babel 和 eslint\n                Default(Vue 3) ([Vue3] babel, eslint)  // 创建 Vue3 项目，并自动配置 babel 和 eslint\n                > Manually select features             // 手动选择安装指定功能到项目中\n\n        命令行提示：\n            Check the features needed for your project    // 指定安装哪些功能。* 代表要安装的功能，空格添加/取消 *\n                (*)Choose Vue version                     // 选择安装预设的版本\n                (*)Babel                                  // 解决 JS 兼容性\n                (*)Vuex                                   // 组件全局状态（数据）管理\n                (*)CSS Pre-processors                     // css 预处理器（less）\n                (*)Linter / Formatter                     // 约束团队的代码规范\n\n        命令行提示：\n            Choose a version of Vue.js that you want to start the project with (Use arrow keys)    // 选择一个Vue版本\n            根据自己项目的需求，选择Vue版本\n                2.x\n                3.x\n\n            Pick a CSS pre-processor    // 选择 CSS 预处理器\n            > Less\n\n            Pick a linter / formatter config:  // 选择一套 ESLint 的语法规范\n                ESLint with error prevention only\n                ESLint + Airbub config\n                > ESLint + Standard config\n                ESLint + Prettier\n\n            pick additional lint features:\n            > (*) Lint on save  //  保存时，进行代码规范的检查，并自动修复\n                ( ) Lint and fix on commit  // 提交代码时，进行代码规范的检查，并自动修复\n\n            Where do you prefer placing config for Babel, ESLint, etc.?(Use arrow keys)    // Babel, ESLint 这些第三方插件的配置文件该如何创建\n            > In dedicated config files    // 放在独立的配置文件中\n                In package.json    // 放在 package.json 中\n\n            Save this as a preset for future projects? (y/N)    // 是否将上面配置的信息存储到新的预设中，下次创建预设时，采用以上配置的信息\n                N\n\n            Pick the package manager to use when installing dependencies:  // 选择如何安装项目中的依赖包\n                > Use Npm\n\n            Save preset as: 预设的名字\n\n        注意：完成以上配置后开始安装，安装的过程中，如果不小心拖动了里面的内容，命令行会处于冻结状态，只需要点击一下终端 按 ctrl + c 即可恢复\n\n    方法二：可视化界面（推荐）（没有显示在下方配置项中的选项，皆为默认选项）\n\n        启动可视化界面：vue ui\n\n        详情：\n            \b选择项目存放目录\n\n            初始化 git 仓库（建议）：开启\n                覆盖提交信息：init project\n\n        预设：\n            手动\n\n        功能（以下都要开启）：\n            - Choose Vue version                                // 选择一个Vue版本\n            - Babel                                             // 解决 JS 兼容性\n            - Router                                            // 路由\n            - Vuex                                              // 组件全局状态（数据）管理\n            - CSS Pre-processors                                // css 预处理器\n            - Linter / Formatter                                // 约束团队的代码规范\n            - 使用配置文件                                        // 不同的配置放在独立的配置文件中\n\n        配置：\n            - Use history mode for router?：关闭      // 是否使用 历史模式 的路由？关闭则使用 哈希模式 的路由（推荐哈希模式，兼容性更强）\n            - ESLint + Standard config\n            - Sass/SCSS (with node-sass）\n            - Lint on save     //  保存时，进行代码规范的检查，并自动修复\n\n启动项目：\n\n    方法一：命令行工具\n        执行 npm run serve\n\n    方法二：可视化界面\n        任务 → serve → 运行 → 启动 app\n\n项目目录结构：\n    node_modules    // 存放 第三方包\n    public          // 存放 页面图标、index.html\n    src             // 存放 项目源代码\n        api         // 存放 可复用的 api 接口       【手动创建】\n        assets      // 存放 静态资源\n            product // 存放 商品图片（大图片）          【手动创建】\n            images  // 存放 小图标（小图片）（该目录里的图片会被转换为 base64）     【手动创建】\n            styles  // 存放 CSS样式表               【手动创建】\n        components  // 存放 组件\n        router      // 存放 路由模块\n        store       // vuex（状态管理）\n        utils       // 存放 工具性质的函数和模块       【手动创建】\n        vender      // 手动添加的第三方 js 库（npm 下载不到的）     【手动创建】\n        views       // 存放 通过路由动态切换的组件\n        pages       // 存放 页面                    【手动创建】\n        storage     // 数据存储工具箱                【手动创建】\n        App.vue     // 项目 根组件\n        main.js     // 项目 入口文件（主要职责：创建 vue 应用）\n        store.js    // vuex 配置文件\n        theme.less  // 主题定制                    【手动创建】\n    .browserslistrc // 将 css 转换为浏览器兼容的版本（在 CSS 前面添加浏览器对应的兼容前缀）\n    .editorconfig   // 编辑器配置文件（配置缩进、空格、字体大小 等）\n    .eslintrc.js    // ESLint 配置文件\n    .gitignore      // 忽略清单\n    babel.config.js // babel 配置文件（ES降级配置文件）\n    package.json    // 包管理配置文件\n    vue.config.js   // 项目配置文件                 【手动创建】\n\n    -- main.js\n        Vue.config.productionTip = false // 是否在终端显示提示信息（true：显示）（false：不显示）\n        new Vue({\n            // render：将指定的组件，渲染到 index.html 的指定区域中\n            render: h => h(App)\n        }).$mount('#app')  // $mount()：指定 Vue 控制的区域。和 el 作用一样\n\n在 工程化项目中 Vue 的主要作用：通过 main.js 把 App.vue 渲染到 index.html 的指定区域中\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n",normalizedContent:"文档：https://cli.vuejs.org/zh/guide/\n\n概念：vue 开发的标准工具\n\n作用：快速搭建基于 vue 的 spa\n\n特性：\n    1、开箱即用\n    2、基于 webpack\n    3、功能丰富且易于扩展\n    4、支持创建 vue2 和 vue3 的项目\n\n下载：npm install -g @vue/cli\n提示：\n    1、如果报错说没有权限，请在前面加上 sudo，如：sudo npm install -g @vue/cli\n    2、学习时使用的是 4.0 版本\n\n创建项目（在命令行工作目录中创建）\n\n    方法一：命令行工具\n        vue create 项目名称\n        报错：gyp: no xcode or clt version detected!\n        解决方法：\n            1、sudo rm -rf $(xcode-select -print-path)\n            2、xcode-select --install\n\n        命令行提示：\n            please pick a preset:(use arrow keys)      // 使用上下箭头选择一个 预设，回车确定\n                default([vue 2] babel, eslint)         // 创建 vue2 项目，并自动配置 babel 和 eslint\n                default(vue 3) ([vue3] babel, eslint)  // 创建 vue3 项目，并自动配置 babel 和 eslint\n                > manually select features             // 手动选择安装指定功能到项目中\n\n        命令行提示：\n            check the features needed for your project    // 指定安装哪些功能。* 代表要安装的功能，空格添加/取消 *\n                (*)choose vue version                     // 选择安装预设的版本\n                (*)babel                                  // 解决 js 兼容性\n                (*)vuex                                   // 组件全局状态（数据）管理\n                (*)css pre-processors                     // css 预处理器（less）\n                (*)linter / formatter                     // 约束团队的代码规范\n\n        命令行提示：\n            choose a version of vue.js that you want to start the project with (use arrow keys)    // 选择一个vue版本\n            根据自己项目的需求，选择vue版本\n                2.x\n                3.x\n\n            pick a css pre-processor    // 选择 css 预处理器\n            > less\n\n            pick a linter / formatter config:  // 选择一套 eslint 的语法规范\n                eslint with error prevention only\n                eslint + airbub config\n                > eslint + standard config\n                eslint + prettier\n\n            pick additional lint features:\n            > (*) lint on save  //  保存时，进行代码规范的检查，并自动修复\n                ( ) lint and fix on commit  // 提交代码时，进行代码规范的检查，并自动修复\n\n            where do you prefer placing config for babel, eslint, etc.?(use arrow keys)    // babel, eslint 这些第三方插件的配置文件该如何创建\n            > in dedicated config files    // 放在独立的配置文件中\n                in package.json    // 放在 package.json 中\n\n            save this as a preset for future projects? (y/n)    // 是否将上面配置的信息存储到新的预设中，下次创建预设时，采用以上配置的信息\n                n\n\n            pick the package manager to use when installing dependencies:  // 选择如何安装项目中的依赖包\n                > use npm\n\n            save preset as: 预设的名字\n\n        注意：完成以上配置后开始安装，安装的过程中，如果不小心拖动了里面的内容，命令行会处于冻结状态，只需要点击一下终端 按 ctrl + c 即可恢复\n\n    方法二：可视化界面（推荐）（没有显示在下方配置项中的选项，皆为默认选项）\n\n        启动可视化界面：vue ui\n\n        详情：\n            \b选择项目存放目录\n\n            初始化 git 仓库（建议）：开启\n                覆盖提交信息：init project\n\n        预设：\n            手动\n\n        功能（以下都要开启）：\n            - choose vue version                                // 选择一个vue版本\n            - babel                                             // 解决 js 兼容性\n            - router                                            // 路由\n            - vuex                                              // 组件全局状态（数据）管理\n            - css pre-processors                                // css 预处理器\n            - linter / formatter                                // 约束团队的代码规范\n            - 使用配置文件                                        // 不同的配置放在独立的配置文件中\n\n        配置：\n            - use history mode for router?：关闭      // 是否使用 历史模式 的路由？关闭则使用 哈希模式 的路由（推荐哈希模式，兼容性更强）\n            - eslint + standard config\n            - sass/scss (with node-sass）\n            - lint on save     //  保存时，进行代码规范的检查，并自动修复\n\n启动项目：\n\n    方法一：命令行工具\n        执行 npm run serve\n\n    方法二：可视化界面\n        任务 → serve → 运行 → 启动 app\n\n项目目录结构：\n    node_modules    // 存放 第三方包\n    public          // 存放 页面图标、index.html\n    src             // 存放 项目源代码\n        api         // 存放 可复用的 api 接口       【手动创建】\n        assets      // 存放 静态资源\n            product // 存放 商品图片（大图片）          【手动创建】\n            images  // 存放 小图标（小图片）（该目录里的图片会被转换为 base64）     【手动创建】\n            styles  // 存放 css样式表               【手动创建】\n        components  // 存放 组件\n        router      // 存放 路由模块\n        store       // vuex（状态管理）\n        utils       // 存放 工具性质的函数和模块       【手动创建】\n        vender      // 手动添加的第三方 js 库（npm 下载不到的）     【手动创建】\n        views       // 存放 通过路由动态切换的组件\n        pages       // 存放 页面                    【手动创建】\n        storage     // 数据存储工具箱                【手动创建】\n        app.vue     // 项目 根组件\n        main.js     // 项目 入口文件（主要职责：创建 vue 应用）\n        store.js    // vuex 配置文件\n        theme.less  // 主题定制                    【手动创建】\n    .browserslistrc // 将 css 转换为浏览器兼容的版本（在 css 前面添加浏览器对应的兼容前缀）\n    .editorconfig   // 编辑器配置文件（配置缩进、空格、字体大小 等）\n    .eslintrc.js    // eslint 配置文件\n    .gitignore      // 忽略清单\n    babel.config.js // babel 配置文件（es降级配置文件）\n    package.json    // 包管理配置文件\n    vue.config.js   // 项目配置文件                 【手动创建】\n\n    -- main.js\n        vue.config.productiontip = false // 是否在终端显示提示信息（true：显示）（false：不显示）\n        new vue({\n            // render：将指定的组件，渲染到 index.html 的指定区域中\n            render: h => h(app)\n        }).$mount('#app')  // $mount()：指定 vue 控制的区域。和 el 作用一样\n\n在 工程化项目中 vue 的主要作用：通过 main.js 把 app.vue 渲染到 index.html 的指定区域中\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"组件",frontmatter:{title:"组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7d1bb2/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/14.%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《框架》/01.vue2/14.组件.md",key:"v-457d36c4",path:"/pages/7d1bb2/",headersStr:null,content:'组件：将可复用的 UI 结构封装为组件，从而方便项目的开发和维护 特性：后缀名为 vue 的都是组件\n\n组件有三部分构成：\n    （1）template -> 组件的 模板结构\n    （2）script   -> 组件的 JS（可选）\n    （3）style    -> 组件的 样式（可选）\n\n\n常用组件库：element-ui、Vant\n\n-- Test.vue\n\n<template>\n    <div>\n        <div class="test-box">\n        <h3>这是用户自定义的 Test.vue --- {{ username }}</h3>\n        <button @click="chagneName">修改用户名</button>\n        </div>\n\n        // 注意：template 中不能出现两个根节点    解决方法：在外层包一个根节点\n        <div>123</div>\n    </div>\n</template>\n\n<script>\n    // 默认导出。这是固定写法！\n    export default {\n\n        // 在使用 vue-devtools 进行项目调试的时候，自定义的组件名称可以清晰的区分每个组件\n        // 组件名使用 帕斯卡命名法\n        name: \'MyApp\',\n\n        // 当前组件的 数据\n        // 注意：组件中的 data 不能像之前一样 指向组件的实例对象，所以这个 data 必须是一个函数\n        data() {\n            // 在 return 对象中定义数据\n            return {\n                username: \'admin\'\n            }\n        },\n\n        // 当前组件的 方法\n        methods: {\n            chagneName() {\n                // 在组件中，this 就表示当前组件的实例对象\n                this.username = \'哇哈哈\'\n            }\n\n            // 当方法只有简单的一行时，适合写在标签中\n            <button @click="count += 1">+1</button>\n        },\n\n        // 当前组件的 侦听器\n        watch: {},\n\n        // 当前组件的 计算属性\n        computed: {},\n\n        // 当前组件的 过滤器\n        filters: {}\n\n    }\n<\/script>\n\n允许使用 less 语法\n    // 1、下载 npm i less -D\n    // 2、lang="less"：开启 less 语法\n<style lang="less">\n    .test-box {\n        background-color: pink;\n        h3 {\n            color: red;\n        }\n    }\n</style>\n\n\n注册组件： 组件注册名称命名方式： kebab-case 命名法（俗称 短横线命名法 如：my-swiper） PascalCase 命名法（俗称 帕斯卡命名法 或 大驼峰命名法 如 MySwiper，每个单词首字母大写）（再使用时，可以写成 短横线命名法）（推荐）\n\n全局组件：允许在任何组件中使用\n应用场景：组件使用频率很高时\n-- main.js\n    （1）导入需要全局注册的组件\n        import Swiper from \'./components/MySwiper.vue\'\n        import Test from \'./components/Test.vue\'\n\n    （2）调用 app.component() 方法注册全局组件\n        app.component(Swiper.name, Swiper)\n        app.component(Test.name, Test)\n\n局部组件：只能在当前组件中使用\n应用场景：组件使用频率很低时\n    （1）导入需要局部注册的组件\n        import Search from \'./components/MySearch.vue\'\n\n    （2）在 export default 里的 components 节点中注册全局组件\n        export default {\n            components: {\n                Search.name: Search,\n            }\n        }\n\n\n知识点：组件的父子关系\n\n作用：在一个组件中使用其它组件\n\n特性：\n    1、组件在封装好后，彼此之间是相互独立的\n    2、只有在使用组件的时候，才会产生父子关系\n\n使用步骤：\n    1、导入 子组件\n        import Left form \'@/components/Left.vue\'\n\n    2、在父组件的 components 节点中注册组件\n        export default {\n            components: {\n                Left,\n                Right\n            }\n        }\n\n    3、以标签形式使用注册的组件\n        <div class="box">\n            <Left><Left>\n            <Right><Right>\n        </div>\n\n\n私有 子组件： 特性： 1、在其它组件中的 模板结构 中 不可以 使用该组件 2、通过 components 注册的组件就是 私有子组件\n\n全局 子组件： 特性： 1、在其它组件中的 模板结构 中 可以 使用该组件 2、通过 Vue.component 注册的组件就是 全局子组件 使用步骤： 在 main.js 入口文件中操作 1、导入 全局组件 import Count from \'@/components/Count.vue\'\n\n        2、注册全局组件：Vue.component(\'注册后的组件名\', 注册的组件) \n            Vue.component(\'MyCount\', Count)\n\n        3、以标签形式使用注册的组件\n            <div class="box">\n                <MyCount><MyCount>\n            </div>\n\n\n组件之间的样式冲突 问题：默认组件中的 样式 会全局生效，导致组件之间的样式冲突 问题\n\n解决方法一：使用 自定义属性（data-v-标识符）\n    使用步骤：\n        1、定义 自定义属性\n        2、使用 属性选择器\n\n    -- 组件A\n        <template>\n            <div class="left-container" data-v-001>\n                <h3 data-v-001>Left 组件</h3>\n                <hr data-v-001></hr>\n                <MyCount :init="9" data-v-001></MyCount>\n            </div>\n        </template>\n        <style lang="less">\n            h3[v-data-001] {\n                color: red;\n            }\n        </style>\n\n    -- 组件B\n        <template>\n            <div class="left-container" data-v-002>\n                <h3 data-v-002>Left 组件</h3>\n                <hr data-v-002></hr>\n                <MyCount :init="9" data-v-002></MyCount>\n            </div>\n        </template>\n        <style lang="less">\n            h3[v-data-002] {\n                color: red;\n            }\n        </style>\n\n解决方法二：在 style 中添加 scoped 属性（推荐）\n    底层原理：内部自动 添加自定义属性 如解决方法一    如：h5[data-v-3c83f0b7]\n\n    -- 组件A\n        <template>\n            <div class="left-container">\n                <h3>Left 组件</h3>\n                <hr></hr>\n                <MyCount :init="9"></MyCount>\n            </div>\n        </template>\n        <style lang="less" scoped>\n            h3 {\n                color: red;\n            }\n        </style>\n\n    -- 组件B\n        <template>\n            <div class="left-container">\n                <h3>Left 组件</h3>\n                <hr></hr>\n                <MyCount :init="9"></MyCount>\n            </div>\n        </template>\n        <style lang="less" scoped>\n            h3 {\n                color: red;\n            }\n        </style>\n\n\n在 父组件中 给 子组件 添加样式 方法：添加 /deep/（深度选择器） 原理：属性选择器 后代选择器 如：[data-v-3c83f0b7] h5 应用场景：修改 第三方组件库 的样式时使用 如：element-ui、Vant\n\n<style lang="less" scoped>\n    /deep/ h3 {\n        color: red;\n    }\n</style>\n',normalizedContent:'组件：将可复用的 ui 结构封装为组件，从而方便项目的开发和维护 特性：后缀名为 vue 的都是组件\n\n组件有三部分构成：\n    （1）template -> 组件的 模板结构\n    （2）script   -> 组件的 js（可选）\n    （3）style    -> 组件的 样式（可选）\n\n\n常用组件库：element-ui、vant\n\n-- test.vue\n\n<template>\n    <div>\n        <div class="test-box">\n        <h3>这是用户自定义的 test.vue --- {{ username }}</h3>\n        <button @click="chagnename">修改用户名</button>\n        </div>\n\n        // 注意：template 中不能出现两个根节点    解决方法：在外层包一个根节点\n        <div>123</div>\n    </div>\n</template>\n\n<script>\n    // 默认导出。这是固定写法！\n    export default {\n\n        // 在使用 vue-devtools 进行项目调试的时候，自定义的组件名称可以清晰的区分每个组件\n        // 组件名使用 帕斯卡命名法\n        name: \'myapp\',\n\n        // 当前组件的 数据\n        // 注意：组件中的 data 不能像之前一样 指向组件的实例对象，所以这个 data 必须是一个函数\n        data() {\n            // 在 return 对象中定义数据\n            return {\n                username: \'admin\'\n            }\n        },\n\n        // 当前组件的 方法\n        methods: {\n            chagnename() {\n                // 在组件中，this 就表示当前组件的实例对象\n                this.username = \'哇哈哈\'\n            }\n\n            // 当方法只有简单的一行时，适合写在标签中\n            <button @click="count += 1">+1</button>\n        },\n\n        // 当前组件的 侦听器\n        watch: {},\n\n        // 当前组件的 计算属性\n        computed: {},\n\n        // 当前组件的 过滤器\n        filters: {}\n\n    }\n<\/script>\n\n允许使用 less 语法\n    // 1、下载 npm i less -d\n    // 2、lang="less"：开启 less 语法\n<style lang="less">\n    .test-box {\n        background-color: pink;\n        h3 {\n            color: red;\n        }\n    }\n</style>\n\n\n注册组件： 组件注册名称命名方式： kebab-case 命名法（俗称 短横线命名法 如：my-swiper） pascalcase 命名法（俗称 帕斯卡命名法 或 大驼峰命名法 如 myswiper，每个单词首字母大写）（再使用时，可以写成 短横线命名法）（推荐）\n\n全局组件：允许在任何组件中使用\n应用场景：组件使用频率很高时\n-- main.js\n    （1）导入需要全局注册的组件\n        import swiper from \'./components/myswiper.vue\'\n        import test from \'./components/test.vue\'\n\n    （2）调用 app.component() 方法注册全局组件\n        app.component(swiper.name, swiper)\n        app.component(test.name, test)\n\n局部组件：只能在当前组件中使用\n应用场景：组件使用频率很低时\n    （1）导入需要局部注册的组件\n        import search from \'./components/mysearch.vue\'\n\n    （2）在 export default 里的 components 节点中注册全局组件\n        export default {\n            components: {\n                search.name: search,\n            }\n        }\n\n\n知识点：组件的父子关系\n\n作用：在一个组件中使用其它组件\n\n特性：\n    1、组件在封装好后，彼此之间是相互独立的\n    2、只有在使用组件的时候，才会产生父子关系\n\n使用步骤：\n    1、导入 子组件\n        import left form \'@/components/left.vue\'\n\n    2、在父组件的 components 节点中注册组件\n        export default {\n            components: {\n                left,\n                right\n            }\n        }\n\n    3、以标签形式使用注册的组件\n        <div class="box">\n            <left><left>\n            <right><right>\n        </div>\n\n\n私有 子组件： 特性： 1、在其它组件中的 模板结构 中 不可以 使用该组件 2、通过 components 注册的组件就是 私有子组件\n\n全局 子组件： 特性： 1、在其它组件中的 模板结构 中 可以 使用该组件 2、通过 vue.component 注册的组件就是 全局子组件 使用步骤： 在 main.js 入口文件中操作 1、导入 全局组件 import count from \'@/components/count.vue\'\n\n        2、注册全局组件：vue.component(\'注册后的组件名\', 注册的组件) \n            vue.component(\'mycount\', count)\n\n        3、以标签形式使用注册的组件\n            <div class="box">\n                <mycount><mycount>\n            </div>\n\n\n组件之间的样式冲突 问题：默认组件中的 样式 会全局生效，导致组件之间的样式冲突 问题\n\n解决方法一：使用 自定义属性（data-v-标识符）\n    使用步骤：\n        1、定义 自定义属性\n        2、使用 属性选择器\n\n    -- 组件a\n        <template>\n            <div class="left-container" data-v-001>\n                <h3 data-v-001>left 组件</h3>\n                <hr data-v-001></hr>\n                <mycount :init="9" data-v-001></mycount>\n            </div>\n        </template>\n        <style lang="less">\n            h3[v-data-001] {\n                color: red;\n            }\n        </style>\n\n    -- 组件b\n        <template>\n            <div class="left-container" data-v-002>\n                <h3 data-v-002>left 组件</h3>\n                <hr data-v-002></hr>\n                <mycount :init="9" data-v-002></mycount>\n            </div>\n        </template>\n        <style lang="less">\n            h3[v-data-002] {\n                color: red;\n            }\n        </style>\n\n解决方法二：在 style 中添加 scoped 属性（推荐）\n    底层原理：内部自动 添加自定义属性 如解决方法一    如：h5[data-v-3c83f0b7]\n\n    -- 组件a\n        <template>\n            <div class="left-container">\n                <h3>left 组件</h3>\n                <hr></hr>\n                <mycount :init="9"></mycount>\n            </div>\n        </template>\n        <style lang="less" scoped>\n            h3 {\n                color: red;\n            }\n        </style>\n\n    -- 组件b\n        <template>\n            <div class="left-container">\n                <h3>left 组件</h3>\n                <hr></hr>\n                <mycount :init="9"></mycount>\n            </div>\n        </template>\n        <style lang="less" scoped>\n            h3 {\n                color: red;\n            }\n        </style>\n\n\n在 父组件中 给 子组件 添加样式 方法：添加 /deep/（深度选择器） 原理：属性选择器 后代选择器 如：[data-v-3c83f0b7] h5 应用场景：修改 第三方组件库 的样式时使用 如：element-ui、vant\n\n<style lang="less" scoped>\n    /deep/ h3 {\n        color: red;\n    }\n</style>\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"自定义事件",frontmatter:{title:"自定义事件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/bc7b7d/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/15.%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6.html",relativePath:"《前端》笔记《框架》/01.vue2/15.自定义事件.md",key:"v-0f688986",path:"/pages/bc7b7d/",headersStr:null,content:'作用：让组件的使用者可以监听到组件内状态的变化\n\n需求：当 count 的值发送变化时，触发自定义事件，把最新的值发送给组件的使用者\n\n特性：可以通过自定义事件的第二个参数向外 传参\n\n使用步骤：\n\n封装 组件阶段： （1）声明 自定义事件 （2）触发 自定义事件\n\n使用 组件阶段 （3）监听 自定义事件\n\n-- App.vue\n\n\napp 根组件\n\n----------------------------------------\n\n  // （3）监听 自定义事件\n  <my-counter @countChange="getCount"></my-counter>\n\n</div>\n\n\n-- Counter.vue\n\ncount 的值是：{{ count }}\n\n+1',normalizedContent:'作用：让组件的使用者可以监听到组件内状态的变化\n\n需求：当 count 的值发送变化时，触发自定义事件，把最新的值发送给组件的使用者\n\n特性：可以通过自定义事件的第二个参数向外 传参\n\n使用步骤：\n\n封装 组件阶段： （1）声明 自定义事件 （2）触发 自定义事件\n\n使用 组件阶段 （3）监听 自定义事件\n\n-- app.vue\n\n\napp 根组件\n\n----------------------------------------\n\n  // （3）监听 自定义事件\n  <my-counter @countchange="getcount"></my-counter>\n\n</div>\n\n\n-- counter.vue\n\ncount 的值是：{{ count }}\n\n+1',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"组件的生命周期 & 钩子函数",frontmatter:{title:"组件的生命周期 & 钩子函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/a01ff5/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/16.%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%20&%20%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《框架》/01.vue2/16.组件的生命周期 & 钩子函数.md",key:"v-ff0d159c",path:"/pages/a01ff5/",headersStr:null,content:"文档：https://cn.vuejs.org/v2/api/#选项-生命周期钩子\n\n组件的生命周期：组件从 创建 -> 运行 -> 销毁 的整个阶段\n\n生命周期函数：vue 提供的内置函数，在某个特定的时间点 触发\n\n可以将一个组件理解为一个构造函数，当使用 标签组件时，就相当于 new 了这个组件的实例\n\n组件的生命周期：\n\n    （1）创建 阶段\n\n        1、beforeCreate：初始化事件 和 生命周期函数 后触发\n            特性：props/data/methods 尚未被创建，都处于不可用状态\n\n        2、created（常用）：初始化 props、data、methods 后触发 时触发\n            特性：模板结构尚未生成，无法操作 DOM\n            应用场景：发起 Ajax 请求，获取数据，并渲染到页面中\n                使用步骤：\n                    （1）定义 Ajax 请求方法\n                    （2）将 Ajax 获取回来的数据 存储到 data 中\n                    （3）将数据 渲染 到页面中\n\n                <template>\n                    <div class=\"test-container\">\n\n                        // （3）将数据 渲染 到页面中\n                        <h3>{{ books.length }} 本图书</h3>\n\n                    </div>\n                </template>\n\n                export default {\n                    data() {\n                        return {\n                            books: []\n                        }\n                    }\n\n                    // （1）定义 Ajax 请求方法\n                    methods: {\n                        initBookList() {\n                            const xhr = new XMLHttpRequest()\n                            xhr.addEventListener('load', function() {\n                                const result = JSON.parse(xhr.responseText)\n                                console.log(result)\n\n                                // （2）将 Ajax 获取回来的数据 存储到 data 中\n                                this.books = result.data\n                            })\n                            xhr.open('GET', 'http://www.liulongbin.top:3006/api/getbooks')\n                            xhr.send()\n                        }\n                    }\n\n                    created() {\n                        this.initBookList()\n                    }\n                }\n\n        在内存中编译生成 HTML 结构 阶段：\n            会判断是否有 el 选项，有就会走 YES 流程，没有则走 NO 流程，NO 流程就是当 $monunt 这个方法被调用后，走向 template 阶段，而 YES 流程会直接走向 template 阶段，template 阶段会判断是否拥有 template 选项，如果有则只有 YSE 流程，没有则走 NO 流程，YES 流程会将 template 选项中的模板进行编译，NO 流程会将 el 提供的模板进行编译\n\n        3、beforeMount：HTML结构 渲染前 触发\n\n        4、mounted（常用）：HTML结构 渲染后 触发\n            应用场景：操作 DOM 元素\n\n    （2）运行 阶段：data、props 中的数据变化后 触发\n\n        1、beforeUpdate：页面重新渲染 前\n            特性：在 created 中渲染了数据，所以会自动触发一次\n\n        2、updated（常用）：页面重新渲染 后\n\n    （3）销毁 阶段\n        销毁方法：v-if=\"flag\"\n        1、beforeDestroy：组件 销毁前 触发\n        2、destroyed：组件 销毁后 触发\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n",normalizedContent:"文档：https://cn.vuejs.org/v2/api/#选项-生命周期钩子\n\n组件的生命周期：组件从 创建 -> 运行 -> 销毁 的整个阶段\n\n生命周期函数：vue 提供的内置函数，在某个特定的时间点 触发\n\n可以将一个组件理解为一个构造函数，当使用 标签组件时，就相当于 new 了这个组件的实例\n\n组件的生命周期：\n\n    （1）创建 阶段\n\n        1、beforecreate：初始化事件 和 生命周期函数 后触发\n            特性：props/data/methods 尚未被创建，都处于不可用状态\n\n        2、created（常用）：初始化 props、data、methods 后触发 时触发\n            特性：模板结构尚未生成，无法操作 dom\n            应用场景：发起 ajax 请求，获取数据，并渲染到页面中\n                使用步骤：\n                    （1）定义 ajax 请求方法\n                    （2）将 ajax 获取回来的数据 存储到 data 中\n                    （3）将数据 渲染 到页面中\n\n                <template>\n                    <div class=\"test-container\">\n\n                        // （3）将数据 渲染 到页面中\n                        <h3>{{ books.length }} 本图书</h3>\n\n                    </div>\n                </template>\n\n                export default {\n                    data() {\n                        return {\n                            books: []\n                        }\n                    }\n\n                    // （1）定义 ajax 请求方法\n                    methods: {\n                        initbooklist() {\n                            const xhr = new xmlhttprequest()\n                            xhr.addeventlistener('load', function() {\n                                const result = json.parse(xhr.responsetext)\n                                console.log(result)\n\n                                // （2）将 ajax 获取回来的数据 存储到 data 中\n                                this.books = result.data\n                            })\n                            xhr.open('get', 'http://www.liulongbin.top:3006/api/getbooks')\n                            xhr.send()\n                        }\n                    }\n\n                    created() {\n                        this.initbooklist()\n                    }\n                }\n\n        在内存中编译生成 html 结构 阶段：\n            会判断是否有 el 选项，有就会走 yes 流程，没有则走 no 流程，no 流程就是当 $monunt 这个方法被调用后，走向 template 阶段，而 yes 流程会直接走向 template 阶段，template 阶段会判断是否拥有 template 选项，如果有则只有 yse 流程，没有则走 no 流程，yes 流程会将 template 选项中的模板进行编译，no 流程会将 el 提供的模板进行编译\n\n        3、beforemount：html结构 渲染前 触发\n\n        4、mounted（常用）：html结构 渲染后 触发\n            应用场景：操作 dom 元素\n\n    （2）运行 阶段：data、props 中的数据变化后 触发\n\n        1、beforeupdate：页面重新渲染 前\n            特性：在 created 中渲染了数据，所以会自动触发一次\n\n        2、updated（常用）：页面重新渲染 后\n\n    （3）销毁 阶段\n        销毁方法：v-if=\"flag\"\n        1、beforedestroy：组件 销毁前 触发\n        2、destroyed：组件 销毁后 触发\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"组件之间的数据共享",frontmatter:{title:"组件之间的数据共享",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/0c319a/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/17.%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E5%85%B1%E4%BA%AB.html",relativePath:"《前端》笔记《框架》/01.vue2/17.组件之间的数据共享.md",key:"v-882d8036",path:"/pages/0c319a/",headersStr:null,content:"请从旧笔记中搬运",normalizedContent:"请从旧笔记中搬运",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"获取 DOM 元素 或 组件",frontmatter:{title:"获取 DOM 元素 或 组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/29b80e/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/18.%E8%8E%B7%E5%8F%96%20DOM%20%E5%85%83%E7%B4%A0%20%E6%88%96%20%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《框架》/01.vue2/18.获取 DOM 元素 或 组件.md",key:"v-6297b88c",path:"/pages/29b80e/",headersStr:null,content:'作用：在不依赖于 jQuery 的情况下，获取 DOM元素 或 组件\n\n特性：$ 开头的都是 Vue 实例的内置成员\n\n一、获取 DOM 元素\n\n方式一：ref（推荐）\n\n    （1）获取单个元素\n        \b使用步骤：\n            1、在要获取的 DOM元素 中绑定 ref="标识符" 属性\n            2、使用 this.$refs.标识符 获取 DOM元素\n\n        <div ref="box">我是box</div>\n        this.$refs.box\n\n    （2）获取 v-for 遍历的多个元素\n        \b使用步骤：\n            1、在要获取的 DOM元素 中绑定 ref="li" 属性\n            2、使用 this.$refs.li 获取 DOM元素\n\n        <li v-for="i in 4" :key="i" ref="li">{{i}}</li>\n        this.$refs.li\n        // 获取遍历中的其中一个元素：this.$refs.li[下标]\n\n方式二：$event 参数\n    使用步骤：\n        1、\b定义 $event 参数\n            <div data-index="11" click="handleClick(1, $event)">点击我试试</div>\n        2、使用 event 获取 DOM元素\n            methods: {\n                handleClick(index, event) {\n                    console.log(event)\n                }\n            }\n\n\n\n功能：点击按钮让 h1元素 变成红色\n使用步骤：\n（1）在要获取的 DOM元素 中绑定 ref="标识符" 属性\n（2）使用 this.$refs.标识符 获取 DOM元素\n\n<template>\n    <div class="app-container">\n\n        // （1）在要获取的 DOM元素 中绑定 ref="标识符" 属性\n        <h1 ref="myh12">APP 根组件</h1>\n\n        <button @click="showThis">打印 this</button>\n    </div>\n</template>\n\n<script>\n    export default {\n        methods: {\n            showThis() {\n\n                // （2）使用 this.$refs.标识符 获取 DOM元素\n                this.$refs.myh12.style.color = \'red\'\n            }\n        }\n    }\n<\/script>\n\n\n二、获取 子组件 原理：相当于 子组件里的 this ，都是指向 子组件 功能：点击父组件的重置按钮，让子组件的 count 数据重置 使用步骤： （1）在 子组件标签 中绑定 ref="标识符" 属性 （2）使用 this.$refs.标识符 获取 子组件\n\n-- 父组件\n    <template>\n        <div class="app-container">\n    \n            // （1）在 子组件标签 中绑定 ref="标识符Ref" 属性\n            <Left ref="comLeftRef"></Left>\n\n            <button @click="onReser">重置</button>\n        </div>\n    </template>\n\n<script>\n    export default {\n        methods: {\n            onReset() {\n\n                // （2）使用 this.$refs.标识符 获取 子组件\n                this.$refs.comLeftRef.resetCount()\n            }\n        }\n    }\n<\/script>\n\n-- 子组件\n    <template>\n        <div class="left-container">\n    \n            <h3>{{ count }}</h3>\n\n        </div>\n    </template>\n\n    <script>\n        export default {\n            data() {\n                return {\n                    count: 8\n                }\n            },\n            methods: {\n                resetCount() {\n                    this.count = 0\n                }\n            }\n        }\n    <\/script>\n\n\n常见问题 （1）功能：页面中有一个隐藏的表单元素，默认是隐藏状态，当点击按钮时，切换显示状态，并自动对焦 报错：TypeError: Cannot read property \'focus\' of undefined 原理：因为组件生命周期在运行阶段，当数据发送变化时，还没有立刻渲染到页面，所以获取的这个 DOM元素不存在 解决方法：放在 this.$nextTick(回调函数) 方法中 this.$nextTick 作用：当页面重新渲染后才会执行\n\n    methods: {\n        showInput() {\n            this.inputVisible = true,\n            this.$nextTick(() => {\n                this.$refs.iptRef.focus()\n            })\n        }\n    }\n    \n-- App.vue\n    \n    <input type="text" class="form-control" v-if="inputVisible" ref="ipt" />\n    <button type="button" v-else @click="showInput">展示 input 输入框</button>\n\n    data() {\n        return {\n            inputVisible: false\n        }\n    },\n    methods: {\n        showInput() {\n            this.inputVisible = true\n            this.$refs.ipt.focus()\n        }\n    }\n\n-- ',normalizedContent:'作用：在不依赖于 jquery 的情况下，获取 dom元素 或 组件\n\n特性：$ 开头的都是 vue 实例的内置成员\n\n一、获取 dom 元素\n\n方式一：ref（推荐）\n\n    （1）获取单个元素\n        \b使用步骤：\n            1、在要获取的 dom元素 中绑定 ref="标识符" 属性\n            2、使用 this.$refs.标识符 获取 dom元素\n\n        <div ref="box">我是box</div>\n        this.$refs.box\n\n    （2）获取 v-for 遍历的多个元素\n        \b使用步骤：\n            1、在要获取的 dom元素 中绑定 ref="li" 属性\n            2、使用 this.$refs.li 获取 dom元素\n\n        <li v-for="i in 4" :key="i" ref="li">{{i}}</li>\n        this.$refs.li\n        // 获取遍历中的其中一个元素：this.$refs.li[下标]\n\n方式二：$event 参数\n    使用步骤：\n        1、\b定义 $event 参数\n            <div data-index="11" click="handleclick(1, $event)">点击我试试</div>\n        2、使用 event 获取 dom元素\n            methods: {\n                handleclick(index, event) {\n                    console.log(event)\n                }\n            }\n\n\n\n功能：点击按钮让 h1元素 变成红色\n使用步骤：\n（1）在要获取的 dom元素 中绑定 ref="标识符" 属性\n（2）使用 this.$refs.标识符 获取 dom元素\n\n<template>\n    <div class="app-container">\n\n        // （1）在要获取的 dom元素 中绑定 ref="标识符" 属性\n        <h1 ref="myh12">app 根组件</h1>\n\n        <button @click="showthis">打印 this</button>\n    </div>\n</template>\n\n<script>\n    export default {\n        methods: {\n            showthis() {\n\n                // （2）使用 this.$refs.标识符 获取 dom元素\n                this.$refs.myh12.style.color = \'red\'\n            }\n        }\n    }\n<\/script>\n\n\n二、获取 子组件 原理：相当于 子组件里的 this ，都是指向 子组件 功能：点击父组件的重置按钮，让子组件的 count 数据重置 使用步骤： （1）在 子组件标签 中绑定 ref="标识符" 属性 （2）使用 this.$refs.标识符 获取 子组件\n\n-- 父组件\n    <template>\n        <div class="app-container">\n    \n            // （1）在 子组件标签 中绑定 ref="标识符ref" 属性\n            <left ref="comleftref"></left>\n\n            <button @click="onreser">重置</button>\n        </div>\n    </template>\n\n<script>\n    export default {\n        methods: {\n            onreset() {\n\n                // （2）使用 this.$refs.标识符 获取 子组件\n                this.$refs.comleftref.resetcount()\n            }\n        }\n    }\n<\/script>\n\n-- 子组件\n    <template>\n        <div class="left-container">\n    \n            <h3>{{ count }}</h3>\n\n        </div>\n    </template>\n\n    <script>\n        export default {\n            data() {\n                return {\n                    count: 8\n                }\n            },\n            methods: {\n                resetcount() {\n                    this.count = 0\n                }\n            }\n        }\n    <\/script>\n\n\n常见问题 （1）功能：页面中有一个隐藏的表单元素，默认是隐藏状态，当点击按钮时，切换显示状态，并自动对焦 报错：typeerror: cannot read property \'focus\' of undefined 原理：因为组件生命周期在运行阶段，当数据发送变化时，还没有立刻渲染到页面，所以获取的这个 dom元素不存在 解决方法：放在 this.$nexttick(回调函数) 方法中 this.$nexttick 作用：当页面重新渲染后才会执行\n\n    methods: {\n        showinput() {\n            this.inputvisible = true,\n            this.$nexttick(() => {\n                this.$refs.iptref.focus()\n            })\n        }\n    }\n    \n-- app.vue\n    \n    <input type="text" class="form-control" v-if="inputvisible" ref="ipt" />\n    <button type="button" v-else @click="showinput">展示 input 输入框</button>\n\n    data() {\n        return {\n            inputvisible: false\n        }\n    },\n    methods: {\n        showinput() {\n            this.inputvisible = true\n            this.$refs.ipt.focus()\n        }\n    }\n\n-- ',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"props 高级用法",frontmatter:{title:"props 高级用法",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c39f39/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/19.props%20%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95.html",relativePath:"《前端》笔记《框架》/01.vue2/19.props 高级用法.md",key:"v-25fd3951",path:"/pages/c39f39/",headersStr:null,content:"科普：为了提高组件的复用性，在封装 vue 组件时需要遵守如下的原则: 1、组件的 DOM 结构、Style 样式要尽量复用 2、组件中要展示的数据，尽量由组件的使用者提供\n\n作用：通过自定义属性，接收父组件传递过来的数据\n\n特性： 1、props 是只读的 错误写法：<button @click =\"init += 1\">+1 解决方法：将 自定义属性 转存到 data 节点中 提示：转存到 data 中的 props 变量名前面最好跟上 pro，用来区分转存的变量 例： data() { return { proInit = this.init } }\n\n命名：在 props 中的名字采用 驼峰命名法 使用时,可以写成 短横线分割命名法 props: ['pubTims']\n\n内置属性： （1）默认值（用户不传自定义属性时，生效） 语法：default 如： props: { init: { // default：定义默认值 default: 6 } }\n\n（2）类型校验（校验用户传递过来的值）\n    语法：type\n    类型：\n      1、String：字符串\n      2、Number：数字\n      3、Boolean：布尔值\n      4、Array：数组\n      5、Object：对象\n      6、Date：日期\n      7、Function：函数\n      8、Symbol：符号\n    如：\n      props: {\n        init: {\n          type: Number\n\n          // 数组形式（指定多个类型）\n          // type: [Stirng, Number]\n        }\n      }\n    \n\n（3）必填项校验（该自定义属性必须填写）\n    语法：required\n    如：\n      props: {\n        init: {\n          required: true\n        }\n      }   \n\n\n自定义验证函数： 作用：对 prop 属性的值进行更加精确的控制 语法：validator(用户传递过来的属性值） 返回值：（true：通过）（false：不通过） 如：属性的值必须匹配 'success', 'warning', 'danger' 中的其中一个 props: { init: { validator(value) { return ['success', 'warning', 'danger'].indexOf(value) !== -1 } } }",normalizedContent:"科普：为了提高组件的复用性，在封装 vue 组件时需要遵守如下的原则: 1、组件的 dom 结构、style 样式要尽量复用 2、组件中要展示的数据，尽量由组件的使用者提供\n\n作用：通过自定义属性，接收父组件传递过来的数据\n\n特性： 1、props 是只读的 错误写法：<button @click =\"init += 1\">+1 解决方法：将 自定义属性 转存到 data 节点中 提示：转存到 data 中的 props 变量名前面最好跟上 pro，用来区分转存的变量 例： data() { return { proinit = this.init } }\n\n命名：在 props 中的名字采用 驼峰命名法 使用时,可以写成 短横线分割命名法 props: ['pubtims']\n\n内置属性： （1）默认值（用户不传自定义属性时，生效） 语法：default 如： props: { init: { // default：定义默认值 default: 6 } }\n\n（2）类型校验（校验用户传递过来的值）\n    语法：type\n    类型：\n      1、string：字符串\n      2、number：数字\n      3、boolean：布尔值\n      4、array：数组\n      5、object：对象\n      6、date：日期\n      7、function：函数\n      8、symbol：符号\n    如：\n      props: {\n        init: {\n          type: number\n\n          // 数组形式（指定多个类型）\n          // type: [stirng, number]\n        }\n      }\n    \n\n（3）必填项校验（该自定义属性必须填写）\n    语法：required\n    如：\n      props: {\n        init: {\n          required: true\n        }\n      }   \n\n\n自定义验证函数： 作用：对 prop 属性的值进行更加精确的控制 语法：validator(用户传递过来的属性值） 返回值：（true：通过）（false：不通过） 如：属性的值必须匹配 'success', 'warning', 'danger' 中的其中一个 props: { init: { validator(value) { return ['success', 'warning', 'danger'].indexof(value) !== -1 } } }",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"vuex（上）",frontmatter:{title:"vuex（上）",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/65ee94/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/20.vuex-%E4%B8%8A.html",relativePath:"《前端》笔记《框架》/01.vue2/20.vuex-上.md",key:"v-35215ac6",path:"/pages/65ee94/",headers:[{level:2,title:"配置（以下三个步骤，vue-cli 会自动配置）",slug:"配置-以下三个步骤-vue-cli-会自动配置",normalizedTitle:"配置（以下三个步骤，vue-cli 会自动配置）",charIndex:165},{level:3,title:"1、导入 vuex 包（-- store.js）",slug:"_1、导入-vuex-包-store-js",normalizedTitle:"1、导入 vuex 包（-- store.js）",charIndex:194},{level:3,title:"2、创建 store 对象（-- 同上）",slug:"_2、创建-store-对象-同上",normalizedTitle:"2、创建 store 对象（-- 同上）",charIndex:269},{level:3,title:"3、将 store 对象挂载到 vue 实例中（-- 同上）",slug:"_3、将-store-对象挂载到-vue-实例中-同上",normalizedTitle:"3、将 store 对象挂载到 vue 实例中（-- 同上）",charIndex:383},{level:2,title:"开启命名空间",slug:"开启命名空间",normalizedTitle:"开启命名空间",charIndex:515},{level:2,title:"配置项",slug:"配置项",normalizedTitle:"配置项",charIndex:609},{level:3,title:"State 配置项",slug:"state-配置项",normalizedTitle:"state 配置项",charIndex:617},{level:4,title:"创建",slug:"创建",normalizedTitle:"创建",charIndex:271},{level:5,title:"1、定义数据",slug:"_1、定义数据",normalizedTitle:"1、定义数据",charIndex:648},{level:4,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:567},{level:5,title:"（一）映射到计算属性中",slug:"一-映射到计算属性中",normalizedTitle:"（一）映射到计算属性中",charIndex:704},{level:6,title:"1、按需导入",slug:"_1、按需导入",normalizedTitle:"1、按需导入",charIndex:719},{level:6,title:"2、映射到计算属性中",slug:"_2、映射到计算属性中",normalizedTitle:"2、映射到计算属性中",charIndex:768},{level:6,title:"3、使用",slug:"_3、使用",normalizedTitle:"3、使用",charIndex:818},{level:5,title:"（二）this.$store.state（推荐：因为少了导入这一步）",slug:"二-this-store-state-推荐-因为少了导入这一步",normalizedTitle:"（二）this.$store.state（推荐：因为少了导入这一步）",charIndex:853},{level:6,title:"1、使用",slug:"_1、使用",normalizedTitle:"1、使用",charIndex:927},{level:3,title:"Mutation 配置项",slug:"mutation-配置项",normalizedTitle:"mutation 配置项",charIndex:981},{level:4,title:"创建",slug:"创建-2",normalizedTitle:"创建",charIndex:271},{level:4,title:"使用",slug:"使用-2",normalizedTitle:"使用",charIndex:567},{level:5,title:"（一）映射到 methods 中",slug:"一-映射到-methods-中",normalizedTitle:"（一）映射到 methods 中",charIndex:1164},{level:6,title:"1、按需导入",slug:"_1、按需导入-2",normalizedTitle:"1、按需导入",charIndex:719},{level:6,title:"2、映射到 methods 中",slug:"_2、映射到-methods-中",normalizedTitle:"2、映射到 methods 中",charIndex:1236},{level:6,title:"3、放到一个方法中",slug:"_3、放到一个方法中",normalizedTitle:"3、放到一个方法中",charIndex:1294},{level:6,title:"4、使用",slug:"_4、使用",normalizedTitle:"4、使用",charIndex:1376},{level:5,title:"（二）this.$store.commit()（推荐：因为少了导入这一步）",slug:"二-this-store-commit-推荐-因为少了导入这一步",normalizedTitle:"（二）this.$store.commit()（推荐：因为少了导入这一步）",charIndex:1423},{level:6,title:"1、使用",slug:"_1、使用-2",normalizedTitle:"1、使用",charIndex:927},{level:3,title:"Actions 配置项",slug:"actions-配置项",normalizedTitle:"actions 配置项",charIndex:1557},{level:4,title:"创建",slug:"创建-3",normalizedTitle:"创建",charIndex:271},{level:4,title:"使用",slug:"使用-3",normalizedTitle:"使用",charIndex:567},{level:5,title:"（一）映射到 methods 中",slug:"一-映射到-methods-中-2",normalizedTitle:"（一）映射到 methods 中",charIndex:1164},{level:6,title:"1、按需导入",slug:"_1、按需导入-3",normalizedTitle:"1、按需导入",charIndex:719},{level:6,title:"2、映射到 methods 中",slug:"_2、映射到-methods-中-2",normalizedTitle:"2、映射到 methods 中",charIndex:1236},{level:6,title:"3、放到方法中",slug:"_3、放到方法中",normalizedTitle:"3、放到方法中",charIndex:1958},{level:6,title:"4、使用",slug:"_4、使用-2",normalizedTitle:"4、使用",charIndex:1376},{level:5,title:"（二）this.$store.dispatch()（推荐：因为少了导入这一步）",slug:"二-this-store-dispatch-推荐-因为少了导入这一步",normalizedTitle:"（二）this.$store.dispatch()（推荐：因为少了导入这一步）",charIndex:2085},{level:6,title:"1、使用",slug:"_1、使用-3",normalizedTitle:"1、使用",charIndex:927},{level:3,title:"Getter 配置项",slug:"getter-配置项",normalizedTitle:"getter 配置项",charIndex:2227},{level:4,title:"创建",slug:"创建-4",normalizedTitle:"创建",charIndex:271},{level:4,title:"使用",slug:"使用-4",normalizedTitle:"使用",charIndex:567},{level:5,title:"（一）映射到计算属性中",slug:"一-映射到计算属性中-2",normalizedTitle:"（一）映射到计算属性中",charIndex:704},{level:6,title:"1、按需导入",slug:"_1、按需导入-4",normalizedTitle:"1、按需导入",charIndex:719},{level:6,title:"2、映射到计算属性中",slug:"_2、映射到计算属性中-2",normalizedTitle:"2、映射到计算属性中",charIndex:768},{level:6,title:"3、使用",slug:"_3、使用-2",normalizedTitle:"3、使用",charIndex:818},{level:5,title:"（二）this.$store.getters（推荐：因为少了导入这一步）",slug:"二-this-store-getters-推荐-因为少了导入这一步",normalizedTitle:"（二）this.$store.getters（推荐：因为少了导入这一步）",charIndex:2526},{level:6,title:"1、使用",slug:"_1、使用-4",normalizedTitle:"1、使用",charIndex:927}],headersStr:"配置（以下三个步骤，vue-cli 会自动配置） 1、导入 vuex 包（-- store.js） 2、创建 store 对象（-- 同上） 3、将 store 对象挂载到 vue 实例中（-- 同上） 开启命名空间 配置项 State 配置项 创建 1、定义数据 使用 （一）映射到计算属性中 1、按需导入 2、映射到计算属性中 3、使用 （二）this.$store.state（推荐：因为少了导入这一步） 1、使用 Mutation 配置项 创建 使用 （一）映射到 methods 中 1、按需导入 2、映射到 methods 中 3、放到一个方法中 4、使用 （二）this.$store.commit()（推荐：因为少了导入这一步） 1、使用 Actions 配置项 创建 使用 （一）映射到 methods 中 1、按需导入 2、映射到 methods 中 3、放到方法中 4、使用 （二）this.$store.dispatch()（推荐：因为少了导入这一步） 1、使用 Getter 配置项 创建 使用 （一）映射到计算属性中 1、按需导入 2、映射到计算属性中 3、使用 （二）this.$store.getters（推荐：因为少了导入这一步） 1、使用",content:"作用： 大范围数据、方法共享\n\n下载： npm install vuex --save\n\n优点： 1、能够在 vuex 中集中管理共享的数据，易于开发和后期维护 2、能够高效地实现组件之间的数据共享，提高开发效率 3、存储在 vuex 中的数据都是响应式的，能够实时保持数据与页面的同步\n\n特性： 页面刷新时，数据会丢失\n\n\n# 配置（以下三个步骤，vue-cli 会自动配置）\n\n\n# 1、导入 vuex 包（-- store.js）\n\nimport Vuex from 'vuex'\nVue.use(Vuex)\n\n\n1\n2\n\n\n\n# 2、创建 store 对象（-- 同上）\n\nconst store = new Vuex.Store({\n  // state：存放全局共享的数据\n  state: { count: 0 }\n})\n\n\n1\n2\n3\n4\n\n\n\n# 3、将 store 对象挂载到 vue 实例中（-- 同上）\n\nnew Vue({\n  // 将创建的共享数据对象，挂载到 Vue 实例中\n  // 所有的组件，就可以直接从 store 中获取全局的数据了\n  store\n})\n\n\n1\n2\n3\n4\n5\n\n\n\n# 开启命名空间\n\n语法： namespaced: true\n\n作用： 防止全局污染，让模块独立\n\n特性： 使用 vuex 仓库中的数据时，除 state 以外的数据都需要带上模块名\n\n\n# 配置项\n\n\n# State 配置项\n\n作用： 存储全局数据\n\n# 创建\n\n# 1、定义数据\n\nconst state = {\n  token: ''\n}\n\n\n1\n2\n3\n\n\n# 使用\n\n# （一）映射到计算属性中\n\n# 1、按需导入\n\nimport { mapState } from 'vuex' \n\n\n1\n\n\n# 2、映射到计算属性中\n\n...mapState(['user/token'])  \n\n\n1\n\n\n# 3、使用\n\n<div>{{token}}</div>\n\n\n1\n\n\n# （二）this.$store.state（推荐：因为少了导入这一步）\n\n语法： this.$store.state.模块名.state 数据\n\n# 1、使用\n\n<div>{{$store.state.user.token}}</div>\n\n\n1\n\n\n\n# Mutation 配置项\n\n作用： 修改 store 中的数据\n\n# 创建\n\nconst mutations = {\n  // 参数一：state 配置项\n  // 参数二：设置 state 数据的值\n  setToken(state, token) {\n    state.toke = token\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 使用\n\n# （一）映射到 methods 中\n\n# 1、按需导入\n\nimport { mapMutations } from 'vuex'\n\n\n1\n\n\n# 2、映射到 methods 中\n\n...mapMutations(['user/login']),\n\n\n1\n\n\n# 3、放到一个方法中\n\nmethods() {\n  login() {\n    this['user/login']()\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n# 4、使用\n\n<button @click=\"login\"></button>\n\n\n1\n\n\n# （二）this.$store.commit()（推荐：因为少了导入这一步）\n\n参数一： 模块名/Mutation 方法名 参数二： 设置 state 数据的值\n\n# 1、使用\n\n<button @click=\"setToken\"></button>\n\n\n1\n\n\n\n# Actions 配置项\n\n作用： 处理异步任务\n\n# 创建\n\nconst actions = {\n  // 参数一：调用 Mutation 配置项中的方法\n  async login(context, data) {\n    const token = await login(data)\n\n    // 参数一：Mutation 配置项中的方法\n    // 参数二：设置 state 数据的值\n    context.commit('setToken', token)\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 使用\n\n# （一）映射到 methods 中\n\n# 1、按需导入\n\nimport { mapActions } from 'vuex'\n\n\n1\n\n\n# 2、映射到 methods 中\n\n...mapActions(['user/login'])\n\n\n1\n\n\n# 3、放到方法中\n\nmethods() {\n  login() {\n    this['user/login']()\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n# 4、使用\n\n<button @click=\"login\"></button>\n\n\n1\n\n\n# （二）this.$store.dispatch()（推荐：因为少了导入这一步）\n\n参数一： '模块名/要触发的 Action' 参数二： 设置 state 数据的值\n\n# 1、使用\n\nthis.$store.dispatch('user/login', data)\n\n\n1\n\n\n\n# Getter 配置项\n\n作用： 监听 State 配置项中数据的变化\n\n# 创建\n\nconst getters = {\n  newToken: state => {\n    return state.token + 'demo'\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n# 使用\n\n# （一）映射到计算属性中\n\n# 1、按需导入\n\nimport { mapGetters } from 'vuex'\n\n\n1\n\n\n# 2、映射到计算属性中\n\n...mapGetters(['user/newToken'])\n\n\n1\n\n\n# 3、使用\n\n<div>{{newToken}}</div>\n\n\n1\n\n\n# （二）this.$store.getters（推荐：因为少了导入这一步）\n\n# 1、使用\n\n语法： this.$store.getters.模块名.getters 数据\n\n<div>{{$store.getters.user.newToken}}</div>\n\n\n1\n\n\n## 在组合式 API 中使用 vuex\n\n  创建（-- store/index.js）\n    import { createStore } from 'vuex'\n\n    export default createStore({  // 创建仓库\n      state: {\n        username: 'zs'\n      },\n      getters: {\n        newname (state) {\n          return state.username + '!!!'\n        }\n      },\n      mutations: {\n        updateName (state) {\n          state.username = 'ls'\n        }\n      },\n      actions: {\n        updateName (ctx) {\n          setTimeout(()=>{\n            ctx.commit('updateName')\n          }, 1000)\n        }\n      },\n      modules: {}\n    })\n\n  使用（-- 组件）\n    // 从 vuex 中按需导入仓库实例\n    import { useStore } from 'vuex'\n\n    setup () {\n\n      // 获取 vuex 仓库实例\n      const store = useStore()\n\n      // 使用 state 中的数据\n      store.state.count\n\n      // 使用 getters 中的数据\n      store.getters.count\n\n      // 使用 mutations 中的方法\n      const mutationsFn = () => {\n        store.commit('updatename')\n\n        // 使用 actions 中的方法\n        store.dispatch('updatename')\n      }\n      return { mutationsFn }\n      <button @cilck='mutationsFn'>mutationsFn</button>  // 绑定方法\n      \n    }\n\n例子：计数器\n\n  -- store.js\n\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n\n    Vue.use(Vuex)\n\n    export default new Vuex.Store({\n      state: {\n        count: 0\n      },\n      mutations: {\n        add(state) {\n          // 不要在 mutations 函数中，执行异步操作，这样会导致 state 中的全局数据不同步（可在 vuex 调试栏中查看）\n          // 解决方法：使用 Action 配置项\n          // setTimeout(() => {\n          //   state.count++\n          // }, 1000)\n          state.count++\n        },\n        addN(state, step) {\n          state.count += step\n        },\n        sub(state) {\n          state.count--\n        },\n        subN(state, step) {\n          state.count -= step\n        }\n      },\n      actions: {\n        addAsync(context) {\n          setTimeout(() => {\n            // 在 actions 中，不能直接修改 state 中的数据；\n            // 必须通过 context.commit() 触发某个 mutation 才行\n            context.commit('add')\n          }, 1000)\n        },\n        addNAsync(context, step) {\n          setTimeout(() => {\n            context.commit('addN', step)\n          }, 1000)\n        },\n        subAsync(context) {\n          setTimeout(() => {\n            context.commit('sub')\n          }, 1000)\n        },\n        subNAsync(context, step) {\n          setTimeout(() => {\n            context.commit('subN', step)\n          }, 1000)\n        }\n      },\n      getters: {\n        showNum(state) {\n          return '当前最新的数量是【' + state.count + '】'\n        }\n      }\n    })\n\n  -- App.vue\n\n    <template>\n      <div>\n        <my-addition></my-addition>\n\n        <p>---------------------------------</p>\n\n        <my-subtraction></my-subtraction>\n      </div>\n    </template>\n\n    <script>\n      import Addition from './components/Addition.vue'\n      import Subtraction from './components/Subtraction.vue'\n\n      export default {\n        data() {\n          return {}\n        },\n        components: {\n          'my-addition': Addition,\n          'my-subtraction': Subtraction\n        }\n      }\n    <\/script>\n  \n  -- Addition.vue\n\n    <template>\n      <div>\n        \x3c!-- <h3>当前最新的count值为：{{$store.state.count}}</h3> --\x3e\n        <h3>{{$store.getters.showNum}}</h3>\n        <button @click=\"btnHandler1\">+1</button>\n        <button @click=\"btnHandler2\">+N</button>\n        <button @click=\"btnHandler3\">+1 Async</button>\n        <button @click=\"btnHandler4\">+N Async</button>\n      </div>\n    </template>\n\n    <script>\n      export default {\n        data() {\n          return {}\n        },\n        methods: {\n          btnHandler1() {\n              // 错误写法（不推荐直接修改全局数据）：this.$store.state.count++\n              // 正确写法（使用 Mutation 配置项）\n              this.$store.commit('add')\n          },\n          btnHandler2() {\n            // commit 的作用，就是调用 某个 mutation 函数\n            this.$store.commit('addN', 3)\n          },\n          // 异步地让 count 自增 +1\n          btnHandler3() {\n            // 这里的 dispatch 函数，专门用来触发 action\n            this.$store.dispatch('addAsync')\n          },\n          btnHandler4() {\n            this.$store.dispatch('addNAsync', 5)\n          }\n        }\n      }\n    <\/script>\n\n  -- Subtracition.vue\n\n    <template>\n      <div>\n        \x3c!-- <h3>当前最新的count值为：{{count}}</h3> --\x3e\n        <h3>{{showNum}}</h3>\n        <button @click=\"btnHandler1\">-1</button>\n        <button @click=\"subN(3)\">-N</button>\n        <button @click=\"subAsync\">-1 Async</button>\n        <button @click=\"subNAsync(5)\">-N Async</button>\n      </div>\n    </template>\n\n  <script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\n\n    export default {\n      data() {\n        return {}\n      },\n      computed: {\n        ...mapState(['count']),\n        ...mapGetters(['showNum'])\n      },\n      methods: {\n        ...mapMutations(['sub', 'subN']),\n        ...mapActions(['subAsync', 'subNAsync']),\n        btnHandler1() {\n          this.sub()\n        }\n      }\n    }\n  <\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n",normalizedContent:"作用： 大范围数据、方法共享\n\n下载： npm install vuex --save\n\n优点： 1、能够在 vuex 中集中管理共享的数据，易于开发和后期维护 2、能够高效地实现组件之间的数据共享，提高开发效率 3、存储在 vuex 中的数据都是响应式的，能够实时保持数据与页面的同步\n\n特性： 页面刷新时，数据会丢失\n\n\n# 配置（以下三个步骤，vue-cli 会自动配置）\n\n\n# 1、导入 vuex 包（-- store.js）\n\nimport vuex from 'vuex'\nvue.use(vuex)\n\n\n1\n2\n\n\n\n# 2、创建 store 对象（-- 同上）\n\nconst store = new vuex.store({\n  // state：存放全局共享的数据\n  state: { count: 0 }\n})\n\n\n1\n2\n3\n4\n\n\n\n# 3、将 store 对象挂载到 vue 实例中（-- 同上）\n\nnew vue({\n  // 将创建的共享数据对象，挂载到 vue 实例中\n  // 所有的组件，就可以直接从 store 中获取全局的数据了\n  store\n})\n\n\n1\n2\n3\n4\n5\n\n\n\n# 开启命名空间\n\n语法： namespaced: true\n\n作用： 防止全局污染，让模块独立\n\n特性： 使用 vuex 仓库中的数据时，除 state 以外的数据都需要带上模块名\n\n\n# 配置项\n\n\n# state 配置项\n\n作用： 存储全局数据\n\n# 创建\n\n# 1、定义数据\n\nconst state = {\n  token: ''\n}\n\n\n1\n2\n3\n\n\n# 使用\n\n# （一）映射到计算属性中\n\n# 1、按需导入\n\nimport { mapstate } from 'vuex' \n\n\n1\n\n\n# 2、映射到计算属性中\n\n...mapstate(['user/token'])  \n\n\n1\n\n\n# 3、使用\n\n<div>{{token}}</div>\n\n\n1\n\n\n# （二）this.$store.state（推荐：因为少了导入这一步）\n\n语法： this.$store.state.模块名.state 数据\n\n# 1、使用\n\n<div>{{$store.state.user.token}}</div>\n\n\n1\n\n\n\n# mutation 配置项\n\n作用： 修改 store 中的数据\n\n# 创建\n\nconst mutations = {\n  // 参数一：state 配置项\n  // 参数二：设置 state 数据的值\n  settoken(state, token) {\n    state.toke = token\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 使用\n\n# （一）映射到 methods 中\n\n# 1、按需导入\n\nimport { mapmutations } from 'vuex'\n\n\n1\n\n\n# 2、映射到 methods 中\n\n...mapmutations(['user/login']),\n\n\n1\n\n\n# 3、放到一个方法中\n\nmethods() {\n  login() {\n    this['user/login']()\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n# 4、使用\n\n<button @click=\"login\"></button>\n\n\n1\n\n\n# （二）this.$store.commit()（推荐：因为少了导入这一步）\n\n参数一： 模块名/mutation 方法名 参数二： 设置 state 数据的值\n\n# 1、使用\n\n<button @click=\"settoken\"></button>\n\n\n1\n\n\n\n# actions 配置项\n\n作用： 处理异步任务\n\n# 创建\n\nconst actions = {\n  // 参数一：调用 mutation 配置项中的方法\n  async login(context, data) {\n    const token = await login(data)\n\n    // 参数一：mutation 配置项中的方法\n    // 参数二：设置 state 数据的值\n    context.commit('settoken', token)\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 使用\n\n# （一）映射到 methods 中\n\n# 1、按需导入\n\nimport { mapactions } from 'vuex'\n\n\n1\n\n\n# 2、映射到 methods 中\n\n...mapactions(['user/login'])\n\n\n1\n\n\n# 3、放到方法中\n\nmethods() {\n  login() {\n    this['user/login']()\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n# 4、使用\n\n<button @click=\"login\"></button>\n\n\n1\n\n\n# （二）this.$store.dispatch()（推荐：因为少了导入这一步）\n\n参数一： '模块名/要触发的 action' 参数二： 设置 state 数据的值\n\n# 1、使用\n\nthis.$store.dispatch('user/login', data)\n\n\n1\n\n\n\n# getter 配置项\n\n作用： 监听 state 配置项中数据的变化\n\n# 创建\n\nconst getters = {\n  newtoken: state => {\n    return state.token + 'demo'\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n# 使用\n\n# （一）映射到计算属性中\n\n# 1、按需导入\n\nimport { mapgetters } from 'vuex'\n\n\n1\n\n\n# 2、映射到计算属性中\n\n...mapgetters(['user/newtoken'])\n\n\n1\n\n\n# 3、使用\n\n<div>{{newtoken}}</div>\n\n\n1\n\n\n# （二）this.$store.getters（推荐：因为少了导入这一步）\n\n# 1、使用\n\n语法： this.$store.getters.模块名.getters 数据\n\n<div>{{$store.getters.user.newtoken}}</div>\n\n\n1\n\n\n## 在组合式 api 中使用 vuex\n\n  创建（-- store/index.js）\n    import { createstore } from 'vuex'\n\n    export default createstore({  // 创建仓库\n      state: {\n        username: 'zs'\n      },\n      getters: {\n        newname (state) {\n          return state.username + '!!!'\n        }\n      },\n      mutations: {\n        updatename (state) {\n          state.username = 'ls'\n        }\n      },\n      actions: {\n        updatename (ctx) {\n          settimeout(()=>{\n            ctx.commit('updatename')\n          }, 1000)\n        }\n      },\n      modules: {}\n    })\n\n  使用（-- 组件）\n    // 从 vuex 中按需导入仓库实例\n    import { usestore } from 'vuex'\n\n    setup () {\n\n      // 获取 vuex 仓库实例\n      const store = usestore()\n\n      // 使用 state 中的数据\n      store.state.count\n\n      // 使用 getters 中的数据\n      store.getters.count\n\n      // 使用 mutations 中的方法\n      const mutationsfn = () => {\n        store.commit('updatename')\n\n        // 使用 actions 中的方法\n        store.dispatch('updatename')\n      }\n      return { mutationsfn }\n      <button @cilck='mutationsfn'>mutationsfn</button>  // 绑定方法\n      \n    }\n\n例子：计数器\n\n  -- store.js\n\n    import vue from 'vue'\n    import vuex from 'vuex'\n\n    vue.use(vuex)\n\n    export default new vuex.store({\n      state: {\n        count: 0\n      },\n      mutations: {\n        add(state) {\n          // 不要在 mutations 函数中，执行异步操作，这样会导致 state 中的全局数据不同步（可在 vuex 调试栏中查看）\n          // 解决方法：使用 action 配置项\n          // settimeout(() => {\n          //   state.count++\n          // }, 1000)\n          state.count++\n        },\n        addn(state, step) {\n          state.count += step\n        },\n        sub(state) {\n          state.count--\n        },\n        subn(state, step) {\n          state.count -= step\n        }\n      },\n      actions: {\n        addasync(context) {\n          settimeout(() => {\n            // 在 actions 中，不能直接修改 state 中的数据；\n            // 必须通过 context.commit() 触发某个 mutation 才行\n            context.commit('add')\n          }, 1000)\n        },\n        addnasync(context, step) {\n          settimeout(() => {\n            context.commit('addn', step)\n          }, 1000)\n        },\n        subasync(context) {\n          settimeout(() => {\n            context.commit('sub')\n          }, 1000)\n        },\n        subnasync(context, step) {\n          settimeout(() => {\n            context.commit('subn', step)\n          }, 1000)\n        }\n      },\n      getters: {\n        shownum(state) {\n          return '当前最新的数量是【' + state.count + '】'\n        }\n      }\n    })\n\n  -- app.vue\n\n    <template>\n      <div>\n        <my-addition></my-addition>\n\n        <p>---------------------------------</p>\n\n        <my-subtraction></my-subtraction>\n      </div>\n    </template>\n\n    <script>\n      import addition from './components/addition.vue'\n      import subtraction from './components/subtraction.vue'\n\n      export default {\n        data() {\n          return {}\n        },\n        components: {\n          'my-addition': addition,\n          'my-subtraction': subtraction\n        }\n      }\n    <\/script>\n  \n  -- addition.vue\n\n    <template>\n      <div>\n        \x3c!-- <h3>当前最新的count值为：{{$store.state.count}}</h3> --\x3e\n        <h3>{{$store.getters.shownum}}</h3>\n        <button @click=\"btnhandler1\">+1</button>\n        <button @click=\"btnhandler2\">+n</button>\n        <button @click=\"btnhandler3\">+1 async</button>\n        <button @click=\"btnhandler4\">+n async</button>\n      </div>\n    </template>\n\n    <script>\n      export default {\n        data() {\n          return {}\n        },\n        methods: {\n          btnhandler1() {\n              // 错误写法（不推荐直接修改全局数据）：this.$store.state.count++\n              // 正确写法（使用 mutation 配置项）\n              this.$store.commit('add')\n          },\n          btnhandler2() {\n            // commit 的作用，就是调用 某个 mutation 函数\n            this.$store.commit('addn', 3)\n          },\n          // 异步地让 count 自增 +1\n          btnhandler3() {\n            // 这里的 dispatch 函数，专门用来触发 action\n            this.$store.dispatch('addasync')\n          },\n          btnhandler4() {\n            this.$store.dispatch('addnasync', 5)\n          }\n        }\n      }\n    <\/script>\n\n  -- subtracition.vue\n\n    <template>\n      <div>\n        \x3c!-- <h3>当前最新的count值为：{{count}}</h3> --\x3e\n        <h3>{{shownum}}</h3>\n        <button @click=\"btnhandler1\">-1</button>\n        <button @click=\"subn(3)\">-n</button>\n        <button @click=\"subasync\">-1 async</button>\n        <button @click=\"subnasync(5)\">-n async</button>\n      </div>\n    </template>\n\n  <script>\n    import { mapstate, mapmutations, mapactions, mapgetters } from 'vuex'\n\n    export default {\n      data() {\n        return {}\n      },\n      computed: {\n        ...mapstate(['count']),\n        ...mapgetters(['shownum'])\n      },\n      methods: {\n        ...mapmutations(['sub', 'subn']),\n        ...mapactions(['subasync', 'subnasync']),\n        btnhandler1() {\n          this.sub()\n        }\n      }\n    }\n  <\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"vuex（下）",frontmatter:{title:"vuex（下）",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/27c1f4/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/21.vuex-%E4%B8%8B.html",relativePath:"《前端》笔记《框架》/01.vue2/21.vuex-下.md",key:"v-41762806",path:"/pages/27c1f4/",headersStr:null,content:"作用：让 vuex 中管理的状态数据存储在本地，解决页面刷新数据丢失的问题\n\n说明：因为数据是存储在内存中的，所以刷新后数据就重置了\n\n使用方法：\n  测试：\n    1、页面刷新后数据没有丢失，则持久化成功\n    2、查看存储的数据：控制台 → Application → Local Storage → http://localhost:8080 → 本地仓库名字\n\n  安装\n    npm i vuex-persistedstate@4.1.0\n\n  在 store/modules 下创建 user.js 文件\n      // 用户模块\n      export default {\n        namespaced: true,\n        state () {\n          return {\n            // 用户信息\n            profile: {  // 存储\n              id: '',\n              avatar: '',  // 头像\n              nickname: '',  // 昵称\n              account: '',  // 账号名\n              mobile: '',  // 手机号\n              token: ''\n            },\n          }\n        },\n        mutations: {  // 修用户信息\n          // 修改用户信息，payload 就是用户信息对象\n          setUser (state, payload) {\n            state.profile = payload\n          },\n          // 修改回跳地址\n          setRedirectUrl (state, url) {\n            state.redirectUrl = url\n          }\n        }\n      }\n\n    引入模块（-- store/index.js）\n      import createPersistedState from 'vuex-persistedstate'  // （1）引入 vuex-persistedstate\n      import user from './modules/user'\n\n      export default createStore({\n        modules: {\n          user\n        },\n        plugins: [\n          createPersistedState({\n            // （2）配置插件\n            key: 'store', // 本地仓库名字\n            paths: ['user'] // 指定需要持久化的模块\n          })\n        ]\n      })\n\n    （-- App.vue）\n    <template>\n      <div class=\"container\">\n        App {{ $store.state.user.profile.account }}\n        <button @click=\"$store.commit('user/setUser', {account: 'zhousg'})\">设置用户信息</button>\n      </div>\n    </template>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n",normalizedContent:"作用：让 vuex 中管理的状态数据存储在本地，解决页面刷新数据丢失的问题\n\n说明：因为数据是存储在内存中的，所以刷新后数据就重置了\n\n使用方法：\n  测试：\n    1、页面刷新后数据没有丢失，则持久化成功\n    2、查看存储的数据：控制台 → application → local storage → http://localhost:8080 → 本地仓库名字\n\n  安装\n    npm i vuex-persistedstate@4.1.0\n\n  在 store/modules 下创建 user.js 文件\n      // 用户模块\n      export default {\n        namespaced: true,\n        state () {\n          return {\n            // 用户信息\n            profile: {  // 存储\n              id: '',\n              avatar: '',  // 头像\n              nickname: '',  // 昵称\n              account: '',  // 账号名\n              mobile: '',  // 手机号\n              token: ''\n            },\n          }\n        },\n        mutations: {  // 修用户信息\n          // 修改用户信息，payload 就是用户信息对象\n          setuser (state, payload) {\n            state.profile = payload\n          },\n          // 修改回跳地址\n          setredirecturl (state, url) {\n            state.redirecturl = url\n          }\n        }\n      }\n\n    引入模块（-- store/index.js）\n      import createpersistedstate from 'vuex-persistedstate'  // （1）引入 vuex-persistedstate\n      import user from './modules/user'\n\n      export default createstore({\n        modules: {\n          user\n        },\n        plugins: [\n          createpersistedstate({\n            // （2）配置插件\n            key: 'store', // 本地仓库名字\n            paths: ['user'] // 指定需要持久化的模块\n          })\n        ]\n      })\n\n    （-- app.vue）\n    <template>\n      <div class=\"container\">\n        app {{ $store.state.user.profile.account }}\n        <button @click=\"$store.commit('user/setuser', {account: 'zhousg'})\">设置用户信息</button>\n      </div>\n    </template>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"动态组件",frontmatter:{title:"动态组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/47f08e/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/22.%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《框架》/01.vue2/22.动态组件.md",key:"v-b20b9dde",path:"/pages/47f08e/",headersStr:null,content:"语法： <component :is=\"渲染指定组件\"> 组件\n\n作用： 动态切换 组件 的 显示 和 隐藏\n\n特性： 可以把 组件 理解为组件的占位符\n\n应用场景： tab 栏切换\n\n存在的问题： 点击按钮让 Left 组件中的 值 自增，然后在切换其它组件，在切换回来，Left 组件的 值又恢成自增前的值了，应该是自增后的值才对\n\n解： 切换组件时，之前的组件已经被销毁了，再切换回原来的组件时，已经不是用来的组件了，是一个新的组件\n\n解决方法： keep-alive 作用： 防止组件在切换其它组件时销毁 使用方法： 将组件用 keep-alive 包起来\n\nkeep-alive 对应的生命周期函数： 组件 缓存（隐藏） 时触发：deactivated 提示：组件创建完毕后，会自动执行一次 组件 激活（显示） 时触发：activated\n\nkeep-alive 中的 include / exclude 属性： 注意： 这两个属性只能同时存在一个\n\n（1）include 属性 作用：匹配的组件 会 被缓存 特性：默认情况下 keep-alive 会将包裹的组件全部进行缓存，加上 include 属性后 keep-alive 只会缓存 include 匹配的组件，没有匹配的组件切换时，会被销毁\n\n（2）exclude 属性 作用：匹配的组件 不会 被缓存\n\n<template>\n    <div class=\"app-container\">\n\n        <button @click=\"comName = 'Left'>展示 Left </button>\n        <button @click=\"comName = 'Right'>展示 Right </button>\n\n        <keep-alive include=\"Left, Right\">\n            <component :is=\"comName\"></component>\n        </keep-alive>\n        \n    </div>\n</template>\n\n<script>\n    data() {\n        return {\n            comName: 'Left'\n        }\n    },\n    activated() {\n        console.log('组件被激活了')\n    },\n    deactivated() {\n        console.log('组件被缓存了')\n    }\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n",normalizedContent:"语法： <component :is=\"渲染指定组件\"> 组件\n\n作用： 动态切换 组件 的 显示 和 隐藏\n\n特性： 可以把 组件 理解为组件的占位符\n\n应用场景： tab 栏切换\n\n存在的问题： 点击按钮让 left 组件中的 值 自增，然后在切换其它组件，在切换回来，left 组件的 值又恢成自增前的值了，应该是自增后的值才对\n\n解： 切换组件时，之前的组件已经被销毁了，再切换回原来的组件时，已经不是用来的组件了，是一个新的组件\n\n解决方法： keep-alive 作用： 防止组件在切换其它组件时销毁 使用方法： 将组件用 keep-alive 包起来\n\nkeep-alive 对应的生命周期函数： 组件 缓存（隐藏） 时触发：deactivated 提示：组件创建完毕后，会自动执行一次 组件 激活（显示） 时触发：activated\n\nkeep-alive 中的 include / exclude 属性： 注意： 这两个属性只能同时存在一个\n\n（1）include 属性 作用：匹配的组件 会 被缓存 特性：默认情况下 keep-alive 会将包裹的组件全部进行缓存，加上 include 属性后 keep-alive 只会缓存 include 匹配的组件，没有匹配的组件切换时，会被销毁\n\n（2）exclude 属性 作用：匹配的组件 不会 被缓存\n\n<template>\n    <div class=\"app-container\">\n\n        <button @click=\"comname = 'left'>展示 left </button>\n        <button @click=\"comname = 'right'>展示 right </button>\n\n        <keep-alive include=\"left, right\">\n            <component :is=\"comname\"></component>\n        </keep-alive>\n        \n    </div>\n</template>\n\n<script>\n    data() {\n        return {\n            comname: 'left'\n        }\n    },\n    activated() {\n        console.log('组件被激活了')\n    },\n    deactivated() {\n        console.log('组件被缓存了')\n    }\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"组件的名称",frontmatter:{title:"组件的名称",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6bcf69/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/23.%E7%BB%84%E4%BB%B6%E7%9A%84%E5%90%8D%E7%A7%B0.html",relativePath:"《前端》笔记《框架》/01.vue2/23.组件的名称.md",key:"v-6748c5ba",path:"/pages/6bcf69/",headersStr:null,content:"特性： 1、在声明组件的时候，组件没有 name 节点，则组件的名称默认使用 注册 的名称，推荐为每个组件取一个名称 2、组件名首字母要大写\n\n-- App 组件 components: { Right }\n\n-- Right 组件 export default { name: 'MyRight' }",normalizedContent:"特性： 1、在声明组件的时候，组件没有 name 节点，则组件的名称默认使用 注册 的名称，推荐为每个组件取一个名称 2、组件名首字母要大写\n\n-- app 组件 components: { right }\n\n-- right 组件 export default { name: 'myright' }",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"插槽",frontmatter:{title:"插槽",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/effd84/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/25.%E6%8F%92%E6%A7%BD.html",relativePath:"《前端》笔记《框架》/01.vue2/25.插槽.md",key:"v-05972e7f",path:"/pages/effd84/",headersStr:null,content:'作用：在封装组件时，将不确定的地方，交由用户自定义\n\n使用步骤：\n    （1）定义 插槽（-- 子组件）\n        <slot name="neirong">我是默认内容</slot>\n\n    （2）在组件中 填充内容（-- 父组件）\n        方法一（推荐）：\n            <Left>\n                <template #neirong>\n                    <p>这是在 Left 组件的内容区域，定义的 p 标签</p>\n                </template>\n            </Left>\n\n        方法二：\n            <Left>\n                <template v-slot:neirong>\n                    <p>这是在 Left 组件的内容区域，定义的 p 标签</p>\n                </template>\n            </Left>\n\n        方法三：\n            <Left>\n                <p slot="neirong">这是在 Left 组件的内容区域，定义的 p 标签</p>\n            </Left>\n\n\n特性：\n    1、Vue 官方规定每个插槽都要有一个自己的名称，如果省略，默认名称为 default\n    2、v-slot 只能放在 <template> 标签 中，并且 <template>标签 不会被渲染到页面中，它只是起到一个包含的作用\n    3、v-slot: 可以简写为 #\n    4、写在插槽里的内容为默认内容，当用户不指定内容时，采用默认内容。官方把这个方法叫做 后备内容\n\n具名插槽（推荐）：带有名字的插槽\n\n例一：用户自定义内容    \n    -- App 组件\n        <template>\n            <div class="app-container">\n\n                // （2）在组件中 填充内容\n                <Left>\n                    <template #neirong>\n                        <p>这是在 Left 组件的内容区域，定义的 p 标签</p>\n                    </template>\n                </Left>\n\n            </div>\n        </template>\n\n    -- Left 组件\n        <template>\n            <div class="left-container">\n                \n                // （1）定义 插槽\n                <slot name="neirong">我是默认内容</slot>\n                \n            </div>\n        </template>\n\n例二：让用户自定义 文章标题、文章内容、文章作者\n\n    -- App 组件\n        <template>\n            <div class="app-container">\n\n                <Article>\n\n                    <template #title>\n                        <h3>一首诗</h3>\n                    </template>\n\n                    <template #content>\n                        <div>\n                            <p>啊，大海，全是水</p>\n                            <p>啊，蜈蚣，全是腿</p>\n                            <p>啊，辣椒，净辣嘴</p>\n                        </div>\n                    </template>\n\n                    <template #author>\n                        <div>作者：彬果锅</div>\n                    </template>\n\n                </Article>\n                \n            </div>\n        </template>\n\n    -- Article 组件\n        <template>\n            <div class="article-container">\n\n                // 文章标题\n                <div class="header-box">\n                    <slot name="title"></slot>\n                </div>\n\n                // 文章内容\n                <div class="content-box">\n                    <slot name="content"></slot>\n                </div>\n\n                // 文章作者\n                <div class="author-box">\n                    <slot name="author"></slot>\n                </div>\n            </div>\n        </template>\n\n作用域插槽\n    概念：带自定义属性的插槽，称为 作用域插槽\n    作用：为用户提供数据\n    使用步骤：\n        （1）在插槽中定义 自定义属性\n        （2）获取插槽中的 自定义属性\n    特性：获取插槽中的自定义，是一个对象\n\n-- App 组件\n    <template>\n        <div class="app-container">\n\n            <Article>\n\n                // （2）获取插槽中的 自定义属性\n\n                // <template #author="scope">\n                // <div>{{ scope }}</div>  // { "msg": "hello vue", "user": { "name": "zs", "age": 20 } }\n\n                // 解构插槽\n                <template #author="{ msg, user }">\n                    <div>{{ msg }}</div>  // "hello vue"\n                    <div>{{ user.name }} </div>  // "zs"\n                </template>\n\n            </Article>\n            \n        </div>\n    </template>\n\n-- Article 组件\n    <template>\n        <div class="article-container">\n            <div class="author-box">\n\n                // （1）在插槽中定义 自定义属性\n                <slot name="author" msg="userinfo" :user="userinfo"></slot>\n\n            </div>\n        </div>\n    </template>\n\n    data() {\n        return {\n            userinfo: {\n                name: \'zs\',\n            }\n        }\n    }\n\n    例子：将渲染的结构，交由用户自定义\n        -- App.vue\n        \n            <div>\n                <my-test>\n                    <template #default="{ msg, info }">\n                        <p>{{ msg }}</p>\n                        <p>{{ info.address }}</p>\n                    </template>\n                </my-test>\n\n                <my-table>\n                    <template #default="{user}">\n                        <td>{{ user.id }}</td>\n                        <td>{{ user.name }}</td>\n                        <td>\n                            <input type="checkbox" :checked="user.state" />\n                        </td>\n                    </template>\n                </my-table>\n            </div>\n\n            import MyTest from \'./MyTest.vue\'\n            import MyTable from \'./MyTable.vue\'\n\n            name: \'MyApp\',\n            components: {\n                MyTest\n            }\n\n        -- MyTable.vue\n\n            <table>\n                <tbody>\n                    <tr v-for="item in list" :key="item.id">\n\n                        // <td>{{ item.id }}</td>\n                        // <td>{{ item.name }}</td>\n                        // <td>{{ item.state }}</td>\n\n                        <slot :user="item"></slot>\n\n                    </tr>\n                </tbody>\n            </table>\n\n            name: \'MyTable\',\n            data() {\n                return {\n                    list: [\n                        { id: 1, name: \'张三\', state: true },\n                        { id: 2, name: \'李四\', state: false },\n                        { id: 3, name: \'赵六\', state: false },\n                    ]\n                }\n            }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n',normalizedContent:'作用：在封装组件时，将不确定的地方，交由用户自定义\n\n使用步骤：\n    （1）定义 插槽（-- 子组件）\n        <slot name="neirong">我是默认内容</slot>\n\n    （2）在组件中 填充内容（-- 父组件）\n        方法一（推荐）：\n            <left>\n                <template #neirong>\n                    <p>这是在 left 组件的内容区域，定义的 p 标签</p>\n                </template>\n            </left>\n\n        方法二：\n            <left>\n                <template v-slot:neirong>\n                    <p>这是在 left 组件的内容区域，定义的 p 标签</p>\n                </template>\n            </left>\n\n        方法三：\n            <left>\n                <p slot="neirong">这是在 left 组件的内容区域，定义的 p 标签</p>\n            </left>\n\n\n特性：\n    1、vue 官方规定每个插槽都要有一个自己的名称，如果省略，默认名称为 default\n    2、v-slot 只能放在 <template> 标签 中，并且 <template>标签 不会被渲染到页面中，它只是起到一个包含的作用\n    3、v-slot: 可以简写为 #\n    4、写在插槽里的内容为默认内容，当用户不指定内容时，采用默认内容。官方把这个方法叫做 后备内容\n\n具名插槽（推荐）：带有名字的插槽\n\n例一：用户自定义内容    \n    -- app 组件\n        <template>\n            <div class="app-container">\n\n                // （2）在组件中 填充内容\n                <left>\n                    <template #neirong>\n                        <p>这是在 left 组件的内容区域，定义的 p 标签</p>\n                    </template>\n                </left>\n\n            </div>\n        </template>\n\n    -- left 组件\n        <template>\n            <div class="left-container">\n                \n                // （1）定义 插槽\n                <slot name="neirong">我是默认内容</slot>\n                \n            </div>\n        </template>\n\n例二：让用户自定义 文章标题、文章内容、文章作者\n\n    -- app 组件\n        <template>\n            <div class="app-container">\n\n                <article>\n\n                    <template #title>\n                        <h3>一首诗</h3>\n                    </template>\n\n                    <template #content>\n                        <div>\n                            <p>啊，大海，全是水</p>\n                            <p>啊，蜈蚣，全是腿</p>\n                            <p>啊，辣椒，净辣嘴</p>\n                        </div>\n                    </template>\n\n                    <template #author>\n                        <div>作者：彬果锅</div>\n                    </template>\n\n                </article>\n                \n            </div>\n        </template>\n\n    -- article 组件\n        <template>\n            <div class="article-container">\n\n                // 文章标题\n                <div class="header-box">\n                    <slot name="title"></slot>\n                </div>\n\n                // 文章内容\n                <div class="content-box">\n                    <slot name="content"></slot>\n                </div>\n\n                // 文章作者\n                <div class="author-box">\n                    <slot name="author"></slot>\n                </div>\n            </div>\n        </template>\n\n作用域插槽\n    概念：带自定义属性的插槽，称为 作用域插槽\n    作用：为用户提供数据\n    使用步骤：\n        （1）在插槽中定义 自定义属性\n        （2）获取插槽中的 自定义属性\n    特性：获取插槽中的自定义，是一个对象\n\n-- app 组件\n    <template>\n        <div class="app-container">\n\n            <article>\n\n                // （2）获取插槽中的 自定义属性\n\n                // <template #author="scope">\n                // <div>{{ scope }}</div>  // { "msg": "hello vue", "user": { "name": "zs", "age": 20 } }\n\n                // 解构插槽\n                <template #author="{ msg, user }">\n                    <div>{{ msg }}</div>  // "hello vue"\n                    <div>{{ user.name }} </div>  // "zs"\n                </template>\n\n            </article>\n            \n        </div>\n    </template>\n\n-- article 组件\n    <template>\n        <div class="article-container">\n            <div class="author-box">\n\n                // （1）在插槽中定义 自定义属性\n                <slot name="author" msg="userinfo" :user="userinfo"></slot>\n\n            </div>\n        </div>\n    </template>\n\n    data() {\n        return {\n            userinfo: {\n                name: \'zs\',\n            }\n        }\n    }\n\n    例子：将渲染的结构，交由用户自定义\n        -- app.vue\n        \n            <div>\n                <my-test>\n                    <template #default="{ msg, info }">\n                        <p>{{ msg }}</p>\n                        <p>{{ info.address }}</p>\n                    </template>\n                </my-test>\n\n                <my-table>\n                    <template #default="{user}">\n                        <td>{{ user.id }}</td>\n                        <td>{{ user.name }}</td>\n                        <td>\n                            <input type="checkbox" :checked="user.state" />\n                        </td>\n                    </template>\n                </my-table>\n            </div>\n\n            import mytest from \'./mytest.vue\'\n            import mytable from \'./mytable.vue\'\n\n            name: \'myapp\',\n            components: {\n                mytest\n            }\n\n        -- mytable.vue\n\n            <table>\n                <tbody>\n                    <tr v-for="item in list" :key="item.id">\n\n                        // <td>{{ item.id }}</td>\n                        // <td>{{ item.name }}</td>\n                        // <td>{{ item.state }}</td>\n\n                        <slot :user="item"></slot>\n\n                    </tr>\n                </tbody>\n            </table>\n\n            name: \'mytable\',\n            data() {\n                return {\n                    list: [\n                        { id: 1, name: \'张三\', state: true },\n                        { id: 2, name: \'李四\', state: false },\n                        { id: 3, name: \'赵六\', state: false },\n                    ]\n                }\n            }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"封装组件",frontmatter:{title:"封装组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c09a2f/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/24.%E5%B0%81%E8%A3%85%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《框架》/01.vue2/24.封装组件.md",key:"v-14b205db",path:"/pages/c09a2f/",headersStr:null,content:'封装要求：\n  1、允许用户自定义 title 标题\n  2、允许用户自定义 bgcolor 背景色\n  3、允许用户自定义 color 文本颜色\n  4、MyHeader 组件需要在页面顶部进行 fixed 固定定位，且 z-index 等于 999\n\n步骤：\n  1、新建一个 AppDemon.vue（根组件） 用于测试该组件\n  2、将 main.js（入口文件） 中的根组件改为 AppDemon\n  3、编写的代码\n\n    -- MyHeader.vue（根组件）\n\n      <template>\n        <div class="header-container" :style="{ backgroundColor: bgcolor, color: color }">\n          {{title || \'Header 组件\'}}\n        </div>\n      </template>\n\n      <script>\n      export default {\n        name: \'MyHeader\',\n        props: [\'title\', \'bgcolor\', \'color\']\n      }\n      <\/script>\n\n      <style lang="less" scoped>\n      .header-container {\n        height: 45px;\n        background-color: pink;\n        text-align: center;\n        line-height: 45px;\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        z-index: 999;\n      }\n      </style>\n\n    -- App.vue\n      \n      <template>\n        <div class="app-container">\n          <h1>App根组件</h1>\n\n          <hr>\n\n          <my-header title="黑马程序员" bgcolor="#000" color="#fff"></my-header>\n        </div>\n      </template>\n\n      <script>\n      import MyHeader from \'./06.MyHeader/MyHeader.vue\'\n\n      export default {\n        name: \'MyApp\',\n        components: {\n          MyHeader,\n        },\n      }\n      <\/script>\n\n      <style lang="less" scoped>\n      .app-container {\n        margin-top: 45px;\n      }\n      </style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n',normalizedContent:'封装要求：\n  1、允许用户自定义 title 标题\n  2、允许用户自定义 bgcolor 背景色\n  3、允许用户自定义 color 文本颜色\n  4、myheader 组件需要在页面顶部进行 fixed 固定定位，且 z-index 等于 999\n\n步骤：\n  1、新建一个 appdemon.vue（根组件） 用于测试该组件\n  2、将 main.js（入口文件） 中的根组件改为 appdemon\n  3、编写的代码\n\n    -- myheader.vue（根组件）\n\n      <template>\n        <div class="header-container" :style="{ backgroundcolor: bgcolor, color: color }">\n          {{title || \'header 组件\'}}\n        </div>\n      </template>\n\n      <script>\n      export default {\n        name: \'myheader\',\n        props: [\'title\', \'bgcolor\', \'color\']\n      }\n      <\/script>\n\n      <style lang="less" scoped>\n      .header-container {\n        height: 45px;\n        background-color: pink;\n        text-align: center;\n        line-height: 45px;\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        z-index: 999;\n      }\n      </style>\n\n    -- app.vue\n      \n      <template>\n        <div class="app-container">\n          <h1>app根组件</h1>\n\n          <hr>\n\n          <my-header title="黑马程序员" bgcolor="#000" color="#fff"></my-header>\n        </div>\n      </template>\n\n      <script>\n      import myheader from \'./06.myheader/myheader.vue\'\n\n      export default {\n        name: \'myapp\',\n        components: {\n          myheader,\n        },\n      }\n      <\/script>\n\n      <style lang="less" scoped>\n      .app-container {\n        margin-top: 45px;\n      }\n      </style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"自定义指令",frontmatter:{title:"自定义指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/4c6157/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/26.%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4.html",relativePath:"《前端》笔记《框架》/01.vue2/26.自定义指令.md",key:"v-4c1e89e4",path:"/pages/4c6157/",headers:[{level:2,title:"私有自定义指令：只能在定义的组件中使用",slug:"私有自定义指令-只能在定义的组件中使用",normalizedTitle:"私有自定义指令：只能在定义的组件中使用",charIndex:344},{level:2,title:"全局自定义指令：可以在所有组件中使用",slug:"全局自定义指令-可以在所有组件中使用",normalizedTitle:"全局自定义指令：可以在所有组件中使用",charIndex:1195},{level:2,title:"应用场景",slug:"应用场景",normalizedTitle:"应用场景",charIndex:1644},{level:3,title:"（一）解决图片有地址，但是没有加载成功的问题",slug:"一-解决图片有地址-但是没有加载成功的问题",normalizedTitle:"（一）解决图片有地址，但是没有加载成功的问题",charIndex:1653},{level:4,title:"使用步骤",slug:"使用步骤",normalizedTitle:"使用步骤",charIndex:365},{level:5,title:"（1）定义自定义指令（-- @/src/新建 directives/index.js）",slug:"_1-定义自定义指令-src-新建-directives-index-js",normalizedTitle:"（1）定义自定义指令（-- @/src/新建 directives/index.js）",charIndex:1733},{level:5,title:"（2）全局引入自定义指令（-- @/main.js）",slug:"_2-全局引入自定义指令-main-js",normalizedTitle:"（2）全局引入自定义指令（-- @/main.js）",charIndex:2161},{level:5,title:"（3）注册自定义组件（-- 同上）",slug:"_3-注册自定义组件-同上",normalizedTitle:"（3）注册自定义组件（-- 同上）",charIndex:2240},{level:5,title:"（4）定义默认图片（-- 组件）",slug:"_4-定义默认图片-组件",normalizedTitle:"（4）定义默认图片（-- 组件）",charIndex:2353},{level:5,title:"（5）绑定自定义指令（-- 同上）",slug:"_5-绑定自定义指令-同上",normalizedTitle:"（5）绑定自定义指令（-- 同上）",charIndex:2514}],headersStr:"私有自定义指令：只能在定义的组件中使用 全局自定义指令：可以在所有组件中使用 应用场景 （一）解决图片有地址，但是没有加载成功的问题 使用步骤 （1）定义自定义指令（-- @/src/新建 directives/index.js） （2）全局引入自定义指令（-- @/main.js） （3）注册自定义组件（-- 同上） （4）定义默认图片（-- 组件） （5）绑定自定义指令（-- 同上）",content:"特性：在 vue3 中，bind 名为 mounted 函数，updat 名为 updated 函数，用法和作用都是一样的\n\nbind(el, binding) 函数\n    作用：当被绑定的元素渲染到页面后 触发（第一次生效，后面不生效）\n    特性：\n        1、参数一，当前 指令所绑的 DOM元素\n        2、参数二，当前 自定义指令 对象\n\nupdat(el, binding) 函数\n    作用：数据变化时 触发（第一次不生效，后面生效）\n    特性：\n        1、参数一，当前 指令所绑的 DOM元素\n        2、参数二，当前 自定义指令 对象\n\n特性：当 bind 和 updat 的函数体完全相同时，可以简写为 函数格式\n\n\n\n# 私有自定义指令：只能在定义的组件中使用\n\n使用步骤：\n    （1）在 directives 节点中定义 私有自定义指令\n    （2）使用 自定义指令\n\n需求：点击按钮，让 h1 变为红色\n\n<template>\n    <div class=\"app-container\">\n\n        // （2）使用 自定义指令\n        <h1 v-color=\"color\">App 根组件</h1>\n\n    </div>\n</template>\n\nexport default {\n\n    // （1）在 directives 节点中定义 私有自定义指令\n    // directives：定义 私有自定义指令\n    data() {\n        return {\n            color: 'blue'\n        }\n    },\n    directives: {\n        /*  \n            color: {\n                bind(el, binding) {\n\n                    // binding.value：获取 自定义指令的值\n                    el.style.color = binding.value\n\n                }，\n                update(el, binding) {\n                    el.style.color = binding.value\n                }\n            } \n        */\n        // 简写：\n            color(el, binding) {\n                el.style.color = binding.value\n            }\n    }\n\n}\n\n\n\n# 全局自定义指令：可以在所有组件中使用\n\n语法：Vue.directive('指令名', function(el, binding) {函数体})\n使用步骤：在 main.js 的 Vue.directive方法 中定义\n特性：和 私有自定义指令相同\n\n-- main.js\n/*\n    Vue.directive('color', {\n        bind(el, binding) {\n            el.style.color = binding.value\n        }，\n        update(el, binding) {\n            el.style.color = binding.value\n        }\n    })\n*/\n\n// 简写：\n    Vue.directive('color', (el, binding) => {\n        el.style.color = binding.value\n    })\n\n\n\n# 应用场景\n\n\n# （一）解决图片有地址，但是没有加载成功的问题\n\n解决方法： 设置图片异常的默认图片\n\n原理： 1、自定义指令 2、\bonerror 事件\n\n# 使用步骤\n\n# （1）定义自定义指令（-- @/src/新建 directives/index.js）\n\nexport const imageError = {\n  inserted(dom, options) { // inserted 钩子函数：当前 dom 元素插入到节点之后执行\n    dom.src = dom.src || options.value\n    dom.onerror = function() { // onerror 事件：图片有地址，但是没有加载成功触发\n    dom.src = options.value\n    }\n  },\n  componentUpdated(dom, options) { // componentUpdated 钩子函数：当前 dom 元素更新数据后执行\n    dom.src = dom.src || options.value\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# （2）全局引入自定义指令（-- @/main.js）\n\nimport * as directives from '@/directives'\n\n\n1\n\n\n# （3）注册自定义组件（-- 同上）\n\nObject.keys(directives).forEach(key => {\n  Vue.directive(key, directives[key])\n})\n\n\n1\n2\n3\n\n\n# （4）定义默认图片（-- 组件）\n\ndata() {\n  return {\n      defaultImg: require('@/assets/common/head.jpg') // 考虑到打包时，路径会发送变化，导致图片加载失败。所以这里使用 require 包裹起来\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n# （5）绑定自定义指令（-- 同上）\n\n<img v-imageError=\"defaultImg\">\n\n\n1\n",normalizedContent:"特性：在 vue3 中，bind 名为 mounted 函数，updat 名为 updated 函数，用法和作用都是一样的\n\nbind(el, binding) 函数\n    作用：当被绑定的元素渲染到页面后 触发（第一次生效，后面不生效）\n    特性：\n        1、参数一，当前 指令所绑的 dom元素\n        2、参数二，当前 自定义指令 对象\n\nupdat(el, binding) 函数\n    作用：数据变化时 触发（第一次不生效，后面生效）\n    特性：\n        1、参数一，当前 指令所绑的 dom元素\n        2、参数二，当前 自定义指令 对象\n\n特性：当 bind 和 updat 的函数体完全相同时，可以简写为 函数格式\n\n\n\n# 私有自定义指令：只能在定义的组件中使用\n\n使用步骤：\n    （1）在 directives 节点中定义 私有自定义指令\n    （2）使用 自定义指令\n\n需求：点击按钮，让 h1 变为红色\n\n<template>\n    <div class=\"app-container\">\n\n        // （2）使用 自定义指令\n        <h1 v-color=\"color\">app 根组件</h1>\n\n    </div>\n</template>\n\nexport default {\n\n    // （1）在 directives 节点中定义 私有自定义指令\n    // directives：定义 私有自定义指令\n    data() {\n        return {\n            color: 'blue'\n        }\n    },\n    directives: {\n        /*  \n            color: {\n                bind(el, binding) {\n\n                    // binding.value：获取 自定义指令的值\n                    el.style.color = binding.value\n\n                }，\n                update(el, binding) {\n                    el.style.color = binding.value\n                }\n            } \n        */\n        // 简写：\n            color(el, binding) {\n                el.style.color = binding.value\n            }\n    }\n\n}\n\n\n\n# 全局自定义指令：可以在所有组件中使用\n\n语法：vue.directive('指令名', function(el, binding) {函数体})\n使用步骤：在 main.js 的 vue.directive方法 中定义\n特性：和 私有自定义指令相同\n\n-- main.js\n/*\n    vue.directive('color', {\n        bind(el, binding) {\n            el.style.color = binding.value\n        }，\n        update(el, binding) {\n            el.style.color = binding.value\n        }\n    })\n*/\n\n// 简写：\n    vue.directive('color', (el, binding) => {\n        el.style.color = binding.value\n    })\n\n\n\n# 应用场景\n\n\n# （一）解决图片有地址，但是没有加载成功的问题\n\n解决方法： 设置图片异常的默认图片\n\n原理： 1、自定义指令 2、\bonerror 事件\n\n# 使用步骤\n\n# （1）定义自定义指令（-- @/src/新建 directives/index.js）\n\nexport const imageerror = {\n  inserted(dom, options) { // inserted 钩子函数：当前 dom 元素插入到节点之后执行\n    dom.src = dom.src || options.value\n    dom.onerror = function() { // onerror 事件：图片有地址，但是没有加载成功触发\n    dom.src = options.value\n    }\n  },\n  componentupdated(dom, options) { // componentupdated 钩子函数：当前 dom 元素更新数据后执行\n    dom.src = dom.src || options.value\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# （2）全局引入自定义指令（-- @/main.js）\n\nimport * as directives from '@/directives'\n\n\n1\n\n\n# （3）注册自定义组件（-- 同上）\n\nobject.keys(directives).foreach(key => {\n  vue.directive(key, directives[key])\n})\n\n\n1\n2\n3\n\n\n# （4）定义默认图片（-- 组件）\n\ndata() {\n  return {\n      defaultimg: require('@/assets/common/head.jpg') // 考虑到打包时，路径会发送变化，导致图片加载失败。所以这里使用 require 包裹起来\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n# （5）绑定自定义指令（-- 同上）\n\n<img v-imageerror=\"defaultimg\">\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"前端路由",frontmatter:{title:"前端路由",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/71ecc1/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/27.%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%94%B1.html",relativePath:"《前端》笔记《框架》/01.vue2/27.前端路由.md",key:"v-20c8726d",path:"/pages/71ecc1/",headersStr:null,content:"前端路由：Hash地址 与 组件 之间的对应关系 应用场景：在 SPA项目 中，不同组件之间的切换，要依赖于前端路由来完成 工作方式： 1、用户点击了页面上的路由链接 2、导致了 URL 地址栏中的 Hash 值发生了变化 3、前端路由监听了到 Hash 地址的变化 4、前端路由把当前 Hash 地址对应的组件渲染到浏览器中 提示：在项目中很少会自己封装路由，都是用 第三方库 来实现路由的 创建 和 监听 如：vue-router\n\n需求：点击 首页、电影、关于 时，只显示对应的组件（简单的实现前端路由的原理 案例） 使用步骤： -- App 组件\n\n\n    // （1）为点击的路由链接，设置 Hash 值\n      <a href=\"#/home\">首页</a>\n      <a href=\"#/movie\">电影</a>\n      <a href=\"#/about\">关于</a>\n\n      <hr />\n\n    // （2）定义动态组件\n      <component :is=\"comName\"></component>\n\n    </div>\n  </template>\n\n  <script>\n    export default {\n      data() {\n        return {\n          conName: 'Home'\n        }\n      },\n      created() {\n        // （3）在 created函数 中绑定 window.onhashchange事件 监听 Hash值 的变化\n        window.onhashchange = () => {\n\n          // （4）判断 Hash值 的变化，并修改 this.comName\n          switch (location.hash) {\n            case '#/home':\n              this.comName = 'Home'\n              break\n            case '#/movie':\n              this.comName = 'Movie'\n              break\n            case '#/about':\n              this.comName = 'About'\n              break\n          }\n        }\n      }\n    }\n  <\/script>",normalizedContent:"前端路由：hash地址 与 组件 之间的对应关系 应用场景：在 spa项目 中，不同组件之间的切换，要依赖于前端路由来完成 工作方式： 1、用户点击了页面上的路由链接 2、导致了 url 地址栏中的 hash 值发生了变化 3、前端路由监听了到 hash 地址的变化 4、前端路由把当前 hash 地址对应的组件渲染到浏览器中 提示：在项目中很少会自己封装路由，都是用 第三方库 来实现路由的 创建 和 监听 如：vue-router\n\n需求：点击 首页、电影、关于 时，只显示对应的组件（简单的实现前端路由的原理 案例） 使用步骤： -- app 组件\n\n\n    // （1）为点击的路由链接，设置 hash 值\n      <a href=\"#/home\">首页</a>\n      <a href=\"#/movie\">电影</a>\n      <a href=\"#/about\">关于</a>\n\n      <hr />\n\n    // （2）定义动态组件\n      <component :is=\"comname\"></component>\n\n    </div>\n  </template>\n\n  <script>\n    export default {\n      data() {\n        return {\n          conname: 'home'\n        }\n      },\n      created() {\n        // （3）在 created函数 中绑定 window.onhashchange事件 监听 hash值 的变化\n        window.onhashchange = () => {\n\n          // （4）判断 hash值 的变化，并修改 this.comname\n          switch (location.hash) {\n            case '#/home':\n              this.comname = 'home'\n              break\n            case '#/movie':\n              this.comname = 'movie'\n              break\n            case '#/about':\n              this.comname = 'about'\n              break\n          }\n        }\n      }\n    }\n  <\/script>",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"vue.router 3.x版本 第三方库",frontmatter:{title:"vue.router 3.x版本 第三方库",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/871156/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/28.vue-router%203%20%E7%89%88%E6%9C%AC%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",relativePath:"《前端》笔记《框架》/01.vue2/28.vue-router 3 版本 第三方库.md",key:"v-0318faaa",path:"/pages/871156/",headersStr:null,content:"作用：操作路由 下载：npm i vue-router@3.5.2 -S 特性：3.x版本只能在 vue2 中使用\n\n路由高亮： 作用：当前路由链接的对应组件高亮 特性：如果开发者没有自定义路由高亮的 class 类，则默认使用 router-link-active 类\n\n方法一：使用默认的高亮 class 类 特性：被激活的路由链接，默认会添加一个叫做 router-link-active 的类名。开发者可以使用此类名选择器，为激活的路由链接设置高亮的样式 -- index.css（全局样式表） .router-link-active { background-color: red; color: white; font-weight: bold; }\n\n方法二：自定义路由高亮的 class 类 特性：在创建路由的实例对象时，开发者可以基于 linkActiveClass 属性，自定义路由链接被激活时所应用的类名 语法：linkActiveClass: '自定义类名' -- router.js const router = createRouter({ linkActiveClass: 'active-router', )}\n\n  -- index.css（全局样式表）\n  .active-router {\n      background-color: blue;\n      color: white;\n      font-weight: bold;\n  }\n\n\n提示：当勾选 vue-cli 的路由功能时，会自动配置以下功能，无需手动配置 配置： 1、在 src 目录下新建 router 目录，并新建 index.js 路由模块\n\n2、配置 index.js\n\n// （1）导入 Vue 和 VueRouter 包\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\n\n// （2）调用 Vue.use() 函数，把 VueRouter 安装为 Vue 的插件\n// Vue.use() 作用：为 Vue 安装插件\nVue.use(VueRouter)\n\n// （3）创建路由的实例对象\nconst router = new VueRouter()\n\n// （4）向外共享路由的实例对象\nexport default router\n\n\n3、配置 main.js\n\n// （1）导入路由模块，拿到路由实例对象\n// 简写：如果只导入一个目录，默认会去这个目录下导入 index.js\n// import router from '@/router/index.js'\nimport router from '@/router'\n\n// （2）将路由模块挂载到 new Vue 中的 router 属性\nnew Vue({\n  render: h => h(App),\n\n  // 属性名 和 属性值 一样可以简写\n  // router: router\n  router\n}).$mount('#app')\n\n\n需求：点击 路由链接，显示对应的组件 -- App 组件\n\n\n    // （1）为点击的路由链接，设置 Hash 值\n\n    // <a href=\"#/home\">首页</a>\n    // <a href=\"#/movie\">电影</a>\n    // <a href=\"#/about\">关于</a>\n\n    // 优化：使用 router-link 来替代 a 标签\n    // router-link 标签：定义路由链接\n    <router-link to=\"/home>首页</router-link>\n    <router-link to=\"/movie>电影</router-link>\n    <router-link to=\"/about>关于</router-link>\n\n    <hr />\n\n    // （2）定义 组件占位符\n    // router-view\n      // 作用：占位符，给组件占位置的\n      // 特性：是由 vue-router 提供的\n    <router-view></router-view>\n\n  </div>\n</template>\n\n\n-- index.js（路由模块）\n\n// （3）导入组件\nimport Home from '@/components/Home.vue'\nimport Movie from '@/components/Movie.vue'\nimport About from '@/components/About.vue'\n\n// （4）创建路由实例对象，并定义路由规则\nconst router = new VueRouter({\n  // routes 作用：定义 hash地址 与 组件 之间的对应关系\n  routes: [\n    // routes 里面的每一项被称为 路由规则。路由规则匹配成功，则展示对应的组件\n    { path: '/home', component: Home },\n    { path: '/movie', component: Movie },\n    { path: '/about', component: About },\n  ]\n})\n\n\n路由重定向 路由重定向：用户在访问 地址A 的时候，强制用户跳转到 地址C ，从而展示特定的组件页面 解决：页面加载完毕后，默认访问的是 #/ 的 Hash地址 的问题 解决方法：为 / 地址添加一个路由规则，使用 redirect 跳转到指定路由地址中 // redirect：跳转到指定路由地址（路由重定向） { path: '/', redirect: '/home' },\n\n嵌套路由 嵌套路由：通过路由实现组件的嵌套展示 可以理解为：router-view 里嵌套 router-link 和 router-view 就是嵌套路由\n\n-- App 组件\n<router-link to=\"/home>首页 <router-link to=\"/movie>电影 <router-link to=\"/about>关于\n\n----------------------------------------\n\n-- About 组件\n\n\n    // （1）为点击的路由链接，设置 Hash 值\n    <router-link to=\"/about/tab1\">tab1</router-link>\n    <router-link to=\"/about/tab2\">tab2</router-link>\n    <hr />\n\n    // （2）定义 组件占位符\n    <router-view></router-view>\n\n  </div>\n</template>\n\n\n-- index.js（路由模块）\n\n// （3）导入组件\nimport Tab1 from '@/components/Tab1.vue'\nimport Tab2 from '@/components/Tab2.vue'\n\n// （4）在父级路由规则中的 children 节点中定义子路由规则\nconst router = new VueRouter({\n  routes: [\n    { \n      path: '/about',\n      component: About,\n\n      // （5）路由重定向\n      redirect: '/about/tab1',\n\n      children: [\n\n        // （5）默认子路由\n        // 默认子路由：children 数组中，某个路由规则的 path 为空字符串，则这条规则为 默认子路由。目的和 路由重定向一样，都是在访问 / 路由地址时，跳转到指定路由地址中\n        // { path: 'tab1', component: Tab1 },\n        { path: '', component: Tab1 },\n        { path: 'tab2', component: Tab2 }\n      ]\n    }\n  ]\n})\n\n\n动态路由匹配 作用：提高路由规则的复用性 使用方法：把 Hash地址 中可变的部分定义为参数项 语法：:占位符 获取 参数项（路径参数）\n\n方法一：$route.params 对象\n  $route.params.参数项\n\n方法二（推荐）：props\n  // （1）定义 props\n  props: ['mid']      \n  // （2）开启 props\n  { path: '/movie/:mid', component: Movie, props: true }\n\n\n查询参数：在 Hash地址 中 ? 后面的参数 获取 查询参数：$route.query // { name: \"zs, age: \"20\" }\n\n获取 完整地址：$route.fullPath // /movie/2?name=zs&age=20\n\n获取 路径：$route.path // /movie/2\n\n需求：点击 路由链接，获取对应电影的详情\n\n<router-link to=\"/movie/1\">电影1</router-link>\n<router-link to=\"/movie/2?name=zs age=20\">雷神</router-link>\n<router-link to=\"/movie/3\">电影3</router-link>\n\n-- App 组件\n\n  传统方法：\n    缺点：如果有一万个路由链接，就要设置一万个路由规则，导致路由规则的复用性差\n\n    { path: '/movie/1', component: Movie }\n    { path: '/movie/2', component: Movie }\n    { path: '/movie/3', component: Movie }\n\n  动态路由匹配方法：\n    { path: '/movie/:id', component: Movie }\n\n-- index.js\n  routes: [\n    { path: '/movie/:mid', component: Movie, props: true }\n  ]\n\n-- Movie 组件\n  <template>\n    <div class=\"movie-container\">\n      // <h3>Movie 组件 --- {{ $route.params.mid }}</h3>\n    </div>\n  </template>\n\n  <script>\n    props: ['mid']\n  <\/script>\n",normalizedContent:"作用：操作路由 下载：npm i vue-router@3.5.2 -s 特性：3.x版本只能在 vue2 中使用\n\n路由高亮： 作用：当前路由链接的对应组件高亮 特性：如果开发者没有自定义路由高亮的 class 类，则默认使用 router-link-active 类\n\n方法一：使用默认的高亮 class 类 特性：被激活的路由链接，默认会添加一个叫做 router-link-active 的类名。开发者可以使用此类名选择器，为激活的路由链接设置高亮的样式 -- index.css（全局样式表） .router-link-active { background-color: red; color: white; font-weight: bold; }\n\n方法二：自定义路由高亮的 class 类 特性：在创建路由的实例对象时，开发者可以基于 linkactiveclass 属性，自定义路由链接被激活时所应用的类名 语法：linkactiveclass: '自定义类名' -- router.js const router = createrouter({ linkactiveclass: 'active-router', )}\n\n  -- index.css（全局样式表）\n  .active-router {\n      background-color: blue;\n      color: white;\n      font-weight: bold;\n  }\n\n\n提示：当勾选 vue-cli 的路由功能时，会自动配置以下功能，无需手动配置 配置： 1、在 src 目录下新建 router 目录，并新建 index.js 路由模块\n\n2、配置 index.js\n\n// （1）导入 vue 和 vuerouter 包\nimport vue from 'vue'\nimport vuerouter from 'vue-router'\n\n// （2）调用 vue.use() 函数，把 vuerouter 安装为 vue 的插件\n// vue.use() 作用：为 vue 安装插件\nvue.use(vuerouter)\n\n// （3）创建路由的实例对象\nconst router = new vuerouter()\n\n// （4）向外共享路由的实例对象\nexport default router\n\n\n3、配置 main.js\n\n// （1）导入路由模块，拿到路由实例对象\n// 简写：如果只导入一个目录，默认会去这个目录下导入 index.js\n// import router from '@/router/index.js'\nimport router from '@/router'\n\n// （2）将路由模块挂载到 new vue 中的 router 属性\nnew vue({\n  render: h => h(app),\n\n  // 属性名 和 属性值 一样可以简写\n  // router: router\n  router\n}).$mount('#app')\n\n\n需求：点击 路由链接，显示对应的组件 -- app 组件\n\n\n    // （1）为点击的路由链接，设置 hash 值\n\n    // <a href=\"#/home\">首页</a>\n    // <a href=\"#/movie\">电影</a>\n    // <a href=\"#/about\">关于</a>\n\n    // 优化：使用 router-link 来替代 a 标签\n    // router-link 标签：定义路由链接\n    <router-link to=\"/home>首页</router-link>\n    <router-link to=\"/movie>电影</router-link>\n    <router-link to=\"/about>关于</router-link>\n\n    <hr />\n\n    // （2）定义 组件占位符\n    // router-view\n      // 作用：占位符，给组件占位置的\n      // 特性：是由 vue-router 提供的\n    <router-view></router-view>\n\n  </div>\n</template>\n\n\n-- index.js（路由模块）\n\n// （3）导入组件\nimport home from '@/components/home.vue'\nimport movie from '@/components/movie.vue'\nimport about from '@/components/about.vue'\n\n// （4）创建路由实例对象，并定义路由规则\nconst router = new vuerouter({\n  // routes 作用：定义 hash地址 与 组件 之间的对应关系\n  routes: [\n    // routes 里面的每一项被称为 路由规则。路由规则匹配成功，则展示对应的组件\n    { path: '/home', component: home },\n    { path: '/movie', component: movie },\n    { path: '/about', component: about },\n  ]\n})\n\n\n路由重定向 路由重定向：用户在访问 地址a 的时候，强制用户跳转到 地址c ，从而展示特定的组件页面 解决：页面加载完毕后，默认访问的是 #/ 的 hash地址 的问题 解决方法：为 / 地址添加一个路由规则，使用 redirect 跳转到指定路由地址中 // redirect：跳转到指定路由地址（路由重定向） { path: '/', redirect: '/home' },\n\n嵌套路由 嵌套路由：通过路由实现组件的嵌套展示 可以理解为：router-view 里嵌套 router-link 和 router-view 就是嵌套路由\n\n-- app 组件\n<router-link to=\"/home>首页 <router-link to=\"/movie>电影 <router-link to=\"/about>关于\n\n----------------------------------------\n\n-- about 组件\n\n\n    // （1）为点击的路由链接，设置 hash 值\n    <router-link to=\"/about/tab1\">tab1</router-link>\n    <router-link to=\"/about/tab2\">tab2</router-link>\n    <hr />\n\n    // （2）定义 组件占位符\n    <router-view></router-view>\n\n  </div>\n</template>\n\n\n-- index.js（路由模块）\n\n// （3）导入组件\nimport tab1 from '@/components/tab1.vue'\nimport tab2 from '@/components/tab2.vue'\n\n// （4）在父级路由规则中的 children 节点中定义子路由规则\nconst router = new vuerouter({\n  routes: [\n    { \n      path: '/about',\n      component: about,\n\n      // （5）路由重定向\n      redirect: '/about/tab1',\n\n      children: [\n\n        // （5）默认子路由\n        // 默认子路由：children 数组中，某个路由规则的 path 为空字符串，则这条规则为 默认子路由。目的和 路由重定向一样，都是在访问 / 路由地址时，跳转到指定路由地址中\n        // { path: 'tab1', component: tab1 },\n        { path: '', component: tab1 },\n        { path: 'tab2', component: tab2 }\n      ]\n    }\n  ]\n})\n\n\n动态路由匹配 作用：提高路由规则的复用性 使用方法：把 hash地址 中可变的部分定义为参数项 语法：:占位符 获取 参数项（路径参数）\n\n方法一：$route.params 对象\n  $route.params.参数项\n\n方法二（推荐）：props\n  // （1）定义 props\n  props: ['mid']      \n  // （2）开启 props\n  { path: '/movie/:mid', component: movie, props: true }\n\n\n查询参数：在 hash地址 中 ? 后面的参数 获取 查询参数：$route.query // { name: \"zs, age: \"20\" }\n\n获取 完整地址：$route.fullpath // /movie/2?name=zs&age=20\n\n获取 路径：$route.path // /movie/2\n\n需求：点击 路由链接，获取对应电影的详情\n\n<router-link to=\"/movie/1\">电影1</router-link>\n<router-link to=\"/movie/2?name=zs age=20\">雷神</router-link>\n<router-link to=\"/movie/3\">电影3</router-link>\n\n-- app 组件\n\n  传统方法：\n    缺点：如果有一万个路由链接，就要设置一万个路由规则，导致路由规则的复用性差\n\n    { path: '/movie/1', component: movie }\n    { path: '/movie/2', component: movie }\n    { path: '/movie/3', component: movie }\n\n  动态路由匹配方法：\n    { path: '/movie/:id', component: movie }\n\n-- index.js\n  routes: [\n    { path: '/movie/:mid', component: movie, props: true }\n  ]\n\n-- movie 组件\n  <template>\n    <div class=\"movie-container\">\n      // <h3>movie 组件 --- {{ $route.params.mid }}</h3>\n    </div>\n  </template>\n\n  <script>\n    props: ['mid']\n  <\/script>\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"页面导航",frontmatter:{title:"页面导航",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/5e7df0/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/29.%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%88%AA.html",relativePath:"《前端》笔记《框架》/01.vue2/29.页面导航.md",key:"v-5929862e",path:"/pages/5e7df0/",headers:[{level:2,title:"Vue 提供的常用编程式导航 API（$router 导航对象）",slug:"vue-提供的常用编程式导航-api-router-导航对象",normalizedTitle:"vue 提供的常用编程式导航 api（$router 导航对象）",charIndex:98},{level:3,title:"（一）路径跳转、组件跳转（增加一条 历史记录）",slug:"一-路径跳转、组件跳转-增加一条-历史记录",normalizedTitle:"（一）路径跳转、组件跳转（增加一条 历史记录）",charIndex:135},{level:4,title:"（1）参数为 字符串",slug:"_1-参数为-字符串",normalizedTitle:"（1）参数为 字符串",charIndex:187},{level:4,title:"（2）参数为 对象",slug:"_2-参数为-对象",normalizedTitle:"（2）参数为 对象",charIndex:229},{level:3,title:"（二）路径跳转、组件跳转（替换当前 历史记录）",slug:"二-路径跳转、组件跳转-替换当前-历史记录",normalizedTitle:"（二）路径跳转、组件跳转（替换当前 历史记录）",charIndex:400},{level:3,title:"（三）历史 前进 / 后退",slug:"三-历史-前进-后退",normalizedTitle:"（三）历史 前进 / 后退",charIndex:456}],headersStr:"Vue 提供的常用编程式导航 API（$router 导航对象） （一）路径跳转、组件跳转（增加一条 历史记录） （1）参数为 字符串 （2）参数为 对象 （二）路径跳转、组件跳转（替换当前 历史记录） （三）历史 前进 / 后退",content:"声明式 导航： 标签自带的导航能就是声明式导航。如：<a>、<router-link>\n\n编程式 导航： 通过调用 API 方法实现的导航就是编程式导航。如：$router.push()\n\n\n# Vue 提供的常用编程式导航 API（$router 导航对象）\n\n\n# （一）路径跳转、组件跳转（增加一条 历史记录）\n\n方法： this.$router.push()\n\n# （1）参数为 字符串\n\n$router.push('/demo')\n\n\n1\n\n\n# （2）参数为 对象\n\n$router.push({\n  name: 'demo', // 路由名称\n  params: { // 携带的参数\n    username: 'zcr'\n  },\n  query: { // 携带的查询参数\n    plan: 'private'\n  },\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# （二）路径跳转、组件跳转（替换当前 历史记录）\n\n语法： this.$router.replace()\n\n\n# （三）历史 前进 / 后退\n\n语法： this.$router.go( 1 / -1 ) 推荐使用 vue 提供的： 1、历史前进 $router.back() 2、历史后退 $router.forward()",normalizedContent:"声明式 导航： 标签自带的导航能就是声明式导航。如：<a>、<router-link>\n\n编程式 导航： 通过调用 api 方法实现的导航就是编程式导航。如：$router.push()\n\n\n# vue 提供的常用编程式导航 api（$router 导航对象）\n\n\n# （一）路径跳转、组件跳转（增加一条 历史记录）\n\n方法： this.$router.push()\n\n# （1）参数为 字符串\n\n$router.push('/demo')\n\n\n1\n\n\n# （2）参数为 对象\n\n$router.push({\n  name: 'demo', // 路由名称\n  params: { // 携带的参数\n    username: 'zcr'\n  },\n  query: { // 携带的查询参数\n    plan: 'private'\n  },\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# （二）路径跳转、组件跳转（替换当前 历史记录）\n\n语法： this.$router.replace()\n\n\n# （三）历史 前进 / 后退\n\n语法： this.$router.go( 1 / -1 ) 推荐使用 vue 提供的： 1、历史前进 $router.back() 2、历史后退 $router.forward()",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"导航守卫",frontmatter:{title:"导航守卫",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/b55487/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/30.%E5%AF%BC%E8%88%AA%E5%AE%88%E5%8D%AB.html",relativePath:"《前端》笔记《框架》/01.vue2/30.导航守卫.md",key:"v-7ce3cace",path:"/pages/b55487/",headersStr:null,content:"请从旧笔记中搬运",normalizedContent:"请从旧笔记中搬运",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"组件库",frontmatter:{title:"组件库",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/74b13b/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/32.%E7%BB%84%E4%BB%B6%E5%BA%93.html",relativePath:"《前端》笔记《框架》/01.vue2/32.组件库.md",key:"v-e174b762",path:"/pages/74b13b/",headersStr:null,content:"概念：把自己封装的 .vue 组件 整理、打包、并发布为 npm 的包，从而供其他人下载和使用。这种可以直接下载并在项目中使用的现成组件，就叫做 vue 组件库\n\n组件库 和 bootstrap 的区别 1、bootstrap 只提供了纯粹的原材料（ css 样式、HTML 结构以及 JS 特效），需要由开发者做进一步的组装和改造 2、vue 组件库是遵循 vue 语法、高度定制的现成组件，开箱即用\n\n常用组件库：\n\nPC 端： 1、Element UI（https://element.eleme.cn/#/zh-CN） 2、View UI（http://v1.iviewui.com/）\n\n移动端： 1、Mint UI（http://mint-ui.github.io/#!/zh-cn） 2、Vant（https://vant-contrib.gitee.io/vant/#/zh-CN/）",normalizedContent:"概念：把自己封装的 .vue 组件 整理、打包、并发布为 npm 的包，从而供其他人下载和使用。这种可以直接下载并在项目中使用的现成组件，就叫做 vue 组件库\n\n组件库 和 bootstrap 的区别 1、bootstrap 只提供了纯粹的原材料（ css 样式、html 结构以及 js 特效），需要由开发者做进一步的组装和改造 2、vue 组件库是遵循 vue 语法、高度定制的现成组件，开箱即用\n\n常用组件库：\n\npc 端： 1、element ui（https://element.eleme.cn/#/zh-cn） 2、view ui（http://v1.iviewui.com/）\n\n移动端： 1、mint ui（http://mint-ui.github.io/#!/zh-cn） 2、vant（https://vant-contrib.gitee.io/vant/#/zh-cn/）",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"命名路由",frontmatter:{title:"命名路由",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/450ed8/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/31.%E5%91%BD%E5%90%8D%E8%B7%AF%E7%94%B1.html",relativePath:"《前端》笔记《框架》/01.vue2/31.命名路由.md",key:"v-27082361",path:"/pages/450ed8/",headersStr:null,content:"概念：带有 name 属性的路由，就是命名路由\n应用场景：Hash 地址较长时使用\n特性：\n  1、命名路由的 name 值不能重复，必须保证唯一性\n  2、不再传递具体的 Hash 地址，而是传递一个配置项\n\n\n应用场景：\n\n  （1）使用命名路由实现 声明式导航\n    使用步骤：为 <router-link> 动态绑定 to 属性的值，并通过 name 属性指定要跳转到的路由规则，期间还可以用 params 属性指定跳转期间要携带的路由参数\n\n    -- router.js\n\n      routes: [\n        {\n          name: 'mov',\n          path: '/movie/:id',\n          component: Movie,\n          props: true,\n        }\n      ]\n\n    -- MyHome.vue\n\n      <h3>MyHome组件</h3>\n      <router-link :to=\"{ name: 'mov', params: { id: 3 }} go to Movie</router-link>\n\n      name: 'Myhome'\n\n  （2）使用命名路由实现 编程式导航\n    使用步骤：调用 push 函数期间指定一个配置对象，name 是要跳转到的路由规则、params 是携带的路由参数\n\n    -- MyHome.vue\n      \n      <button @click=\"gotoMovie(3)\">go to Movie</button>\n\n      methods: {\n        gotoMovie(id) {\n          this.$router.push({ \n            name: 'mov', \n            params: { \n              id: 3,\n            } \n          })\n        }\n      }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n",normalizedContent:"概念：带有 name 属性的路由，就是命名路由\n应用场景：hash 地址较长时使用\n特性：\n  1、命名路由的 name 值不能重复，必须保证唯一性\n  2、不再传递具体的 hash 地址，而是传递一个配置项\n\n\n应用场景：\n\n  （1）使用命名路由实现 声明式导航\n    使用步骤：为 <router-link> 动态绑定 to 属性的值，并通过 name 属性指定要跳转到的路由规则，期间还可以用 params 属性指定跳转期间要携带的路由参数\n\n    -- router.js\n\n      routes: [\n        {\n          name: 'mov',\n          path: '/movie/:id',\n          component: movie,\n          props: true,\n        }\n      ]\n\n    -- myhome.vue\n\n      <h3>myhome组件</h3>\n      <router-link :to=\"{ name: 'mov', params: { id: 3 }} go to movie</router-link>\n\n      name: 'myhome'\n\n  （2）使用命名路由实现 编程式导航\n    使用步骤：调用 push 函数期间指定一个配置对象，name 是要跳转到的路由规则、params 是携带的路由参数\n\n    -- myhome.vue\n      \n      <button @click=\"gotomovie(3)\">go to movie</button>\n\n      methods: {\n        gotomovie(id) {\n          this.$router.push({ \n            name: 'mov', \n            params: { \n              id: 3,\n            } \n          })\n        }\n      }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"Vant",frontmatter:{title:"Vant",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/953c13/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/34.Vant.html",relativePath:"《前端》笔记《框架》/01.vue2/34.Vant.md",key:"v-fb5a06f6",path:"/pages/953c13/",headersStr:null,content:'介绍：主流的移动端组件库\n\n文档：https://vant-contrib.gitee.io/vant/#/zh-CN/home46px 0\n\n安装： Vue2 版本：npm i vant -S Vue3 版本：npm i vant@next -S\n\n引入组件： 方式三：导入所有组件（该方式官方虽然不推荐，因为这会导致项目体积增加，但是在开发阶段不需要考虑体积问题，这种方式最简单也最舒服，在发布阶段会进行项目体积的优化，会把 Vant 直接从项目中抽离，所以不需要担心） 具体打包优化文档：http://doc.toutiao.liulongbin.top/mds/15.build.html#_15-4-%E5%9F%BA%E4%BA%8E-externals-%E9%85%8D%E7%BD%AE-cdn-%E5%8A%A0%E9%80%9F -- main.js import Vant from \'vant\' import \'vant/lib/index.css\' Vue.use(Vant)\n\n使用方式： 复制现成的组件结构到模板结构中 如：\n\n\n    <van-button type="primary">主要按钮</van-button>\n    <van-button type="info">信息按钮</van-button>\n    <van-button type="default">默认按钮</van-button>\n    <van-button type="warning">警告按钮</van-button>\n    <van-button type="danger">危险按钮</van-button>\n\n  </div>\n</template>',normalizedContent:'介绍：主流的移动端组件库\n\n文档：https://vant-contrib.gitee.io/vant/#/zh-cn/home46px 0\n\n安装： vue2 版本：npm i vant -s vue3 版本：npm i vant@next -s\n\n引入组件： 方式三：导入所有组件（该方式官方虽然不推荐，因为这会导致项目体积增加，但是在开发阶段不需要考虑体积问题，这种方式最简单也最舒服，在发布阶段会进行项目体积的优化，会把 vant 直接从项目中抽离，所以不需要担心） 具体打包优化文档：http://doc.toutiao.liulongbin.top/mds/15.build.html#_15-4-%e5%9f%ba%e4%ba%8e-externals-%e9%85%8d%e7%bd%ae-cdn-%e5%8a%a0%e9%80%9f -- main.js import vant from \'vant\' import \'vant/lib/index.css\' vue.use(vant)\n\n使用方式： 复制现成的组件结构到模板结构中 如：\n\n\n    <van-button type="primary">主要按钮</van-button>\n    <van-button type="info">信息按钮</van-button>\n    <van-button type="default">默认按钮</van-button>\n    <van-button type="warning">警告按钮</van-button>\n    <van-button type="danger">危险按钮</van-button>\n\n  </div>\n</template>',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"事件修饰符",frontmatter:{title:"事件修饰符",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/204695/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/35.%E4%BA%8B%E4%BB%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6.html",relativePath:"《前端》笔记《框架》/01.vue2/35.事件修饰符.md",key:"v-2f268e20",path:"/pages/204695/",headersStr:null,content:'语法： <div @事件类型.事件修饰符="方法"></div> 例： <div @click.stop="addShopCar"></div>\n\n\n# 一、stop\n\n作用： 阻止事件冒泡',normalizedContent:'语法： <div @事件类型.事件修饰符="方法"></div> 例： <div @click.stop="addshopcar"></div>\n\n\n# 一、stop\n\n作用： 阻止事件冒泡',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"打包上线",frontmatter:{title:"打包上线",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7482ad/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/36.%E6%89%93%E5%8C%85%E4%B8%8A%E7%BA%BF.html",relativePath:"《前端》笔记《框架》/01.vue2/36.打包上线.md",key:"v-13f19377",path:"/pages/7482ad/",headers:[{level:2,title:"（一）hash 模式（默认）",slug:"一-hash-模式-默认",normalizedTitle:"（一）hash 模式（默认）",charIndex:27},{level:2,title:"（二）history 模式",slug:"二-history-模式",normalizedTitle:"（二）history 模式",charIndex:46},{level:3,title:"1、开启 history 模式",slug:"_1、开启-history-模式",normalizedTitle:"1、开启 history 模式",charIndex:64},{level:3,title:"2、配置前缀地址",slug:"_2、配置前缀地址",normalizedTitle:"2、配置前缀地址",charIndex:624},{level:3,title:"3、查看地址栏的地址是否配置成功",slug:"_3、查看地址栏的地址是否配置成功",normalizedTitle:"3、查看地址栏的地址是否配置成功",charIndex:863},{level:2,title:"（一）优化开发环境警告",slug:"一-优化开发环境警告",normalizedTitle:"（一）优化开发环境警告",charIndex:999},{level:2,title:"（二）优化生产环境警告",slug:"二-优化生产环境警告",normalizedTitle:"（二）优化生产环境警告",charIndex:1088},{level:2,title:"（3）生成打包报告",slug:"_3-生成打包报告",normalizedTitle:"（3）生成打包报告",charIndex:1873},{level:3,title:"（3-1）vue-cli-service build --report",slug:"_3-1-vue-cli-service-build-report",normalizedTitle:"（3-1）vue-cli-service build --report",charIndex:1887},{level:3,title:"（3-2）（推荐）：vue-cli 视图界面 → 运行 build → 查看速度统计、资源体积、依赖项体积",slug:"_3-2-推荐-vue-cli-视图界面-→-运行-build-→-查看速度统计、资源体积、依赖项体积",normalizedTitle:"（3-2）（推荐）：vue-cli 视图界面 → 运行 build → 查看速度统计、资源体积、依赖项体积",charIndex:1927},{level:2,title:"1、查看体积过大的文件",slug:"_1、查看体积过大的文件",normalizedTitle:"1、查看体积过大的文件",charIndex:2230},{level:2,title:"2、配置 externals",slug:"_2、配置-externals",normalizedTitle:"2、配置 externals",charIndex:2359},{level:2,title:"3、注入 CDN 文件到 HTML 模板中",slug:"_3、注入-cdn-文件到-html-模板中",normalizedTitle:"3、注入 cdn 文件到 html 模板中",charIndex:3430},{level:2,title:"4、引入 css、js",slug:"_4、引入-css、js",normalizedTitle:"4、引入 css、js",charIndex:3753},{level:2,title:"5、在生产环境下打包",slug:"_5、在生产环境下打包",normalizedTitle:"5、在生产环境下打包",charIndex:4135},{level:2,title:"6、打包后体积前后对比",slug:"_6、打包后体积前后对比",normalizedTitle:"6、打包后体积前后对比",charIndex:4171}],headersStr:"（一）hash 模式（默认） （二）history 模式 1、开启 history 模式 2、配置前缀地址 3、查看地址栏的地址是否配置成功 （一）优化开发环境警告 （二）优化生产环境警告 （3）生成打包报告 （3-1）vue-cli-service build --report （3-2）（推荐）：vue-cli 视图界面 → 运行 build → 查看速度统计、资源体积、依赖项体积 1、查看体积过大的文件 2、配置 externals 3、注入 CDN 文件到 HTML 模板中 4、引入 css、js 5、在生产环境下打包 6、打包后体积前后对比",content:"# 一、将路由模式改成 history 模式\n\n\n# （一）hash 模式（默认）\n\n\n# （二）history 模式\n\n\n# 1、开启 history 模式\n\n（-- @/router/index.js）\n\nconst createRouter = () => new Router({\n\n  -- 取消注释\n  mode: 'history', // require service support\n  --\n\n  scrollBehavior: () => ({ y: 0 }),\n  routes: [...constantRoutes, ...asyncRoutes],\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 二、设置前缀地址\n\n设置前： zhengzhengrishang.cc 设置后： zhengzhengrishang.cc/hr\n\n（-- @/router/index.js）\n\nconst createRouter = () => new Router({\n  mode: 'history', // require service support\n\n  -- 增\n  base: 'hr/', // 前缀地址\n  --\n\n  scrollBehavior: () => ({ y: 0 }),\n  routes: constantRoutes\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 2、配置前缀地址\n\nconst createRouter = () => new Router({\n  mode: 'history', // require service support\n\n  -- 增\n  base: 'hr/',\n  --\n\n  scrollBehavior: () => ({ y: 0 }),\n  routes: [...constantRoutes, ...asyncRoutes],\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 3、查看地址栏的地址是否配置成功\n\n配置前： localhost:8888/#/attendances\n\n配置后： localhost:8888/hr/attendances\n\n\n# 三、生成打包报告。打包报告会显示项目中错误语法等问题，然后针对这些问题进行优化\n\n\n# （一）优化开发环境警告\n\nvue-cli 视图界面中 → 运行 serve → 查看警告数 → 输出界面查看警告的信息，并进行优化\n\n常见警告： 声明了变量，但没有使用\n\n\n# （二）优化生产环境警告\n\nvue-cli 视图界面中 → 运行 build → 查看警告数 → 输出界面查看警告的信息，并进行优化\n\n常见警告： （1）生产环境下不能有 console.log()、console.error() 解决方法： 使用插件，自动删除所有的 console.log()、console.error() 1、下载 npm i babel-plugin-transform-remove-console@6.9.4 --save-dev\n\n2、在 plugins 数组中新增以下节点（-- babel.config.js）\n\n'plugins': [\n  [\n    'component',\n    {...}\n  ],\n\n  -- 增\n    'transform-remove-console'\n  --\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n3、解决该插件 全环境 生效，影响开发环境的问题（-- babel.config.js） 原理： 判断当前环境，如果是生产环境下，自动将插件 push 到 plugins 中\n\n-- 增\n  // 项目生产环境需要用到的 babel 插件\n  const prodPlugins = []\n  if (process.env.NODE_ENV === 'production') {\n    prodPlugins.push('transform-remove-console')\n  }\n--\n\nmodule.exports = {\n\n  -- 改（'transform-remove-console' - ...prodPlugins）\n    ...prodPlugins\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# （3）生成打包报告\n\n\n# （3-1）vue-cli-service build --report\n\n\n# （3-2）（推荐）：vue-cli 视图界面 → 运行 build → 查看速度统计、资源体积、依赖项体积\n\n提示： 资源中带有警告图标的文件，表示体积过大，会影响性能 使用步骤： 在资源项中可以查看后面带 ！的文件，这些文件因为体积比较大，在页面发送请求时，会导致页面假死，需要进行体积优化。可以使用 CDN 服务器加载 解决\n\n\n# 三、CDN 服务器加载。减小项目的体积，提高首屏页面的加载效率【！！！因为老师提供的 cdn 文件版本和当前项目的版本不一致，所以该步骤无法完成】\n\n作用： 解决通过 import 语法导入的第三方依赖包，打包时会合并到同一个文件中，导致单文件体积过大的问题\n\n\n# 1、查看体积过大的文件\n\nvue-cli 图像界面 → 运行 build:prod 任务 → 查看依赖项。将体积超过 500 kb 或 功能性比较全的包，通过一下步骤进行 CDN 服务器加载\n\n做完这一步截图一下图像界面，后面会做一个优化的前后对比\n\n\n# 2、配置 externals\n\n（-- vue.config.js）\n\nconst port = process.env.port || process.env.npm_config_port || 9528 // dev port\n\n-- 增\n// 引入的 CDN 文件\nlet cdn = { css: [], js: [] }\nlet externals = {}\n// 判断是否为生产环境\nif (process.env.NODE_ENV === 'production') {\n  externals = {\n    // 格式：【key（排除的包）：value（CDN 文件中的全局变量名。用于导入 CDN 文件）】\n\n    'element-ui': 'ELEMENT',\n    'xlsx': 'XLSX',\n    'vue': 'Vue',\n  }\n  cdn = {\n    css: [\n      // element-ui css\n      'https://unpkg.com/element-ui/lib/theme-chalk/index.css' // 样式表\n    ],\n    js: [\n      // vue must at first!\n      'https://unpkg.com/vue/dist/vue.js', // vuejs\n      // element-ui js\n      'https://unpkg.com/element-ui/lib/index.js', // elementUI\n      'https://cdn.jsdelivr.net/npm/xlsx@0.16.6/dist/jszip.min.js',\n      'https://cdn.jsdelivr.net/npm/xlsx@0.16.6/dist/xlsx.full.min.js'\n    ]\n  }\n}\n--\n\n// 配置 Webpack\nconfigureWebpack: {\n  ...\n\n  -- 增\n  // 排除包，并配置 CDN 文件中的全局变量名\n  externals: externals\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 3、注入 CDN 文件到 HTML 模板中\n\n（-- 同上）\n\n-- 增\n// 注入 cdn 变量。在执行打包时，会将 cdn 变量注入到 html 模板中\nconfig.plugin('html').tap((args) => {\n  // args：注入 html 模板的一个变量\n  args[0].cdn = cdn\n  return args\n})\n--\n\n// when there are many pages, it will cause too many meaningless requests\nconfig.plugins.delete('prefetch')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 4、引入 css、js\n\n（@/public/index.html）\n\n<head>\n  ...\n\n  -- 增\n  <% for(var css of htmlWebpackPlugin.options.cdn.css) { %>\n    <link rel=\"stylesheer\" href=\"<%=css%>\">\n  <% } %>\n  --\n\n</head>\n<body>\n  ...\n\n  -- 增\n  <% for(var js of htmlWebpackPlugin.options.cdn.js) { %>\n    <script src=\"<%=js%>\"><\/script>\n  <% } %>\n  --\n\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 5、在生产环境下打包\n\n图像界面运行任务 build:prod\n\n\n# 6、打包后体积前后对比\n\n优化前：\n\n优化后：",normalizedContent:"# 一、将路由模式改成 history 模式\n\n\n# （一）hash 模式（默认）\n\n\n# （二）history 模式\n\n\n# 1、开启 history 模式\n\n（-- @/router/index.js）\n\nconst createrouter = () => new router({\n\n  -- 取消注释\n  mode: 'history', // require service support\n  --\n\n  scrollbehavior: () => ({ y: 0 }),\n  routes: [...constantroutes, ...asyncroutes],\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 二、设置前缀地址\n\n设置前： zhengzhengrishang.cc 设置后： zhengzhengrishang.cc/hr\n\n（-- @/router/index.js）\n\nconst createrouter = () => new router({\n  mode: 'history', // require service support\n\n  -- 增\n  base: 'hr/', // 前缀地址\n  --\n\n  scrollbehavior: () => ({ y: 0 }),\n  routes: constantroutes\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 2、配置前缀地址\n\nconst createrouter = () => new router({\n  mode: 'history', // require service support\n\n  -- 增\n  base: 'hr/',\n  --\n\n  scrollbehavior: () => ({ y: 0 }),\n  routes: [...constantroutes, ...asyncroutes],\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 3、查看地址栏的地址是否配置成功\n\n配置前： localhost:8888/#/attendances\n\n配置后： localhost:8888/hr/attendances\n\n\n# 三、生成打包报告。打包报告会显示项目中错误语法等问题，然后针对这些问题进行优化\n\n\n# （一）优化开发环境警告\n\nvue-cli 视图界面中 → 运行 serve → 查看警告数 → 输出界面查看警告的信息，并进行优化\n\n常见警告： 声明了变量，但没有使用\n\n\n# （二）优化生产环境警告\n\nvue-cli 视图界面中 → 运行 build → 查看警告数 → 输出界面查看警告的信息，并进行优化\n\n常见警告： （1）生产环境下不能有 console.log()、console.error() 解决方法： 使用插件，自动删除所有的 console.log()、console.error() 1、下载 npm i babel-plugin-transform-remove-console@6.9.4 --save-dev\n\n2、在 plugins 数组中新增以下节点（-- babel.config.js）\n\n'plugins': [\n  [\n    'component',\n    {...}\n  ],\n\n  -- 增\n    'transform-remove-console'\n  --\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n3、解决该插件 全环境 生效，影响开发环境的问题（-- babel.config.js） 原理： 判断当前环境，如果是生产环境下，自动将插件 push 到 plugins 中\n\n-- 增\n  // 项目生产环境需要用到的 babel 插件\n  const prodplugins = []\n  if (process.env.node_env === 'production') {\n    prodplugins.push('transform-remove-console')\n  }\n--\n\nmodule.exports = {\n\n  -- 改（'transform-remove-console' - ...prodplugins）\n    ...prodplugins\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# （3）生成打包报告\n\n\n# （3-1）vue-cli-service build --report\n\n\n# （3-2）（推荐）：vue-cli 视图界面 → 运行 build → 查看速度统计、资源体积、依赖项体积\n\n提示： 资源中带有警告图标的文件，表示体积过大，会影响性能 使用步骤： 在资源项中可以查看后面带 ！的文件，这些文件因为体积比较大，在页面发送请求时，会导致页面假死，需要进行体积优化。可以使用 cdn 服务器加载 解决\n\n\n# 三、cdn 服务器加载。减小项目的体积，提高首屏页面的加载效率【！！！因为老师提供的 cdn 文件版本和当前项目的版本不一致，所以该步骤无法完成】\n\n作用： 解决通过 import 语法导入的第三方依赖包，打包时会合并到同一个文件中，导致单文件体积过大的问题\n\n\n# 1、查看体积过大的文件\n\nvue-cli 图像界面 → 运行 build:prod 任务 → 查看依赖项。将体积超过 500 kb 或 功能性比较全的包，通过一下步骤进行 cdn 服务器加载\n\n做完这一步截图一下图像界面，后面会做一个优化的前后对比\n\n\n# 2、配置 externals\n\n（-- vue.config.js）\n\nconst port = process.env.port || process.env.npm_config_port || 9528 // dev port\n\n-- 增\n// 引入的 cdn 文件\nlet cdn = { css: [], js: [] }\nlet externals = {}\n// 判断是否为生产环境\nif (process.env.node_env === 'production') {\n  externals = {\n    // 格式：【key（排除的包）：value（cdn 文件中的全局变量名。用于导入 cdn 文件）】\n\n    'element-ui': 'element',\n    'xlsx': 'xlsx',\n    'vue': 'vue',\n  }\n  cdn = {\n    css: [\n      // element-ui css\n      'https://unpkg.com/element-ui/lib/theme-chalk/index.css' // 样式表\n    ],\n    js: [\n      // vue must at first!\n      'https://unpkg.com/vue/dist/vue.js', // vuejs\n      // element-ui js\n      'https://unpkg.com/element-ui/lib/index.js', // elementui\n      'https://cdn.jsdelivr.net/npm/xlsx@0.16.6/dist/jszip.min.js',\n      'https://cdn.jsdelivr.net/npm/xlsx@0.16.6/dist/xlsx.full.min.js'\n    ]\n  }\n}\n--\n\n// 配置 webpack\nconfigurewebpack: {\n  ...\n\n  -- 增\n  // 排除包，并配置 cdn 文件中的全局变量名\n  externals: externals\n  --\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 3、注入 cdn 文件到 html 模板中\n\n（-- 同上）\n\n-- 增\n// 注入 cdn 变量。在执行打包时，会将 cdn 变量注入到 html 模板中\nconfig.plugin('html').tap((args) => {\n  // args：注入 html 模板的一个变量\n  args[0].cdn = cdn\n  return args\n})\n--\n\n// when there are many pages, it will cause too many meaningless requests\nconfig.plugins.delete('prefetch')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 4、引入 css、js\n\n（@/public/index.html）\n\n<head>\n  ...\n\n  -- 增\n  <% for(var css of htmlwebpackplugin.options.cdn.css) { %>\n    <link rel=\"stylesheer\" href=\"<%=css%>\">\n  <% } %>\n  --\n\n</head>\n<body>\n  ...\n\n  -- 增\n  <% for(var js of htmlwebpackplugin.options.cdn.js) { %>\n    <script src=\"<%=js%>\"><\/script>\n  <% } %>\n  --\n\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 5、在生产环境下打包\n\n图像界面运行任务 build:prod\n\n\n# 6、打包后体积前后对比\n\n优化前：\n\n优化后：",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"事件",frontmatter:{title:"事件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fecc7b/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/37.%E4%BA%8B%E4%BB%B6.html",relativePath:"《前端》笔记《框架》/01.vue2/37.事件.md",key:"v-b5437a8e",path:"/pages/fecc7b/",headersStr:null,content:"# 一、表单值发生变化时触发\n\n事件： @input\n\n\n# 二、表单失去焦点时触发\n\n事件： @blur",normalizedContent:"# 一、表单值发生变化时触发\n\n事件： @input\n\n\n# 二、表单失去焦点时触发\n\n事件： @blur",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"内容渲染 指令",frontmatter:{title:"内容渲染 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fab397/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/38.%E5%86%85%E5%AE%B9%E6%B8%B2%E6%9F%93%20%E6%8C%87%E4%BB%A4.html",relativePath:"《前端》笔记《框架》/01.vue2/38.内容渲染 指令.md",key:"v-cf95b010",path:"/pages/fab397/",headersStr:null,content:"指令：vue 提供的模板语法，用于辅助开发 渲染页面的基本结构\n\n内容渲染指令：渲染 DOM 元素的文本内容\n\n\n--\x3e\n\n性别：\n\n<hr>\n\n\x3c!-- 方法二：插值表达式（推荐）\n  特性：\n    1、不会覆盖原本 DOM 结构的内容\n    2、允许使用 JS 代码，变量会去 data 中查找\n--\x3e\n  \n<p>姓名：{{ username }}</p>\n<p>性别：{{ gender }}</p>\n\n<p>运算：{{ num + 6 }}</p>\n<p>{{ ok ? 'YES' : 'NO' }}</p>\n\n<div>方法：{{ tips }} 反转的结果是：{{ tips.split('').reverse().join('') }}</div>\n\n<hr>\n\n\x3c!-- 方法三：v-html\n  特性：会解析 HTML 标签\n--\x3e\n<div v-html=\"info\"></div>\n",normalizedContent:"指令：vue 提供的模板语法，用于辅助开发 渲染页面的基本结构\n\n内容渲染指令：渲染 dom 元素的文本内容\n\n\n--\x3e\n\n性别：\n\n<hr>\n\n\x3c!-- 方法二：插值表达式（推荐）\n  特性：\n    1、不会覆盖原本 dom 结构的内容\n    2、允许使用 js 代码，变量会去 data 中查找\n--\x3e\n  \n<p>姓名：{{ username }}</p>\n<p>性别：{{ gender }}</p>\n\n<p>运算：{{ num + 6 }}</p>\n<p>{{ ok ? 'yes' : 'no' }}</p>\n\n<div>方法：{{ tips }} 反转的结果是：{{ tips.split('').reverse().join('') }}</div>\n\n<hr>\n\n\x3c!-- 方法三：v-html\n  特性：会解析 html 标签\n--\x3e\n<div v-html=\"info\"></div>\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"属性绑定 指令",frontmatter:{title:"属性绑定 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/8a9dd8/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/39.%E5%B1%9E%E6%80%A7%E7%BB%91%E5%AE%9A%20%E6%8C%87%E4%BB%A4.html",relativePath:"《前端》笔记《框架》/01.vue2/39.属性绑定 指令.md",key:"v-495bd5c0",path:"/pages/8a9dd8/",headersStr:null,content:'<img :src="photo" alt="" style="width: 150px;">\n\n<hr>\n\n<input type="text" :value="\'支持运算：\' + index + 3">\n',normalizedContent:'<img :src="photo" alt="" style="width: 150px;">\n\n<hr>\n\n<input type="text" :value="\'支持运算：\' + index + 3">\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"事件绑定 指令",frontmatter:{title:"事件绑定 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c1b76b/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/40.%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%20%E6%8C%87%E4%BB%A4.html",relativePath:"《前端》笔记《框架》/01.vue2/40.事件绑定 指令.md",key:"v-52b85f76",path:"/pages/c1b76b/",headersStr:null,content:'    使用步骤：\n        （1）绑定 @ 指令\n        （2）在 methods 中定义事件处理函数\n--\x3e\n\n\ncount 的值是：{{ count }}\n\n+1 -1\n\n\x3c!-- 事件 修饰符\n\n    语法：@click.事件修饰符\n\n    （1）prevent\n    作用：阻止默认行为\n\n    （2）stop\n    作用：阻止事件冒泡\n\n    （3）capture\n    作用：以捕获模式触发当前的事件处理函数\n\n    （4）once\n    作用：绑定的事件只触发1次\n\n    （5）self\n    作用：只有在 event.target 是当前元素自身时触发事件处理函数\n--\x3e\n<a  @click.prevent="sub(1, $event)" href="http://baidu.com">百度</a>\n\n\x3c!-- 按键 修饰符\n\n    语法：@keyup.按键修饰符\n\n    作用：监听按键\n\n--\x3e\n<input type="text" @keyup.esc="clearInput" value="123456">\n',normalizedContent:'    使用步骤：\n        （1）绑定 @ 指令\n        （2）在 methods 中定义事件处理函数\n--\x3e\n\n\ncount 的值是：{{ count }}\n\n+1 -1\n\n\x3c!-- 事件 修饰符\n\n    语法：@click.事件修饰符\n\n    （1）prevent\n    作用：阻止默认行为\n\n    （2）stop\n    作用：阻止事件冒泡\n\n    （3）capture\n    作用：以捕获模式触发当前的事件处理函数\n\n    （4）once\n    作用：绑定的事件只触发1次\n\n    （5）self\n    作用：只有在 event.target 是当前元素自身时触发事件处理函数\n--\x3e\n<a  @click.prevent="sub(1, $event)" href="http://baidu.com">百度</a>\n\n\x3c!-- 按键 修饰符\n\n    语法：@keyup.按键修饰符\n\n    作用：监听按键\n\n--\x3e\n<input type="text" @keyup.esc="clearinput" value="123456">\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"双向绑定 指令",frontmatter:{title:"双向绑定 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/823352/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/41.%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%20%E6%8C%87%E4%BB%A4.html",relativePath:"《前端》笔记《框架》/01.vue2/41.双向绑定 指令.md",key:"v-38841f26",path:"/pages/823352/",headersStr:null,content:'  \x3c!-- （1）number\n  作用：将用户输入的值转为 数值类型 --\x3e\n  <input type="text" v-model.number="n1"> + <input type="text" v-model.number="n2"> = <span>{{ n1 + n2 }}</span>\n\n  <hr>\n\n  \x3c!-- （2）trim\n  作用：将用户输入的首尾空白字符 删除 --\x3e\n  <input type="text" v-model.trim="username">\n  <button @click="showName">获取用户名</button>\n\n  <hr>\n\n  \x3c!-- （3）lazy\n  作用：在“change”时而非“input”时更新\n  作用：只有在表单失去焦点的时候才回去同步数据。可以提高性能 --\x3e\n  <input type="text" v-model.lazy="username">\n\n</div>\n<hr>\n\n<select v-model="city">\n  <option value="">请选择城市</option>\n  <option value="1">北京</option>\n  <option value="2">上海</option>\n  <option value="3">广州</option>\n</select>\n',normalizedContent:'  \x3c!-- （1）number\n  作用：将用户输入的值转为 数值类型 --\x3e\n  <input type="text" v-model.number="n1"> + <input type="text" v-model.number="n2"> = <span>{{ n1 + n2 }}</span>\n\n  <hr>\n\n  \x3c!-- （2）trim\n  作用：将用户输入的首尾空白字符 删除 --\x3e\n  <input type="text" v-model.trim="username">\n  <button @click="showname">获取用户名</button>\n\n  <hr>\n\n  \x3c!-- （3）lazy\n  作用：在“change”时而非“input”时更新\n  作用：只有在表单失去焦点的时候才回去同步数据。可以提高性能 --\x3e\n  <input type="text" v-model.lazy="username">\n\n</div>\n<hr>\n\n<select v-model="city">\n  <option value="">请选择城市</option>\n  <option value="1">北京</option>\n  <option value="2">上海</option>\n  <option value="3">广州</option>\n</select>\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"条件渲染 指令",frontmatter:{title:"条件渲染 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/3f52b2/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/42.%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%20%E6%8C%87%E4%BB%A4.html",relativePath:"《前端》笔记《框架》/01.vue2/42.条件渲染 指令.md",key:"v-294fa810",path:"/pages/3f52b2/",headersStr:null,content:'这是被 v-if 控制的元素\n\n\x3c!-- （2）v-show\n    作用：隐藏元素\n    原理：使用 display 来控制\n    应用场景：频繁切换元素的显示和隐藏时，性能更好\n--\x3e\n<p v-show="flag">这是被 v-show 控制的元素</p>\n\n<hr>\n\n\n<div v-if="type === \'A\'">优秀</div>\n<div v-else-if="type === \'B\'">良好</div>\n<div v-else-if="type === \'C\'">一般</div>\n<div v-else>差</div>\n',normalizedContent:'这是被 v-if 控制的元素\n\n\x3c!-- （2）v-show\n    作用：隐藏元素\n    原理：使用 display 来控制\n    应用场景：频繁切换元素的显示和隐藏时，性能更好\n--\x3e\n<p v-show="flag">这是被 v-show 控制的元素</p>\n\n<hr>\n\n\n<div v-if="type === \'a\'">优秀</div>\n<div v-else-if="type === \'b\'">良好</div>\n<div v-else-if="type === \'c\'">一般</div>\n<div v-else>差</div>\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"列表渲染 指令",frontmatter:{title:"列表渲染 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ff18e3/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/43.%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%20%E6%8C%87%E4%BB%A4.html",relativePath:"《前端》笔记《框架》/01.vue2/43.列表渲染 指令.md",key:"v-0c811db3",path:"/pages/ff18e3/",headersStr:null,content:"{{ index }}   {{ item.id }}   {{ item.name }}",normalizedContent:"{{ index }}   {{ item.id }}   {{ item.name }}",charsets:{},lastUpdated:"2022/06/27, 16:37:52"},{title:"登录",frontmatter:{title:"登录",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/e590af/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/44.%E7%99%BB%E5%BD%95.html",relativePath:"《前端》笔记《框架》/01.vue2/44.登录.md",key:"v-d67c0f5a",path:"/pages/e590af/",headers:[{level:2,title:"一、常见的维持登录状态的方案",slug:"一、常见的维持登录状态的方案",normalizedTitle:"一、常见的维持登录状态的方案",charIndex:36},{level:2,title:"（一）cookie",slug:"一-cookie",normalizedTitle:"（一）cookie",charIndex:55},{level:2,title:"（二）session",slug:"二-session",normalizedTitle:"（二）session",charIndex:98},{level:2,title:"（二）token",slug:"二-token",normalizedTitle:"（二）token",charIndex:143},{level:2,title:"例（通过请求参数携带 token）",slug:"例-通过请求参数携带-token",normalizedTitle:"例（通过请求参数携带 token）",charIndex:300},{level:2,title:"例（通过请求头携带 token）",slug:"例-通过请求头携带-token",normalizedTitle:"例（通过请求头携带 token）",charIndex:1021},{level:2,title:"二、在每次请求的请求头中添加 token 验证的 Authorization 字段",slug:"二、在每次请求的请求头中添加-token-验证的-authorization-字段",normalizedTitle:"二、在每次请求的请求头中添加 token 验证的 authorization 字段",charIndex:1262},{level:2,title:"二、退出登录",slug:"二、退出登录",normalizedTitle:"二、退出登录",charIndex:1470}],headersStr:"一、常见的维持登录状态的方案 （一）cookie （二）session （二）token 例（通过请求参数携带 token） 例（通过请求头携带 token） 二、在每次请求的请求头中添加 token 验证的 Authorization 字段 二、退出登录",content:"作用： 因为 http 是无状态的，所以需要记录用户的登录状态\n\n\n# 一、常见的维持登录状态的方案\n\n\n# （一）cookie\n\n特性： 在客户端记录状态\n\n应用场景： 不存在跨域问题\n\n\n# （二）session\n\n特性： 在服务器端记录状态\n\n应用场景： 不存在跨域问题\n\n\n# （二）token\n\n应用场景： 存在跨域问题\n\n原理： 1、客户端发送用户名、密码 2、服务器端验证通过之后生成该用户的 token 并响应给客户端 3、客户端转存 token 到 sessionStorage 中 4、后续所有请求都携带 token 5、服务端在根据这个 token 来判断你是哪个用户\n\n\n# 例（通过请求参数携带 token）\n\naxios.interceptors.request.use(function (config) {\n\n  -- 增\n  // 为 post 请求添加 token 参数\n  if (config.method === 'post' && !config.value) {\n    if (config.data) {\n      config.data.token = window.sessionStorage.getItem('token')\n    } else {\n      config.data = 'token=' + window.sessionStorage.getItem('token')\n    }\n  }\n  // 为 get 请求添加 token 参数\n  if (config.method === 'get' && config.data) {\n    config.url = config.url + '&token=' + window.sessionStorage.getItem('token')\n  } else if (config.method === 'get') {\n    config.url = config.url + '?token=' + window.sessionStorage.getItem('token')\n  }\n  --\n\n  const data = config.data\n  ...\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 例（通过请求头携带 token）\n\n// 请求拦截器\naxios.interceptors.request.use(config => {\n  // config：请求对象\n  // 为请求头对象，添加 Token 验证的 Authorization 字段\n  config.headers.Authorization = window.sessionStorage.getItem('token')\n  return config\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二、在每次请求的请求头中添加 token 验证的 Authorization 字段\n\n-- main.js\n\naxios.interceptors.request.use(config => {\n  config.headers.Authorization = window.sessionStorage.getItem('token')\n  return config\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 二、退出登录\n\n原理： 销毁 token\n\nlogout() {\n  window.sessionStorage.clear()\n  this.$router.push(\"/\")\n}\n\n\n1\n2\n3\n4\n",normalizedContent:"作用： 因为 http 是无状态的，所以需要记录用户的登录状态\n\n\n# 一、常见的维持登录状态的方案\n\n\n# （一）cookie\n\n特性： 在客户端记录状态\n\n应用场景： 不存在跨域问题\n\n\n# （二）session\n\n特性： 在服务器端记录状态\n\n应用场景： 不存在跨域问题\n\n\n# （二）token\n\n应用场景： 存在跨域问题\n\n原理： 1、客户端发送用户名、密码 2、服务器端验证通过之后生成该用户的 token 并响应给客户端 3、客户端转存 token 到 sessionstorage 中 4、后续所有请求都携带 token 5、服务端在根据这个 token 来判断你是哪个用户\n\n\n# 例（通过请求参数携带 token）\n\naxios.interceptors.request.use(function (config) {\n\n  -- 增\n  // 为 post 请求添加 token 参数\n  if (config.method === 'post' && !config.value) {\n    if (config.data) {\n      config.data.token = window.sessionstorage.getitem('token')\n    } else {\n      config.data = 'token=' + window.sessionstorage.getitem('token')\n    }\n  }\n  // 为 get 请求添加 token 参数\n  if (config.method === 'get' && config.data) {\n    config.url = config.url + '&token=' + window.sessionstorage.getitem('token')\n  } else if (config.method === 'get') {\n    config.url = config.url + '?token=' + window.sessionstorage.getitem('token')\n  }\n  --\n\n  const data = config.data\n  ...\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 例（通过请求头携带 token）\n\n// 请求拦截器\naxios.interceptors.request.use(config => {\n  // config：请求对象\n  // 为请求头对象，添加 token 验证的 authorization 字段\n  config.headers.authorization = window.sessionstorage.getitem('token')\n  return config\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 二、在每次请求的请求头中添加 token 验证的 authorization 字段\n\n-- main.js\n\naxios.interceptors.request.use(config => {\n  config.headers.authorization = window.sessionstorage.getitem('token')\n  return config\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 二、退出登录\n\n原理： 销毁 token\n\nlogout() {\n  window.sessionstorage.clear()\n  this.$router.push(\"/\")\n}\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"权限控制.进度条",frontmatter:{title:"权限控制.进度条",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fcfbbb/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/01.vue2/45.%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6-%E8%BF%9B%E5%BA%A6%E6%9D%A1.html",relativePath:"《前端》笔记《框架》/01.vue2/45.权限控制-进度条.md",key:"v-eaa560e4",path:"/pages/fcfbbb/",headersStr:null,content:"应用场景： （一）判断用户是否有 token，从而进行拦截或放行\n\n使用步骤： （1）src 目录中新建 permission.js\n\n（2）安装 nprogress 包（vue-element-admin 项目不需要安装） npm i nprogress@0.2.0\n\n（3）添加以下代码\n\nimport router from '@/router'\nimport nprogress from 'nprogress'\nimport 'nprogress/nprogress.css' // 引入进度条样式\n\n// 白名单\nconst whiteList = ['/login', '/404']\n// 前置守卫\nrouter.beforeEach((to, from, next) => {\n  // 开启进度条\n  nprogress.start()\n  // 判断是否有 token\n  if (sessionStorage.token) {\n    if (to.path === '/login') next('/')\n\n    next()\n  } else {\n    // 没有token的情况下\n      if (whiteList.indexOf(to.path) > -1) {\n        // 表示要去的地址在白名单\n        next()\n      } else {\n        next('/login')\n      }\n  }\n  // 解决手动切换地址时，进度条不关闭的问题\n  nprogress.done()\n})\n// 后置守卫\nrouter.afterEach(() => {\n  // 关闭进度条\n  nprogress.done()\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n（4）导入 permission.js （-- main.js）\n\nimport '@/permission.js'\n\n\n1\n",normalizedContent:"应用场景： （一）判断用户是否有 token，从而进行拦截或放行\n\n使用步骤： （1）src 目录中新建 permission.js\n\n（2）安装 nprogress 包（vue-element-admin 项目不需要安装） npm i nprogress@0.2.0\n\n（3）添加以下代码\n\nimport router from '@/router'\nimport nprogress from 'nprogress'\nimport 'nprogress/nprogress.css' // 引入进度条样式\n\n// 白名单\nconst whitelist = ['/login', '/404']\n// 前置守卫\nrouter.beforeeach((to, from, next) => {\n  // 开启进度条\n  nprogress.start()\n  // 判断是否有 token\n  if (sessionstorage.token) {\n    if (to.path === '/login') next('/')\n\n    next()\n  } else {\n    // 没有token的情况下\n      if (whitelist.indexof(to.path) > -1) {\n        // 表示要去的地址在白名单\n        next()\n      } else {\n        next('/login')\n      }\n  }\n  // 解决手动切换地址时，进度条不关闭的问题\n  nprogress.done()\n})\n// 后置守卫\nrouter.aftereach(() => {\n  // 关闭进度条\n  nprogress.done()\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n（4）导入 permission.js （-- main.js）\n\nimport '@/permission.js'\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"介绍",frontmatter:{title:"介绍",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/48e461/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/00.%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《框架》/02.vue3/00.介绍.md",key:"v-a9d48744",path:"/pages/48e461/",headersStr:null,content:"相比 vue2.x 新增功能： 1、性能提升，运行速度是 vue2.x 的 1.5倍 左右 2、体积更小，按需编译体积比vue2.x要更小 3、类型推断，更好的支持Ts（typescript） 4、高级给予，暴露了更底层的API和提供更先进的内置组件 5、组合API (composition api) ，能够更好的组织逻辑，封装逻辑，复用逻辑\n\n废弃功能： 1、过滤器 2、$on、$off、$once 实例方法 3、等\n\n安装 Vue3.x 调试工具： 下载：https://chrome.google.com/webstore/detail/vuejs-devtools/ljjemllljcmogpfapbkkighbhhppjdbg 在插件详细信息中打开：1、在无痕模式下启用 2、允许访问文件网址\n\n科普：Root：根节点（el 控制的区域） ",normalizedContent:"相比 vue2.x 新增功能： 1、性能提升，运行速度是 vue2.x 的 1.5倍 左右 2、体积更小，按需编译体积比vue2.x要更小 3、类型推断，更好的支持ts（typescript） 4、高级给予，暴露了更底层的api和提供更先进的内置组件 5、组合api (composition api) ，能够更好的组织逻辑，封装逻辑，复用逻辑\n\n废弃功能： 1、过滤器 2、$on、$off、$once 实例方法 3、等\n\n安装 vue3.x 调试工具： 下载：https://chrome.google.com/webstore/detail/vuejs-devtools/ljjemllljcmogpfapbkkighbhhppjdbg 在插件详细信息中打开：1、在无痕模式下启用 2、允许访问文件网址\n\n科普：root：根节点（el 控制的区域） ",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"项目初始化",frontmatter:{title:"项目初始化",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/10bec1/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/01.%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"《前端》笔记《框架》/02.vue3/01.项目初始化.md",key:"v-f54e7960",path:"/pages/10bec1/",headers:[{level:2,title:"（1）创建项目",slug:"_1-创建项目",normalizedTitle:"（1）创建项目",charIndex:25},{level:2,title:"（2）选择预设",slug:"_2-选择预设",normalizedTitle:"（2）选择预设",charIndex:80},{level:2,title:"（3）选择功能",slug:"_3-选择功能",normalizedTitle:"（3）选择功能",charIndex:204},{level:2,title:"（4）配置",slug:"_4-配置",normalizedTitle:"（4）配置",charIndex:364},{level:2,title:"1、下载 normalize.css 包",slug:"_1、下载-normalize-css-包",normalizedTitle:"1、下载 normalize.css 包",charIndex:13160},{level:2,title:"2、导入 规范化 css 代码（-- main.js）",slug:"_2、导入-规范化-css-代码-main-js",normalizedTitle:"2、导入 规范化 css 代码（-- main.js）",charIndex:13212},{level:2,title:"3、定义初始化样式（-- @/assets/styles/init.scss)",slug:"_3、定义初始化样式-assets-styles-init-scss",normalizedTitle:"3、定义初始化样式（-- @/assets/styles/init.scss)",charIndex:13273},{level:2,title:"4、导入 初始化样式（-- main.js）",slug:"_4、导入-初始化样式-main-js",normalizedTitle:"4、导入 初始化样式（-- main.js）",charIndex:15032},{level:2,title:"（1）下载 style-resources-loader 插件",slug:"_1-下载-style-resources-loader-插件",normalizedTitle:"（1）下载 style-resources-loader 插件",charIndex:15280},{level:2,title:"（2）配置（-- vue.config.js）",slug:"_2-配置-vue-config-js",normalizedTitle:"（2）配置（-- vue.config.js）",charIndex:15373},{level:2,title:"1、下载",slug:"_1、下载",normalizedTitle:"1、下载",charIndex:13160},{level:2,title:"2、完整引入（-- main.js）",slug:"_2、完整引入-main-js",normalizedTitle:"2、完整引入（-- main.js）",charIndex:16112},{level:2,title:"3、导入样式（-- 同上）",slug:"_3、导入样式-同上",normalizedTitle:"3、导入样式（-- 同上）",charIndex:16180},{level:2,title:"4、注册为 vue 的插件（-- 同上）",slug:"_4、注册为-vue-的插件-同上",normalizedTitle:"4、注册为 vue 的插件（-- 同上）",charIndex:16241},{level:2,title:"配置 ElementPlus 图标",slug:"配置-elementplus-图标",normalizedTitle:"配置 elementplus 图标",charIndex:16301},{level:3,title:"1、下载",slug:"_1、下载-2",normalizedTitle:"1、下载",charIndex:13160},{level:3,title:"2、完整引入（-- main.js）",slug:"_2、完整引入-main-js-2",normalizedTitle:"2、完整引入（-- main.js）",charIndex:16112},{level:3,title:"3、注册",slug:"_3、注册",normalizedTitle:"3、注册",charIndex:16461},{level:2,title:"1、下载 vuex-persistedstate 包",slug:"_1、下载-vuex-persistedstate-包",normalizedTitle:"1、下载 vuex-persistedstate 包",charIndex:16617},{level:2,title:"2、配置 vuex-persistedstate（重构）（-- store/index.js）",slug:"_2、配置-vuex-persistedstate-重构-store-index-js",normalizedTitle:"2、配置 vuex-persistedstate（重构）（-- store/index.js）",charIndex:16681},{level:2,title:"3、模块骨架示例（-- store/modules/新建 demo.js）",slug:"_3、模块骨架示例-store-modules-新建-demo-js",normalizedTitle:"3、模块骨架示例（-- store/modules/新建 demo.js）",charIndex:17109},{level:2,title:"1、下载 axios 包",slug:"_1、下载-axios-包",normalizedTitle:"1、下载 axios 包",charIndex:17815},{level:2,title:"2、封装 axios（-- utils/request.js）",slug:"_2、封装-axios-utils-request-js",normalizedTitle:"2、封装 axios（-- utils/request.js）",charIndex:17852},{level:2,title:"【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx）",slug:"【可选】解决请求参数格式和服务端参数格式不一致的问题-main-jx",normalizedTitle:"【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx）",charIndex:18582},{level:3,title:"1、下载 qs 包",slug:"_1、下载-qs-包",normalizedTitle:"1、下载 qs 包",charIndex:18786},{level:3,title:"2、导入 qs 包（-- utils/request.js）",slug:"_2、导入-qs-包-utils-request-js",normalizedTitle:"2、导入 qs 包（-- utils/request.js）",charIndex:18817},{level:3,title:"2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式（-- 同上）",slug:"_2、将-application-json-格式转换为-application-x-www-form-urlencoded-格式-同上",normalizedTitle:"2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式（-- 同上）",charIndex:18878},{level:2,title:"1、导入以下代码（-- utils/新建 auth.js）",slug:"_1、导入以下代码-utils-新建-auth-js",normalizedTitle:"1、导入以下代码（-- utils/新建 auth.js）",charIndex:19226},{level:2,title:"2、按需导入（-- store/modules/新建 user.js）",slug:"_2、按需导入-store-modules-新建-user-js",normalizedTitle:"2、按需导入（-- store/modules/新建 user.js）",charIndex:19584}],headersStr:"（1）创建项目 （2）选择预设 （3）选择功能 （4）配置 1、下载 normalize.css 包 2、导入 规范化 css 代码（-- main.js） 3、定义初始化样式（-- @/assets/styles/init.scss) 4、导入 初始化样式（-- main.js） （1）下载 style-resources-loader 插件 （2）配置（-- vue.config.js） 1、下载 2、完整引入（-- main.js） 3、导入样式（-- 同上） 4、注册为 vue 的插件（-- 同上） 配置 ElementPlus 图标 1、下载 2、完整引入（-- main.js） 3、注册 1、下载 vuex-persistedstate 包 2、配置 vuex-persistedstate（重构）（-- store/index.js） 3、模块骨架示例（-- store/modules/新建 demo.js） 1、下载 axios 包 2、封装 axios（-- utils/request.js） 【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx） 1、下载 qs 包 2、导入 qs 包（-- utils/request.js） 2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式（-- 同上） 1、导入以下代码（-- utils/新建 auth.js） 2、按需导入（-- store/modules/新建 user.js）",content:"# 使用 vue-cli 脚手架创建项目\n\n\n# （1）创建项目\n\nvue create zhengzhengrishang-vue3-shop-pc\n\n\n# （2）选择预设\n\n选择 手动配置项目\n\nDefault ([Vue 2] babel, eslint) Default (Vue 3) ([Vue 3] babel, eslint)\n\n> Manually select features\n\n\n# （3）选择功能\n\n> Choose Vue version Babel TypeScript Progressive Web App (PWA) Support Router Vuex CSS Pre-processors Linter / Formatter Unit Testing E2E Testing\n\n\n# （4）配置\n\nChoose a version of Vue.js that you want to start the project with // 选择 Vue.js 版本 2.x\n\n> 3.x\n\nUse history mode for router? // 是否使用 历史模式 的路由？关闭则使用 哈希模式 的路由（推荐哈希模式，兼容性更强） n\n\nPick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): // 选择 CSS 预处理器 Sass/SCSS (with dart-sass)\n\n> Sass/SCSS (with node-sass) Less Stylus\n\nPick a linter / formatter config: // 选择一套 ESLint 的语法规范 ESLint with error prevention only ESLint + Airbnb config\n\n> ESLint + Standard config ESLint + Prettier\n\nPick additional lint features: (Press to select, to toggle all, to invert selection)\n\n> Lint on save（保存时，进行代码规范的检查，并自动修复） Lint and fix on commit（提交时，进行代码规范的检查，并自动修复）\n\nWhere do you prefer placing config for Babel, ESLint, etc.?(Use arrow keys) // Babel, ESLint 这些第三方插件的配置文件该如何创建\n\n> In dedicated config files // 放在独立的配置文件中 In package.json // 放在 package.json 中\n\nSave this as a preset for future projects? (y/N) // 是否将上面配置的信息存储到新的预设中 N\n\nPick the package manager to use when installing dependencies: // 选择如何安装项目中的依赖包\n\n> Use Npm Use Yarn\n\n\n# 配置 ESLint（可以根据个人的喜好配置）（-- .eslintrc.js）\n\nmodule.exports = {\n  root: true, // 当前项目使用这个配置文件, 不会往父级目录找 .eslintrc.js 文件\n  parserOptions: { // 对新语法使用eslint\n    parser: 'babel-eslint',  // 使用 babel-eslint 来解析新语法 ES6\n    sourceType: 'module'\n  },\n  env: { // 指定 eslint 启动环境\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: { // 自定义规则\n    /* value 值：\n    （1）\"off\"/0：关闭规则\n    （2）\"warn\"/1：将规则视为一个警告（不会影响退出码）, 只警告，不会退出程序\n    （3）\"error\"/2：将规则视为一个错误 (退出码为1)，报错并退出程序\n    */\n\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowFirstLine\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"PascalCase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowSingleLine': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'SwitchCase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforeColon': false,\n      'afterColon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newIsCap': true,\n      'capIsNew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowLoop': false,\n      'allowSwitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {  // 不允许有连续多行空行\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultAssignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': 1,\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidEscape': true,\n      'allowTemplateLiterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'object-curly-spacing': [2, 'always', {\n      objectsInObjects: false\n    }],\n    'array-bracket-spacing': [2, 'never'],\n    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off', // 上线环境用打印就报警告, 开发环境关闭此规则\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off', // debugger 可以终止代码执行\n    // 要求使用骆驼拼写法\n    // 'camelcase': 'none',\n    // 要求使用 === 和 !==\n    'eqeqeq': 0,\n    // 函数和圆括号之间没有空格\n    'space-before-function-paren': 0,\n    // 要求或禁止使用拖尾逗号\n    // \"comma-dangle\": [\"error\", {\n    //   \"arrays\": \"always-multiline\",\n    //   \"objects\": \"always-multiline\",\n    //   \"imports\": \"never\",\n    //   \"exports\": \"always\",\n    //   \"functions\": \"never\"\n    // }],\n    // 要求或禁止文件末尾保留一行空行\n    'eol-last': ['error', 'always'],\n    // 要求对象字面量属性名称用引号括起来：\"consistent\" 要求对象字面量属性名称使用一致的引号，要么全部用引号，要么都不用\n    'quote-props': ['error', 'consistent'],\n    // 要求注释后要有一个空格\n    'spaced-comment': ['error', 'always'],\n    // 要求操作符前后都要有一个空格\n    'space-infix-ops': 'error',\n    // 要求圆括号中的前后都要有一个空格\n    /* \"space-in-parens\": [\"error\", \"always\"], */\n    // 要求花括号中的前后都要有一个空格\n    'object-curly-spacing': ['error', 'always'],\n    // 要求数组中逗号后要使用一个空格\n    'comma-spacing': ['error', { 'before': false, 'after': true }],\n    // 自动补充分号\n    // \"semi\": [2, \"always\"],\n    // 禁止多个空格\n    'no-multi-spaces': 'error',\n    // 使用单引号\n    'quotes': ['error', 'single'],\n    //在computed properties中禁用异步actions\n    'vue/no-async-in-computed-properties': 'error',\n    //不允许重复的keys\n    'vue/no-dupe-keys': 'error',\n    //不允许重复的attributes\n    'vue/no-duplicate-attributes': 'warn',\n    //在 <template> 标签下不允许解析错误\n    'vue/no-parsing-error': [\n      'error',\n      {\n        'x-invalid-end-tag': false,\n      },\n    ],\n    //不允许覆盖保留关键字\n    'vue/no-reserved-keys': 'error',\n    //强制data必须是一个带返回值的函数\n    // 'vue/no-shared-component-data': 'error',\n    //不允许在computed properties中出现副作用。\n    'vue/no-side-effects-in-computed-properties': 'error',\n    //<template>不允许key属性\n    'vue/no-template-key': 'warn',\n    //在 <textarea> 中不允许mustaches\n    'vue/no-textarea-mustache': 'error',\n    //不允许在v-for或者范围内的属性出现未使用的变量定义\n    'vue/no-unused-vars': 'warn',\n    //<component>标签需要v-bind:is属性\n    'vue/require-component-is': 'error',\n    // render 函数必须有一个返回值\n    'vue/require-render-return': 'error',\n    //保证 v-bind:key 和 v-for 指令成对出现\n    'vue/require-v-for-key': 'error',\n    // 检查默认的prop值是否有效\n    'vue/require-valid-default-prop': 'error',\n    // 保证computed属性中有return语句\n    'vue/return-in-computed-property': 'error',\n    // 强制校验 template 根节点\n    'vue/valid-template-root': 'error',\n    // 强制校验 v-bind 指令\n    'vue/valid-v-bind': 'error',\n    // 强制校验 v-cloak 指令\n    'vue/valid-v-cloak': 'error',\n    // 强制校验 v-else-if 指令\n    'vue/valid-v-else-if': 'error',\n    // 强制校验 v-else 指令\n    'vue/valid-v-else': 'error',\n    // 强制校验 v-for 指令\n    'vue/valid-v-for': 'error',\n    // 强制校验 v-html 指令\n    'vue/valid-v-html': 'error',\n    // 强制校验 v-if 指令\n    'vue/valid-v-if': 'error',\n    // 强制校验 v-model 指令\n    'vue/valid-v-model': 'error',\n    // 强制校验 v-on 指令\n    'vue/valid-v-on': 'error',\n    // 强制校验 v-once 指令\n    'vue/valid-v-once': 'error',\n    // 强制校验 v-pre 指令\n    'vue/valid-v-pre': 'error',\n    // 强制校验 v-show 指令\n    'vue/valid-v-show': 'error',\n    // 强制校验 v-text 指令\n    'vue/valid-v-text': 'error',\n    'vue/comment-directive': 0,\n    // 标签内没有内容时，删除结尾标签\n    \"vue/html-self-closing\": [\"off\", {\n      \"html\": {\n        \"void\": \"never\",\n        \"normal\": \"always\",\n        \"component\": \"always\"\n      },\n      \"svg\": \"always\",\n      \"math\": \"always\"\n    }]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n\n\n\n# 删除多余的文件和代码\n\n * 删除 assets/logo.png\n * 删除 components 目录里的所有文件\n * 删除 router 里的 index.js 里的 routes 数组中的所有路由\n * 删除 views 目录中的所有文件\n * 删除 App.vue 中的示例代码\n\n\n# 添加目录结构\n\nnode_modules                         // 存放 第三方包\npublic                               // 存放 页面图标、index.html\nsrc                                  // 存放 项目源代码\n  api                     【手动创建】 // 存放 可复用的 api 接口      \n  assets                             // 存放 静态资源\n    product               【手动创建】 // 存放 商品图片（大图片）\n    images                【手动创建】 // 存放 小图标（小图片）（该目录里的图片会被转换为 base64）     \n    styles                【手动创建】 // 存放 CSS样式表       \n      mixins.scss         【手动创建】 // 样式函数混入\n      init.scss           【手动创建】 // 样式初始化\n  components                         // 存放 组件\n  router                             // 存放 路由模块\n  store                              // vuex（状态管理）\n    modules               【手动创建】 // 存储数据模块。让 vuex 中的数据持久化    \n  utils                   【手动创建】 // 存放 工具性质的函数和模块       \n    request.js            【手动创建】 // 请求相关配置        \n  vender                  【手动创建】 // 手动添加的第三方 js 库（npm 下载不到的）     \n  views                              // 存放 通过路由动态切换的组件\n  storage                 【手动创建】 // 数据存储工具箱\n  App.vue                            // 项目 根组件\n  main.js                            // 项目 入口文件（主要职责：创建 vue 应用）\n  store.js                           // vuex 配置文件\n  theme.scss              【手动创建】 // 主题定制                    \n.browserslistrc                      // 将 css 转换为浏览器兼容的版本（在 CSS 前面添加浏览器对应的兼容前缀）\n.editorconfig                        // 编辑器配置文件（配置缩进、空格、字体大小 等）\n.eslintignore             【手动创建】 // ESLint 忽略清单\n.eslintrc.js                         // ESLint 配置文件\n.gitignore                           // 远程仓库忽略清单\nbabel.config.js                      // babel 配置文件（ES降级配置文件）\npackage.json                         // 包管理配置文件\nvue.config.js             【手动创建】 // 项目配置文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 样式初始化\n\n\n# 1、下载 normalize.css 包\n\nnpm i normalize.css@8.0.1\n\n\n# 2、导入 规范化 css 代码（-- main.js）\n\nimport 'normalize.css'\n\n\n1\n\n\n\n# 3、定义初始化样式（-- @/assets/styles/init.scss)\n\nhtml {\n  height: 100%;\n  box-sizing: border-box;\n}\n\nbody {\n  height: 100%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizeLegibility;\n  font-family: Helvetica Neue, Helvetica, Arial, Microsoft Yahei, Hiragino Sans GB, Heiti SC, WenQuanYi Micro Hei, sans-serif;\n  font-weight: bold;\n}\n\nul,\nh1,\nh3,\nh4,\np,\ndl,\ndd {\n  padding: 0;\n  margin: 0;\n}\n\na {\n  text-decoration: none;\n  color: #333;\n  outline: none;\n}\n\ni {\n  font-style: normal;\n}\n\ninput {\n  font-weight: bold;\n}\n\ninput[type=\"text\"],\ninput[type=\"search\"],\ninput[type=\"password\"], \ninput[type=\"checkbox\"]{\n  padding: 0;\n  outline: none;\n  border: none;\n  -webkit-appearance: none;\n  &::placeholder{\n    color: #ccc;\n  }\n}\n\nimg {\n  vertical-align: middle;\n}\n\nul {\n  list-style: none;\n}\n\n#app {\n  background: #f5f5f5;\n  user-select: none;\n}\n\n.container {\n  width: 1240px;\n  margin: 0 auto;\n  position: relative;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.ellipsis-2 {\n  word-break: break-all;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n}\n\n.fl {\n  float: left;\n}\n\n.fr {\n  float: right;\n}\n\n.clearfix:after {\n  content: \".\";\n  display: block;\n  visibility: hidden;\n  height: 0;\n  line-height: 0;\n  clear: both;\n}\n\n.w {\n  width: 1300px;\n  margin: 0 auto;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n\n\n\n# 4、导入 初始化样式（-- main.js）\n\nimport '@/assets/styles/init.scss'\n\n\n1\n\n\n\n# 定义 Demo 路由【可选】（个人喜好，用于测试代码）\n\n\n# 主题配置（-- theme.scss）\n\n// 主色\n$color: #E82626;\n\n\n1\n2\n\n\n\n# 自动引入公用 变量、混入\n\n作用： 解决每次使用公用变量和混入时都要单独引入文件的问题\n\n原理： 使用 vue-cli 中的 style-resources-loader 插件\n\n\n# （1）下载 style-resources-loader 插件\n\nvue add style-resources-loader\n\n * 用哪个预处理器就选哪个，这里选 scss\n\n\n# （2）配置（-- vue.config.js）\n\n-- 增\nconst path = require('path')\n--\n\nmodule.exports = {\n  pluginOptions: {\n    'style-resources-loader': {\n      preProcessor: 'scss',\n      patterns:[ // 需要自动引入的文件\n\n        -- 增\n        path.join(__dirname, './src/theme.scss'),\n        path.join(__dirname, './src/styles/mixins.scss')\n        --\n\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 配置 ESLint 忽略清单（-- .eslintignore）\n\n/dist\n/src/vender\n\n\n1\n2\n\n\n\n# 重构 main.js\n\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\n\nconst app = createApp(App)\n\napp.use(store).use(router)..mount('#app')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 配置 ElementPlus\n\n\n# 1、下载\n\nnpm i ElementPlus@2.2.5\n\n\n# 2、完整引入（-- main.js）\n\nimport ElementPlus from 'element-plus'\n\n\n1\n\n\n\n# 3、导入样式（-- 同上）\n\nimport 'element-plus/dist/index.css'\n\n\n1\n\n\n\n# 4、注册为 vue 的插件（-- 同上）\n\napp.xxx.use(ElementPlus).xxx\n\n\n1\n\n\n\n# 配置 ElementPlus 图标\n\n\n# 1、下载\n\nnpm i @element-plus/icons-vue@2.0.4\n\n\n# 2、完整引入（-- main.js）\n\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\n\n\n1\n\n\n\n# 3、注册\n\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\n\n\n1\n2\n3\n\n\n\n# 配置 vuex-persistedstate 数据持久化\n\n\n# 1、下载 vuex-persistedstate 包\n\nnpm i vuex-persistedstate@4.1.0\n\n\n# 2、配置 vuex-persistedstate（重构）（-- store/index.js）\n\nimport { createStore } from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\n\nimport demo from '@/store/modules/demo.js'\n\nexport default createStore({\n  modules: { // 注册模块\n    demo\n  },\n  plugins: [\n    createPersistedState({ // 数据持久化插件 配置\n      key: 'store', // 本地仓库名字\n      paths: ['demo'] // 指定需要持久化的模块\n    })\n  ]\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 3、模块骨架示例（-- store/modules/新建 demo.js）\n\n// import { getUsernameLogin } from '@/api/user-management.js'\n\nexport default {\n  namespaced: true,\n  state() { // 公共数据\n    return {\n      token: ''\n    }\n  },\n  mutations() { // 修改 store 中的数据\n    return {\n      setToken(state, token) {\n        state.token = token\n      }\n    }\n  },\n  actions() { // 处理异步任务\n    return {\n      // async getUsernameLogin(context, data) { // 用户登录[用户名]\n      //   const result = await getUsernameLogin(data)\n      //   context.commit('setToken', result)\n      // }\n    }\n  },\n  getter() { // 计算属性。监听 state 数据\n    return {\n\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 封装 axios\n\n\n# 1、下载 axios 包\n\nnpm i axios@0.25.0\n\n\n# 2、封装 axios（-- utils/request.js）\n\nimport axios from 'axios'\nimport { Message } from 'element-ui'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: '/api', // 请求根路径\n  timeout: 8000 // 请求超时时间\n})\n\n// 请求 拦截器\nservice.interceptors.request.use(request => {\n  return request\n}, error => {\n  return Promise.reject(error)\n})\n\n// 响应 拦截器\nservice.interceptors.response.use(response => {\n  // 返回响应结果\n  if (response.data.msg === 'success') {\n    return response.data.data\n  } \n  Message.error(response.data.msg)\n  // 把异步API执行失败的结果传递出去\n  return Promise.reject(response.data.msg)\n}, error => {\n  return Promise.reject(error)\n})\n\nexport default service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx）\n\n解决方法： 将请求参数转换成字符串格式。因为 content-type 会根据请求参数的格式自动变换请求格式\n\n * application/x-www-form-urlencoded 格式：categoryId=263919\n * application/json 格式：{\"categoryId\": 263919}\n\n\n# 1、下载 qs 包\n\nnpm i qs@6.10.3\n\n\n# 2、导入 qs 包（-- utils/request.js）\n\nimport qs from 'qs'\n\n\n1\n\n\n\n# 2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式（-- 同上）\n\n// 请求 拦截器\naxios.interceptors.request.use(request => {\n\n  -- 增    \n  if (request.data) {\n    request.data = qs.stringify(request.data) // 将 application/json 格式转换为 application/x-www-form-urlencoded 格式\n  }\n  --\n\n  return request\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 配置 cookie 库\n\n\n# 1、导入以下代码（-- utils/新建 auth.js）\n\nimport Cookies from 'js-cookie'\n\nconst TokenKey = 'vue_admin_template_token'\n\nexport function getToken() {\n  return Cookies.get(TokenKey)\n}\n\nexport function setToken(token) {\n  return Cookies.set(TokenKey, token)\n}\n\nexport function removeToken() {\n  return Cookies.remove(TokenKey)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 2、按需导入（-- store/modules/新建 user.js）\n\nimport { getToken, setToken, removeToken, setTimeStamp } from '@/utils/auth'\n\n\n1\n\n\n\n# 配置 开发 环境下的接口代理（-- vue.config.js）\n\nmodule.exports = {\n  devServer: { // 开发环境下的服务器配置\n    host: 'localhost',\n    port: 8080,\n    // 代理配置\n    proxy:{\n      // 拦截携带 /api 的接口\n      '/api': {\n        // 代理到的目标地址\n        target: 'https://api.it120.cc/zcr',\n        // 是否开启跨域\n        changeOrigin: true,\n        // 路径重写\n        pathRewrite:{\n          // 将 /api 转换为 空\n          '^/api': ''\n        }\n      }\n    }\n  },\n  configureWebpack: {\n    devtool: 'source-map'\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 【可选】为空目录添加 .gitkeep（解决远程仓库不能上传空目录的问题）\n\n\n# 【可选】配置远程仓库",normalizedContent:"# 使用 vue-cli 脚手架创建项目\n\n\n# （1）创建项目\n\nvue create zhengzhengrishang-vue3-shop-pc\n\n\n# （2）选择预设\n\n选择 手动配置项目\n\ndefault ([vue 2] babel, eslint) default (vue 3) ([vue 3] babel, eslint)\n\n> manually select features\n\n\n# （3）选择功能\n\n> choose vue version babel typescript progressive web app (pwa) support router vuex css pre-processors linter / formatter unit testing e2e testing\n\n\n# （4）配置\n\nchoose a version of vue.js that you want to start the project with // 选择 vue.js 版本 2.x\n\n> 3.x\n\nuse history mode for router? // 是否使用 历史模式 的路由？关闭则使用 哈希模式 的路由（推荐哈希模式，兼容性更强） n\n\npick a css pre-processor (postcss, autoprefixer and css modules are supported by default): // 选择 css 预处理器 sass/scss (with dart-sass)\n\n> sass/scss (with node-sass) less stylus\n\npick a linter / formatter config: // 选择一套 eslint 的语法规范 eslint with error prevention only eslint + airbnb config\n\n> eslint + standard config eslint + prettier\n\npick additional lint features: (press to select, to toggle all, to invert selection)\n\n> lint on save（保存时，进行代码规范的检查，并自动修复） lint and fix on commit（提交时，进行代码规范的检查，并自动修复）\n\nwhere do you prefer placing config for babel, eslint, etc.?(use arrow keys) // babel, eslint 这些第三方插件的配置文件该如何创建\n\n> in dedicated config files // 放在独立的配置文件中 in package.json // 放在 package.json 中\n\nsave this as a preset for future projects? (y/n) // 是否将上面配置的信息存储到新的预设中 n\n\npick the package manager to use when installing dependencies: // 选择如何安装项目中的依赖包\n\n> use npm use yarn\n\n\n# 配置 eslint（可以根据个人的喜好配置）（-- .eslintrc.js）\n\nmodule.exports = {\n  root: true, // 当前项目使用这个配置文件, 不会往父级目录找 .eslintrc.js 文件\n  parseroptions: { // 对新语法使用eslint\n    parser: 'babel-eslint',  // 使用 babel-eslint 来解析新语法 es6\n    sourcetype: 'module'\n  },\n  env: { // 指定 eslint 启动环境\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: { // 自定义规则\n    /* value 值：\n    （1）\"off\"/0：关闭规则\n    （2）\"warn\"/1：将规则视为一个警告（不会影响退出码）, 只警告，不会退出程序\n    （3）\"error\"/2：将规则视为一个错误 (退出码为1)，报错并退出程序\n    */\n\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowfirstline\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"pascalcase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowsingleline': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'switchcase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforecolon': false,\n      'aftercolon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newiscap': true,\n      'capisnew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowloop': false,\n      'allowswitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {  // 不允许有连续多行空行\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultassignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': 1,\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidescape': true,\n      'allowtemplateliterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'object-curly-spacing': [2, 'always', {\n      objectsinobjects: false\n    }],\n    'array-bracket-spacing': [2, 'never'],\n    'no-console': process.env.node_env === 'production' ? 'warn' : 'off', // 上线环境用打印就报警告, 开发环境关闭此规则\n    'no-debugger': process.env.node_env === 'production' ? 'warn' : 'off', // debugger 可以终止代码执行\n    // 要求使用骆驼拼写法\n    // 'camelcase': 'none',\n    // 要求使用 === 和 !==\n    'eqeqeq': 0,\n    // 函数和圆括号之间没有空格\n    'space-before-function-paren': 0,\n    // 要求或禁止使用拖尾逗号\n    // \"comma-dangle\": [\"error\", {\n    //   \"arrays\": \"always-multiline\",\n    //   \"objects\": \"always-multiline\",\n    //   \"imports\": \"never\",\n    //   \"exports\": \"always\",\n    //   \"functions\": \"never\"\n    // }],\n    // 要求或禁止文件末尾保留一行空行\n    'eol-last': ['error', 'always'],\n    // 要求对象字面量属性名称用引号括起来：\"consistent\" 要求对象字面量属性名称使用一致的引号，要么全部用引号，要么都不用\n    'quote-props': ['error', 'consistent'],\n    // 要求注释后要有一个空格\n    'spaced-comment': ['error', 'always'],\n    // 要求操作符前后都要有一个空格\n    'space-infix-ops': 'error',\n    // 要求圆括号中的前后都要有一个空格\n    /* \"space-in-parens\": [\"error\", \"always\"], */\n    // 要求花括号中的前后都要有一个空格\n    'object-curly-spacing': ['error', 'always'],\n    // 要求数组中逗号后要使用一个空格\n    'comma-spacing': ['error', { 'before': false, 'after': true }],\n    // 自动补充分号\n    // \"semi\": [2, \"always\"],\n    // 禁止多个空格\n    'no-multi-spaces': 'error',\n    // 使用单引号\n    'quotes': ['error', 'single'],\n    //在computed properties中禁用异步actions\n    'vue/no-async-in-computed-properties': 'error',\n    //不允许重复的keys\n    'vue/no-dupe-keys': 'error',\n    //不允许重复的attributes\n    'vue/no-duplicate-attributes': 'warn',\n    //在 <template> 标签下不允许解析错误\n    'vue/no-parsing-error': [\n      'error',\n      {\n        'x-invalid-end-tag': false,\n      },\n    ],\n    //不允许覆盖保留关键字\n    'vue/no-reserved-keys': 'error',\n    //强制data必须是一个带返回值的函数\n    // 'vue/no-shared-component-data': 'error',\n    //不允许在computed properties中出现副作用。\n    'vue/no-side-effects-in-computed-properties': 'error',\n    //<template>不允许key属性\n    'vue/no-template-key': 'warn',\n    //在 <textarea> 中不允许mustaches\n    'vue/no-textarea-mustache': 'error',\n    //不允许在v-for或者范围内的属性出现未使用的变量定义\n    'vue/no-unused-vars': 'warn',\n    //<component>标签需要v-bind:is属性\n    'vue/require-component-is': 'error',\n    // render 函数必须有一个返回值\n    'vue/require-render-return': 'error',\n    //保证 v-bind:key 和 v-for 指令成对出现\n    'vue/require-v-for-key': 'error',\n    // 检查默认的prop值是否有效\n    'vue/require-valid-default-prop': 'error',\n    // 保证computed属性中有return语句\n    'vue/return-in-computed-property': 'error',\n    // 强制校验 template 根节点\n    'vue/valid-template-root': 'error',\n    // 强制校验 v-bind 指令\n    'vue/valid-v-bind': 'error',\n    // 强制校验 v-cloak 指令\n    'vue/valid-v-cloak': 'error',\n    // 强制校验 v-else-if 指令\n    'vue/valid-v-else-if': 'error',\n    // 强制校验 v-else 指令\n    'vue/valid-v-else': 'error',\n    // 强制校验 v-for 指令\n    'vue/valid-v-for': 'error',\n    // 强制校验 v-html 指令\n    'vue/valid-v-html': 'error',\n    // 强制校验 v-if 指令\n    'vue/valid-v-if': 'error',\n    // 强制校验 v-model 指令\n    'vue/valid-v-model': 'error',\n    // 强制校验 v-on 指令\n    'vue/valid-v-on': 'error',\n    // 强制校验 v-once 指令\n    'vue/valid-v-once': 'error',\n    // 强制校验 v-pre 指令\n    'vue/valid-v-pre': 'error',\n    // 强制校验 v-show 指令\n    'vue/valid-v-show': 'error',\n    // 强制校验 v-text 指令\n    'vue/valid-v-text': 'error',\n    'vue/comment-directive': 0,\n    // 标签内没有内容时，删除结尾标签\n    \"vue/html-self-closing\": [\"off\", {\n      \"html\": {\n        \"void\": \"never\",\n        \"normal\": \"always\",\n        \"component\": \"always\"\n      },\n      \"svg\": \"always\",\n      \"math\": \"always\"\n    }]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n\n\n\n# 删除多余的文件和代码\n\n * 删除 assets/logo.png\n * 删除 components 目录里的所有文件\n * 删除 router 里的 index.js 里的 routes 数组中的所有路由\n * 删除 views 目录中的所有文件\n * 删除 app.vue 中的示例代码\n\n\n# 添加目录结构\n\nnode_modules                         // 存放 第三方包\npublic                               // 存放 页面图标、index.html\nsrc                                  // 存放 项目源代码\n  api                     【手动创建】 // 存放 可复用的 api 接口      \n  assets                             // 存放 静态资源\n    product               【手动创建】 // 存放 商品图片（大图片）\n    images                【手动创建】 // 存放 小图标（小图片）（该目录里的图片会被转换为 base64）     \n    styles                【手动创建】 // 存放 css样式表       \n      mixins.scss         【手动创建】 // 样式函数混入\n      init.scss           【手动创建】 // 样式初始化\n  components                         // 存放 组件\n  router                             // 存放 路由模块\n  store                              // vuex（状态管理）\n    modules               【手动创建】 // 存储数据模块。让 vuex 中的数据持久化    \n  utils                   【手动创建】 // 存放 工具性质的函数和模块       \n    request.js            【手动创建】 // 请求相关配置        \n  vender                  【手动创建】 // 手动添加的第三方 js 库（npm 下载不到的）     \n  views                              // 存放 通过路由动态切换的组件\n  storage                 【手动创建】 // 数据存储工具箱\n  app.vue                            // 项目 根组件\n  main.js                            // 项目 入口文件（主要职责：创建 vue 应用）\n  store.js                           // vuex 配置文件\n  theme.scss              【手动创建】 // 主题定制                    \n.browserslistrc                      // 将 css 转换为浏览器兼容的版本（在 css 前面添加浏览器对应的兼容前缀）\n.editorconfig                        // 编辑器配置文件（配置缩进、空格、字体大小 等）\n.eslintignore             【手动创建】 // eslint 忽略清单\n.eslintrc.js                         // eslint 配置文件\n.gitignore                           // 远程仓库忽略清单\nbabel.config.js                      // babel 配置文件（es降级配置文件）\npackage.json                         // 包管理配置文件\nvue.config.js             【手动创建】 // 项目配置文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 样式初始化\n\n\n# 1、下载 normalize.css 包\n\nnpm i normalize.css@8.0.1\n\n\n# 2、导入 规范化 css 代码（-- main.js）\n\nimport 'normalize.css'\n\n\n1\n\n\n\n# 3、定义初始化样式（-- @/assets/styles/init.scss)\n\nhtml {\n  height: 100%;\n  box-sizing: border-box;\n}\n\nbody {\n  height: 100%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizelegibility;\n  font-family: helvetica neue, helvetica, arial, microsoft yahei, hiragino sans gb, heiti sc, wenquanyi micro hei, sans-serif;\n  font-weight: bold;\n}\n\nul,\nh1,\nh3,\nh4,\np,\ndl,\ndd {\n  padding: 0;\n  margin: 0;\n}\n\na {\n  text-decoration: none;\n  color: #333;\n  outline: none;\n}\n\ni {\n  font-style: normal;\n}\n\ninput {\n  font-weight: bold;\n}\n\ninput[type=\"text\"],\ninput[type=\"search\"],\ninput[type=\"password\"], \ninput[type=\"checkbox\"]{\n  padding: 0;\n  outline: none;\n  border: none;\n  -webkit-appearance: none;\n  &::placeholder{\n    color: #ccc;\n  }\n}\n\nimg {\n  vertical-align: middle;\n}\n\nul {\n  list-style: none;\n}\n\n#app {\n  background: #f5f5f5;\n  user-select: none;\n}\n\n.container {\n  width: 1240px;\n  margin: 0 auto;\n  position: relative;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.ellipsis-2 {\n  word-break: break-all;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n}\n\n.fl {\n  float: left;\n}\n\n.fr {\n  float: right;\n}\n\n.clearfix:after {\n  content: \".\";\n  display: block;\n  visibility: hidden;\n  height: 0;\n  line-height: 0;\n  clear: both;\n}\n\n.w {\n  width: 1300px;\n  margin: 0 auto;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n\n\n\n# 4、导入 初始化样式（-- main.js）\n\nimport '@/assets/styles/init.scss'\n\n\n1\n\n\n\n# 定义 demo 路由【可选】（个人喜好，用于测试代码）\n\n\n# 主题配置（-- theme.scss）\n\n// 主色\n$color: #e82626;\n\n\n1\n2\n\n\n\n# 自动引入公用 变量、混入\n\n作用： 解决每次使用公用变量和混入时都要单独引入文件的问题\n\n原理： 使用 vue-cli 中的 style-resources-loader 插件\n\n\n# （1）下载 style-resources-loader 插件\n\nvue add style-resources-loader\n\n * 用哪个预处理器就选哪个，这里选 scss\n\n\n# （2）配置（-- vue.config.js）\n\n-- 增\nconst path = require('path')\n--\n\nmodule.exports = {\n  pluginoptions: {\n    'style-resources-loader': {\n      preprocessor: 'scss',\n      patterns:[ // 需要自动引入的文件\n\n        -- 增\n        path.join(__dirname, './src/theme.scss'),\n        path.join(__dirname, './src/styles/mixins.scss')\n        --\n\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 配置 eslint 忽略清单（-- .eslintignore）\n\n/dist\n/src/vender\n\n\n1\n2\n\n\n\n# 重构 main.js\n\nimport { createapp } from 'vue'\nimport app from './app.vue'\nimport router from './router'\nimport store from './store'\n\nconst app = createapp(app)\n\napp.use(store).use(router)..mount('#app')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 配置 elementplus\n\n\n# 1、下载\n\nnpm i elementplus@2.2.5\n\n\n# 2、完整引入（-- main.js）\n\nimport elementplus from 'element-plus'\n\n\n1\n\n\n\n# 3、导入样式（-- 同上）\n\nimport 'element-plus/dist/index.css'\n\n\n1\n\n\n\n# 4、注册为 vue 的插件（-- 同上）\n\napp.xxx.use(elementplus).xxx\n\n\n1\n\n\n\n# 配置 elementplus 图标\n\n\n# 1、下载\n\nnpm i @element-plus/icons-vue@2.0.4\n\n\n# 2、完整引入（-- main.js）\n\nimport * as elementplusiconsvue from '@element-plus/icons-vue'\n\n\n1\n\n\n\n# 3、注册\n\nfor (const [key, component] of object.entries(elementplusiconsvue)) {\n  app.component(key, component)\n}\n\n\n1\n2\n3\n\n\n\n# 配置 vuex-persistedstate 数据持久化\n\n\n# 1、下载 vuex-persistedstate 包\n\nnpm i vuex-persistedstate@4.1.0\n\n\n# 2、配置 vuex-persistedstate（重构）（-- store/index.js）\n\nimport { createstore } from 'vuex'\nimport createpersistedstate from 'vuex-persistedstate'\n\nimport demo from '@/store/modules/demo.js'\n\nexport default createstore({\n  modules: { // 注册模块\n    demo\n  },\n  plugins: [\n    createpersistedstate({ // 数据持久化插件 配置\n      key: 'store', // 本地仓库名字\n      paths: ['demo'] // 指定需要持久化的模块\n    })\n  ]\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 3、模块骨架示例（-- store/modules/新建 demo.js）\n\n// import { getusernamelogin } from '@/api/user-management.js'\n\nexport default {\n  namespaced: true,\n  state() { // 公共数据\n    return {\n      token: ''\n    }\n  },\n  mutations() { // 修改 store 中的数据\n    return {\n      settoken(state, token) {\n        state.token = token\n      }\n    }\n  },\n  actions() { // 处理异步任务\n    return {\n      // async getusernamelogin(context, data) { // 用户登录[用户名]\n      //   const result = await getusernamelogin(data)\n      //   context.commit('settoken', result)\n      // }\n    }\n  },\n  getter() { // 计算属性。监听 state 数据\n    return {\n\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 封装 axios\n\n\n# 1、下载 axios 包\n\nnpm i axios@0.25.0\n\n\n# 2、封装 axios（-- utils/request.js）\n\nimport axios from 'axios'\nimport { message } from 'element-ui'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseurl: '/api', // 请求根路径\n  timeout: 8000 // 请求超时时间\n})\n\n// 请求 拦截器\nservice.interceptors.request.use(request => {\n  return request\n}, error => {\n  return promise.reject(error)\n})\n\n// 响应 拦截器\nservice.interceptors.response.use(response => {\n  // 返回响应结果\n  if (response.data.msg === 'success') {\n    return response.data.data\n  } \n  message.error(response.data.msg)\n  // 把异步api执行失败的结果传递出去\n  return promise.reject(response.data.msg)\n}, error => {\n  return promise.reject(error)\n})\n\nexport default service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 【可选】解决请求参数格式和服务端参数格式不一致的问题（-- main.jx）\n\n解决方法： 将请求参数转换成字符串格式。因为 content-type 会根据请求参数的格式自动变换请求格式\n\n * application/x-www-form-urlencoded 格式：categoryid=263919\n * application/json 格式：{\"categoryid\": 263919}\n\n\n# 1、下载 qs 包\n\nnpm i qs@6.10.3\n\n\n# 2、导入 qs 包（-- utils/request.js）\n\nimport qs from 'qs'\n\n\n1\n\n\n\n# 2、将 application/json 格式转换为 application/x-www-form-urlencoded 格式（-- 同上）\n\n// 请求 拦截器\naxios.interceptors.request.use(request => {\n\n  -- 增    \n  if (request.data) {\n    request.data = qs.stringify(request.data) // 将 application/json 格式转换为 application/x-www-form-urlencoded 格式\n  }\n  --\n\n  return request\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 配置 cookie 库\n\n\n# 1、导入以下代码（-- utils/新建 auth.js）\n\nimport cookies from 'js-cookie'\n\nconst tokenkey = 'vue_admin_template_token'\n\nexport function gettoken() {\n  return cookies.get(tokenkey)\n}\n\nexport function settoken(token) {\n  return cookies.set(tokenkey, token)\n}\n\nexport function removetoken() {\n  return cookies.remove(tokenkey)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 2、按需导入（-- store/modules/新建 user.js）\n\nimport { gettoken, settoken, removetoken, settimestamp } from '@/utils/auth'\n\n\n1\n\n\n\n# 配置 开发 环境下的接口代理（-- vue.config.js）\n\nmodule.exports = {\n  devserver: { // 开发环境下的服务器配置\n    host: 'localhost',\n    port: 8080,\n    // 代理配置\n    proxy:{\n      // 拦截携带 /api 的接口\n      '/api': {\n        // 代理到的目标地址\n        target: 'https://api.it120.cc/zcr',\n        // 是否开启跨域\n        changeorigin: true,\n        // 路径重写\n        pathrewrite:{\n          // 将 /api 转换为 空\n          '^/api': ''\n        }\n      }\n    }\n  },\n  configurewebpack: {\n    devtool: 'source-map'\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 【可选】为空目录添加 .gitkeep（解决远程仓库不能上传空目录的问题）\n\n\n# 【可选】配置远程仓库",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"宏任务 & 微任务",frontmatter:{title:"宏任务 & 微任务",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/f91db7/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/02.%E5%AE%8F%E4%BB%BB%E5%8A%A1%20&%20%E5%BE%AE%E4%BB%BB%E5%8A%A1.html",relativePath:"《前端》笔记《框架》/02.vue3/02.宏任务 & 微任务.md",key:"v-7c63b153",path:"/pages/f91db7/",headersStr:null,content:"概念：异步任务有两个子类，分别是 宏任务 & 微任务\n\n宏任务： 1、异步 Ajax 请求 2、setTimeout、setInterval 3、文件操作 4、其它宏任务\n\n微任务： 1、Promise.then、.catch 和 .finally 2、process.nextTick 3、其它微任务\n\n执行机制： 1、先执行 同步任务 2、再执行 微任务 1、再执行 宏任务\n\n以下代码的执行顺序是：\n\nsetTimeout(function () { // 宏任务 console.log('1') })\n\nnew Promise(function (resolve) { // 同步任务 console.log('2') resolve() }).then(function () { // 微任务 console.log('3') })\n\nconsole.log('4') // 同步任务\n\n答案：以下代码的输出顺序是：2 4 3 1\n\n以下代码的执行顺序是：\n\nconsole.log('1') setTimeout(function () { console.log('2') new Promise(function (resolve) { console.log('3') resolve() }).then(function () { console.log('4') }) }) new Promise (function (resolve){ console.log('5') resolve() }).then(function () { console.log('6') }) setTimeout(function () { console.log('7') new Promise(function (resolve) { console.log('8') resolve() }).then(function () { console.log('9') }) })\n\n以下代码的输出顺序是：1 5 6 2 3 4 7 8 9",normalizedContent:"概念：异步任务有两个子类，分别是 宏任务 & 微任务\n\n宏任务： 1、异步 ajax 请求 2、settimeout、setinterval 3、文件操作 4、其它宏任务\n\n微任务： 1、promise.then、.catch 和 .finally 2、process.nexttick 3、其它微任务\n\n执行机制： 1、先执行 同步任务 2、再执行 微任务 1、再执行 宏任务\n\n以下代码的执行顺序是：\n\nsettimeout(function () { // 宏任务 console.log('1') })\n\nnew promise(function (resolve) { // 同步任务 console.log('2') resolve() }).then(function () { // 微任务 console.log('3') })\n\nconsole.log('4') // 同步任务\n\n答案：以下代码的输出顺序是：2 4 3 1\n\n以下代码的执行顺序是：\n\nconsole.log('1') settimeout(function () { console.log('2') new promise(function (resolve) { console.log('3') resolve() }).then(function () { console.log('4') }) }) new promise (function (resolve){ console.log('5') resolve() }).then(function () { console.log('6') }) settimeout(function () { console.log('7') new promise(function (resolve) { console.log('8') resolve() }).then(function () { console.log('9') }) })\n\n以下代码的输出顺序是：1 5 6 2 3 4 7 8 9",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"vite（脚手架工具）",frontmatter:{title:"vite（脚手架工具）",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/623974/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/03.vite%EF%BC%88%E8%84%9A%E6%89%8B%E6%9E%B6%E5%B7%A5%E5%85%B7%EF%BC%89.html",relativePath:"《前端》笔记《框架》/02.vue3/03.vite（脚手架工具）.md",key:"v-1fea8f34",path:"/pages/623974/",headersStr:null,content:"作用：快速搭建基于 Vue 的 SPA\n\n特性： 1、仅支持 Vue3.x 2、运行速度 块\n\n缺点： 1、默认安装的插件比较少，很多插件都需要手动配置（只推荐在学习时使用，项目中还是推荐使用 vue-cli）\n\n使用步骤： 1、创建项目：npm init vite-app 项目名称 2、跳转到该工作目录：cd code1 3、安装包依赖：npm i 4、打包：npm run dev\n\n命令行提示： Network: http://10.211.55.4:3000/ // 局域网 访问地址 Loacl: http://localhost:3000/ // 本机 访问地址（推荐）（浏览器输入该地址查看项目是否创建成功）\n\n项目目录结构： node_modules // 存放 第三方包 public // 存放 静态资源 src // 存放 项目源代码 api // 存放 可复用的 api 接口【手动创建】 assets // 存放 静态资源（CSS样式表、fonts、图片资源） components // 存放 组件 App.vue // 项目 根组件 index.css // 项目 全局样式文件 main.js // 项目 入口文件（主要职责：创建 vue 应用） .browserslistrc // 很少用，也不知道是啥 .eslintrc.js // ESLint 配置文件 .gitignore // 忽略清单 babel.config.js // babel 配置文件 package.json // 包管理配置文件\n\n科普：在前端工程化项目组，Vue 要做的事情很单纯，通过 main.js 把 App.vue 渲染到 index.html 的指定区域中\n\n将组件中的模板结构渲染到页面中（vite 已经自动配置以下四个步骤） -- main.js\n\n（1）按需导入 Vue 中的 createApp 函数\n  import { createApp } from 'vue'\n\n（2）导入要渲染的组件\n  import App from './App.vue'\n\n（3）创建单页面应用程序实例，并渲染指定组件\n  const app = createApp(App)\n\n（4）将单页面应用程序挂载到容器中\n  app.mount('#app')",normalizedContent:"作用：快速搭建基于 vue 的 spa\n\n特性： 1、仅支持 vue3.x 2、运行速度 块\n\n缺点： 1、默认安装的插件比较少，很多插件都需要手动配置（只推荐在学习时使用，项目中还是推荐使用 vue-cli）\n\n使用步骤： 1、创建项目：npm init vite-app 项目名称 2、跳转到该工作目录：cd code1 3、安装包依赖：npm i 4、打包：npm run dev\n\n命令行提示： network: http://10.211.55.4:3000/ // 局域网 访问地址 loacl: http://localhost:3000/ // 本机 访问地址（推荐）（浏览器输入该地址查看项目是否创建成功）\n\n项目目录结构： node_modules // 存放 第三方包 public // 存放 静态资源 src // 存放 项目源代码 api // 存放 可复用的 api 接口【手动创建】 assets // 存放 静态资源（css样式表、fonts、图片资源） components // 存放 组件 app.vue // 项目 根组件 index.css // 项目 全局样式文件 main.js // 项目 入口文件（主要职责：创建 vue 应用） .browserslistrc // 很少用，也不知道是啥 .eslintrc.js // eslint 配置文件 .gitignore // 忽略清单 babel.config.js // babel 配置文件 package.json // 包管理配置文件\n\n科普：在前端工程化项目组，vue 要做的事情很单纯，通过 main.js 把 app.vue 渲染到 index.html 的指定区域中\n\n将组件中的模板结构渲染到页面中（vite 已经自动配置以下四个步骤） -- main.js\n\n（1）按需导入 vue 中的 createapp 函数\n  import { createapp } from 'vue'\n\n（2）导入要渲染的组件\n  import app from './app.vue'\n\n（3）创建单页面应用程序实例，并渲染指定组件\n  const app = createapp(app)\n\n（4）将单页面应用程序挂载到容器中\n  app.mount('#app')",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"过滤器",frontmatter:{title:"过滤器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/d3846a/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/05.%E8%BF%87%E6%BB%A4%E5%99%A8.html",relativePath:"《前端》笔记《框架》/02.vue3/05.过滤器.md",key:"v-697f26de",path:"/pages/d3846a/",headersStr:null,content:"在 Vue 3.0 版本中已移除过滤器\n\n建议使用计算属性或方法代替被剔除的过滤器功能\n\n迁移指南：https://v3.vuejs.org/guide/migration/filters.html#migration-strategy",normalizedContent:"在 vue 3.0 版本中已移除过滤器\n\n建议使用计算属性或方法代替被剔除的过滤器功能\n\n迁移指南：https://v3.vuejs.org/guide/migration/filters.html#migration-strategy",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"API 接口案例",frontmatter:{title:"API 接口案例",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/37b13e/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/04.API%20%E6%8E%A5%E5%8F%A3%E6%A1%88%E4%BE%8B.html",relativePath:"《前端》笔记《框架》/02.vue3/04.API 接口案例.md",key:"v-0b1c7a2c",path:"/pages/37b13e/",headersStr:null,content:'需求：对外提供用户列表的 API 接口服务\n\n使用到的的技术： 1、第三方包 Express 和 mysql2 2、ES6 模块化 3、Promise 4、async/await 异步函数\n\n步骤： （1）安装第三方包 npm install express@4.17.1 mysql2@2.2.5\n\n（2）启用 ES6 模块化支持 在 package.json 中声明 "type": "module"\n\n-- 项目/app.js （3）创建基本的服务器 import express from \'express\' import musql from \'mysql2\'\n\n  const app = express()\n\n  app.listen(80, () => {\n    console.log(\'server running at http://127.0.0.1\')\n  })\n\n\n-- 项目/db/index.js （4）创建 db 数据库操作模块 const pool = mysql.createPool({ // 返回值：数据库对象 host: \'127.0.0.1\', // 数据库 地址 port: 3306, // 数据库 端口号 database: \'my_db_01\', // 数据库 名称 user: \'root\', // 数据库 用户名 passwored: \'admin123\', // 数据库 密码 })\n\n  // 默认导出一个支持 Promise API 的 数据库对象\n  export default pool.promise()\n\n\n-- 项目/controller/user_ctrl.js （5）创建 user_ctrl 业务模块 import db from \'../db/index.js\'\n\nexport async function getAllUser(req, res) {\n\n  // db.query(\'查询用户信息的 sql语句\') 的返回值为 Promise 实例对象，使用 await 修饰完毕后，db.query() 的返回值就变成一个数组了\n  // rows：查询的结果\n\n  // 问题：当这个 sql 语句报错时，会导致程序的崩溃\n  // 解决方法：使用 try 将可能产生错误的代码包裹起来，如果代码发送错误，会跳转到 catch 中进行错误处理\n\n  try {\n    const [rows] = await db.query(\'select id, username, nickname from ev_users\')\n    res.send({\n      status: 0,  // 告诉客户端成功还是失败（0：成功）（1：失败）\n      message: \'获取用户列表数据成功!\',\n      data: rows,\n    })\n  } catch (e) {\n    // e：错误对象\n    res.send({ \n      status: 1,\n      message: \'获取用户列表数据失败\',\n      desc: e.message\n    })\n  }\n  \n  \n}\n\n\n-- 项目/router/user_router.js （6）创建 user_router 路由模块 import express from \'express\' import { getAllUser } from \'../controller/user_ctrl.js\'\n\n// 创建 路由对象 const router = new express.Router() // 创建 路由规则 router.get(\'/user\', getAllUser)\n\nexport default router\n\n-- 项目/app.js （7）挂载 路由规则\n\nimport userRouter from \'./router/user_router.js\'\n\napp.use(\'/api\', userRouter)\n\n\n测试： 1、启动服务器 nodemon app.js 2、打开 Postman，新建测试请求，并发起 GET 请求：http://127.0.0.1/api/user\n\n服务器返回： { "status": 0, "message": "获取用户列表数据成功", "data": [ { "id": 1, "username": "admin1", "nickname": null }, { "id": 2, "username": "admin2", "nickname": "abc" } { "id": 3, "username": "admin3", "nickname": null } ] }',normalizedContent:'需求：对外提供用户列表的 api 接口服务\n\n使用到的的技术： 1、第三方包 express 和 mysql2 2、es6 模块化 3、promise 4、async/await 异步函数\n\n步骤： （1）安装第三方包 npm install express@4.17.1 mysql2@2.2.5\n\n（2）启用 es6 模块化支持 在 package.json 中声明 "type": "module"\n\n-- 项目/app.js （3）创建基本的服务器 import express from \'express\' import musql from \'mysql2\'\n\n  const app = express()\n\n  app.listen(80, () => {\n    console.log(\'server running at http://127.0.0.1\')\n  })\n\n\n-- 项目/db/index.js （4）创建 db 数据库操作模块 const pool = mysql.createpool({ // 返回值：数据库对象 host: \'127.0.0.1\', // 数据库 地址 port: 3306, // 数据库 端口号 database: \'my_db_01\', // 数据库 名称 user: \'root\', // 数据库 用户名 passwored: \'admin123\', // 数据库 密码 })\n\n  // 默认导出一个支持 promise api 的 数据库对象\n  export default pool.promise()\n\n\n-- 项目/controller/user_ctrl.js （5）创建 user_ctrl 业务模块 import db from \'../db/index.js\'\n\nexport async function getalluser(req, res) {\n\n  // db.query(\'查询用户信息的 sql语句\') 的返回值为 promise 实例对象，使用 await 修饰完毕后，db.query() 的返回值就变成一个数组了\n  // rows：查询的结果\n\n  // 问题：当这个 sql 语句报错时，会导致程序的崩溃\n  // 解决方法：使用 try 将可能产生错误的代码包裹起来，如果代码发送错误，会跳转到 catch 中进行错误处理\n\n  try {\n    const [rows] = await db.query(\'select id, username, nickname from ev_users\')\n    res.send({\n      status: 0,  // 告诉客户端成功还是失败（0：成功）（1：失败）\n      message: \'获取用户列表数据成功!\',\n      data: rows,\n    })\n  } catch (e) {\n    // e：错误对象\n    res.send({ \n      status: 1,\n      message: \'获取用户列表数据失败\',\n      desc: e.message\n    })\n  }\n  \n  \n}\n\n\n-- 项目/router/user_router.js （6）创建 user_router 路由模块 import express from \'express\' import { getalluser } from \'../controller/user_ctrl.js\'\n\n// 创建 路由对象 const router = new express.router() // 创建 路由规则 router.get(\'/user\', getalluser)\n\nexport default router\n\n-- 项目/app.js （7）挂载 路由规则\n\nimport userrouter from \'./router/user_router.js\'\n\napp.use(\'/api\', userrouter)\n\n\n测试： 1、启动服务器 nodemon app.js 2、打开 postman，新建测试请求，并发起 get 请求：http://127.0.0.1/api/user\n\n服务器返回： { "status": 0, "message": "获取用户列表数据成功", "data": [ { "id": 1, "username": "admin1", "nickname": null }, { "id": 2, "username": "admin2", "nickname": "abc" } { "id": 3, "username": "admin3", "nickname": null } ] }',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"深度选择器",frontmatter:{title:"深度选择器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/2eb382/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/07.%E6%B7%B1%E5%BA%A6%E9%80%89%E6%8B%A9%E5%99%A8.html",relativePath:"《前端》笔记《框架》/02.vue3/07.深度选择器.md",key:"v-0322d3a6",path:"/pages/2eb382/",headersStr:null,content:"vue2.x 方法：/deep/\n\n/deep/ .title { color: blue; }\n\nvue3.x 方法：:deep()\n\n:deep(.title) { color: blue; }",normalizedContent:"vue2.x 方法：/deep/\n\n/deep/ .title { color: blue; }\n\nvue3.x 方法：:deep()\n\n:deep(.title) { color: blue; }",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"组件",frontmatter:{title:"组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ad934f/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/06.%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《框架》/02.vue3/06.组件.md",key:"v-08599aca",path:"/pages/ad934f/",headersStr:null,content:"在 vue 2.x 的版本中， 节点内的 DOM 结构仅支持单个根节点\n\n\n这是 App 根组件\n\n\n这是副标题\n\n在 vue 3.x 的版本中， 中支持定义多个根节点\n\n\n这是 App 根组件\n\n\n这是副标题",normalizedContent:"在 vue 2.x 的版本中， 节点内的 dom 结构仅支持单个根节点\n\n\n这是 app 根组件\n\n\n这是副标题\n\n在 vue 3.x 的版本中， 中支持定义多个根节点\n\n\n这是 app 根组件\n\n\n这是副标题",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"axios 全局配置",frontmatter:{title:"axios 全局配置",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7d45b6/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/08.axios%20%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE.html",relativePath:"《前端》笔记《框架》/02.vue3/08.axios 全局配置.md",key:"v-c6f6e3f6",path:"/pages/7d45b6/",headersStr:null,content:"解决： 1、每个组件中都要导入 axios，导致代码臃肿的 问题 2、每次发请求都要填写完整的请求路径，导致代码不利于后期维护 的问题\n\n使用步骤： （1）导入 axios （2）配置请求根路径 （3）将 axios 挂载到 app 的全局自定义属性中 （4）通过 this.$http 使用 axios\n\n-- main.js import axios from 'axios' // （1）导入 axios axios.defaults.baseURL = 'http://api.com' // （2）配置请求根路径 app.config.globalProperties.$http = axios // （3）将 axios 挂载到 app 的全局自定义属性中\n\n-- 组件 this.$http.get('/users') // （4）通过 this.$http 使用 axios",normalizedContent:"解决： 1、每个组件中都要导入 axios，导致代码臃肿的 问题 2、每次发请求都要填写完整的请求路径，导致代码不利于后期维护 的问题\n\n使用步骤： （1）导入 axios （2）配置请求根路径 （3）将 axios 挂载到 app 的全局自定义属性中 （4）通过 this.$http 使用 axios\n\n-- main.js import axios from 'axios' // （1）导入 axios axios.defaults.baseurl = 'http://api.com' // （2）配置请求根路径 app.config.globalproperties.$http = axios // （3）将 axios 挂载到 app 的全局自定义属性中\n\n-- 组件 this.$http.get('/users') // （4）通过 this.$http 使用 axios",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"vue-router 4.x版本 第三方库",frontmatter:{title:"vue-router 4.x版本 第三方库",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/b7275b/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/09.vue-router%204%E7%89%88%E6%9C%AC%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",relativePath:"《前端》笔记《框架》/02.vue3/09.vue-router 4版本 第三方库.md",key:"v-2b560c46",path:"/pages/b7275b/",headersStr:null,content:"作用：操作路由 下载：npm i vue-router@next -S 特性：4.x版本只能在 vue3 中使用\n\n使用步骤： （1）声明 路由链接 （2）声明 路由占位符 （2）配置 router.js （3）配置 main.js\n\n配置： （1）在 src 目录下新建 router 目录，并新建 index.js 路由模块\n\n（2）配置 router/index.js\n\n// 1、导入 vue-router 中的两个方法\n  // createRouter：用于 创建路由的实例对象\n  // createWebHashHistory：hash 模式\nimport { createRouter, createWebHashHistory } from 'vue-router'\n\n// 2、导入展示的组件\nimport Home from './MyHome.vue'\nimport Home from './MyMovie.vue'\nimport Home from './MyAbout.vue'\n\n// 3、创建路由实例对象\nconst router = createRouter({\n\n  // 4、指定路由工作模式\n  history: createWebHashHistory(),\n\n  // 5、指定路由规则\n    // path：hash地址    component：要展示的组件\n  routes: [\n    { path: '/home', component: Home },\n    { path: '/movie', component: Movie },\n    { path: '/about', component: About },\n  ]\n\n})\n\n// 6、将路由对象共享出去\nexport default router\n\n\n（3）配置 main.js\n\n// 1、导入路由模块，并进行以下配置\n  import router from './router'\n\n  const app = createApp(App)\n\n// 2、挂载路由模块\n  app.use(router)\n\n  app.mount('#app')\n\n\n-- App.vue\n\n\nvue-router 4.x版本 的基本使用\n\n// （1）声明 路由链接\n<router-link to=\"/home\">首页</router-link>\n<router-link to=\"/movie\">电影</router-link>\n<router-link to=\"/about\">关于</router-link>\n\n// （2）声明 路由占位符\n<router-view></router-view>\n\n\nname: 'MyApp'",normalizedContent:"作用：操作路由 下载：npm i vue-router@next -s 特性：4.x版本只能在 vue3 中使用\n\n使用步骤： （1）声明 路由链接 （2）声明 路由占位符 （2）配置 router.js （3）配置 main.js\n\n配置： （1）在 src 目录下新建 router 目录，并新建 index.js 路由模块\n\n（2）配置 router/index.js\n\n// 1、导入 vue-router 中的两个方法\n  // createrouter：用于 创建路由的实例对象\n  // createwebhashhistory：hash 模式\nimport { createrouter, createwebhashhistory } from 'vue-router'\n\n// 2、导入展示的组件\nimport home from './myhome.vue'\nimport home from './mymovie.vue'\nimport home from './myabout.vue'\n\n// 3、创建路由实例对象\nconst router = createrouter({\n\n  // 4、指定路由工作模式\n  history: createwebhashhistory(),\n\n  // 5、指定路由规则\n    // path：hash地址    component：要展示的组件\n  routes: [\n    { path: '/home', component: home },\n    { path: '/movie', component: movie },\n    { path: '/about', component: about },\n  ]\n\n})\n\n// 6、将路由对象共享出去\nexport default router\n\n\n（3）配置 main.js\n\n// 1、导入路由模块，并进行以下配置\n  import router from './router'\n\n  const app = createapp(app)\n\n// 2、挂载路由模块\n  app.use(router)\n\n  app.mount('#app')\n\n\n-- app.vue\n\n\nvue-router 4.x版本 的基本使用\n\n// （1）声明 路由链接\n<router-link to=\"/home\">首页</router-link>\n<router-link to=\"/movie\">电影</router-link>\n<router-link to=\"/about\">关于</router-link>\n\n// （2）声明 路由占位符\n<router-view></router-view>\n\n\nname: 'myapp'",charsets:{cjk:!0},lastUpdated:"2022/06/27, 17:22:48"},{title:"组合式API",frontmatter:{title:"组合式API",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6174e6/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/10.%E7%BB%84%E5%90%88%E5%BC%8FAPI.html",relativePath:"《前端》笔记《框架》/02.vue3/10.组合式API.md",key:"v-b62f781e",path:"/pages/6174e6/",headersStr:null,content:"Option API（选项 API）（Vue 2.x） 代码风格：将功能代码写在指定位置中 缺点： 1、功能代码分散 2、阅读性差 2、维护性差 如：实现累加功能 1、在 data 中声明数据 2、在 methods 声明方法 3、将上面两步组合在一起才可以完成 特性：如果是小功能这样写没问题，但如果是个复杂的功能，会有很多的数据很方法，如果还这样写是非常分散的\n\nmixins 作用：功能封装（复用） 缺点：数据、方法覆盖的概率很大，不好维护 如：将 a.js 和 b.js 引入到 html 里，如果这两个 js 文件中有相同的变量和方法，就会导致覆盖\n\nCompositon API（组合式 API）（Vue 3.x） 代码风格：一个功能的代码组织在一起（包含数据，函数...） 作用：解决 option API 和 mixins 的缺点\n\n在组件中实现以两个功能： 功能一：鼠标移动显示坐标 功能二：点击按钮递增\n\nOption API 风格：\n\n<template>\n  <div class=\"container\">\n    <div>鼠标位置：</div>\n    <div>X轴：{{x}}</div>\n    <div>Y轴：{{y}}</div>\n    <hr>\n    <div>{{count}} <button @click=\"add()\">自增</button></div>  \n  </div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        x: 0,\n        y: 0,\n        count: 0\n      }\n    },\n    mounted() {\n      document.addEventListener('mousemove', this.move)\n    },\n    methods: {\n      move(e) {\n        this.x = e.pageX\n        this.y = e.pageY\n      },\n      add () {\n        this.count++\n      }    \n    },\n    destroyed() {\n      document.removeEventListener('mousemove', this.move)\n    }\n  }\n<\/script>\n\n\nCompositon API 风格：\n\n<template>\n  <div class=\"container\">\n    <div>鼠标位置：</div>\n    <div>X轴：{{x}}</div>\n    <div>Y轴：{{y}}</div>\n    <hr>\n    <div>{{count}} <button @click=\"add()\">自增</button></div>  \n  </div>\n</template>\n<script>\n  import { onMounted, onUnmounted, reactive, ref, toRefs } from 'vue'\n\n  export default {\n    name: 'App',\n    setup () {\n\n      // 累加功能\n      const count = ref(0)\n      const add = () => {\n        count.value ++ \n      }\n\n      // 鼠标移动功能\n      const mouse = reactive({\n        x: 0,\n        y: 0\n      })\n      const move = e => {\n        mouse.x = e.pageX\n        mouse.y = e.pageY\n      }\n      onMounted(()=>{\n        document.addEventListener('mousemove',move)\n      })\n      onUnmounted(()=>{\n        document.removeEventListener('mousemove',move)\n      })\n\n      // ...功能\n\n      // 返回数据\n      return {\n        ...toRefs(mouse),\n        count,\n        add\n      }\n    }\n  }\n<\/script>",normalizedContent:"option api（选项 api）（vue 2.x） 代码风格：将功能代码写在指定位置中 缺点： 1、功能代码分散 2、阅读性差 2、维护性差 如：实现累加功能 1、在 data 中声明数据 2、在 methods 声明方法 3、将上面两步组合在一起才可以完成 特性：如果是小功能这样写没问题，但如果是个复杂的功能，会有很多的数据很方法，如果还这样写是非常分散的\n\nmixins 作用：功能封装（复用） 缺点：数据、方法覆盖的概率很大，不好维护 如：将 a.js 和 b.js 引入到 html 里，如果这两个 js 文件中有相同的变量和方法，就会导致覆盖\n\ncompositon api（组合式 api）（vue 3.x） 代码风格：一个功能的代码组织在一起（包含数据，函数...） 作用：解决 option api 和 mixins 的缺点\n\n在组件中实现以两个功能： 功能一：鼠标移动显示坐标 功能二：点击按钮递增\n\noption api 风格：\n\n<template>\n  <div class=\"container\">\n    <div>鼠标位置：</div>\n    <div>x轴：{{x}}</div>\n    <div>y轴：{{y}}</div>\n    <hr>\n    <div>{{count}} <button @click=\"add()\">自增</button></div>  \n  </div>\n</template>\n<script>\n  export default {\n    name: 'app',\n    data () {\n      return {\n        x: 0,\n        y: 0,\n        count: 0\n      }\n    },\n    mounted() {\n      document.addeventlistener('mousemove', this.move)\n    },\n    methods: {\n      move(e) {\n        this.x = e.pagex\n        this.y = e.pagey\n      },\n      add () {\n        this.count++\n      }    \n    },\n    destroyed() {\n      document.removeeventlistener('mousemove', this.move)\n    }\n  }\n<\/script>\n\n\ncompositon api 风格：\n\n<template>\n  <div class=\"container\">\n    <div>鼠标位置：</div>\n    <div>x轴：{{x}}</div>\n    <div>y轴：{{y}}</div>\n    <hr>\n    <div>{{count}} <button @click=\"add()\">自增</button></div>  \n  </div>\n</template>\n<script>\n  import { onmounted, onunmounted, reactive, ref, torefs } from 'vue'\n\n  export default {\n    name: 'app',\n    setup () {\n\n      // 累加功能\n      const count = ref(0)\n      const add = () => {\n        count.value ++ \n      }\n\n      // 鼠标移动功能\n      const mouse = reactive({\n        x: 0,\n        y: 0\n      })\n      const move = e => {\n        mouse.x = e.pagex\n        mouse.y = e.pagey\n      }\n      onmounted(()=>{\n        document.addeventlistener('mousemove',move)\n      })\n      onunmounted(()=>{\n        document.removeeventlistener('mousemove',move)\n      })\n\n      // ...功能\n\n      // 返回数据\n      return {\n        ...torefs(mouse),\n        count,\n        add\n      }\n    }\n  }\n<\/script>",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"组件的生命周期 & 钩子函数",frontmatter:{title:"组件的生命周期 & 钩子函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/8c2d46/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/11.%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%20&%20%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《框架》/02.vue3/11.组件的生命周期 & 钩子函数.md",key:"v-3e61e2e8",path:"/pages/8c2d46/",headersStr:null,content:"提示：在组合式 API 中，只能使用组合式 API 里的钩子函数\n\n特性： 1、除了 setup，其它钩子都要放在 setup 中执行 2、允许定义多个相同的钩子函数，来实现不同的逻辑\n\n一、创建 阶段\n\n（1）setup：创建实例前 作用： 1、组合式API的 起点 2、提供模板中的数据和方法\n\n特性： 1、模板中用到的数据和方法需要返回出去 2、在 beforeCreate 钩子前执行，也就是组件实例创建前执行（无法使用 this，因为值为 undefined） 3、在使用钩子函数时，vue 会自动按需导入对应的钩子函数\n\n（2）onBeforeMount：HTML结构 渲染前 触发 （3）onMounted：HTML结构 渲染后 触发\n\n二、运行 阶段：data 中的数据变化后 触发 （1）onBeforeUpdate：页面重新渲染 前 （2）onUpdated：页面重新渲染 后\n\n三、销毁 阶段 （1）onBeforeUnmount：组件 销毁前 触发 （2）onUnmounted：组件 销毁后 触发\n\n例子：\ncontainer",normalizedContent:"提示：在组合式 api 中，只能使用组合式 api 里的钩子函数\n\n特性： 1、除了 setup，其它钩子都要放在 setup 中执行 2、允许定义多个相同的钩子函数，来实现不同的逻辑\n\n一、创建 阶段\n\n（1）setup：创建实例前 作用： 1、组合式api的 起点 2、提供模板中的数据和方法\n\n特性： 1、模板中用到的数据和方法需要返回出去 2、在 beforecreate 钩子前执行，也就是组件实例创建前执行（无法使用 this，因为值为 undefined） 3、在使用钩子函数时，vue 会自动按需导入对应的钩子函数\n\n（2）onbeforemount：html结构 渲染前 触发 （3）onmounted：html结构 渲染后 触发\n\n二、运行 阶段：data 中的数据变化后 触发 （1）onbeforeupdate：页面重新渲染 前 （2）onupdated：页面重新渲染 后\n\n三、销毁 阶段 （1）onbeforeunmount：组件 销毁前 触发 （2）onunmounted：组件 销毁后 触发\n\n例子：\ncontainer",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"reactive 函数 & ref 函数",frontmatter:{title:"reactive 函数 & ref 函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c8896f/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/12.reactive%20%E5%87%BD%E6%95%B0%20&%20ref%20%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《框架》/02.vue3/12.reactive 函数 & ref 函数.md",key:"v-14e52e21",path:"/pages/c8896f/",headersStr:null,content:"reactive 函数\n\n  作用：将 复杂数据类型 中的普通数据，包装为 响应式数据\n\n  特性：组合式API中的数据默认为普通数据\n\n  响应式数据：数据驱动视图、单向数据绑定（数据发送变化，才会自动渲染页面结构，页面结构发送变化是不会同步到数据的）\n\n  应用场景：将 已知 的数据类型转换为响应式数据\n\n  <template>\n    <div class=\"container\">\n      <div>{{obj.name}}</div>\n      <div>{{obj.age}}</div>\n      <button @click=\"updateName\">修改数据</button>\n    </div>\n  </template>\n  <script>\n    import { reactive } from 'vue'\n    export default {\n      name: 'App',\n      setup () {\n\n        // 默认数据\n        // const obj = {\n        //   name: 'ls',\n        //   age: 18\n        // }\n\n        // 响应式数据\n        const obj = reactive({\n          name: 'ls',\n          age: 18\n        })\n\n        // 修改名字\n        const updateName = () => {\n          console.log('updateName')\n          obj.name = 'zs'\n        }\n\n        return { obj ,updateName}\n      }\n    }\n  <\/script>\n\nref 函数\n\n  作用：将 简单数据类型 和 复杂数据类型 中的普通数据，包装为 响应式数据\n\n  特性：\n    1、操作数据时需要使用 数据.value\n    2、在模板找中使用数据时，可以省略 .value\n\n  应用场景：将 未知 的数据类型转换为响应式数据\n\n  <template>\n    <div class=\"container\">\n      <div>{{name}}</div>\n      <div>{{age}}</div>\n      <button @click=\"updateName\">修改数据</button>\n    </div>\n  </template>\n  <script>\n    import { ref } from 'vue'\n    export default {\n      name: 'App',\n      setup () {\n        const name = ref('ls')\n        console.log(name)\n        const updateName = () => {\n          name.value = 'zs'\n        }\n        const age = ref(10)\n\n        // 将未知的数据类型转换为响应式数据\n        // const data = ref(null)\n        // setTimeout(()=>{\n        //   data.value = res.data\n        // },1000)\n\n        return {name, age, updateName}\n      }\n    }\n  <\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n",normalizedContent:"reactive 函数\n\n  作用：将 复杂数据类型 中的普通数据，包装为 响应式数据\n\n  特性：组合式api中的数据默认为普通数据\n\n  响应式数据：数据驱动视图、单向数据绑定（数据发送变化，才会自动渲染页面结构，页面结构发送变化是不会同步到数据的）\n\n  应用场景：将 已知 的数据类型转换为响应式数据\n\n  <template>\n    <div class=\"container\">\n      <div>{{obj.name}}</div>\n      <div>{{obj.age}}</div>\n      <button @click=\"updatename\">修改数据</button>\n    </div>\n  </template>\n  <script>\n    import { reactive } from 'vue'\n    export default {\n      name: 'app',\n      setup () {\n\n        // 默认数据\n        // const obj = {\n        //   name: 'ls',\n        //   age: 18\n        // }\n\n        // 响应式数据\n        const obj = reactive({\n          name: 'ls',\n          age: 18\n        })\n\n        // 修改名字\n        const updatename = () => {\n          console.log('updatename')\n          obj.name = 'zs'\n        }\n\n        return { obj ,updatename}\n      }\n    }\n  <\/script>\n\nref 函数\n\n  作用：将 简单数据类型 和 复杂数据类型 中的普通数据，包装为 响应式数据\n\n  特性：\n    1、操作数据时需要使用 数据.value\n    2、在模板找中使用数据时，可以省略 .value\n\n  应用场景：将 未知 的数据类型转换为响应式数据\n\n  <template>\n    <div class=\"container\">\n      <div>{{name}}</div>\n      <div>{{age}}</div>\n      <button @click=\"updatename\">修改数据</button>\n    </div>\n  </template>\n  <script>\n    import { ref } from 'vue'\n    export default {\n      name: 'app',\n      setup () {\n        const name = ref('ls')\n        console.log(name)\n        const updatename = () => {\n          name.value = 'zs'\n        }\n        const age = ref(10)\n\n        // 将未知的数据类型转换为响应式数据\n        // const data = ref(null)\n        // settimeout(()=>{\n        //   data.value = res.data\n        // },1000)\n\n        return {name, age, updatename}\n      }\n    }\n  <\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"toRef 函数 & toRefs 函数",frontmatter:{title:"toRef 函数 & toRefs 函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/1e6c85/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/13.toRef%20%E5%87%BD%E6%95%B0%20&%20toRefs%20%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《框架》/02.vue3/13.toRef 函数 & toRefs 函数.md",key:"v-725dc806",path:"/pages/1e6c85/",headersStr:null,content:"toRef 函数\n\n作用：将响应式对象中的 单个 数据解构出来，并保留响应式\n\n提示：使用解构或扩展运算符转换出来的数据虽然可以渲染到页面中，但并不是响应式的，只是普通数据\n\n应用场景：只想使用变量，不想使用对象。 如：不想 obj.name 只想 name\n\n例子：\n\n<template>\n  <div class=\"container\">\n    {{name}} <button @click=\"updateName\">修改数据</button>\n  </div>\n</template>\n<script>\n  import { reactive, toRef } from 'vue'\n  export default {\n    name: 'App',\n    setup () {\n      const obj = reactive({\n        name: 'ls',\n        age: 10\n      })\n      console.log(obj)\n      const name = toRef(obj, 'name')\n      const updateName = () => {\n        console.log('updateName')\n        name.value = 'zs'\n      }\n\n      return {name, updateName}\n    }\n  }\n  <\/script>\n\n\ntoRefs 函数\n\n作用：将响应式对象中的 多个 数据解构出来，并保留响应式",normalizedContent:"toref 函数\n\n作用：将响应式对象中的 单个 数据解构出来，并保留响应式\n\n提示：使用解构或扩展运算符转换出来的数据虽然可以渲染到页面中，但并不是响应式的，只是普通数据\n\n应用场景：只想使用变量，不想使用对象。 如：不想 obj.name 只想 name\n\n例子：\n\n<template>\n  <div class=\"container\">\n    {{name}} <button @click=\"updatename\">修改数据</button>\n  </div>\n</template>\n<script>\n  import { reactive, toref } from 'vue'\n  export default {\n    name: 'app',\n    setup () {\n      const obj = reactive({\n        name: 'ls',\n        age: 10\n      })\n      console.log(obj)\n      const name = toref(obj, 'name')\n      const updatename = () => {\n        console.log('updatename')\n        name.value = 'zs'\n      }\n\n      return {name, updatename}\n    }\n  }\n  <\/script>\n\n\ntorefs 函数\n\n作用：将响应式对象中的 多个 数据解构出来，并保留响应式",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"computed 函数",frontmatter:{title:"computed 函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fd5957/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/14.computed%20%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《框架》/02.vue3/14.computed 函数.md",key:"v-94faf56e",path:"/pages/fd5957/",headersStr:null,content:"作用：定义计算属性\n\n计算属性：当需要依赖现有的响应式数据，根据一定逻辑得到一个新的数据\n\n特性： 1、计算属性的值 无法修改 2、计算属性的值 为响应式\n\n功能：通过今年的年龄，求出后年的年龄\n\n今年：{{age}}岁\n后年：{{newAge}}岁\n\n高级用法：\n\n作用：让计算属性支持 v-model（允许修改计算属性的值）（允许支持双向数据绑定）\n\n特性：该用法也支持 vue2.x\n\n今年：{{age}}岁\n后年：{{newAge}}岁",normalizedContent:"作用：定义计算属性\n\n计算属性：当需要依赖现有的响应式数据，根据一定逻辑得到一个新的数据\n\n特性： 1、计算属性的值 无法修改 2、计算属性的值 为响应式\n\n功能：通过今年的年龄，求出后年的年龄\n\n今年：{{age}}岁\n后年：{{newage}}岁\n\n高级用法：\n\n作用：让计算属性支持 v-model（允许修改计算属性的值）（允许支持双向数据绑定）\n\n特性：该用法也支持 vue2.x\n\n今年：{{age}}岁\n后年：{{newage}}岁",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"watch 函数",frontmatter:{title:"watch 函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/bf1d98/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/15.watch%20%E5%87%BD%E6%95%B0.html",relativePath:"《前端》笔记《框架》/02.vue3/15.watch 函数.md",key:"v-3c2557c5",path:"/pages/bf1d98/",headersStr:null,content:"作用：定义侦听器\n\n侦听器：当数据发送变化时触发\n\n（1）监听 ref 数据\n  语法：watch(监听的数据, (新值, 旧值) => {})\n\n（2）监听 reactive 数据\n  语法：watch(监听的数据, (新值) => {})\n\n  deep：侦听对象中的某个属性（深度侦听）\n  immediate：自动触发侦听器\n\n（3）监听 多个数据\n  语法：watch([监听的数据, 监听的数据], () => {})\n\n（4）监听 对象中某一个属性的变化\n  语法：watch(() => 监听的数据, () => {})\n\n<template>\n  <div class=\"container\">\n    <div>\n      <p>count的值：{{count}}</p>\n      <button @click=\"add\">改数据</button>\n    </div>\n    <hr>\n    <div>\n      <p>{{obj.name}}</p>\n      <p>{{obj.age}}</p>\n      <p>{{obj.brand.name}}</p>\n      <button @click=\"updateName\">改名字</button>\n      <button @click=\"updateBrandName\">改品牌名字</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reactive, ref, watch } from 'vue'\nexport default {\n  name: 'App',\n  \n  setup () {\n    const count = ref(0)\n\n    // （1）监听 ref 数据\n\n      const add = () => {\n        count.value++\n      }\n\n      watch(count, (newVal, oldVal) => {\n        console.log(newVal, oldVal)\n      })\n\n    // （2）监听 reactive 数据\n\n      const obj = reactive({\n        name: 'ls',\n        age: 10,\n        brand: {\n          id: 1,\n          name: '宝马'\n        }\n      })\n\n      const updateName = () => {\n        obj.name = 'zs'\n      }\n      const updateBrandName = () => {\n        obj.brand.name = '奔驰'\n      }\n      watch(obj, () => {\n        console.log('数据改变了')\n      })\n\n      watch(() => obj.brand, () => {\n        console.log('brand数据改变了')\n      },{\n        deep: true,\n        immediate: true\n      })\n\n    // （3）监听 多个数据\n\n      // watch([count, obj], () => {\n      //   console.log('监听多个数据改变了')\n      // }) \n\n\n    // （4）监听 对象中某一个属性的变化\n\n      // watch(() => obj.name,() => {\n      //   console.log('监听obj.name改变了')\n      // })\n\n    return {count, add, obj, updateName, updateBrandName}\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n",normalizedContent:"作用：定义侦听器\n\n侦听器：当数据发送变化时触发\n\n（1）监听 ref 数据\n  语法：watch(监听的数据, (新值, 旧值) => {})\n\n（2）监听 reactive 数据\n  语法：watch(监听的数据, (新值) => {})\n\n  deep：侦听对象中的某个属性（深度侦听）\n  immediate：自动触发侦听器\n\n（3）监听 多个数据\n  语法：watch([监听的数据, 监听的数据], () => {})\n\n（4）监听 对象中某一个属性的变化\n  语法：watch(() => 监听的数据, () => {})\n\n<template>\n  <div class=\"container\">\n    <div>\n      <p>count的值：{{count}}</p>\n      <button @click=\"add\">改数据</button>\n    </div>\n    <hr>\n    <div>\n      <p>{{obj.name}}</p>\n      <p>{{obj.age}}</p>\n      <p>{{obj.brand.name}}</p>\n      <button @click=\"updatename\">改名字</button>\n      <button @click=\"updatebrandname\">改品牌名字</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reactive, ref, watch } from 'vue'\nexport default {\n  name: 'app',\n  \n  setup () {\n    const count = ref(0)\n\n    // （1）监听 ref 数据\n\n      const add = () => {\n        count.value++\n      }\n\n      watch(count, (newval, oldval) => {\n        console.log(newval, oldval)\n      })\n\n    // （2）监听 reactive 数据\n\n      const obj = reactive({\n        name: 'ls',\n        age: 10,\n        brand: {\n          id: 1,\n          name: '宝马'\n        }\n      })\n\n      const updatename = () => {\n        obj.name = 'zs'\n      }\n      const updatebrandname = () => {\n        obj.brand.name = '奔驰'\n      }\n      watch(obj, () => {\n        console.log('数据改变了')\n      })\n\n      watch(() => obj.brand, () => {\n        console.log('brand数据改变了')\n      },{\n        deep: true,\n        immediate: true\n      })\n\n    // （3）监听 多个数据\n\n      // watch([count, obj], () => {\n      //   console.log('监听多个数据改变了')\n      // }) \n\n\n    // （4）监听 对象中某一个属性的变化\n\n      // watch(() => obj.name,() => {\n      //   console.log('监听obj.name改变了')\n      // })\n\n    return {count, add, obj, updatename, updatebrandname}\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"ref 引用",frontmatter:{title:"ref 引用",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fce363/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/16.ref%20%E5%BC%95%E7%94%A8.html",relativePath:"《前端》笔记《框架》/02.vue3/16.ref 引用.md",key:"v-fa3c31c8",path:"/pages/fce363/",headersStr:null,content:'获取 DOM 元素\n\n（1）获取单个元素 \b使用步骤： 1、使用 ref 定义空的数据 2、使用 标识符.value 获取 DOM元素 3、将空数据 return 出去 4、在要获取的 DOM元素 中绑定 ref="标识符" 属性\n\n（2）获取 v-for 遍历的多个元素 使用步骤： 1、定义一个空数组，用于接收所有的 li 2、再定义一个新的空数组，用函数往里面 push DOM 3、将这个新数组 return 出去 4、在要获取的 DOM元素 中绑定 :ref="新数组" 属性\n\n我是box\n * 第{{i}}LI',normalizedContent:'获取 dom 元素\n\n（1）获取单个元素 \b使用步骤： 1、使用 ref 定义空的数据 2、使用 标识符.value 获取 dom元素 3、将空数据 return 出去 4、在要获取的 dom元素 中绑定 ref="标识符" 属性\n\n（2）获取 v-for 遍历的多个元素 使用步骤： 1、定义一个空数组，用于接收所有的 li 2、再定义一个新的空数组，用函数往里面 push dom 3、将这个新数组 return 出去 4、在要获取的 dom元素 中绑定 :ref="新数组" 属性\n\n我是box\n * 第{{i}}li',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"组件之间的数据共享",frontmatter:{title:"组件之间的数据共享",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/1e42a3/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/17.%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E5%85%B1%E4%BA%AB.html",relativePath:"《前端》笔记《框架》/02.vue3/17.组件之间的数据共享.md",key:"v-66068836",path:"/pages/1e42a3/",headersStr:null,content:"（1）父组件 向 子组件 传递数据 使用步骤： 1、父组件通过 v-bind 将数据传递给子组件 2、子组件通过 props 接收父组件传递过来的数据 3、使用 setup 参数将数据传递到 setup 中\n\n--父组件\n\n<template>\n  <div class=\"container\">\n    <h1>父组件</h1>\n    <p>{{money}}</p>\n    <hr>\n    <Son :money=\"money\" />  // 1、父组件通过 v-bind 将数据传递给子组件\n  </div>\n</template>\n<script>\n  import { ref } from 'vue'\n  import Son from './Son.vue'\n  export default {\n    name: 'App',\n    components: {\n      Son\n    },\n    setup () {\n      const money = ref(100)\n      return { money }\n    }\n  }\n<\/script>\n\n\n-- 子组件\n\n<template>\n  <div class=\"container\">\n    <h1>子组件</h1>\n    <p>{{money}}</p>\n  </div>\n</template>\n<script>\n  import { onMounted } from 'vue'\n  export default {\n    name: 'Son',\n    props: {  // 2、子组件通过 props 接收父组件传递过来的数据\n      money: {\n        type: Number,\n        default: 0\n      }\n    },\n    setup (props) {  // 3、使用 setup 参数将数据传递到 setup 中\n      console.log(props.money)\n    }\n  }\n<\/script>\n\n\n（2）子组件 向 父组件 传递数据 使用步骤：\n\n子组件：\n  1、解构 emit 方法\n  2、定义一个方法，第一个参数传递自定义事件名\n  3、将这个方法 return 出去\n\n父组件：\n  4、绑定自定义事件\n  5、使用自定义事件中的 参数，接收子组件传递过来的数据\n\n\n-- 子组件\n\n<template>\n  <div class=\"container\">\n    <h1>子组件</h1>\n    <p>{{money}}</p>\n    <button @click=\"changeMoney\">花50元</button>\n  </div>\n</template>\n<script>\n  import { onMounted } from 'vue'\n  export default {\n    name: 'Son',\n    setup (props, {emit}) {  // 1、解构 emit 方法\n        const changeMoney = () => {  // 2、定义一个方法，第一个参数传递自定义事件名\n          emit('change-money', 50)\n        }\n      return {changeMoney}  // 3、将这个方法 return 出去\n    }\n  }\n<\/script>\n\n\n-- 父组件\n\n<template>\n  <div class=\"container\">\n    <h1>父组件</h1>\n    <p>{{money}}</p>\n    <hr>\n\n    // <Son :money=\"money\" @change-money=\"updateMoney\" />  // 4、绑定自定义事件\n    <Son v-money:money=\"money\" />  // 简写\n\n  </div>\n</template>\n<script>\n  import { ref } from 'vue'\n  import Son from './Son.vue'\n  export default {\n    name: 'App',\n    components: {\n      Son\n    },\n    setup () {\n      const money = ref(100)\n      const updateMoney = (newMoney) => {  5、使用自定义事件中的参数，接收子组件传递过来的数据\n        money.value = newMoney\n      }\n      return { money , updateMoney}\n    }\n  }\n<\/script>\n\n\n（3）父组件 和 子组件 的双向数据同步 使用步骤：\n\n子组件：\n  1、解构 emit 方法\n  2、定义一个方法， 调用 emit，第一个参数传递 update:数据\n  3、将这个方法 return 出去\n\n父组件：\n  4、使用 update:数据 绑定自定义事件\n  5、使用自定义事件中的参数，接收子组件传递过来的数据\n\n\n-- 子组件\n\n<template>\n  <div class=\"container\">\n    <h1>子组件</h1>\n    <p>{{money}}</p>\n    <button @click=\"changeMoney\">花50元</button>\n  </div>\n</template>\n<script>\n  import { onMounted } from 'vue'\n  export default {\n    name: 'Son',\n    setup (props, {emit}) {  // 1、解构 emit 方法\n        const changeMoney = () => {  // 2、定义一个方法， 调用 emit，第一个参数传递 update:数据 \n          emit('update:money', 50)\n        }\n      return {changeMoney}  // 3、将这个方法 return 出去\n    }\n  }\n<\/script>\n\n\n-- 父组件\n\n<template>\n  <div class=\"container\">\n    <h1>父组件</h1>\n    <p>{{money}}</p>\n    <hr>\n    <Son :money=\"money\" @update:money=\"updateMoney\" />  // 4、使用 update:数据 绑定自定义事件\n  </div>\n</template>\n<script>\n  import { ref } from 'vue'\n  import Son from './Son.vue'\n  export default {\n    name: 'App',\n    components: {\n      Son\n    },\n    setup () {\n      const money = ref(100)\n      const updateMoney = (newMoney) => {  5、使用自定义事件中的参数，接收子组件传递过来的数据\n        money.value = newMoney\n      }\n      return { money , updateMoney}\n    }\n  }\n<\/script>\n\n\n（4）后代组件 之间的数据共享 原理：provide、inject 使用步骤： 1-1、使用 provide 方法将数据共享给后代组件 1-2、使用 inject 方法接收祖先组件提供的数据 特性：后代组件不能直接修改共享的数据，应该遵循单项数据流原则，也就是谁定义谁修改原则，如果有后代组件要修改共享数据的需求，应该通知祖先组件，让祖先组件取修改 使用步骤： 父组件： 2-1、定义修改共享数据的方法 2-2、将这个方法共享出去 后代组件： 2-3、接收方法 2-4、调用方法\n\n-- 父组件\n\n<template>\n  <div class=\"container\">\n    <h1>父组件 {{money}} <button @click=\"money=1000\">发钱</button></h1>\n    <hr>\n    <Son />\n  </div>\n</template>\n<script>\n  import { provide, ref } from 'vue'\n  import Son from './Son.vue'\n  export default {\n    name: 'App',\n    components: {\n      Son\n    },\n    setup () {\n      const money = ref(100)\n      const changeMoney = (saleMoney) => {  // 2-1、定义修改共享数据的方法\n        console.log('changeMoney',saleMoney)\n        money.value = money.value - saleMoney\n      }\n\n      // 语法：provide('标识符', 共享的数据) \n      provide('money', money)  // 1-1、使用 provide 方法将数据共享给后代组件\n      provide('changeMoney', changeMoney)  // 2-2、将这个方法共享出去\n\n      return { money }\n    }\n  }\n<\/script>\n\n\n-- 子组件\n\n<template>\n  <div class=\"container\">\n    <h2>子组件 {{money}}</h2>\n    <hr>\n    <GrandSon />\n  </div>\n</template>\n<script>\n  import { inject } from 'vue'\n  import GrandSon from './GrandSon.vue'\n  export default {\n    name: 'Son',\n    components: {\n      GrandSon\n    },\n    setup () {\n      const money = inject('money')  // 1-2、使用 inject 方法接收祖先组件提供的数据\n      return { money }\n    }\n  }\n<\/script>\n\n\n-- 后代组件\n\n<template>\n  <div class=\"container\">\n    <h3>孙组件 {{money}} <button @click=\"fn\">消费20</button></h3>  // 2-4、调用方法\n  </div>\n</template>\n<script>\n  import { inject } from 'vue'\n  export default {\n    name: 'GrandSon',\n    setup () {\n      const money = inject('money')  // 1-2、使用 inject 方法接收祖先组件提供的数据\n      const changeMoney = inject('changeMoney')  // 2-3、接收方法\n      const fn = () => {\n        changeMoney(20)\n      }\n      return {money, fn}\n    }\n  }\n<\/script>",normalizedContent:"（1）父组件 向 子组件 传递数据 使用步骤： 1、父组件通过 v-bind 将数据传递给子组件 2、子组件通过 props 接收父组件传递过来的数据 3、使用 setup 参数将数据传递到 setup 中\n\n--父组件\n\n<template>\n  <div class=\"container\">\n    <h1>父组件</h1>\n    <p>{{money}}</p>\n    <hr>\n    <son :money=\"money\" />  // 1、父组件通过 v-bind 将数据传递给子组件\n  </div>\n</template>\n<script>\n  import { ref } from 'vue'\n  import son from './son.vue'\n  export default {\n    name: 'app',\n    components: {\n      son\n    },\n    setup () {\n      const money = ref(100)\n      return { money }\n    }\n  }\n<\/script>\n\n\n-- 子组件\n\n<template>\n  <div class=\"container\">\n    <h1>子组件</h1>\n    <p>{{money}}</p>\n  </div>\n</template>\n<script>\n  import { onmounted } from 'vue'\n  export default {\n    name: 'son',\n    props: {  // 2、子组件通过 props 接收父组件传递过来的数据\n      money: {\n        type: number,\n        default: 0\n      }\n    },\n    setup (props) {  // 3、使用 setup 参数将数据传递到 setup 中\n      console.log(props.money)\n    }\n  }\n<\/script>\n\n\n（2）子组件 向 父组件 传递数据 使用步骤：\n\n子组件：\n  1、解构 emit 方法\n  2、定义一个方法，第一个参数传递自定义事件名\n  3、将这个方法 return 出去\n\n父组件：\n  4、绑定自定义事件\n  5、使用自定义事件中的 参数，接收子组件传递过来的数据\n\n\n-- 子组件\n\n<template>\n  <div class=\"container\">\n    <h1>子组件</h1>\n    <p>{{money}}</p>\n    <button @click=\"changemoney\">花50元</button>\n  </div>\n</template>\n<script>\n  import { onmounted } from 'vue'\n  export default {\n    name: 'son',\n    setup (props, {emit}) {  // 1、解构 emit 方法\n        const changemoney = () => {  // 2、定义一个方法，第一个参数传递自定义事件名\n          emit('change-money', 50)\n        }\n      return {changemoney}  // 3、将这个方法 return 出去\n    }\n  }\n<\/script>\n\n\n-- 父组件\n\n<template>\n  <div class=\"container\">\n    <h1>父组件</h1>\n    <p>{{money}}</p>\n    <hr>\n\n    // <son :money=\"money\" @change-money=\"updatemoney\" />  // 4、绑定自定义事件\n    <son v-money:money=\"money\" />  // 简写\n\n  </div>\n</template>\n<script>\n  import { ref } from 'vue'\n  import son from './son.vue'\n  export default {\n    name: 'app',\n    components: {\n      son\n    },\n    setup () {\n      const money = ref(100)\n      const updatemoney = (newmoney) => {  5、使用自定义事件中的参数，接收子组件传递过来的数据\n        money.value = newmoney\n      }\n      return { money , updatemoney}\n    }\n  }\n<\/script>\n\n\n（3）父组件 和 子组件 的双向数据同步 使用步骤：\n\n子组件：\n  1、解构 emit 方法\n  2、定义一个方法， 调用 emit，第一个参数传递 update:数据\n  3、将这个方法 return 出去\n\n父组件：\n  4、使用 update:数据 绑定自定义事件\n  5、使用自定义事件中的参数，接收子组件传递过来的数据\n\n\n-- 子组件\n\n<template>\n  <div class=\"container\">\n    <h1>子组件</h1>\n    <p>{{money}}</p>\n    <button @click=\"changemoney\">花50元</button>\n  </div>\n</template>\n<script>\n  import { onmounted } from 'vue'\n  export default {\n    name: 'son',\n    setup (props, {emit}) {  // 1、解构 emit 方法\n        const changemoney = () => {  // 2、定义一个方法， 调用 emit，第一个参数传递 update:数据 \n          emit('update:money', 50)\n        }\n      return {changemoney}  // 3、将这个方法 return 出去\n    }\n  }\n<\/script>\n\n\n-- 父组件\n\n<template>\n  <div class=\"container\">\n    <h1>父组件</h1>\n    <p>{{money}}</p>\n    <hr>\n    <son :money=\"money\" @update:money=\"updatemoney\" />  // 4、使用 update:数据 绑定自定义事件\n  </div>\n</template>\n<script>\n  import { ref } from 'vue'\n  import son from './son.vue'\n  export default {\n    name: 'app',\n    components: {\n      son\n    },\n    setup () {\n      const money = ref(100)\n      const updatemoney = (newmoney) => {  5、使用自定义事件中的参数，接收子组件传递过来的数据\n        money.value = newmoney\n      }\n      return { money , updatemoney}\n    }\n  }\n<\/script>\n\n\n（4）后代组件 之间的数据共享 原理：provide、inject 使用步骤： 1-1、使用 provide 方法将数据共享给后代组件 1-2、使用 inject 方法接收祖先组件提供的数据 特性：后代组件不能直接修改共享的数据，应该遵循单项数据流原则，也就是谁定义谁修改原则，如果有后代组件要修改共享数据的需求，应该通知祖先组件，让祖先组件取修改 使用步骤： 父组件： 2-1、定义修改共享数据的方法 2-2、将这个方法共享出去 后代组件： 2-3、接收方法 2-4、调用方法\n\n-- 父组件\n\n<template>\n  <div class=\"container\">\n    <h1>父组件 {{money}} <button @click=\"money=1000\">发钱</button></h1>\n    <hr>\n    <son />\n  </div>\n</template>\n<script>\n  import { provide, ref } from 'vue'\n  import son from './son.vue'\n  export default {\n    name: 'app',\n    components: {\n      son\n    },\n    setup () {\n      const money = ref(100)\n      const changemoney = (salemoney) => {  // 2-1、定义修改共享数据的方法\n        console.log('changemoney',salemoney)\n        money.value = money.value - salemoney\n      }\n\n      // 语法：provide('标识符', 共享的数据) \n      provide('money', money)  // 1-1、使用 provide 方法将数据共享给后代组件\n      provide('changemoney', changemoney)  // 2-2、将这个方法共享出去\n\n      return { money }\n    }\n  }\n<\/script>\n\n\n-- 子组件\n\n<template>\n  <div class=\"container\">\n    <h2>子组件 {{money}}</h2>\n    <hr>\n    <grandson />\n  </div>\n</template>\n<script>\n  import { inject } from 'vue'\n  import grandson from './grandson.vue'\n  export default {\n    name: 'son',\n    components: {\n      grandson\n    },\n    setup () {\n      const money = inject('money')  // 1-2、使用 inject 方法接收祖先组件提供的数据\n      return { money }\n    }\n  }\n<\/script>\n\n\n-- 后代组件\n\n<template>\n  <div class=\"container\">\n    <h3>孙组件 {{money}} <button @click=\"fn\">消费20</button></h3>  // 2-4、调用方法\n  </div>\n</template>\n<script>\n  import { inject } from 'vue'\n  export default {\n    name: 'grandson',\n    setup () {\n      const money = inject('money')  // 1-2、使用 inject 方法接收祖先组件提供的数据\n      const changemoney = inject('changemoney')  // 2-3、接收方法\n      const fn = () => {\n        changemoney(20)\n      }\n      return {money, fn}\n    }\n  }\n<\/script>",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"v-model 语法糖",frontmatter:{title:"v-model 语法糖",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6bcbc0/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/18.v-model%20%E8%AF%AD%E6%B3%95%E7%B3%96.html",relativePath:"《前端》笔记《框架》/02.vue3/18.v-model 语法糖.md",key:"v-74d65262",path:"/pages/6bcbc0/",headersStr:null,content:'\x3c!-- 获取原生事件的事件对象 --\x3e\n\x3c!-- 如果绑定函数 fn(e){}，e 是事件对象 --\x3e\n\x3c!-- 如果绑定的是js表达式 $event，$event 是事件对象 --\x3e\n<h1 @click="$event.target.style.color=\'red\'">父组件{{count}}</h1>\n\n\x3c!-- 获取自定义事件的事件对象  --\x3e\n\x3c!-- 特性：自定义事件没有事件对象  --\x3e\n\x3c!-- 如果绑定函数 fn(data){}，data 是触发自定义事件的传参 --\x3e\n\x3c!-- 如果绑定的是js表达式 $event，$event 是触发自定义事件的传参 --\x3e\n\n简写：当使用 v-bind 将数据传递给子组件，和 @update:自定义事件 通知父组件修改数据时，就可以简写\n\x3c!-- <Son :modelValue="count" @update:modelValue="count=$event" /> --\x3e\n<Son v-model="count" />  // 简写\n',normalizedContent:'\x3c!-- 获取原生事件的事件对象 --\x3e\n\x3c!-- 如果绑定函数 fn(e){}，e 是事件对象 --\x3e\n\x3c!-- 如果绑定的是js表达式 $event，$event 是事件对象 --\x3e\n<h1 @click="$event.target.style.color=\'red\'">父组件{{count}}</h1>\n\n\x3c!-- 获取自定义事件的事件对象  --\x3e\n\x3c!-- 特性：自定义事件没有事件对象  --\x3e\n\x3c!-- 如果绑定函数 fn(data){}，data 是触发自定义事件的传参 --\x3e\n\x3c!-- 如果绑定的是js表达式 $event，$event 是触发自定义事件的传参 --\x3e\n\n简写：当使用 v-bind 将数据传递给子组件，和 @update:自定义事件 通知父组件修改数据时，就可以简写\n\x3c!-- <son :modelvalue="count" @update:modelvalue="count=$event" /> --\x3e\n<son v-model="count" />  // 简写\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"混入 (mixin)",frontmatter:{title:"混入 (mixin)",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/d6e9fb/",categories:["《前端》笔记《框架》","vue3"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/02.vue3/19.%E6%B7%B7%E5%85%A5%20(mixin)%20.html",relativePath:"《前端》笔记《框架》/02.vue3/19.混入 (mixin) .md",key:"v-82317f6a",path:"/pages/d6e9fb/",headers:[{level:2,title:"（一）复用组件中的配置项",slug:"一-复用组件中的配置项",normalizedTitle:"（一）复用组件中的配置项",charIndex:59},{level:2,title:"（二）当多个组件都有相同的逻辑，没个组件都要写一次这些相同的逻辑很臃肿，mixins 可以把这些相同的逻辑抽离到一个 模块中，在混入到需要这些逻辑的组件中，实现相同的逻辑",slug:"二-当多个组件都有相同的逻辑-没个组件都要写一次这些相同的逻辑很臃肿-mixins-可以把这些相同的逻辑抽离到一个-模块中-在混入到需要这些逻辑的组件中-实现相同的逻辑",normalizedTitle:"（二）当多个组件都有相同的逻辑，没个组件都要写一次这些相同的逻辑很臃肿，mixins 可以把这些相同的逻辑抽离到一个 模块中，在混入到需要这些逻辑的组件中，实现相同的逻辑",charIndex:76},{level:2,title:"例一",slug:"例一",normalizedTitle:"例一",charIndex:637},{level:2,title:"例二",slug:"例二",normalizedTitle:"例二",charIndex:899}],headersStr:"（一）复用组件中的配置项 （二）当多个组件都有相同的逻辑，没个组件都要写一次这些相同的逻辑很臃肿，mixins 可以把这些相同的逻辑抽离到一个 模块中，在混入到需要这些逻辑的组件中，实现相同的逻辑 例一 例二",content:"文档： https://cn.vuejs.org/v2/guide/mixins.html\n\n\n# 一、作用\n\n\n# （一）复用组件中的配置项\n\n\n# （二）当多个组件都有相同的逻辑，没个组件都要写一次这些相同的逻辑很臃肿，mixins 可以把这些相同的逻辑抽离到一个 模块中，在混入到需要这些逻辑的组件中，实现相同的逻辑\n\n\n# 二、缺点：数据、方法覆盖的概率很大，不好维护\n\n如： 将 a.js 和 b.js 引入到 html 里，如果这两个 js 文件中有相同的变量和方法，就会导致覆盖 解决方法： 在 vue3.x 中可以使用 组合式API\n\n\n# 三、全局混入：所有组件都拥有这些配置项\n\n（-- main.js）\n\nimport App from ./App.vue\napp.mixin({\n  methods: {\n    say () {\n      // this.$el：组件根元素\n      console.log(this.$el,'在mounted中调用say函数')\n    }\n  },\n\n  // 功能：HTML结构 渲染后 执行 say 方法\n  mounted () {\n    this.say()\n  }\n\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 四、局部混入\n\n使用步骤： 1、将逻辑代码写在一个模块中 2、按需导入逻辑代码 3、混入到组件中 4、使用局部混入中的方法\n\n\n# 例一\n\n<script>\nconst obj = {\n  created() {\n    alert(1)\n  }\n}\nconst obj1 = {\n  created() {\n    alert(2)\n  }\n}\nexport default {\n  name: 'Demo',\n  mixins: [obj, obj1],\n  created() {\n    alert(3)\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 例二\n\n需求： 复用关注逻辑\n\n-- mixins.js（作用：提供逻辑） // 1、将逻辑代码写在一个模块中\n\n// 功能：关注逻辑 export const followMixin = { data () { return { loading: false } }, methods: { followFn () { // 作用：发送关注请求 this.loading = true\n\n    // 模拟请求\n    setTimeout(() => {\n      // ... 关注成功的逻辑\n      this.loading = false\n    },2000)\n  }\n}\n\n\n}\n\n-- App.vue\n\n<template>\n  <div class=\"container1\">\n    <h1> 作者：周杰伦  <a href=\"javascript:;\" @click=\"followFn\">{{loading?'正在请求...':'关注'}}</a></h1>  // 4、使用局部混入中的方法\n    <hr>\n    <Son />\n  </div>\n</template>\n<script>\n  import Son from './Son.vue'\n  import { followMixin } from './mixins.js'  // 2、按需导入逻辑代码\n  export default {\n    name: 'App',\n    components: {\n      Son\n    },\n    mixins: [followMixin]  // 3、混入到组件中\n  }\n<\/script>\n\n\n-- Son.vue\n\n<template>\n  <div class=\"container2\">\n    <h2> 作者：周杰伦  <button @click=\"followFn\">{{loading?'loading...':'关注'}}</button> </h2>  // 4、使用局部混入中的方法\n  </div>\n</template>\n<script>\n  import { followMixin } from './mixins.js'  // 2、按需导入逻辑代码\n  export default {\n    name: 'Son',\n    mixins: [followMixin]  // 3、混入到组件中\n  }\n<\/script>",normalizedContent:"文档： https://cn.vuejs.org/v2/guide/mixins.html\n\n\n# 一、作用\n\n\n# （一）复用组件中的配置项\n\n\n# （二）当多个组件都有相同的逻辑，没个组件都要写一次这些相同的逻辑很臃肿，mixins 可以把这些相同的逻辑抽离到一个 模块中，在混入到需要这些逻辑的组件中，实现相同的逻辑\n\n\n# 二、缺点：数据、方法覆盖的概率很大，不好维护\n\n如： 将 a.js 和 b.js 引入到 html 里，如果这两个 js 文件中有相同的变量和方法，就会导致覆盖 解决方法： 在 vue3.x 中可以使用 组合式api\n\n\n# 三、全局混入：所有组件都拥有这些配置项\n\n（-- main.js）\n\nimport app from ./app.vue\napp.mixin({\n  methods: {\n    say () {\n      // this.$el：组件根元素\n      console.log(this.$el,'在mounted中调用say函数')\n    }\n  },\n\n  // 功能：html结构 渲染后 执行 say 方法\n  mounted () {\n    this.say()\n  }\n\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 四、局部混入\n\n使用步骤： 1、将逻辑代码写在一个模块中 2、按需导入逻辑代码 3、混入到组件中 4、使用局部混入中的方法\n\n\n# 例一\n\n<script>\nconst obj = {\n  created() {\n    alert(1)\n  }\n}\nconst obj1 = {\n  created() {\n    alert(2)\n  }\n}\nexport default {\n  name: 'demo',\n  mixins: [obj, obj1],\n  created() {\n    alert(3)\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 例二\n\n需求： 复用关注逻辑\n\n-- mixins.js（作用：提供逻辑） // 1、将逻辑代码写在一个模块中\n\n// 功能：关注逻辑 export const followmixin = { data () { return { loading: false } }, methods: { followfn () { // 作用：发送关注请求 this.loading = true\n\n    // 模拟请求\n    settimeout(() => {\n      // ... 关注成功的逻辑\n      this.loading = false\n    },2000)\n  }\n}\n\n\n}\n\n-- app.vue\n\n<template>\n  <div class=\"container1\">\n    <h1> 作者：周杰伦  <a href=\"javascript:;\" @click=\"followfn\">{{loading?'正在请求...':'关注'}}</a></h1>  // 4、使用局部混入中的方法\n    <hr>\n    <son />\n  </div>\n</template>\n<script>\n  import son from './son.vue'\n  import { followmixin } from './mixins.js'  // 2、按需导入逻辑代码\n  export default {\n    name: 'app',\n    components: {\n      son\n    },\n    mixins: [followmixin]  // 3、混入到组件中\n  }\n<\/script>\n\n\n-- son.vue\n\n<template>\n  <div class=\"container2\">\n    <h2> 作者：周杰伦  <button @click=\"followfn\">{{loading?'loading...':'关注'}}</button> </h2>  // 4、使用局部混入中的方法\n  </div>\n</template>\n<script>\n  import { followmixin } from './mixins.js'  // 2、按需导入逻辑代码\n  export default {\n    name: 'son',\n    mixins: [followmixin]  // 3、混入到组件中\n  }\n<\/script>",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"介绍",frontmatter:{title:"介绍",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7fd07c/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/03.vue-element-admin/00.%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《框架》/03.vue-element-admin/00.介绍.md",key:"v-cb60c634",path:"/pages/7fd07c/",headersStr:null,content:"介绍： vue-element-admin 是一个后台前端解决方案，它基于 vue 和 element-ui 实现。\n\n官方文档： https://panjiachen.gitee.io/vue-element-admin-site/zh/",normalizedContent:"介绍： vue-element-admin 是一个后台前端解决方案，它基于 vue 和 element-ui 实现。\n\n官方文档： https://panjiachen.gitee.io/vue-element-admin-site/zh/",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"项目初始化",frontmatter:{title:"项目初始化",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/796f85/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/03.vue-element-admin/01.%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"《前端》笔记《框架》/03.vue-element-admin/01.项目初始化.md",key:"v-b673deec",path:"/pages/796f85/",headers:[{level:2,title:"1、注释 mock 代码（-- main.js）",slug:"_1、注释-mock-代码-main-js",normalizedTitle:"1、注释 mock 代码（-- main.js）",charIndex:14229},{level:2,title:"2、注释 mock 代码（-- vue.config.js）",slug:"_2、注释-mock-代码-vue-config-js",normalizedTitle:"2、注释 mock 代码（-- vue.config.js）",charIndex:14409},{level:2,title:"1、注释以下代码（-- main.js）",slug:"_1、注释以下代码-main-js",normalizedTitle:"1、注释以下代码（-- main.js）",charIndex:14531},{level:2,title:"2、取消这行代码的注释（-- 同上）",slug:"_2、取消这行代码的注释-同上",normalizedTitle:"2、取消这行代码的注释（-- 同上）",charIndex:14668},{level:2,title:"1、下载 vuex-persistedstate 包",slug:"_1、下载-vuex-persistedstate-包",normalizedTitle:"1、下载 vuex-persistedstate 包",charIndex:15306},{level:2,title:"2、配置 vuex-persistedstate（重构）（-- store/index.js）",slug:"_2、配置-vuex-persistedstate-重构-store-index-js",normalizedTitle:"2、配置 vuex-persistedstate（重构）（-- store/index.js）",charIndex:15370},{level:2,title:"3、模块骨架示例（-- store/modules/新建 demo.js）",slug:"_3、模块骨架示例-store-modules-新建-demo-js",normalizedTitle:"3、模块骨架示例（-- store/modules/新建 demo.js）",charIndex:15862},{level:2,title:"1、（-- .env.development）",slug:"_1、-env-development",normalizedTitle:"1、（-- .env.development）",charIndex:17249},{level:2,title:"2、（-- .env.production）",slug:"_2、-env-production",normalizedTitle:"2、（-- .env.production）",charIndex:17371}],headersStr:"1、注释 mock 代码（-- main.js） 2、注释 mock 代码（-- vue.config.js） 1、注释以下代码（-- main.js） 2、取消这行代码的注释（-- 同上） 1、下载 vuex-persistedstate 包 2、配置 vuex-persistedstate（重构）（-- store/index.js） 3、模块骨架示例（-- store/modules/新建 demo.js） 1、（-- .env.development） 2、（-- .env.production）",content:"# 拉取基础项目模板\n\ngit clone https://github.com/PanJiachen/vue-admin-template.git 项目名称\n\n\n# 安装项目依赖\n\nsudo npm i\n\n\n# 在 vue ui 图形界面中启动一次项目\n\n\n# 设置项目名称（重构 settings.js）\n\nmodule.exports = {\n  \n  title: 'Vue Admin Template',  // 项目名称\n\n  /**\n   * @type {boolean} true | false\n   * @description Whether fix the header\n   */\n  fixedHeader: false,  // 固定头部\n\n  /**\n   * @type {boolean} true | false\n   * @description Whether show the logo in sidebar\n   */\n  sidebarLogo: false  // 显示左侧边栏 logo\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 配置 ESLint（-- 重构 .eslintrc.js）\n\nmodule.exports = {\n  root: true, // 当前项目使用这个配置文件, 不会往父级目录找 .eslintrc.js 文件\n  parserOptions: { // 对新语法使用eslint\n    parser: 'babel-eslint',  // 使用 babel-eslint 来解析新语法 ES6\n    sourceType: 'module'\n  },\n  env: { // 指定 eslint 启动环境\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: { // 自定义规则\n    /* value 值：\n    （1）\"off\"/0：关闭规则\n    （2）\"warn\"/1：将规则视为一个警告（不会影响退出码）, 只警告，不会退出程序\n    （3）\"error\"/2：将规则视为一个错误 (退出码为1)，报错并退出程序\n    */\n\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowFirstLine\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"PascalCase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowSingleLine': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'SwitchCase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforeColon': false,\n      'afterColon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newIsCap': true,\n      'capIsNew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowLoop': false,\n      'allowSwitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {  // 不允许有连续多行空行\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultAssignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': 1,\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidEscape': true,\n      'allowTemplateLiterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'object-curly-spacing': [2, 'always', {\n      objectsInObjects: false\n    }],\n    'array-bracket-spacing': [2, 'never'],\n    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off', // 上线环境用打印就报警告, 开发环境关闭此规则\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off', // debugger 可以终止代码执行\n    // 要求使用骆驼拼写法\n    // 'camelcase': 'none',\n    // 要求使用 === 和 !==\n    'eqeqeq': 0,\n    // 函数和圆括号之间没有空格\n    'space-before-function-paren': 0,\n    // 要求或禁止使用拖尾逗号\n    // \"comma-dangle\": [\"error\", {\n    //   \"arrays\": \"always-multiline\",\n    //   \"objects\": \"always-multiline\",\n    //   \"imports\": \"never\",\n    //   \"exports\": \"always\",\n    //   \"functions\": \"never\"\n    // }],\n    // 要求或禁止文件末尾保留一行空行\n    'eol-last': ['error', 'always'],\n    // 要求对象字面量属性名称用引号括起来：\"consistent\" 要求对象字面量属性名称使用一致的引号，要么全部用引号，要么都不用\n    'quote-props': ['error', 'consistent'],\n    // 要求注释后要有一个空格\n    'spaced-comment': ['error', 'always'],\n    // 要求操作符前后都要有一个空格\n    'space-infix-ops': 'error',\n    // 要求圆括号中的前后都要有一个空格\n    /* \"space-in-parens\": [\"error\", \"always\"], */\n    // 要求花括号中的前后都要有一个空格\n    'object-curly-spacing': ['error', 'always'],\n    // 要求数组中逗号后要使用一个空格\n    'comma-spacing': ['error', { 'before': false, 'after': true }],\n    // 自动补充分号\n    // \"semi\": [2, \"always\"],\n    // 禁止多个空格\n    'no-multi-spaces': 'error',\n    // 使用单引号\n    'quotes': ['error', 'single'],\n    //在computed properties中禁用异步actions\n    'vue/no-async-in-computed-properties': 'error',\n    //不允许重复的keys\n    'vue/no-dupe-keys': 'error',\n    //不允许重复的attributes\n    'vue/no-duplicate-attributes': 'warn',\n    //在 <template> 标签下不允许解析错误\n    'vue/no-parsing-error': [\n      'error',\n      {\n        'x-invalid-end-tag': false,\n      },\n    ],\n    //不允许覆盖保留关键字\n    'vue/no-reserved-keys': 'error',\n    //强制data必须是一个带返回值的函数\n    // 'vue/no-shared-component-data': 'error',\n    //不允许在computed properties中出现副作用。\n    'vue/no-side-effects-in-computed-properties': 'error',\n    //<template>不允许key属性\n    'vue/no-template-key': 'warn',\n    //在 <textarea> 中不允许mustaches\n    'vue/no-textarea-mustache': 'error',\n    //不允许在v-for或者范围内的属性出现未使用的变量定义\n    'vue/no-unused-vars': 'warn',\n    //<component>标签需要v-bind:is属性\n    'vue/require-component-is': 'error',\n    // render 函数必须有一个返回值\n    'vue/require-render-return': 'error',\n    //保证 v-bind:key 和 v-for 指令成对出现\n    'vue/require-v-for-key': 'error',\n    // 检查默认的prop值是否有效\n    'vue/require-valid-default-prop': 'error',\n    // 保证computed属性中有return语句\n    'vue/return-in-computed-property': 'error',\n    // 强制校验 template 根节点\n    'vue/valid-template-root': 'error',\n    // 强制校验 v-bind 指令\n    'vue/valid-v-bind': 'error',\n    // 强制校验 v-cloak 指令\n    'vue/valid-v-cloak': 'error',\n    // 强制校验 v-else-if 指令\n    'vue/valid-v-else-if': 'error',\n    // 强制校验 v-else 指令\n    'vue/valid-v-else': 'error',\n    // 强制校验 v-for 指令\n    'vue/valid-v-for': 'error',\n    // 强制校验 v-html 指令\n    'vue/valid-v-html': 'error',\n    // 强制校验 v-if 指令\n    'vue/valid-v-if': 'error',\n    // 强制校验 v-model 指令\n    'vue/valid-v-model': 'error',\n    // 强制校验 v-on 指令\n    'vue/valid-v-on': 'error',\n    // 强制校验 v-once 指令\n    'vue/valid-v-once': 'error',\n    // 强制校验 v-pre 指令\n    'vue/valid-v-pre': 'error',\n    // 强制校验 v-show 指令\n    'vue/valid-v-show': 'error',\n    // 强制校验 v-text 指令\n    'vue/valid-v-text': 'error',\n    'vue/comment-directive': 0,\n    // 标签内没有内容时，删除结尾标签\n    \"vue/html-self-closing\": [\"off\", {\n      \"html\": {\n        \"void\": \"never\",\n        \"normal\": \"always\",\n        \"component\": \"always\"\n      },\n      \"svg\": \"always\",\n      \"math\": \"always\"\n    }]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n\n\n\n# 删除目录中的 .git 目录\n\n说明： 1、因为这个远程仓库是官方的，所以需要删除 2、.git 是隐藏目录，需要先显示隐藏的目录\n\n\n# 删除多余的静态路由（router/index.js）\n\nexport const constantRoutes = [\n  {\n    path: '/login',\n    component: () => import('@/views/login/index'),\n    hidden: true,\n  },\n\n  {\n    path: '/404',\n    component: () => import('@/views/404'),\n    hidden: true,\n  },\n\n  {\n    path: '/',\n    component: Layout,\n    redirect: '/dashboard',\n    children: [{\n      path: 'dashboard',\n      name: 'Dashboard',\n      component: () => import('@/views/dashboard/index'),\n      meta: { title: '首页', icon: 'dashboard' },\n    }],\n  },\n\n  -- 删\n  {\n    path: '/example',\n    component: Layout,\n    redirect: '/example/table',\n    name: 'Example',\n    meta: { title: 'Example', icon: 'el-icon-s-help' },\n    children: [\n      {\n        path: 'table',\n        name: 'Table',\n        component: () => import('@/views/table/index'),\n        meta: { title: 'Table', icon: 'table' },\n      },\n      {\n        path: 'tree',\n        name: 'Tree',\n        component: () => import('@/views/tree/index'),\n        meta: { title: 'Tree', icon: 'tree' },\n      },\n    ],\n  },\n\n  {\n    path: '/form',\n    component: Layout,\n    children: [\n      {\n        path: 'index',\n        name: 'Form',\n        component: () => import('@/views/form/index'),\n        meta: { title: 'Form', icon: 'form' },\n      },\n    ],\n  },\n\n  {\n    path: '/nested',\n    component: Layout,\n    redirect: '/nested/menu1',\n    name: 'Nested',\n    meta: {\n      title: 'Nested',\n      icon: 'nested',\n    },\n    children: [\n      {\n        path: 'menu1',\n        component: () => import('@/views/nested/menu1/index'), // Parent router-view\n        name: 'Menu1',\n        meta: { title: 'Menu1' },\n        children: [\n          {\n            path: 'menu1-1',\n            component: () => import('@/views/nested/menu1/menu1-1'),\n            name: 'Menu1-1',\n            meta: { title: 'Menu1-1' },\n          },\n          {\n            path: 'menu1-2',\n            component: () => import('@/views/nested/menu1/menu1-2'),\n            name: 'Menu1-2',\n            meta: { title: 'Menu1-2' },\n            children: [\n              {\n                path: 'menu1-2-1',\n                component: () => import('@/views/nested/menu1/menu1-2/menu1-2-1'),\n                name: 'Menu1-2-1',\n                meta: { title: 'Menu1-2-1' },\n              },\n              {\n                path: 'menu1-2-2',\n                component: () => import('@/views/nested/menu1/menu1-2/menu1-2-2'),\n                name: 'Menu1-2-2',\n                meta: { title: 'Menu1-2-2' },\n              },\n            ],\n          },\n          {\n            path: 'menu1-3',\n            component: () => import('@/views/nested/menu1/menu1-3'),\n            name: 'Menu1-3',\n            meta: { title: 'Menu1-3' },\n          },\n        ],\n      },\n      {\n        path: 'menu2',\n        component: () => import('@/views/nested/menu2/index'),\n        name: 'Menu2',\n        meta: { title: 'menu2' },\n      },\n    ],\n  },\n\n  {\n    path: 'external-link',\n    component: Layout,\n    children: [\n      {\n        path: 'https://panjiachen.github.io/vue-element-admin-site/#/',\n        meta: { title: 'External Link', icon: 'link' },\n      },\n    ],\n  },\n  --\n\n  // 404 page must be placed at the end !!!\n  { path: '*', redirect: '/404', hidden: true },\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n\n\n\n# 删除多余的路由组件。除了 dashboard 、 login 目录和 404.vue，其它目录都删除（-- views/）\n\n\n# 删除 table.js （-- api/）\n\n\n# 【可选】如果后端已经开发出了接口，请注释 mock 代码（如果有真实的接口就不需要 mock 模拟数据了）\n\n\n# 1、注释 mock 代码（-- main.js）\n\n-- 注释\n// 判断 当前运行环境变量 是否为 生产环境\nif (process.env.NODE_ENV === 'production') {\n  const { mockXHR } = require('../mock')\n  mockXHR()\n}\n--\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 2、注释 mock 代码（-- vue.config.js）\n\n-- 注释\nbefore: require('./mock/mock-server.js')\n--\n\n\n1\n2\n3\n\n\n\n# 将 element-ui 中的组件设置为中文\n\n\n# 1、注释以下代码（-- main.js）\n\n// import locale from 'element-ui/lib/locale/lang/en' // lang i18n\n\n// Vue.use(ElementUI, { locale })\n\n\n1\n2\n3\n\n\n\n# 2、取消这行代码的注释（-- 同上）\n\nVue.use(ElementUI)\n\n\n1\n\n\n\n# 【可选】创建 demo 的动态路由（-- router/新建 modules/demo.js）\n\n说明： 用于测试代码\n\nimport Layout from '@/layout'\n\n// demo 路由规则\nexport default {\n  // 一级路由\n\n  // 命名\n  name: 'demo',\n\n  // 路由地址\n  path: '/demo',\n\n  // 路由组件\n  component: Layout,\n\n  // 二级路由\n  children: [{\n    // path 为空，则默认使用一级路由的地址，也就是会和一级路由的组件一起展示\n    path: '',\n\n    // 按需加载\n    component: () => import('@/views/demo'),\n\n    // 路由元信息（作用：向组件提供数据）\n    meta: {\n      title: 'demo'\n    }\n  }]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 创建 demo 页（-- view/新建 demo/index.vue）\n\n\n# 配置 vuex-persistedstate 数据持久化\n\n\n# 1、下载 vuex-persistedstate 包\n\nnpm i vuex-persistedstate@4.1.0\n\n\n# 2、配置 vuex-persistedstate（重构）（-- store/index.js）\n\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport demo from '@/store/modules/demo.js'\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  modules: { // 注册模块\n    demo\n  },\n  plugins: [\n    createPersistedState({ // 数据持久化插件 配置\n      key: 'xxxStore', // 本地仓库名字\n      paths: ['demo'] // 指定需要持久化的模块\n    })\n  ]\n})\n\nexport default store\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 3、模块骨架示例（-- store/modules/新建 demo.js）\n\nimport { getUsernameLogin } from '@/api/user-management.js'\n\nconst state = { // 公共数据\n  token: ''\n}\n\nconst mutations = { // 修改 store 中的数据\n  setToken(state, token) {\n    state.token = token\n  }\n}\n\nconst actions = { // 处理异步任务\n  async getUsernameLogin(context, data) { // 用户登录[用户名]\n    const result = await getUsernameLogin(data)\n    context.commit('setToken', result)\n  }\n}\n\nconst modules = { // 计算属性。监听 state 数据\n\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  modules\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 配置 axios（重构 utils/request.js）\n\nimport axios from 'axios'\nimport { Message } from 'element-ui'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: '/api', // 请求根路径\n  timeout: 8000 // 请求超时时间\n})\n\n// 请求 拦截器\nservice.interceptors.request.use(request => {\n  return request\n}, error => {\n  return Promise.reject(error)\n})\n\n// 响应 拦截器\nservice.interceptors.response.use(response => {\n  // 返回响应结果\n  if (response.data.msg === 'success') {\n    return response.data.data\n  } else {\n    Message.error(response.data.msg)\n    // 把异步API执行失败的结果传递出去\n    return Promise.reject(response.data.msg)\n  }\n}, error => {\n  return Promise.reject(error)\n})\n\nexport default service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 配置端口号、请求基准地址\n\n\n# 1、（-- .env.development）\n\n-- 改（旧）\nVUE_APP_BASE_API = '/dev-api'\n--\n-- 改（新）\nVUE_APP_BASE_API = '/api'\n--\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 2、（-- .env.production）\n\n-- 改（旧）\nVUE_APP_BASE_API = '/prod-api'\n--\n-- 改（新）\nVUE_APP_BASE_API = '/api'\n--\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 配置 开发 环境下的接口代理（-- vue.config.js）\n\n...\ndevServer: {\n  port: port,\n  open: true,\n  overlay: {\n    warnings: false,\n    errors: true\n  },\n\n  -- 增\n  // 代理配置\n  proxy:{\n    // 拦截携带 /api 的接口\n    '/api': {\n      // 代理到的目标地址\n      target: 'https://api.it120.cc/zcr',\n      // 是否开启跨域\n      changeOrigin: true,\n      // 路径重写\n      pathRewrite:{\n        // 将 /api 转换为 空\n        '^/api': ''\n      }\n    }\n  },\n  --\n\n...\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 配置权限控制（-- 重构 permission.js）\n\nimport router from '@/router'\nimport nprogress from 'nprogress'\nimport 'nprogress/nprogress.css' // 引入进度条样式\nimport store from '@/store'\n\n// 白名单\nconst whiteList = ['/login', '/404', '/demo']\n// 前置守卫\nrouter.beforeEach((to, from, next) => {\n  // 开启进度条\n  nprogress.start()\n  // 判断是否有 token\n  if (store.getters.token) {\n    if (to.path === '/login') {\n      next('/')\n    } else {\n      next()\n    }\n  } else {\n    // 没有token的情况下\n    if (whiteList.includes(to.path)) {\n      // 表示要去的地址在白名单\n      next()\n    } else {\n      next('/login')\n    }\n  }\n  // 解决手动切换地址时，进度条不关闭的问题\n  nprogress.done()\n})\n// 后置守卫\nrouter.afterEach(() => {\n  // 关闭进度条\n  nprogress.done()\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 配置 vueX （-- 重构 store/modules/user.js）\n\n// import { getToken, setToken, removeToken, setTimeStamp } from '@/utils/auth'\n\nconst state = {}\nconst mutations = {}\nconst actions = {}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 检测是否项目初始化成功\n\n启动项目，没有报错则成功\n\n\n# 配置远程仓库",normalizedContent:"# 拉取基础项目模板\n\ngit clone https://github.com/panjiachen/vue-admin-template.git 项目名称\n\n\n# 安装项目依赖\n\nsudo npm i\n\n\n# 在 vue ui 图形界面中启动一次项目\n\n\n# 设置项目名称（重构 settings.js）\n\nmodule.exports = {\n  \n  title: 'vue admin template',  // 项目名称\n\n  /**\n   * @type {boolean} true | false\n   * @description whether fix the header\n   */\n  fixedheader: false,  // 固定头部\n\n  /**\n   * @type {boolean} true | false\n   * @description whether show the logo in sidebar\n   */\n  sidebarlogo: false  // 显示左侧边栏 logo\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 配置 eslint（-- 重构 .eslintrc.js）\n\nmodule.exports = {\n  root: true, // 当前项目使用这个配置文件, 不会往父级目录找 .eslintrc.js 文件\n  parseroptions: { // 对新语法使用eslint\n    parser: 'babel-eslint',  // 使用 babel-eslint 来解析新语法 es6\n    sourcetype: 'module'\n  },\n  env: { // 指定 eslint 启动环境\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: { // 自定义规则\n    /* value 值：\n    （1）\"off\"/0：关闭规则\n    （2）\"warn\"/1：将规则视为一个警告（不会影响退出码）, 只警告，不会退出程序\n    （3）\"error\"/2：将规则视为一个错误 (退出码为1)，报错并退出程序\n    */\n\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowfirstline\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"pascalcase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowsingleline': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'switchcase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforecolon': false,\n      'aftercolon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newiscap': true,\n      'capisnew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowloop': false,\n      'allowswitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {  // 不允许有连续多行空行\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultassignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': 1,\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidescape': true,\n      'allowtemplateliterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'object-curly-spacing': [2, 'always', {\n      objectsinobjects: false\n    }],\n    'array-bracket-spacing': [2, 'never'],\n    'no-console': process.env.node_env === 'production' ? 'warn' : 'off', // 上线环境用打印就报警告, 开发环境关闭此规则\n    'no-debugger': process.env.node_env === 'production' ? 'warn' : 'off', // debugger 可以终止代码执行\n    // 要求使用骆驼拼写法\n    // 'camelcase': 'none',\n    // 要求使用 === 和 !==\n    'eqeqeq': 0,\n    // 函数和圆括号之间没有空格\n    'space-before-function-paren': 0,\n    // 要求或禁止使用拖尾逗号\n    // \"comma-dangle\": [\"error\", {\n    //   \"arrays\": \"always-multiline\",\n    //   \"objects\": \"always-multiline\",\n    //   \"imports\": \"never\",\n    //   \"exports\": \"always\",\n    //   \"functions\": \"never\"\n    // }],\n    // 要求或禁止文件末尾保留一行空行\n    'eol-last': ['error', 'always'],\n    // 要求对象字面量属性名称用引号括起来：\"consistent\" 要求对象字面量属性名称使用一致的引号，要么全部用引号，要么都不用\n    'quote-props': ['error', 'consistent'],\n    // 要求注释后要有一个空格\n    'spaced-comment': ['error', 'always'],\n    // 要求操作符前后都要有一个空格\n    'space-infix-ops': 'error',\n    // 要求圆括号中的前后都要有一个空格\n    /* \"space-in-parens\": [\"error\", \"always\"], */\n    // 要求花括号中的前后都要有一个空格\n    'object-curly-spacing': ['error', 'always'],\n    // 要求数组中逗号后要使用一个空格\n    'comma-spacing': ['error', { 'before': false, 'after': true }],\n    // 自动补充分号\n    // \"semi\": [2, \"always\"],\n    // 禁止多个空格\n    'no-multi-spaces': 'error',\n    // 使用单引号\n    'quotes': ['error', 'single'],\n    //在computed properties中禁用异步actions\n    'vue/no-async-in-computed-properties': 'error',\n    //不允许重复的keys\n    'vue/no-dupe-keys': 'error',\n    //不允许重复的attributes\n    'vue/no-duplicate-attributes': 'warn',\n    //在 <template> 标签下不允许解析错误\n    'vue/no-parsing-error': [\n      'error',\n      {\n        'x-invalid-end-tag': false,\n      },\n    ],\n    //不允许覆盖保留关键字\n    'vue/no-reserved-keys': 'error',\n    //强制data必须是一个带返回值的函数\n    // 'vue/no-shared-component-data': 'error',\n    //不允许在computed properties中出现副作用。\n    'vue/no-side-effects-in-computed-properties': 'error',\n    //<template>不允许key属性\n    'vue/no-template-key': 'warn',\n    //在 <textarea> 中不允许mustaches\n    'vue/no-textarea-mustache': 'error',\n    //不允许在v-for或者范围内的属性出现未使用的变量定义\n    'vue/no-unused-vars': 'warn',\n    //<component>标签需要v-bind:is属性\n    'vue/require-component-is': 'error',\n    // render 函数必须有一个返回值\n    'vue/require-render-return': 'error',\n    //保证 v-bind:key 和 v-for 指令成对出现\n    'vue/require-v-for-key': 'error',\n    // 检查默认的prop值是否有效\n    'vue/require-valid-default-prop': 'error',\n    // 保证computed属性中有return语句\n    'vue/return-in-computed-property': 'error',\n    // 强制校验 template 根节点\n    'vue/valid-template-root': 'error',\n    // 强制校验 v-bind 指令\n    'vue/valid-v-bind': 'error',\n    // 强制校验 v-cloak 指令\n    'vue/valid-v-cloak': 'error',\n    // 强制校验 v-else-if 指令\n    'vue/valid-v-else-if': 'error',\n    // 强制校验 v-else 指令\n    'vue/valid-v-else': 'error',\n    // 强制校验 v-for 指令\n    'vue/valid-v-for': 'error',\n    // 强制校验 v-html 指令\n    'vue/valid-v-html': 'error',\n    // 强制校验 v-if 指令\n    'vue/valid-v-if': 'error',\n    // 强制校验 v-model 指令\n    'vue/valid-v-model': 'error',\n    // 强制校验 v-on 指令\n    'vue/valid-v-on': 'error',\n    // 强制校验 v-once 指令\n    'vue/valid-v-once': 'error',\n    // 强制校验 v-pre 指令\n    'vue/valid-v-pre': 'error',\n    // 强制校验 v-show 指令\n    'vue/valid-v-show': 'error',\n    // 强制校验 v-text 指令\n    'vue/valid-v-text': 'error',\n    'vue/comment-directive': 0,\n    // 标签内没有内容时，删除结尾标签\n    \"vue/html-self-closing\": [\"off\", {\n      \"html\": {\n        \"void\": \"never\",\n        \"normal\": \"always\",\n        \"component\": \"always\"\n      },\n      \"svg\": \"always\",\n      \"math\": \"always\"\n    }]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n\n\n\n# 删除目录中的 .git 目录\n\n说明： 1、因为这个远程仓库是官方的，所以需要删除 2、.git 是隐藏目录，需要先显示隐藏的目录\n\n\n# 删除多余的静态路由（router/index.js）\n\nexport const constantroutes = [\n  {\n    path: '/login',\n    component: () => import('@/views/login/index'),\n    hidden: true,\n  },\n\n  {\n    path: '/404',\n    component: () => import('@/views/404'),\n    hidden: true,\n  },\n\n  {\n    path: '/',\n    component: layout,\n    redirect: '/dashboard',\n    children: [{\n      path: 'dashboard',\n      name: 'dashboard',\n      component: () => import('@/views/dashboard/index'),\n      meta: { title: '首页', icon: 'dashboard' },\n    }],\n  },\n\n  -- 删\n  {\n    path: '/example',\n    component: layout,\n    redirect: '/example/table',\n    name: 'example',\n    meta: { title: 'example', icon: 'el-icon-s-help' },\n    children: [\n      {\n        path: 'table',\n        name: 'table',\n        component: () => import('@/views/table/index'),\n        meta: { title: 'table', icon: 'table' },\n      },\n      {\n        path: 'tree',\n        name: 'tree',\n        component: () => import('@/views/tree/index'),\n        meta: { title: 'tree', icon: 'tree' },\n      },\n    ],\n  },\n\n  {\n    path: '/form',\n    component: layout,\n    children: [\n      {\n        path: 'index',\n        name: 'form',\n        component: () => import('@/views/form/index'),\n        meta: { title: 'form', icon: 'form' },\n      },\n    ],\n  },\n\n  {\n    path: '/nested',\n    component: layout,\n    redirect: '/nested/menu1',\n    name: 'nested',\n    meta: {\n      title: 'nested',\n      icon: 'nested',\n    },\n    children: [\n      {\n        path: 'menu1',\n        component: () => import('@/views/nested/menu1/index'), // parent router-view\n        name: 'menu1',\n        meta: { title: 'menu1' },\n        children: [\n          {\n            path: 'menu1-1',\n            component: () => import('@/views/nested/menu1/menu1-1'),\n            name: 'menu1-1',\n            meta: { title: 'menu1-1' },\n          },\n          {\n            path: 'menu1-2',\n            component: () => import('@/views/nested/menu1/menu1-2'),\n            name: 'menu1-2',\n            meta: { title: 'menu1-2' },\n            children: [\n              {\n                path: 'menu1-2-1',\n                component: () => import('@/views/nested/menu1/menu1-2/menu1-2-1'),\n                name: 'menu1-2-1',\n                meta: { title: 'menu1-2-1' },\n              },\n              {\n                path: 'menu1-2-2',\n                component: () => import('@/views/nested/menu1/menu1-2/menu1-2-2'),\n                name: 'menu1-2-2',\n                meta: { title: 'menu1-2-2' },\n              },\n            ],\n          },\n          {\n            path: 'menu1-3',\n            component: () => import('@/views/nested/menu1/menu1-3'),\n            name: 'menu1-3',\n            meta: { title: 'menu1-3' },\n          },\n        ],\n      },\n      {\n        path: 'menu2',\n        component: () => import('@/views/nested/menu2/index'),\n        name: 'menu2',\n        meta: { title: 'menu2' },\n      },\n    ],\n  },\n\n  {\n    path: 'external-link',\n    component: layout,\n    children: [\n      {\n        path: 'https://panjiachen.github.io/vue-element-admin-site/#/',\n        meta: { title: 'external link', icon: 'link' },\n      },\n    ],\n  },\n  --\n\n  // 404 page must be placed at the end !!!\n  { path: '*', redirect: '/404', hidden: true },\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n\n\n\n# 删除多余的路由组件。除了 dashboard 、 login 目录和 404.vue，其它目录都删除（-- views/）\n\n\n# 删除 table.js （-- api/）\n\n\n# 【可选】如果后端已经开发出了接口，请注释 mock 代码（如果有真实的接口就不需要 mock 模拟数据了）\n\n\n# 1、注释 mock 代码（-- main.js）\n\n-- 注释\n// 判断 当前运行环境变量 是否为 生产环境\nif (process.env.node_env === 'production') {\n  const { mockxhr } = require('../mock')\n  mockxhr()\n}\n--\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 2、注释 mock 代码（-- vue.config.js）\n\n-- 注释\nbefore: require('./mock/mock-server.js')\n--\n\n\n1\n2\n3\n\n\n\n# 将 element-ui 中的组件设置为中文\n\n\n# 1、注释以下代码（-- main.js）\n\n// import locale from 'element-ui/lib/locale/lang/en' // lang i18n\n\n// vue.use(elementui, { locale })\n\n\n1\n2\n3\n\n\n\n# 2、取消这行代码的注释（-- 同上）\n\nvue.use(elementui)\n\n\n1\n\n\n\n# 【可选】创建 demo 的动态路由（-- router/新建 modules/demo.js）\n\n说明： 用于测试代码\n\nimport layout from '@/layout'\n\n// demo 路由规则\nexport default {\n  // 一级路由\n\n  // 命名\n  name: 'demo',\n\n  // 路由地址\n  path: '/demo',\n\n  // 路由组件\n  component: layout,\n\n  // 二级路由\n  children: [{\n    // path 为空，则默认使用一级路由的地址，也就是会和一级路由的组件一起展示\n    path: '',\n\n    // 按需加载\n    component: () => import('@/views/demo'),\n\n    // 路由元信息（作用：向组件提供数据）\n    meta: {\n      title: 'demo'\n    }\n  }]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 创建 demo 页（-- view/新建 demo/index.vue）\n\n\n# 配置 vuex-persistedstate 数据持久化\n\n\n# 1、下载 vuex-persistedstate 包\n\nnpm i vuex-persistedstate@4.1.0\n\n\n# 2、配置 vuex-persistedstate（重构）（-- store/index.js）\n\nimport vue from 'vue'\nimport vuex from 'vuex'\nimport createpersistedstate from 'vuex-persistedstate'\nimport demo from '@/store/modules/demo.js'\n\nvue.use(vuex)\n\nconst store = new vuex.store({\n  modules: { // 注册模块\n    demo\n  },\n  plugins: [\n    createpersistedstate({ // 数据持久化插件 配置\n      key: 'xxxstore', // 本地仓库名字\n      paths: ['demo'] // 指定需要持久化的模块\n    })\n  ]\n})\n\nexport default store\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 3、模块骨架示例（-- store/modules/新建 demo.js）\n\nimport { getusernamelogin } from '@/api/user-management.js'\n\nconst state = { // 公共数据\n  token: ''\n}\n\nconst mutations = { // 修改 store 中的数据\n  settoken(state, token) {\n    state.token = token\n  }\n}\n\nconst actions = { // 处理异步任务\n  async getusernamelogin(context, data) { // 用户登录[用户名]\n    const result = await getusernamelogin(data)\n    context.commit('settoken', result)\n  }\n}\n\nconst modules = { // 计算属性。监听 state 数据\n\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  modules\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 配置 axios（重构 utils/request.js）\n\nimport axios from 'axios'\nimport { message } from 'element-ui'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseurl: '/api', // 请求根路径\n  timeout: 8000 // 请求超时时间\n})\n\n// 请求 拦截器\nservice.interceptors.request.use(request => {\n  return request\n}, error => {\n  return promise.reject(error)\n})\n\n// 响应 拦截器\nservice.interceptors.response.use(response => {\n  // 返回响应结果\n  if (response.data.msg === 'success') {\n    return response.data.data\n  } else {\n    message.error(response.data.msg)\n    // 把异步api执行失败的结果传递出去\n    return promise.reject(response.data.msg)\n  }\n}, error => {\n  return promise.reject(error)\n})\n\nexport default service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 配置端口号、请求基准地址\n\n\n# 1、（-- .env.development）\n\n-- 改（旧）\nvue_app_base_api = '/dev-api'\n--\n-- 改（新）\nvue_app_base_api = '/api'\n--\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 2、（-- .env.production）\n\n-- 改（旧）\nvue_app_base_api = '/prod-api'\n--\n-- 改（新）\nvue_app_base_api = '/api'\n--\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 配置 开发 环境下的接口代理（-- vue.config.js）\n\n...\ndevserver: {\n  port: port,\n  open: true,\n  overlay: {\n    warnings: false,\n    errors: true\n  },\n\n  -- 增\n  // 代理配置\n  proxy:{\n    // 拦截携带 /api 的接口\n    '/api': {\n      // 代理到的目标地址\n      target: 'https://api.it120.cc/zcr',\n      // 是否开启跨域\n      changeorigin: true,\n      // 路径重写\n      pathrewrite:{\n        // 将 /api 转换为 空\n        '^/api': ''\n      }\n    }\n  },\n  --\n\n...\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 配置权限控制（-- 重构 permission.js）\n\nimport router from '@/router'\nimport nprogress from 'nprogress'\nimport 'nprogress/nprogress.css' // 引入进度条样式\nimport store from '@/store'\n\n// 白名单\nconst whitelist = ['/login', '/404', '/demo']\n// 前置守卫\nrouter.beforeeach((to, from, next) => {\n  // 开启进度条\n  nprogress.start()\n  // 判断是否有 token\n  if (store.getters.token) {\n    if (to.path === '/login') {\n      next('/')\n    } else {\n      next()\n    }\n  } else {\n    // 没有token的情况下\n    if (whitelist.includes(to.path)) {\n      // 表示要去的地址在白名单\n      next()\n    } else {\n      next('/login')\n    }\n  }\n  // 解决手动切换地址时，进度条不关闭的问题\n  nprogress.done()\n})\n// 后置守卫\nrouter.aftereach(() => {\n  // 关闭进度条\n  nprogress.done()\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 配置 vuex （-- 重构 store/modules/user.js）\n\n// import { gettoken, settoken, removetoken, settimestamp } from '@/utils/auth'\n\nconst state = {}\nconst mutations = {}\nconst actions = {}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 检测是否项目初始化成功\n\n启动项目，没有报错则成功\n\n\n# 配置远程仓库",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"目录结构",frontmatter:{title:"目录结构",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/39d56d/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/03.vue-element-admin/02.%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.html",relativePath:"《前端》笔记《框架》/03.vue-element-admin/02.目录结构.md",key:"v-3561ff8f",path:"/pages/39d56d/",headersStr:null,content:"├── build                      # 构建相关\n├── mock                       # 项目mock 模拟数据\n├── public                     # 静态资源\n│   │── favicon.ico              # favicon图标\n│   └── index.html               # html模板\n├── src                        # 源代码\n│   ├── api                      # 所有请求\n│   ├── assets                   # 主题 字体等静态资源\n│   ├── components               # 全局公用组件\n│   ├── directives               # 自定义指令               【手动创建】\n│   │   ├── index.js             # 全局自定义指令            【手动创建】\n│   ├── icons                    # 项目所有 svg icons\n│   ├── layout                   # 全局 布局组件\n│   ├── router                   # 路由\n│   ├── store                    # 全局 store管理\n│   ├── styles                   # 全局样式\n│   │   ├── sidebar.scss           # 左侧导航组件样式\n│   ├── utils                    # 全局公用方法\n│   │   ├── validate.js            # 校验规则文件\n│   │   ├── auth.js                # token 方法\n│   ├── vendor                   # 公用vendor\n│   ├── views                    # views 所有页面\n│   ├── App.vue                  # 入口页面\n│   ├── main.js                  # 入口文件 加载组件 初始化等\n│   ├── permission.js            # 权限管理\n│   └── settings.js              # 项目信息配置文件\n├── tests                      # 测试\n├── .env.development           # 开发环境配置\n├── .env.production            # 生产环境配置\n├── .env.staging               # 测试环境配置\n├── .eslintrc.js               # eslint 配置项\n├── .babelrc                   # babel-loader 配置\n├── .travis.yml                # 自动化CI配置\n├── vue.config.js              # vue-cli 配置\n├── postcss.config.js          # postcss 配置\n└── package.json               # package.json\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n",normalizedContent:"├── build                      # 构建相关\n├── mock                       # 项目mock 模拟数据\n├── public                     # 静态资源\n│   │── favicon.ico              # favicon图标\n│   └── index.html               # html模板\n├── src                        # 源代码\n│   ├── api                      # 所有请求\n│   ├── assets                   # 主题 字体等静态资源\n│   ├── components               # 全局公用组件\n│   ├── directives               # 自定义指令               【手动创建】\n│   │   ├── index.js             # 全局自定义指令            【手动创建】\n│   ├── icons                    # 项目所有 svg icons\n│   ├── layout                   # 全局 布局组件\n│   ├── router                   # 路由\n│   ├── store                    # 全局 store管理\n│   ├── styles                   # 全局样式\n│   │   ├── sidebar.scss           # 左侧导航组件样式\n│   ├── utils                    # 全局公用方法\n│   │   ├── validate.js            # 校验规则文件\n│   │   ├── auth.js                # token 方法\n│   ├── vendor                   # 公用vendor\n│   ├── views                    # views 所有页面\n│   ├── app.vue                  # 入口页面\n│   ├── main.js                  # 入口文件 加载组件 初始化等\n│   ├── permission.js            # 权限管理\n│   └── settings.js              # 项目信息配置文件\n├── tests                      # 测试\n├── .env.development           # 开发环境配置\n├── .env.production            # 生产环境配置\n├── .env.staging               # 测试环境配置\n├── .eslintrc.js               # eslint 配置项\n├── .babelrc                   # babel-loader 配置\n├── .travis.yml                # 自动化ci配置\n├── vue.config.js              # vue-cli 配置\n├── postcss.config.js          # postcss 配置\n└── package.json               # package.json\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"事件修饰符",frontmatter:{title:"事件修饰符",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/bc059f/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/03.vue-element-admin/03.%E4%BA%8B%E4%BB%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6.html",relativePath:"《前端》笔记《框架》/03.vue-element-admin/03.事件修饰符.md",key:"v-1bf32c2a",path:"/pages/bc059f/",headers:[{level:2,title:"一、监听组件的原生事件",slug:"一、监听组件的原生事件",normalizedTitle:"一、监听组件的原生事件",charIndex:2},{level:2,title:"二、子组件改变父组件的数据（语法糖）",slug:"二、子组件改变父组件的数据-语法糖",normalizedTitle:"二、子组件改变父组件的数据（语法糖）",charIndex:279}],headersStr:"一、监听组件的原生事件 二、子组件改变父组件的数据（语法糖）",content:"# 一、监听组件的原生事件\n\n语法：\n\n事件类型.native\n\n\n1\n\n\n使用场景： 当 中的组件没有开放事件，但是你又想为原生的组件添加事件时。如果文档中没有事件类型的配置项，说明没有开放事件类型\n\n\x3c!--  内部的结构是这样的，但是添加事件类型只能给 div 添加，如果你想要给原生组件添加事件类型，可以使用 native 事件修饰符 --\x3e\n<div>\n  <input>\n<div>\n\n\n1\n2\n3\n4\n\n\n例：\n\n<el-input @keyup.enter.native=\"handleLogin\"></el-input>\n\n\n1\n\n\n\n# 二、子组件改变父组件的数据（语法糖）\n\n语法：\n\n:props.sync\n\n\n1\n\n\n传统方法： 子组件向父组件传递数据\n\n（1）update:props（-- 子组件） 方法： this.$emit('update:自定义属性', 值)\n\n例：\n\nthis.$emit('update:showDialog', false)\n\n\n1\n\n\n（2）:props.sync='showDialog'（父组件） 方法： <组件 :自定义属性.sync='修改的数据'>\n\n例：\n\n<child :show-dialog.sync='showDialog'>\n\n\n1\n",normalizedContent:"# 一、监听组件的原生事件\n\n语法：\n\n事件类型.native\n\n\n1\n\n\n使用场景： 当 中的组件没有开放事件，但是你又想为原生的组件添加事件时。如果文档中没有事件类型的配置项，说明没有开放事件类型\n\n\x3c!--  内部的结构是这样的，但是添加事件类型只能给 div 添加，如果你想要给原生组件添加事件类型，可以使用 native 事件修饰符 --\x3e\n<div>\n  <input>\n<div>\n\n\n1\n2\n3\n4\n\n\n例：\n\n<el-input @keyup.enter.native=\"handlelogin\"></el-input>\n\n\n1\n\n\n\n# 二、子组件改变父组件的数据（语法糖）\n\n语法：\n\n:props.sync\n\n\n1\n\n\n传统方法： 子组件向父组件传递数据\n\n（1）update:props（-- 子组件） 方法： this.$emit('update:自定义属性', 值)\n\n例：\n\nthis.$emit('update:showdialog', false)\n\n\n1\n\n\n（2）:props.sync='showdialog'（父组件） 方法： <组件 :自定义属性.sync='修改的数据'>\n\n例：\n\n<child :show-dialog.sync='showdialog'>\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"静态路由、动态路由",frontmatter:{title:"静态路由、动态路由",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6503ff/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/03.vue-element-admin/04.%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E3%80%81%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1.html",relativePath:"《前端》笔记《框架》/03.vue-element-admin/04.静态路由、动态路由.md",key:"v-e45063dc",path:"/pages/6503ff/",headersStr:null,content:"作用： 控制账号权限\n\n动态路由： 只有有权限的账号才可以访问\n\n静态路由： 所有账号都可以访问\n\n * router/index.js 的 constantRoutes 常量中存储的就是静态路由\n\n如：\n\n * A 账号的左侧边栏中有 【社保、考勤、工资】\n * B 账号的左侧边栏中只有【首页】",normalizedContent:"作用： 控制账号权限\n\n动态路由： 只有有权限的账号才可以访问\n\n静态路由： 所有账号都可以访问\n\n * router/index.js 的 constantroutes 常量中存储的就是静态路由\n\n如：\n\n * a 账号的左侧边栏中有 【社保、考勤、工资】\n * b 账号的左侧边栏中只有【首页】",charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"介绍",frontmatter:{title:"介绍",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/e24c11/",categories:["《前端》笔记《框架》","uni-app"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/04.uni-app/00.%E4%BB%8B%E7%BB%8D.html",relativePath:"《前端》笔记《框架》/04.uni-app/00.介绍.md",key:"v-22601e66",path:"/pages/e24c11/",headers:[{level:2,title:"一、HBuilderX（由 uni-app 团队开发的）（推荐）",slug:"一、hbuilderx-由-uni-app-团队开发的-推荐",normalizedTitle:"一、hbuilderx（由 uni-app 团队开发的）（推荐）",charIndex:121},{level:2,title:"初始化项目",slug:"初始化项目",normalizedTitle:"初始化项目",charIndex:879}],headersStr:"一、HBuilderX（由 uni-app 团队开发的）（推荐） 初始化项目",content:'介绍： uni-app 是一个基于 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可以发布到 ios、Android、H5、小程序 等多个平台\n\n文档： https://uniapp.dcloud.io\n\n\n# 开发方式\n\n\n# 一、HBuilderX（由 uni-app 团队开发的）（推荐）\n\n下载 开发版： https://www.dcloud.io/hbuilderx.html\n\n特性： - 模板丰富 - 完善的智能提示 - 一键运行\n\n配置 HBuilderX： 1、安装 scss/sass 编译 下载（使用 HBuilderX 导入插件)：https://ext.dcloud.net.cn/plugin?name=compile-node-sass\n\n2、使用 VSCode 的预设快捷方案：工具 → 预设快捷方案切换 → VSCode\n\n3、配置 HBuilderX 的偏好设置：偏好设置 → 源码视图 → 用户设置，添加以下代码\n  {\n    "editor.fontFamily": "Consolas",\n    "editor.fontFmyCHS": "微软雅黑 Light",\n    "editor.insertSpaces": true,\n    "editor.lineHeight": "1.5",\n    "editor.minimap.enabled": false,\n    "editor.mouseWheelZoom": true,\n    "editor.onlyHighlightWord": false,\n    "editor.tabSize": 2,\n    "editor.wordWrap": true,\n    "explorer.iconTheme": "vs-seti",\n    "editor.codeassist.px2rem.enabel": false,\n    "editor.codeassist.px2upx.enabel": false\n  }\n\n\n\n# 初始化项目\n\n创建 uni-app 项目：HBuilderX →  uni-app → 模板选择 uni-ui 项目\n\n目录结构\n  components               // 存放 组件\n  pages                    // 存放 页面（特性：每个页面必须以文件夹的形式存在）\n  static                   // 静态资源\n  App.vue                  // 项目根组件\n  main.js                  // Vue 初始化入口文件\n  mainfest.json            // 打包配置文件。配置 应用名称、appid、logo、版本 等\n  pages.json               // 页面配置文件。配置 页面路由、导航条、tabBar 等\n  uni.scss                 // 内置的 sass 变量，可以直接使用   // upx 单位（科普）：uni-app 独创的单位，会自动转换为当前客户端的单位，如小程序中的 rpx 等，现在可以通过 rpx 来替代 upx 单位了\n\n获取 APPID：https://mp.weixin.qq.com/  → 开发 → 开发设置\n\n配置 AppID：HBuilderX → manifest.json → 微信小程序配置 → 微信小程序AppID\n\n配置 微信开发者工具路径：HBuilderX → 偏好设置 → 运行配置 → 微信开发者工具路径\n\n开启服务端口：微信开发者工具 → 设置 → 安全设置 → 开启 服务端口\n\n编译后自动运行到微信开发者工具中：HBuilderX → 运行到小程序模拟器 → 微信开发者工具\n\n警告：\n  （1）[sitemap 索引情况提示] 根据 sitemap 的规则[0]，当前页面 [pages/child/index] 将不被索引\n    解决方法：\n      （1）添加 "checkSiteMap": false 配置项\n        manifest.json → 源码视图 → mp-weixin 节点 → setting 节点 → 添加 "checkSiteMap": false,\n\n      （2）在微信开发这工具中重新打开项目\n      \n      （3）重新编译\n\n初始化包管理配置文件：npm init -y\n\ngit 初始化\n  配置 git 忽略清单（-- 新建.gitignore）\n    /node_modules\n    /unpackage/dist\n\n  跟踪 unpackage 目录：在 unpackage 目录下新建 .gitkeep\n\n  依次运行以下命令：\n    （1）git init：初始化本地 git 仓库\n        git status：查看文件状态\n    （2）git add .：将所有文件加入到暂存区\n    （3）git commit -m "提交说明"： 将暂存区的文件提交到 Git 仓库中\n        git status：查看文件状态\n\n  关联仓库\n    码云 → 创建仓库 → 选择 SSH → 已有仓库 → 执行里面的两个 git 命令\n\n\n创建页面 右击 pages 目录 → 新建页面 → 页面名称 → 选择模板（使用 scss 的页面）\n\n导入 初始化样式、公共样式、矢量图标（-- App.vue）\n\n二、脚手架 项目初始化 创建项目 语法：vue create -p dcloudio/uni-preset-vue 项目名称（提示：项目名不能有大写）\n\n    提示：如果等待三分钟还没开始，请重新运行该命令\n    命令行提示：选择默认模板即可\n\n  启动项目\n    进入项目中，并输入 npm run dev:mp-weixin\n\n  进入微信小程序开发者工具导入项目\n\n  进入 VSCode 导入项目\n\n  查看 微信小程序开发者工具 是否报错\n    报错：\n      （1）[ app.json 文件内容错误] app.json: app.json 未找到(env: macOS,mp,1.05.2112022; lib: 2.21.1)\n\n        instanceframe?s=1640309024405&autoload:1 Uncaught ReferenceError: __wxConfig is not definedat instanceframe?s=1640309024405&autoload:1(env: macOS,mp,1.05.2112022; lib: 2.21.2)\n\n        解决方法：在 project.config.json 中添加一句\n\n          -- 增\n            "miniprogramRoot": "dist/dev/mp-weixin",\n          --\n\n          "description": "项目配置文件",\n    \n    警告：\n      （1）[sitemap 索引情况提示] 根据 sitemap 的规则[0]，当前页面 [pages/child/index] 将不被索引\n        解决方法：\n          1、在 setting 字段中添加以下代码（-- project.config.json）\n            "checkSiteMap": false,\n\n          2、重启微信开发者工具\n\n  将 dist 从忽略清单中移除（-- .gitignore）（说明：修改 pages.js 或其他文件时，dist 中的文件也会同步修改，当回滚时，dist 没有回滚就会发生错误）\n\n  上传到远程仓库\n\n  目录结构（科普）\n    dist\n    node_modules\n    public\n    src\n      pages\n        index\n          index.vue       // 页面根组件 \n      static              // 静态资源\n      App.vue             // 项目根组件\n      main.js             // Vue 初始化入口文件\n      manifest.json       // 打包配置文件。配置 应用名称、appid、logo、版本 等\n      pages.json          // 页面配置文件。配置 页面路由、导航条、tabBar 等\n      uni.scss            // 内置的 sass 变量，可以直接使用   // upx 单位（科普）：uni-app 独创的单位，会自动转换为当前客户端的单位，如小程序中的 rpx 等，现在可以通过 rpx 来替代 upx 单位了\n    .gitignore            // 忽略清单\n    babel.config.js       // babel 配置文件（ES降级配置文件、ES6 转 ES5、ES7 转 ES5、等）\n    package-lock.json \n    package.json          // 包管理配置文件\n    postcss.config.js\n    project.config.json\n    README.md\n    tsconfig.json         // 对 TS 的语法进行规范\n\n  整理项目结构（删除多余代码）\n\n  安装插件\n    npm i sass-loader@7.3.1 node-sass@4.14.1\n\n  提示：使用 脚手架 开发项目，新建、修改、删除 文件时容易报错，只需重启项目即可（关闭项目，启动项目 npm run dev:mp-weixin）\n\n  编辑器报错：Comments are not permitted in JSON\n    翻译：JSON中不允许注释\n    解决方法：将编辑器右下角的配置 JSON 更改为 JSON with Comments 即可\n\n  导入资源\n\n    微信小程序中使用阿里巴巴图标库：https://blog.csdn.net/weixin_41796860/article/details/93893834\n\n    导入\n      导入 初始化样式（-- static/styles/ 导入 base.wxss）\n      导入 图标字体（-- static/ 导入 iconfont）\n      导入 tabBar 图标（-- static/ 导入 icon）\n\n    全局引入（-- App.vue）\n      <sytle>\n        @import \'./static/styles/base.wxss\';\n        @import \'./static/iconfont.wxss\';\n      </sytle>\n\n\n与原生为小程序的区别： 一、全局页面配置文件中的 window 配置项变成 globalStyle',normalizedContent:'介绍： uni-app 是一个基于 vue.js 开发所有前端应用的框架，开发者编写一套代码，可以发布到 ios、android、h5、小程序 等多个平台\n\n文档： https://uniapp.dcloud.io\n\n\n# 开发方式\n\n\n# 一、hbuilderx（由 uni-app 团队开发的）（推荐）\n\n下载 开发版： https://www.dcloud.io/hbuilderx.html\n\n特性： - 模板丰富 - 完善的智能提示 - 一键运行\n\n配置 hbuilderx： 1、安装 scss/sass 编译 下载（使用 hbuilderx 导入插件)：https://ext.dcloud.net.cn/plugin?name=compile-node-sass\n\n2、使用 vscode 的预设快捷方案：工具 → 预设快捷方案切换 → vscode\n\n3、配置 hbuilderx 的偏好设置：偏好设置 → 源码视图 → 用户设置，添加以下代码\n  {\n    "editor.fontfamily": "consolas",\n    "editor.fontfmychs": "微软雅黑 light",\n    "editor.insertspaces": true,\n    "editor.lineheight": "1.5",\n    "editor.minimap.enabled": false,\n    "editor.mousewheelzoom": true,\n    "editor.onlyhighlightword": false,\n    "editor.tabsize": 2,\n    "editor.wordwrap": true,\n    "explorer.icontheme": "vs-seti",\n    "editor.codeassist.px2rem.enabel": false,\n    "editor.codeassist.px2upx.enabel": false\n  }\n\n\n\n# 初始化项目\n\n创建 uni-app 项目：hbuilderx →  uni-app → 模板选择 uni-ui 项目\n\n目录结构\n  components               // 存放 组件\n  pages                    // 存放 页面（特性：每个页面必须以文件夹的形式存在）\n  static                   // 静态资源\n  app.vue                  // 项目根组件\n  main.js                  // vue 初始化入口文件\n  mainfest.json            // 打包配置文件。配置 应用名称、appid、logo、版本 等\n  pages.json               // 页面配置文件。配置 页面路由、导航条、tabbar 等\n  uni.scss                 // 内置的 sass 变量，可以直接使用   // upx 单位（科普）：uni-app 独创的单位，会自动转换为当前客户端的单位，如小程序中的 rpx 等，现在可以通过 rpx 来替代 upx 单位了\n\n获取 appid：https://mp.weixin.qq.com/  → 开发 → 开发设置\n\n配置 appid：hbuilderx → manifest.json → 微信小程序配置 → 微信小程序appid\n\n配置 微信开发者工具路径：hbuilderx → 偏好设置 → 运行配置 → 微信开发者工具路径\n\n开启服务端口：微信开发者工具 → 设置 → 安全设置 → 开启 服务端口\n\n编译后自动运行到微信开发者工具中：hbuilderx → 运行到小程序模拟器 → 微信开发者工具\n\n警告：\n  （1）[sitemap 索引情况提示] 根据 sitemap 的规则[0]，当前页面 [pages/child/index] 将不被索引\n    解决方法：\n      （1）添加 "checksitemap": false 配置项\n        manifest.json → 源码视图 → mp-weixin 节点 → setting 节点 → 添加 "checksitemap": false,\n\n      （2）在微信开发这工具中重新打开项目\n      \n      （3）重新编译\n\n初始化包管理配置文件：npm init -y\n\ngit 初始化\n  配置 git 忽略清单（-- 新建.gitignore）\n    /node_modules\n    /unpackage/dist\n\n  跟踪 unpackage 目录：在 unpackage 目录下新建 .gitkeep\n\n  依次运行以下命令：\n    （1）git init：初始化本地 git 仓库\n        git status：查看文件状态\n    （2）git add .：将所有文件加入到暂存区\n    （3）git commit -m "提交说明"： 将暂存区的文件提交到 git 仓库中\n        git status：查看文件状态\n\n  关联仓库\n    码云 → 创建仓库 → 选择 ssh → 已有仓库 → 执行里面的两个 git 命令\n\n\n创建页面 右击 pages 目录 → 新建页面 → 页面名称 → 选择模板（使用 scss 的页面）\n\n导入 初始化样式、公共样式、矢量图标（-- app.vue）\n\n二、脚手架 项目初始化 创建项目 语法：vue create -p dcloudio/uni-preset-vue 项目名称（提示：项目名不能有大写）\n\n    提示：如果等待三分钟还没开始，请重新运行该命令\n    命令行提示：选择默认模板即可\n\n  启动项目\n    进入项目中，并输入 npm run dev:mp-weixin\n\n  进入微信小程序开发者工具导入项目\n\n  进入 vscode 导入项目\n\n  查看 微信小程序开发者工具 是否报错\n    报错：\n      （1）[ app.json 文件内容错误] app.json: app.json 未找到(env: macos,mp,1.05.2112022; lib: 2.21.1)\n\n        instanceframe?s=1640309024405&autoload:1 uncaught referenceerror: __wxconfig is not definedat instanceframe?s=1640309024405&autoload:1(env: macos,mp,1.05.2112022; lib: 2.21.2)\n\n        解决方法：在 project.config.json 中添加一句\n\n          -- 增\n            "miniprogramroot": "dist/dev/mp-weixin",\n          --\n\n          "description": "项目配置文件",\n    \n    警告：\n      （1）[sitemap 索引情况提示] 根据 sitemap 的规则[0]，当前页面 [pages/child/index] 将不被索引\n        解决方法：\n          1、在 setting 字段中添加以下代码（-- project.config.json）\n            "checksitemap": false,\n\n          2、重启微信开发者工具\n\n  将 dist 从忽略清单中移除（-- .gitignore）（说明：修改 pages.js 或其他文件时，dist 中的文件也会同步修改，当回滚时，dist 没有回滚就会发生错误）\n\n  上传到远程仓库\n\n  目录结构（科普）\n    dist\n    node_modules\n    public\n    src\n      pages\n        index\n          index.vue       // 页面根组件 \n      static              // 静态资源\n      app.vue             // 项目根组件\n      main.js             // vue 初始化入口文件\n      manifest.json       // 打包配置文件。配置 应用名称、appid、logo、版本 等\n      pages.json          // 页面配置文件。配置 页面路由、导航条、tabbar 等\n      uni.scss            // 内置的 sass 变量，可以直接使用   // upx 单位（科普）：uni-app 独创的单位，会自动转换为当前客户端的单位，如小程序中的 rpx 等，现在可以通过 rpx 来替代 upx 单位了\n    .gitignore            // 忽略清单\n    babel.config.js       // babel 配置文件（es降级配置文件、es6 转 es5、es7 转 es5、等）\n    package-lock.json \n    package.json          // 包管理配置文件\n    postcss.config.js\n    project.config.json\n    readme.md\n    tsconfig.json         // 对 ts 的语法进行规范\n\n  整理项目结构（删除多余代码）\n\n  安装插件\n    npm i sass-loader@7.3.1 node-sass@4.14.1\n\n  提示：使用 脚手架 开发项目，新建、修改、删除 文件时容易报错，只需重启项目即可（关闭项目，启动项目 npm run dev:mp-weixin）\n\n  编辑器报错：comments are not permitted in json\n    翻译：json中不允许注释\n    解决方法：将编辑器右下角的配置 json 更改为 json with comments 即可\n\n  导入资源\n\n    微信小程序中使用阿里巴巴图标库：https://blog.csdn.net/weixin_41796860/article/details/93893834\n\n    导入\n      导入 初始化样式（-- static/styles/ 导入 base.wxss）\n      导入 图标字体（-- static/ 导入 iconfont）\n      导入 tabbar 图标（-- static/ 导入 icon）\n\n    全局引入（-- app.vue）\n      <sytle>\n        @import \'./static/styles/base.wxss\';\n        @import \'./static/iconfont.wxss\';\n      </sytle>\n\n\n与原生为小程序的区别： 一、全局页面配置文件中的 window 配置项变成 globalstyle',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"自定义组件",frontmatter:{title:"自定义组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ddd057/",categories:["《前端》笔记《框架》","uni-app"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/04.uni-app/01.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6.html",relativePath:"《前端》笔记《框架》/04.uni-app/01.自定义组件.md",key:"v-1888f947",path:"/pages/ddd057/",headersStr:null,content:'使用步骤： （1）创建组件 1、创建 components 目录 → 右键 components 目录 → 新建组件\n\n2、输入组件名称（建议开头都带 my-，方便区分其它的组件）\n\n3、选择模板：使用 scss 的模板组件\n\n4、勾选创建同名目录\n\n\n（2）使用组件 <组件></组件>\n\n特性 （1）点击事件无效 <my-search @click="gotoSearch">\n\n说明：因为这个自定义组件没有封装点击事件，所以这里绑定点击事件是无效的\n解决步骤（-- 自定义组件）：\n  （1）为自定义组件中的 template 里的子元素添加点击事件\n    <view class="category-container" @click="searchBoxHandler">\n\n  （2）定义方法，通过 this.$emit() 方法触发 gotoSearch 事件\n    searchBoxHandler() {\n      this.$emit(\'myclick\')\n    }',normalizedContent:'使用步骤： （1）创建组件 1、创建 components 目录 → 右键 components 目录 → 新建组件\n\n2、输入组件名称（建议开头都带 my-，方便区分其它的组件）\n\n3、选择模板：使用 scss 的模板组件\n\n4、勾选创建同名目录\n\n\n（2）使用组件 <组件></组件>\n\n特性 （1）点击事件无效 <my-search @click="gotosearch">\n\n说明：因为这个自定义组件没有封装点击事件，所以这里绑定点击事件是无效的\n解决步骤（-- 自定义组件）：\n  （1）为自定义组件中的 template 里的子元素添加点击事件\n    <view class="category-container" @click="searchboxhandler">\n\n  （2）定义方法，通过 this.$emit() 方法触发 gotosearch 事件\n    searchboxhandler() {\n      this.$emit(\'myclick\')\n    }',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"},{title:"uni-ui",frontmatter:{title:"uni-ui",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/eb9fff/",categories:["《前端》笔记《框架》","uni-app"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/04.uni-app/02.uni-ui.html",relativePath:"《前端》笔记《框架》/04.uni-app/02.uni-ui.md",key:"v-11e4bf49",path:"/pages/eb9fff/",headersStr:null,content:'文档：https://uniapp.dcloud.io/component/uniui/uni-ui\n\n说明：如果要修改样式，请直接到 uni_modules 目录中找到对应的组件进行修改\n\nicon 图标\n  文档：https://uniapp.dcloud.io/component/uniui/uni-icons\n  预览：https://hellouniapp.dcloud.net.cn/pages/extUI/icons/icons\n\n  使用步骤：\n    （1）使用组件\n      <uni-icons type="contact" size="30"></uni-icons>\n\nuni-search-bar 搜索栏\n  文档：https://uniapp.dcloud.io/component/uniui/uni-search-bar?id=%e5%9f%ba%e6%9c%ac%e7%94%a8%e6%b3%95\n  预览：https://hellouniapp.dcloud.net.cn/pages/extUI/search-bar/search-bar\n\n  使用步骤\n    属性说明：\n      placeholder：不对焦时的默认文本\n\n      :radius="100"：设置圆角\n\n      cancelButton：是否显示取消按钮\n        - auto：输入框不为空时显示\n        - always：一直显示\n        - none：一直不显示\n\n      @input：输入事件。输入是触发\n        - 参数一：用户输入的内容\n\n    （1）导入结构\n      <uni-search-bar placeholder="请输入搜索内容" :radius="100" cancelButton="none" @input="input">请输入搜索内容</uni-search-bar>\n\n  吸顶效果\n    （1）使用 view 包裹搜索组件\n      <view class="search-box">\n        <my-search @click="gotoSearch"></my-search>\n      </view>\n\n    （2）设置样式\n      .search-box {\n        position: sticky;\n        top: 0;\n        z-index: 999;\n      }\n\n  自动对焦（只在真机上有效）\n    （1）将 show、showSync 改为 true（-- uni-search-bar.vue）\n      data() {\n        return {\n          show: true,\n          showSync: true\n        }\n      }\n  \n  防抖\n    说明：每次输入内容都要发送请求，这要很浪费性能。\n    解决方法：使用延时器。在 500 毫秒内输入内容，则不会发送请求\n\n    使用步骤：\n      （1）定义数据\n        // 延时器的 timerId\n        timer: null,\n        // 搜索关键词\n        kw: \'\'\n\n      （2）添加延时器\n        // 输入事件\n        input(e) {\n          // 清除延时器\n          clearTimeout(this.timer)\n\n          // 500 毫秒内没有触发新的输入事件，则发送请求\n          this.timer = setTimeout(() => {\n            this.kw = e\n            console.log(this.kw)\n          }, 500)\n        }\n\n  搜索建议\n    api 工厂没有提供该接口，所以无法完成该功能。详情请看 https://www.bilibili.com/video/BV1834y1676P?p=118\n\n  搜索历史【！！！因为 api 工厂需要 token 才可以获取搜索历史，所以这个功能等完成登录功能后再补上】\n    （1）导入结构\n      \x3c!-- 搜索历史 --\x3e\n      <view class="history-box">\n        \x3c!-- 标题区域 --\x3e\n        <view class="history-title">\n          <text>搜索历史</text>\n          <uni-icons type="trash" size="17"></uni-icons>\n        </view>\n        \x3c!-- 列表区域 --\x3e\n        <view class="history-list">\n          <uni-tag :text="item" v-for="(item, i) in historyList" :key="i"></uni-tag>\n        </view>\n      </view>\n\n    （2）定义搜索历史列表\n      // 搜索历史列表数据\n      historyList: []\n\nGoodsNav 商品导航\n  文档：https://uniapp.dcloud.io/component/uniui/uni-goods-nav\n  预览：https://hellouniapp.dcloud.net.cn/pages/extUI/goods-nav/goods-nav\n\n  使用步骤：\n    （1）导入结构\n      \x3c!-- 商品导航组件 --\x3e\n      <view class="goods_nav">\n        \x3c!-- fill 控制右侧按钮的样式：（true：圆形）（false：方形） --\x3e\n        \x3c!-- options 左侧按钮的配置项 --\x3e\n        \x3c!-- buttonGroup 右侧按钮的配置项 --\x3e\n        \x3c!-- click 左侧两个按钮的点击事件处理函数 --\x3e\n        \x3c!-- buttonClick 右侧两个按钮的点击事件处理函数 --\x3e\n        <uni-goods-nav :fill="true" :options="options" :buttonGroup="buttonGroup" @click="onClick" @buttonClick="buttonClick" />\n      </view>\n\n    （2）导入 data 数据\n      // 左侧按钮组的配置对象\n      options: [{\n        icon: \'shop\',\n        text: \'店铺\'\n      }, {\n        icon: \'cart\',\n        text: \'购物车\',\n        info: 2\n      }],\n      // 右侧按钮组的配置对象\n      buttonGroup: [{\n        text: \'加入购物车\',\n        backgroundColor: \'#ff0000\',\n        color: \'#fff\'\n      },\n      {\n        text: \'立即购买\',\n        backgroundColor: \'#ffa200\',\n        color: \'#fff\'\n      }]\n\n    （3）导入样式\n      .goods_nav {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n\n      -- 解决页面最底部被商品导航组件遮住的问题\n      .最外层元素 {\n        padding-bottom: 50rpx;\n      }\n\n    （4）点击购车车跳转到购物车页\n      // 左侧两个按钮的点击事件\n      onClick( e ) {\n        // 通过 e.content.text 来判断点击的是哪个按钮\n        if ( e.content.text === \'购物车\' ) {\n          // 切换到购物车页面\n          uni.switchTab( {\n            url: \'/pages/cart/cart\'\n          } )\n        } else if ( e.content.text === \'店铺\' ) {\n          // 切换到店铺\n          uni.switchTab( {\n            url: \'/pages/home/home\'\n          } )\n        }\n      }\n\nuni-number-box 带加减按钮的数字输入框\n  文档：https://uniapp.dcloud.io/component/uniui/uni-number-box\n  预览：https://hellouniapp.dcloud.net.cn/pages/extUI/number-box/number-box\n\n  属性说明：\n    mix：最小数量\n    max：最大数量\n    value：默认数量\n  \n  事件说明：\n    @change：输入框的值发送变化时触发（参数一：输入框当前 value）\n\n  使用步骤：\n    （1）导入结构\n      <uni-number-box :min="1" :value="goods.count"></uni-number-box>\n\n  数据持久化。将 数量 更新到 vuex 中\n    当值发送变化时，将最新的数量传递给外界\n      （1）为 <uni-number-box> 所在的组件绑定 @num-change 事件，从而获取当前商品的 id 和 count（-- pages/cart.vue）\n        <my-goods @num-change="numberChangeHandler"></my-goods>\n\n      （2）定义 @num-chang 的事件处理函数（-- 同上）\n        // 获取 my-goods 组件传递过来的 id、count\n        numberChangeHandler(e) {\n          console.log(e)\n        }\n\n      （3）为 <uni-number-box> 绑定 @change 事件（-- components/my-goods.vue）\n        <uni-number-box @change="numChangeHandler"></uni-number-box>\n\n      （4）定义 @change 的事件处理函数（-- 同上）\n        // 商品数量发送变化时触发\n        numChangeHandler(val) {\n          this.$emit(\'num-change\', {\n            // 商品的 Id\n            goods_id: this.goods.goods_id,\n            // 商品的最新数量\n            goods_count: +val\n          })\n        }\n\n    将数量更新到 vuex 中\n      （1）定义  mutations 方法（-- store.cart.js）\n        // 更新购物车中商品的数量\n        updateGoodsCount(state, goods) {\n          // 根据 id 查询购物车中对应商品的信息对象\n          const findResult = state.cart.find(x => x.id === goods.id)\n\n          if(findResult) {\n            // 更新对应商品的数量\n            findResult.count = goods.count\n            // 持久化存储到本地\n            this.commit(\'m_cart/saveToStorage\')\n          }\n        }\n\n      （2）将 vuex 模块中的方法映射到当前组件的 methods 中（-- pages/cart.vue）\n        ...mapMutations(\'m_cart\', [\'updateGoodsCount\']),\n\n      （3）商品勾选状态发生了变化时，调用 updateGoodsCount 方法（-- 同上）\n        numberChangeHandler(e) {\n          -- 增\n            this.updateGoodsCount(e)\n          --\n        },\n\n\n  【问题】解决当用户在 NumberBox 中输入字母等非法字符之后，会导致 NumberBox 数据紊乱的问题\n    如：在输入框中输入 a，count 的值为 NaN\n\n    （1）对用户输入的 非法字符 进行处理（-- uni_modules/components/uni-number-box.vue）\n      _onBlur (event) {\n\n        -- 改（旧）\n          let value = event.detail.value;\n        --\n        -- 改（新）\n          // 将用户输入的 小数 转化为 整数\n          let value = parseInt(event.detail.value)\n\n          // 将用户输入的 非法字符 转化为 默认值1\n          if (!value) {\n            this.inputValue = 1;\n            return;\n          }\n        --\n\n      }\n\nuni-swipe-action 滑动删除\n  使用步骤：\n    （1）导入结构（-- pages/cart.vue）\n        <uni-swipe-action>\n          <uni-swipe-action-item :right-options="options" @click="swipeActionClickHandler(item)"></uni-swipe-action-item>\n        </uni-swipe-action>\n\n        -- 改（旧）\n          <block v-for="(item, i) in cart" :key="i">\n            <my-goods :goods="item" :show-radio="true" :show-number-box="true"  @radio-change="radioChangeHandler" @num-change="numberChangeHandler"></my-goods>\n          </block>\n        --\n        -- 改（新）\n          <uni-swipe-action>\n            <block v-for="(item, i) in cart" :key="i">\n              <uni-swipe-action-item :right-options="options" @click="swipeActionClickHandler(item)">\n                <my-goods :goods="item" :show-radio="true" :show-number-box="true"  @radio-change="radioChangeHandler" @num-change="numberChangeHandler"></my-goods>\n              </uni-swipe-action-item>\n            </block>\n          </uni-swipe-action>\n        --\n\n      （2）定义 <uni-swipe-action> 组件的配置项（-- 同上）\n        options: [{\n          // 文本内容\n          text: \'删除\',\n          style: {\n            backgroundColor: \'#C00000\' // 按钮的背景颜色\n          }\n        }]\n\n      （3）定义 @click 的事件处理函数（-- 同上）\n        // 点击 uni-swipe-action 组件时触发\n        swipeActionClickHandler(goods) {\n          console.log(goods)\n        }\n\n      （4）定义 mutations 方法（-- store/cart.js）\n        // 根据 Id 从购物车中删除对应的商品信息\n        removeGoodsById(state, goods) {\n          // 调用数组的 filter 方法进行过滤。使用当前 商品id 和传递过来的 商品id 进行比较，如果不相等则将传递过来的 商品id 存储到当前 商品id 中\n          state.cart = state.cart.filter(x => x.id !== id)\n          // 持久化存储到本地\n          this.commit(\'m_cart/saveToStorage\')\n        }\n\n      （5）将 vuex 模块中的方法映射到当前组件的 methods 中（-- pages/cart.vue）\n        ...mapMutations(\'m_cart\', [\'removeGoodsById\']),\n      \n      （6）调用 removeGoodsById 方法（-- 同上）\n        // 点击了滑动操作按钮\n        swipeActionClickHandler(goods) {\n\n          -- 增\n            this.removeGoodsById(goods.id)\n          --\n\n        }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n',normalizedContent:'文档：https://uniapp.dcloud.io/component/uniui/uni-ui\n\n说明：如果要修改样式，请直接到 uni_modules 目录中找到对应的组件进行修改\n\nicon 图标\n  文档：https://uniapp.dcloud.io/component/uniui/uni-icons\n  预览：https://hellouniapp.dcloud.net.cn/pages/extui/icons/icons\n\n  使用步骤：\n    （1）使用组件\n      <uni-icons type="contact" size="30"></uni-icons>\n\nuni-search-bar 搜索栏\n  文档：https://uniapp.dcloud.io/component/uniui/uni-search-bar?id=%e5%9f%ba%e6%9c%ac%e7%94%a8%e6%b3%95\n  预览：https://hellouniapp.dcloud.net.cn/pages/extui/search-bar/search-bar\n\n  使用步骤\n    属性说明：\n      placeholder：不对焦时的默认文本\n\n      :radius="100"：设置圆角\n\n      cancelbutton：是否显示取消按钮\n        - auto：输入框不为空时显示\n        - always：一直显示\n        - none：一直不显示\n\n      @input：输入事件。输入是触发\n        - 参数一：用户输入的内容\n\n    （1）导入结构\n      <uni-search-bar placeholder="请输入搜索内容" :radius="100" cancelbutton="none" @input="input">请输入搜索内容</uni-search-bar>\n\n  吸顶效果\n    （1）使用 view 包裹搜索组件\n      <view class="search-box">\n        <my-search @click="gotosearch"></my-search>\n      </view>\n\n    （2）设置样式\n      .search-box {\n        position: sticky;\n        top: 0;\n        z-index: 999;\n      }\n\n  自动对焦（只在真机上有效）\n    （1）将 show、showsync 改为 true（-- uni-search-bar.vue）\n      data() {\n        return {\n          show: true,\n          showsync: true\n        }\n      }\n  \n  防抖\n    说明：每次输入内容都要发送请求，这要很浪费性能。\n    解决方法：使用延时器。在 500 毫秒内输入内容，则不会发送请求\n\n    使用步骤：\n      （1）定义数据\n        // 延时器的 timerid\n        timer: null,\n        // 搜索关键词\n        kw: \'\'\n\n      （2）添加延时器\n        // 输入事件\n        input(e) {\n          // 清除延时器\n          cleartimeout(this.timer)\n\n          // 500 毫秒内没有触发新的输入事件，则发送请求\n          this.timer = settimeout(() => {\n            this.kw = e\n            console.log(this.kw)\n          }, 500)\n        }\n\n  搜索建议\n    api 工厂没有提供该接口，所以无法完成该功能。详情请看 https://www.bilibili.com/video/bv1834y1676p?p=118\n\n  搜索历史【！！！因为 api 工厂需要 token 才可以获取搜索历史，所以这个功能等完成登录功能后再补上】\n    （1）导入结构\n      \x3c!-- 搜索历史 --\x3e\n      <view class="history-box">\n        \x3c!-- 标题区域 --\x3e\n        <view class="history-title">\n          <text>搜索历史</text>\n          <uni-icons type="trash" size="17"></uni-icons>\n        </view>\n        \x3c!-- 列表区域 --\x3e\n        <view class="history-list">\n          <uni-tag :text="item" v-for="(item, i) in historylist" :key="i"></uni-tag>\n        </view>\n      </view>\n\n    （2）定义搜索历史列表\n      // 搜索历史列表数据\n      historylist: []\n\ngoodsnav 商品导航\n  文档：https://uniapp.dcloud.io/component/uniui/uni-goods-nav\n  预览：https://hellouniapp.dcloud.net.cn/pages/extui/goods-nav/goods-nav\n\n  使用步骤：\n    （1）导入结构\n      \x3c!-- 商品导航组件 --\x3e\n      <view class="goods_nav">\n        \x3c!-- fill 控制右侧按钮的样式：（true：圆形）（false：方形） --\x3e\n        \x3c!-- options 左侧按钮的配置项 --\x3e\n        \x3c!-- buttongroup 右侧按钮的配置项 --\x3e\n        \x3c!-- click 左侧两个按钮的点击事件处理函数 --\x3e\n        \x3c!-- buttonclick 右侧两个按钮的点击事件处理函数 --\x3e\n        <uni-goods-nav :fill="true" :options="options" :buttongroup="buttongroup" @click="onclick" @buttonclick="buttonclick" />\n      </view>\n\n    （2）导入 data 数据\n      // 左侧按钮组的配置对象\n      options: [{\n        icon: \'shop\',\n        text: \'店铺\'\n      }, {\n        icon: \'cart\',\n        text: \'购物车\',\n        info: 2\n      }],\n      // 右侧按钮组的配置对象\n      buttongroup: [{\n        text: \'加入购物车\',\n        backgroundcolor: \'#ff0000\',\n        color: \'#fff\'\n      },\n      {\n        text: \'立即购买\',\n        backgroundcolor: \'#ffa200\',\n        color: \'#fff\'\n      }]\n\n    （3）导入样式\n      .goods_nav {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n\n      -- 解决页面最底部被商品导航组件遮住的问题\n      .最外层元素 {\n        padding-bottom: 50rpx;\n      }\n\n    （4）点击购车车跳转到购物车页\n      // 左侧两个按钮的点击事件\n      onclick( e ) {\n        // 通过 e.content.text 来判断点击的是哪个按钮\n        if ( e.content.text === \'购物车\' ) {\n          // 切换到购物车页面\n          uni.switchtab( {\n            url: \'/pages/cart/cart\'\n          } )\n        } else if ( e.content.text === \'店铺\' ) {\n          // 切换到店铺\n          uni.switchtab( {\n            url: \'/pages/home/home\'\n          } )\n        }\n      }\n\nuni-number-box 带加减按钮的数字输入框\n  文档：https://uniapp.dcloud.io/component/uniui/uni-number-box\n  预览：https://hellouniapp.dcloud.net.cn/pages/extui/number-box/number-box\n\n  属性说明：\n    mix：最小数量\n    max：最大数量\n    value：默认数量\n  \n  事件说明：\n    @change：输入框的值发送变化时触发（参数一：输入框当前 value）\n\n  使用步骤：\n    （1）导入结构\n      <uni-number-box :min="1" :value="goods.count"></uni-number-box>\n\n  数据持久化。将 数量 更新到 vuex 中\n    当值发送变化时，将最新的数量传递给外界\n      （1）为 <uni-number-box> 所在的组件绑定 @num-change 事件，从而获取当前商品的 id 和 count（-- pages/cart.vue）\n        <my-goods @num-change="numberchangehandler"></my-goods>\n\n      （2）定义 @num-chang 的事件处理函数（-- 同上）\n        // 获取 my-goods 组件传递过来的 id、count\n        numberchangehandler(e) {\n          console.log(e)\n        }\n\n      （3）为 <uni-number-box> 绑定 @change 事件（-- components/my-goods.vue）\n        <uni-number-box @change="numchangehandler"></uni-number-box>\n\n      （4）定义 @change 的事件处理函数（-- 同上）\n        // 商品数量发送变化时触发\n        numchangehandler(val) {\n          this.$emit(\'num-change\', {\n            // 商品的 id\n            goods_id: this.goods.goods_id,\n            // 商品的最新数量\n            goods_count: +val\n          })\n        }\n\n    将数量更新到 vuex 中\n      （1）定义  mutations 方法（-- store.cart.js）\n        // 更新购物车中商品的数量\n        updategoodscount(state, goods) {\n          // 根据 id 查询购物车中对应商品的信息对象\n          const findresult = state.cart.find(x => x.id === goods.id)\n\n          if(findresult) {\n            // 更新对应商品的数量\n            findresult.count = goods.count\n            // 持久化存储到本地\n            this.commit(\'m_cart/savetostorage\')\n          }\n        }\n\n      （2）将 vuex 模块中的方法映射到当前组件的 methods 中（-- pages/cart.vue）\n        ...mapmutations(\'m_cart\', [\'updategoodscount\']),\n\n      （3）商品勾选状态发生了变化时，调用 updategoodscount 方法（-- 同上）\n        numberchangehandler(e) {\n          -- 增\n            this.updategoodscount(e)\n          --\n        },\n\n\n  【问题】解决当用户在 numberbox 中输入字母等非法字符之后，会导致 numberbox 数据紊乱的问题\n    如：在输入框中输入 a，count 的值为 nan\n\n    （1）对用户输入的 非法字符 进行处理（-- uni_modules/components/uni-number-box.vue）\n      _onblur (event) {\n\n        -- 改（旧）\n          let value = event.detail.value;\n        --\n        -- 改（新）\n          // 将用户输入的 小数 转化为 整数\n          let value = parseint(event.detail.value)\n\n          // 将用户输入的 非法字符 转化为 默认值1\n          if (!value) {\n            this.inputvalue = 1;\n            return;\n          }\n        --\n\n      }\n\nuni-swipe-action 滑动删除\n  使用步骤：\n    （1）导入结构（-- pages/cart.vue）\n        <uni-swipe-action>\n          <uni-swipe-action-item :right-options="options" @click="swipeactionclickhandler(item)"></uni-swipe-action-item>\n        </uni-swipe-action>\n\n        -- 改（旧）\n          <block v-for="(item, i) in cart" :key="i">\n            <my-goods :goods="item" :show-radio="true" :show-number-box="true"  @radio-change="radiochangehandler" @num-change="numberchangehandler"></my-goods>\n          </block>\n        --\n        -- 改（新）\n          <uni-swipe-action>\n            <block v-for="(item, i) in cart" :key="i">\n              <uni-swipe-action-item :right-options="options" @click="swipeactionclickhandler(item)">\n                <my-goods :goods="item" :show-radio="true" :show-number-box="true"  @radio-change="radiochangehandler" @num-change="numberchangehandler"></my-goods>\n              </uni-swipe-action-item>\n            </block>\n          </uni-swipe-action>\n        --\n\n      （2）定义 <uni-swipe-action> 组件的配置项（-- 同上）\n        options: [{\n          // 文本内容\n          text: \'删除\',\n          style: {\n            backgroundcolor: \'#c00000\' // 按钮的背景颜色\n          }\n        }]\n\n      （3）定义 @click 的事件处理函数（-- 同上）\n        // 点击 uni-swipe-action 组件时触发\n        swipeactionclickhandler(goods) {\n          console.log(goods)\n        }\n\n      （4）定义 mutations 方法（-- store/cart.js）\n        // 根据 id 从购物车中删除对应的商品信息\n        removegoodsbyid(state, goods) {\n          // 调用数组的 filter 方法进行过滤。使用当前 商品id 和传递过来的 商品id 进行比较，如果不相等则将传递过来的 商品id 存储到当前 商品id 中\n          state.cart = state.cart.filter(x => x.id !== id)\n          // 持久化存储到本地\n          this.commit(\'m_cart/savetostorage\')\n        }\n\n      （5）将 vuex 模块中的方法映射到当前组件的 methods 中（-- pages/cart.vue）\n        ...mapmutations(\'m_cart\', [\'removegoodsbyid\']),\n      \n      （6）调用 removegoodsbyid 方法（-- 同上）\n        // 点击了滑动操作按钮\n        swipeactionclickhandler(goods) {\n\n          -- 增\n            this.removegoodsbyid(goods.id)\n          --\n\n        }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n',charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"vuex",frontmatter:{title:"vuex",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/bdf18b/",categories:["《前端》笔记《框架》","uni-app"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/04.uni-app/03.vuex.html",relativePath:"《前端》笔记《框架》/04.uni-app/03.vuex.md",key:"v-b2286a6e",path:"/pages/bdf18b/",headersStr:null,content:"详情请看：知识点￥vuex（上）、知识点￥vuex（下）\n\n配置：\n  （1）新建 store 目录，用于存放 vuex 相关模块（-- 根目录/新建 store 目录）\n\n  （2）初始化 store 实例对象。导入以下代码（-- 根目录/store/新建 store.js）\n    // 导入 Vue 和 Vuex\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n\n    // 将 Vue 安装为 Vue 的插件\n    Vue.use(Vuex)\n\n    // 创建 Store 的实例对象\n    const store = new Vuex.Store({\n      // 挂载 state 中的数据\n      modules: {},\n    })\n\n    // 向外共享 store 实例对象\n    export default store\n\n  （3）将 store 实例对象挂载到 Vue 的实例上（-- main.js）\n\n    -- 增\n      ~~ 导入 store 实例对象\n      import store from './store/store.js'\n    --\n\n    const app = new Vuew({\n      ...App,\n\n      -- 增\n        ~~将 store 挂载到 vue 实例上\n        store\n      --\n\n    })\n\n使用步骤：\n  一、创建 vuex 模块：\n    （1）新建 【cart.js 文件】（-- store/新建 【cart.js】）\n\n    （2）初始化 vuex 模块。导入以下代码（-- store/【cart.js】）\n      export default {\n        ~~ 开启命名空间\n        namespaced: true,\n\n        ~~ 提供唯一的公共数据源，所有共享的数据都要统一放到 State 中进行存储\n        state: () => ({\n          // 购物车中每个商品的信息对象。对象包含的属性 { goods_id, goods_name, goods_price, goods_dount（数量）, goods_small_logo（图片）, goods_state（选中状态） }\n          cart: [],\n        }),\n\n        ~~ 方法。修改 store 中的数据\n        mutations: {\n          // 将商品信息对象存储到 cart 中\n          addToCart(state, goods) {\n\n            // 根据 cart 中的 id 和 提交商品的 id 是否相等，来判断这个商品是否已经存在购物车中，不存在则返回 undefined，存在则返回 查找到的商品信息对象\n            // find()：循环数组中的每一项，参数一为每一项\n            const findResult = state.cart.find((item) => item.goods_id === goods.goods_id)\n\n            if (!findResult) {\n              // 购物车中没有这个商品，则直接 push\n              state.cart.push(goods)\n            } else {\n              // 购物车中有这个商品，只更新数量即可\n              findResult.goods_count++\n            }\n          }\n        },\n\n        ~~ 计算属性。用于对 Store 中的数据进行加工处理形成新的数据\n        getters: {}\n      }\n\n    （3）导入 vuex 中的 cart 模块（-- store/store.js）\n      import moduleCart from './cart.js'\n\n    （4）挂载 【cart】 数据（-- 同上）\n      modules: {\n\n        -- 增\n          ~~ 将 moduleCart 数据名改为 m_cart\n          m_cart: moduleCart\n        --\n\n      }\n\n  二、使用 vuex 模块（-- ***.vue）\n    （1）从 vuex 中按需导入 mapState 方法、mapMutations 方法\n      import { mapState, mapMutations } from 'vuex'\n\n    （2）将 vuex 模块中的数据、方法映射到当前组件中（-- 同上）\n      ~~ mapState('模块名称', ['映射数据', '映射数据', ...])：把 vuex 模块中的 数据 映射到 计算属性中\n      ~~ mapState('模块名称', ['映射数据', '映射方法', ...])：把 vuex 模块中的 方法 映射到 方法中\n\n      export default {\n        methods: {\n          ~~ 方法映射到方法中\n          ...mapMutations('m_cart', ['addToCart']),\n        }\n        computed: {\n          ~~ 数据映射到计算属性中\n          ...mapState('m_cart', ['cart']),\n        }\n      }\n\n    （3）定义方法。修改 vuex 模块中的数据（-- 同上）\n      // 右侧两个按钮的点击事件。将商品信息对象存储到全局的 cart 数据中\n      buttonClick(e) {\n        if (e.content.text === '加入购物车') {\n          const goods = {\n            id: this.goodsInfo.id,                   // 商品 id\n            name: this.goodsInfo.name,               // 商品 名称\n            minPrice: this.goodsInfo.minPrice,       // 商品 价格\n            count: 1,                                // 商品 数量\n            pic: this.goodsInfo.pic,          // 商品 图片\n            state: true                              // 商品 勾选状态\n          }\n\n          this.addToCart(goods)\n        }\n      }\n\n    （4）使用数据（-- 同上）\n      <view>{{cart.length}}</view>\n\n动态统计购物车中商品的总数量\n  （1）定义计算属性（-- store/cart.js）\n    getters: {\n      // 统计购物车中商品的总数量\n      total(state) {\n        return state.cart.reduce((total, item) => total += item.count, 0)\n      }\n    }\n\n  （2）从 vuex 中按需导入 mapGetters 方法（-- ***.vue）\n    import { mapGetters } from 'vuex'\n\n  （3）将 vuex 模块中的 计算属性，映射到当前组件的计算属性中（-- 同上）\n    computed: {\n\n      -- 增\n      ...mapGetters('m_cart', ['total']),\n      --\n\n    },\n\n  （4）定义侦听器。监听计算属性 total 值的变化（-- 同上）\n    watch: {\n      // 监听 total 值的变化，通过第一个形参得到变化后的新值\n      total(newVal) {\n        // 通过数组的 find() 方法，找到购物车按钮的配置对象\n        const findResult = this.options.find((x) => x.text === '购物车')\n\n        if (findResult) {\n          // 动态为购物车按钮的 info 属性赋值\n          findResult.info = newVal\n        }\n      },\n    },\n\n数据持久化。持久化存储购物车中的商品\n  （1）将数据存储到本地（-- store/cart.js）\n    mutations: {\n\n      -- 增\n        // 将数据存储到本地\n        saveToStorage(state) {\n          uni.setStorageSync('cart', JSON.stringify(state.cart))\n        }\n      --\n\n    }\n\n  （2）调用 saveToStorage 方法（-- 同上）\n    addToCart(state, goods) {\n      \n      const findResult = state.cart.find((item) => item.id === goods.id)\n\n      if (!findResult) {\n        // 购物车中没有这个商品，则直接 push\n        state.cart.push(goods)\n      } else {\n        // 购物车中有这个商品，只更新数量即可\n        findResult.count++\n      }\n\n      -- 增\n        this.commit('m_cart/saveToStorage')\n      --\n    }\n\n  （3）读取本地数据，对 state 中的数据进行初始化\n    state: () => ({\n      -- 改（旧）\n        cart: [],\n      --\n      -- 改（新）\n        cart: JSON.parse(uni.getStorageSync('cart') || '[]'),\n      --\n    }),\n\n解决页面首次加载侦听器不生效的问题。如这里的商品商品总数量在页面首次加载后还是为默认值\n  说明：使用 普通函数 定义的 watch 侦听器，在页面首次加载后不会被调用\n  \n  解决方法：在页面首次加载时调用监听器，也就是使用 对象的形式 定义 watch 侦听器\n    -- 改（旧）\n      total(newVal) {\n        // 通过数组的 find() 方法，找到购物车按钮的配置对象\n        const findResult = this.options.find((x) => x.text === '购物车')\n\n        if (findResult) {\n          // 动态为购物车按钮的 info 属性赋值\n          findResult.info = newVal\n        }\n      },\n    --\n    -- 改（新）\n      total: {\n        handler(newVal) {\n          // 通过数组的 find() 方法，找到购物车按钮的配置对象\n          const findResult = this.options.find((x) => x.text === '购物车')\n\n          if (findResult) {\n            // 动态为购物车按钮的 info 属性赋值\n            findResult.info = newVal\n          }\n        },\n        // 是否在页面初次加载完毕后立即调用\n        immediate: true\n      }\n    --\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n",normalizedContent:"详情请看：知识点￥vuex（上）、知识点￥vuex（下）\n\n配置：\n  （1）新建 store 目录，用于存放 vuex 相关模块（-- 根目录/新建 store 目录）\n\n  （2）初始化 store 实例对象。导入以下代码（-- 根目录/store/新建 store.js）\n    // 导入 vue 和 vuex\n    import vue from 'vue'\n    import vuex from 'vuex'\n\n    // 将 vue 安装为 vue 的插件\n    vue.use(vuex)\n\n    // 创建 store 的实例对象\n    const store = new vuex.store({\n      // 挂载 state 中的数据\n      modules: {},\n    })\n\n    // 向外共享 store 实例对象\n    export default store\n\n  （3）将 store 实例对象挂载到 vue 的实例上（-- main.js）\n\n    -- 增\n      ~~ 导入 store 实例对象\n      import store from './store/store.js'\n    --\n\n    const app = new vuew({\n      ...app,\n\n      -- 增\n        ~~将 store 挂载到 vue 实例上\n        store\n      --\n\n    })\n\n使用步骤：\n  一、创建 vuex 模块：\n    （1）新建 【cart.js 文件】（-- store/新建 【cart.js】）\n\n    （2）初始化 vuex 模块。导入以下代码（-- store/【cart.js】）\n      export default {\n        ~~ 开启命名空间\n        namespaced: true,\n\n        ~~ 提供唯一的公共数据源，所有共享的数据都要统一放到 state 中进行存储\n        state: () => ({\n          // 购物车中每个商品的信息对象。对象包含的属性 { goods_id, goods_name, goods_price, goods_dount（数量）, goods_small_logo（图片）, goods_state（选中状态） }\n          cart: [],\n        }),\n\n        ~~ 方法。修改 store 中的数据\n        mutations: {\n          // 将商品信息对象存储到 cart 中\n          addtocart(state, goods) {\n\n            // 根据 cart 中的 id 和 提交商品的 id 是否相等，来判断这个商品是否已经存在购物车中，不存在则返回 undefined，存在则返回 查找到的商品信息对象\n            // find()：循环数组中的每一项，参数一为每一项\n            const findresult = state.cart.find((item) => item.goods_id === goods.goods_id)\n\n            if (!findresult) {\n              // 购物车中没有这个商品，则直接 push\n              state.cart.push(goods)\n            } else {\n              // 购物车中有这个商品，只更新数量即可\n              findresult.goods_count++\n            }\n          }\n        },\n\n        ~~ 计算属性。用于对 store 中的数据进行加工处理形成新的数据\n        getters: {}\n      }\n\n    （3）导入 vuex 中的 cart 模块（-- store/store.js）\n      import modulecart from './cart.js'\n\n    （4）挂载 【cart】 数据（-- 同上）\n      modules: {\n\n        -- 增\n          ~~ 将 modulecart 数据名改为 m_cart\n          m_cart: modulecart\n        --\n\n      }\n\n  二、使用 vuex 模块（-- ***.vue）\n    （1）从 vuex 中按需导入 mapstate 方法、mapmutations 方法\n      import { mapstate, mapmutations } from 'vuex'\n\n    （2）将 vuex 模块中的数据、方法映射到当前组件中（-- 同上）\n      ~~ mapstate('模块名称', ['映射数据', '映射数据', ...])：把 vuex 模块中的 数据 映射到 计算属性中\n      ~~ mapstate('模块名称', ['映射数据', '映射方法', ...])：把 vuex 模块中的 方法 映射到 方法中\n\n      export default {\n        methods: {\n          ~~ 方法映射到方法中\n          ...mapmutations('m_cart', ['addtocart']),\n        }\n        computed: {\n          ~~ 数据映射到计算属性中\n          ...mapstate('m_cart', ['cart']),\n        }\n      }\n\n    （3）定义方法。修改 vuex 模块中的数据（-- 同上）\n      // 右侧两个按钮的点击事件。将商品信息对象存储到全局的 cart 数据中\n      buttonclick(e) {\n        if (e.content.text === '加入购物车') {\n          const goods = {\n            id: this.goodsinfo.id,                   // 商品 id\n            name: this.goodsinfo.name,               // 商品 名称\n            minprice: this.goodsinfo.minprice,       // 商品 价格\n            count: 1,                                // 商品 数量\n            pic: this.goodsinfo.pic,          // 商品 图片\n            state: true                              // 商品 勾选状态\n          }\n\n          this.addtocart(goods)\n        }\n      }\n\n    （4）使用数据（-- 同上）\n      <view>{{cart.length}}</view>\n\n动态统计购物车中商品的总数量\n  （1）定义计算属性（-- store/cart.js）\n    getters: {\n      // 统计购物车中商品的总数量\n      total(state) {\n        return state.cart.reduce((total, item) => total += item.count, 0)\n      }\n    }\n\n  （2）从 vuex 中按需导入 mapgetters 方法（-- ***.vue）\n    import { mapgetters } from 'vuex'\n\n  （3）将 vuex 模块中的 计算属性，映射到当前组件的计算属性中（-- 同上）\n    computed: {\n\n      -- 增\n      ...mapgetters('m_cart', ['total']),\n      --\n\n    },\n\n  （4）定义侦听器。监听计算属性 total 值的变化（-- 同上）\n    watch: {\n      // 监听 total 值的变化，通过第一个形参得到变化后的新值\n      total(newval) {\n        // 通过数组的 find() 方法，找到购物车按钮的配置对象\n        const findresult = this.options.find((x) => x.text === '购物车')\n\n        if (findresult) {\n          // 动态为购物车按钮的 info 属性赋值\n          findresult.info = newval\n        }\n      },\n    },\n\n数据持久化。持久化存储购物车中的商品\n  （1）将数据存储到本地（-- store/cart.js）\n    mutations: {\n\n      -- 增\n        // 将数据存储到本地\n        savetostorage(state) {\n          uni.setstoragesync('cart', json.stringify(state.cart))\n        }\n      --\n\n    }\n\n  （2）调用 savetostorage 方法（-- 同上）\n    addtocart(state, goods) {\n      \n      const findresult = state.cart.find((item) => item.id === goods.id)\n\n      if (!findresult) {\n        // 购物车中没有这个商品，则直接 push\n        state.cart.push(goods)\n      } else {\n        // 购物车中有这个商品，只更新数量即可\n        findresult.count++\n      }\n\n      -- 增\n        this.commit('m_cart/savetostorage')\n      --\n    }\n\n  （3）读取本地数据，对 state 中的数据进行初始化\n    state: () => ({\n      -- 改（旧）\n        cart: [],\n      --\n      -- 改（新）\n        cart: json.parse(uni.getstoragesync('cart') || '[]'),\n      --\n    }),\n\n解决页面首次加载侦听器不生效的问题。如这里的商品商品总数量在页面首次加载后还是为默认值\n  说明：使用 普通函数 定义的 watch 侦听器，在页面首次加载后不会被调用\n  \n  解决方法：在页面首次加载时调用监听器，也就是使用 对象的形式 定义 watch 侦听器\n    -- 改（旧）\n      total(newval) {\n        // 通过数组的 find() 方法，找到购物车按钮的配置对象\n        const findresult = this.options.find((x) => x.text === '购物车')\n\n        if (findresult) {\n          // 动态为购物车按钮的 info 属性赋值\n          findresult.info = newval\n        }\n      },\n    --\n    -- 改（新）\n      total: {\n        handler(newval) {\n          // 通过数组的 find() 方法，找到购物车按钮的配置对象\n          const findresult = this.options.find((x) => x.text === '购物车')\n\n          if (findresult) {\n            // 动态为购物车按钮的 info 属性赋值\n            findresult.info = newval\n          }\n        },\n        // 是否在页面初次加载完毕后立即调用\n        immediate: true\n      }\n    --\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n",charsets:{cjk:!0},lastUpdated:"2022/06/27, 20:50:43"},{title:"项目初始化",frontmatter:{title:"项目初始化",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c382fc/",categories:["《前端》笔记《框架》","uni-app"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8A%E5%89%8D%E7%AB%AF%E3%80%8B%E7%AC%94%E8%AE%B0%E3%80%8A%E6%A1%86%E6%9E%B6%E3%80%8B/04.uni-app/04.%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"《前端》笔记《框架》/04.uni-app/04.项目初始化.md",key:"v-9869b040",path:"/pages/c382fc/",headers:[{level:2,title:"二、创建 uni-app 项目",slug:"二、创建-uni-app-项目",normalizedTitle:"二、创建 uni-app 项目",charIndex:39},{level:2,title:"三、添加目录结构",slug:"三、添加目录结构",normalizedTitle:"三、添加目录结构",charIndex:97},{level:2,title:"四、项目配置",slug:"四、项目配置",normalizedTitle:"四、项目配置",charIndex:550}],headersStr:"二、创建 uni-app 项目 三、添加目录结构 四、项目配置",content:'# 一、HBuilderX（由 uni-app 团队开发的）（推荐）\n\n\n# 二、创建 uni-app 项目\n\nHBuilderX → uni-app → 模板选择 uni-ui 项目\n\n\n# 三、添加目录结构\n\ncomponents               // 存放 组件\npages                    // 存放 页面（特性：每个页面必须以文件夹的形式存在）\nstatic                   // 静态资源\nApp.vue                  // 项目根组件\nmain.js                  // Vue 初始化入口文件\nmainfest.json            // 打包配置文件。配置 应用名称、appid、logo、版本 等\npages.json               // 页面配置文件。配置 页面路由、导航条、tabBar 等\nuni.scss                 // 内置的 sass 变量，可以直接使用   // upx 单位（科普）：uni-app 独创的单位，会自动转换为当前客户端的单位，如小程序中的 rpx 等，现在可以通过 rpx 来替代 upx 单位了\n\n\n\n# 四、项目配置\n\n配置 AppID：HBuilderX → manifest.json → 微信小程序配置 → 微信小程序AppID\n\n配置 微信开发者工具路径：HBuilderX → 偏好设置 → 运行配置 → 微信开发者工具路径\n\n开启服务端口：微信开发者工具 → 设置 → 安全设置 → 开启 服务端口\n\n编译后自动运行到微信开发者工具中：HBuilderX → 运行到小程序模拟器 → 微信开发者工具\n\n警告：\n  （1）[sitemap 索引情况提示] 根据 sitemap 的规则[0]，当前页面 [pages/child/index] 将不被索引\n    解决方法：\n      （1）添加 "checkSiteMap": false 配置项\n        manifest.json → 源码视图 → mp-weixin 节点 → setting 节点 → 添加 "checkSiteMap": false,\n\n      （2）在微信开发这工具中重新打开项目\n      \n      （3）重新编译\n\n初始化包管理配置文件：npm init -y\n\ngit 初始化\n  配置 git 忽略清单（-- 新建.gitignore）\n    /node_modules\n    /unpackage/dist\n\n  跟踪 unpackage 目录：在 unpackage 目录下新建 .gitkeep\n\n  依次运行以下命令：\n    （1）git init：初始化本地 git 仓库\n        git status：查看文件状态\n    （2）git add .：将所有文件加入到暂存区\n    （3）git commit -m "提交说明"： 将暂存区的文件提交到 Git 仓库中\n        git status：查看文件状态\n\n  关联仓库\n    码云 → 创建仓库 → 选择 SSH → 已有仓库 → 执行里面的两个 git 命令\n\n\n创建页面 右击 pages 目录 → 新建页面 → 页面名称 → 选择模板（使用 scss 的页面）\n\n导入 初始化样式、公共样式、矢量图标（-- App.vue）',normalizedContent:'# 一、hbuilderx（由 uni-app 团队开发的）（推荐）\n\n\n# 二、创建 uni-app 项目\n\nhbuilderx → uni-app → 模板选择 uni-ui 项目\n\n\n# 三、添加目录结构\n\ncomponents               // 存放 组件\npages                    // 存放 页面（特性：每个页面必须以文件夹的形式存在）\nstatic                   // 静态资源\napp.vue                  // 项目根组件\nmain.js                  // vue 初始化入口文件\nmainfest.json            // 打包配置文件。配置 应用名称、appid、logo、版本 等\npages.json               // 页面配置文件。配置 页面路由、导航条、tabbar 等\nuni.scss                 // 内置的 sass 变量，可以直接使用   // upx 单位（科普）：uni-app 独创的单位，会自动转换为当前客户端的单位，如小程序中的 rpx 等，现在可以通过 rpx 来替代 upx 单位了\n\n\n\n# 四、项目配置\n\n配置 appid：hbuilderx → manifest.json → 微信小程序配置 → 微信小程序appid\n\n配置 微信开发者工具路径：hbuilderx → 偏好设置 → 运行配置 → 微信开发者工具路径\n\n开启服务端口：微信开发者工具 → 设置 → 安全设置 → 开启 服务端口\n\n编译后自动运行到微信开发者工具中：hbuilderx → 运行到小程序模拟器 → 微信开发者工具\n\n警告：\n  （1）[sitemap 索引情况提示] 根据 sitemap 的规则[0]，当前页面 [pages/child/index] 将不被索引\n    解决方法：\n      （1）添加 "checksitemap": false 配置项\n        manifest.json → 源码视图 → mp-weixin 节点 → setting 节点 → 添加 "checksitemap": false,\n\n      （2）在微信开发这工具中重新打开项目\n      \n      （3）重新编译\n\n初始化包管理配置文件：npm init -y\n\ngit 初始化\n  配置 git 忽略清单（-- 新建.gitignore）\n    /node_modules\n    /unpackage/dist\n\n  跟踪 unpackage 目录：在 unpackage 目录下新建 .gitkeep\n\n  依次运行以下命令：\n    （1）git init：初始化本地 git 仓库\n        git status：查看文件状态\n    （2）git add .：将所有文件加入到暂存区\n    （3）git commit -m "提交说明"： 将暂存区的文件提交到 git 仓库中\n        git status：查看文件状态\n\n  关联仓库\n    码云 → 创建仓库 → 选择 ssh → 已有仓库 → 执行里面的两个 git 命令\n\n\n创建页面 右击 pages 目录 → 新建页面 → 页面名称 → 选择模板（使用 scss 的页面）\n\n导入 初始化样式、公共样式、矢量图标（-- app.vue）',charsets:{cjk:!0},lastUpdated:"2022/06/27, 16:37:52"}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"前端",link:"/web/",items:[{text:"基础知识",items:[{text:"HTML",link:"/note/HTML/"},{text:"CSS",link:"/note/CSS/"},{text:"JS",link:"/note/JS/"},{text:"WebAPI",link:"/note/WebAPI/"},{text:"移动 web 开发",link:"/note/mobileWeb/"},{text:"原生微信小程序",link:"/note/wx/"}]},{text:"框架",items:[{text:"vue2",link:"/note/vue2/"},{text:"vue3",link:"/note/vue3/"},{text:"vue-element-admin",link:"/note/vue-element-admin/"},{text:"uni-app",link:"/note/uni-app/"}]},{text:"库",items:[{text:"JQuery",link:"/note/JQuery/"},{text:"EChart",link:"/note/EChart/"},{text:"Element-ui",link:"/note/Element-ui/"}]},{text:"其它",items:[{text:"其它",link:"/note/other/"},{text:"报错分析",link:"/note/errorAnalysis/"},{text:"编码规范",link:"/note/codingSpecification/"},{text:"部署",link:"/note/deployment/"},{text:"远程仓库",link:"/note/remoteStore/"},{text:"api 工厂",link:"/note/apiFactory/"},{text:"SASS",link:"/note/SASS/"},{text:"VuePress",link:"/note/VuePress/"},{text:"webpack",link:"/note/webpack/"}]}]},{text:"时间线",link:"/archives/"},{text:"关于",link:"/about/"}],sidebarDepth:2,repo:"https://github.com/xingcxb",searchMaxSuggestions:10,lastUpdated:"更新时间",docsDir:"docs",editLinks:!1,editLinkText:"编辑此页",categoryText:"随笔",bodyBgImg:["/background/62494753_p0.jpg","/background/60752300_p0.jpg","/background/60866522_p0.jpg","/background/62519517_p0.jpg","/background/62691402_p0.jpg","/background/63876132_p0.jpg"],bodyBgImgOpacity:1,bodyBgImgInterval:6666,contentBgStyle:1,sidebar:{"/00.nav/":[{title:"前端",collapsable:!0,children:[{title:"基础知识",collapsable:!0,children:[["01.前端/01.基础知识/01.HTML.md","HTML","/note/HTML/"],["01.前端/01.基础知识/02.CSS.md","CSS","/note/CSS/"],["01.前端/01.基础知识/03.JS.md","JS","/note/JS/"],["01.前端/01.基础知识/04.WebAPI.md","WebAPI","/note/WebAPI/"],["01.前端/01.基础知识/05.移动 web 开发 copy.md","移动 web 开发","/note/mobileWeb/"],["01.前端/01.基础知识/06.原生微信小程序.md","原生微信小程序","/note/wx/"]]},{title:"框架",collapsable:!0,children:[["01.前端/02.框架/01.vue2.md","vue2","/note/vue2/"],["01.前端/02.框架/02.vue3.md","vue3","/note/vue3/"],["01.前端/02.框架/03.vue-element-admin.md","vue-element-admin","/note/vue-element-admin/"],["01.前端/02.框架/04.uni-app.md","uni-app","/note/uni-app/"]]},{title:"库",collapsable:!0,children:[["01.前端/03.库/01.JQuery.md","JQuery","/note/JQuery/"],["01.前端/03.库/02.EChart.md","EChart","/note/EChart/"],["01.前端/03.库/03.Element-ui.md","Element-ui","/note/Element-ui/"]]},{title:"其它",collapsable:!0,children:[["01.前端/04.其它/01.其它.md","其它","/note/other/"],["01.前端/04.其它/02.报错分析.md","报错分析","/note/errorAnalysis/"],["01.前端/04.其它/03.编码规范.md","编码规范","/note/codingSpecification/"],["01.前端/04.其它/04.部署.md","部署","/note/deployment/"],["01.前端/04.其它/05.远程仓库.md","远程仓库","/note/remoteStore/"],["01.前端/04.其它/06.api 工厂.md","api 工厂","/note/apiFactory/"],["01.前端/04.其它/07.SASS.md","SASS","/note/SASS/"],["01.前端/04.其它/08.VuePress.md","VuePress","/note/VuePress/"],["01.前端/04.其它/09.webpack.md","webpack","/note/webpack/"]]}]}],catalogue:{HTML:"/note/HTML/",CSS:"/note/CSS/",JS:"/note/JS/",WebAPI:"/note/WebAPI/","移动 web 开发 copy":"/note/mobileWeb/","原生微信小程序":"/note/wx/",vue2:"/note/vue2/",vue3:"/note/vue3/","vue-element-admin":"/note/vue-element-admin/","uni-app":"/note/uni-app/",JQuery:"/note/JQuery/",EChart:"/note/EChart/","Element-ui":"/note/Element-ui/","其它":"/note/other/","报错分析":"/note/errorAnalysis/","编码规范":"/note/codingSpecification/","部署":"/note/deployment/","远程仓库":"/note/remoteStore/","api 工厂":"/note/apiFactory/",SASS:"/note/SASS/",VuePress:"/note/VuePress/",webpack:"/note/webpack/","前端":"/web/","页面":"/ui/","技术":"/technology/","更多":"/more/"},"/01.目录/":[["01.前端.md","前端","/web/"],["02.页面.md","页面","/ui/"],["03.技术.md","技术","/technology/"],["04.更多.md","更多","/more/"]],"/《前端》笔记《其它》/":[{title:"其它",collapsable:!0,children:[["01.其它/01.数据处理.md","数据处理","/pages/734b1d/"],["01.其它/02.图片格式.md","图片格式","/pages/efd4a3/"],["01.其它/03.项目开发流程.md","项目开发流程","/pages/343d6d/"],["01.其它/04.自定义代码片段.md","自定义代码片段","/pages/70ac0f/"],["01.其它/05.Linux 命令.md","Linux 命令","/pages/699044/"],["01.其它/06.Markdown 语法.md","Markdown 语法","/pages/7a7269/"],["01.其它/07.Mock.md","Mock","/pages/fccd60/"],["01.其它/08.VSCode 插件.md","VSCode 插件","/pages/1e908d/"]]},{title:"报错分析",collapsable:!0,children:[["02.报错分析/01.vue.md","vue","/pages/a99743/"]]},{title:"编码规范",collapsable:!0,children:[["03.编码规范/01.代码风格文档.md","代码风格文档","/pages/28f723/"],["03.编码规范/02.js.md","js","/pages/29bbaa/"],["03.编码规范/03.vue.md","vue","/pages/9dfa81/"]]},{title:"部署",collapsable:!0,children:[["04.部署/01.部署到本地 nginx 服务器.md","部署到本地的 nginx 中","/pages/48cb8c/"],["04.部署/02.部署到远程 nginx 服务器.md","部署到远程服务器的 nginx 中","/pages/228fd7/"],["04.部署/03.部署到远程 nginx 服务器（宝塔）（推荐）.md","部署到远程 nginx 服务器（宝塔）（推荐）","/pages/c32593/"],["04.部署/04.Web 应用托管.md","03、Web 应用托管","/pages/491521/"],["04.部署/05.一台服务器部署多个项目.md","一台服务器部署多个项目","/pages/22d76f/"]]},{title:"远程仓库",collapsable:!0,children:[["05.远程仓库/01.《git》Git 介绍.md","《git》Git 介绍","/pages/17b532/"],["05.远程仓库/02.《git》Git 命令.md","《git》Git 命令","/pages/d735fe/"],["05.远程仓库/03.《git》BUG.md","《git》BUG","/pages/dd1524/"],["05.远程仓库/04.GitHub.md","GitHub","/pages/f11ff2/"],["05.远程仓库/05.码云.md","码云","/pages/d3f9ee/"]]},{title:"api 工厂",collapsable:!0,children:[["06.api 工厂/01.接口使用.md","接口使用","/pages/cac8fa/"]]},{title:"SASS",collapsable:!0,children:[["07.SASS/01.介绍.md","介绍","/pages/ed226b/"],["07.SASS/02.使用方法.md","使用方法","/pages/b426d7/"]]},{title:"VuePress",collapsable:!0,children:[["08.VuePress/01.项目初始化.md","项目初始化","/pages/88174b/"],["08.VuePress/02.Markdown 语法.md","Markdown 语法","/pages/5f41d6/"],["08.VuePress/03.插件.md","插件","/pages/cc9d0a/"],["08.VuePress/04.主题.md","主题","/pages/6e410e/"]]},{title:"webpack",collapsable:!0,children:[["09.webpack/01.前端工程化.md","前端工程化","/pages/8e1824/"],["09.webpack/02.webpack 介绍.md","webpack 介绍","/pages/208ef4/"]]}],"/《前端》笔记《基础知识》/":[{title:"HTML",collapsable:!0,children:[["01.HTML/01.html 骨架标签.md","html 骨架标签","/pages/3b8550/"],["01.HTML/02.DOCTYPE 和 lang.md","DOCTYPE 和 lang","/pages/ed2742/"],["01.HTML/03.字符集.md","字符集","/pages/e98608/"],["01.HTML/04.常用标签.md","常用标签","/pages/6b6c85/"],["01.HTML/05.文本格式化标签.md","文本格式化标签","/pages/122fad/"],["01.HTML/06.布局标签.md","布局标签","/pages/58d45e/"],["01.HTML/07.路径.md","路径","/pages/d15b04/"],["01.HTML/08.常用特殊字符.md","常用特殊字符","/pages/b6757e/"],["01.HTML/09.表格标签.md","表格标签","/pages/fe5560/"],["01.HTML/10.列表标签.md","列表标签","/pages/b2ec84/"],["01.HTML/11.表单标签.md","表单标签","/pages/8ec70b/"],["01.HTML/12.自动对焦标签（label）.md","自动对焦标签（label）","/pages/c75eb5/"],["01.HTML/13.H5 新增语义化标签 和 布局方式.md","H5 新增语义化标签 和 布局方式","/pages/5363f3/"],["01.HTML/14.H5 新增多媒体标签.md","H5 新增多媒体标签","/pages/75fc79/"],["01.HTML/15.H5 新增 input 类型 和 属性.md","H5 新增 input 类型 和 属性","/pages/20fdb7/"]]},{title:"CSS",collapsable:!0,children:[["02.CSS/01.基础选择器.md","基础选择器","/pages/d8b567/"],["02.CSS/02.字体属性.md","字体属性","/pages/260170/"],["02.CSS/03.文本属性.md","文本属性","/pages/504a1f/"],["02.CSS/04.CSS的引入方式.md","CSS的引入方式","/pages/bbf435/"],["02.CSS/05.Emmet 语法.md","Emmet 语法","/pages/4537e1/"],["02.CSS/06.复合选择器.md","复合选择器","/pages/ece8e0/"],["02.CSS/07.元素显示模式.md","元素显示模式","/pages/50933a/"],["02.CSS/08.行高.md","行高","/pages/e33f57/"],["02.CSS/09.背景.md","背景","/pages/4589aa/"],["02.CSS/10.CSS三大特性.md","CSS三大特性","/pages/063aff/"],["02.CSS/11.盒子模型（上）.md","盒子模型（上）","/pages/eaa2b4/"],["02.CSS/12.盒子模型（中）.md","盒子模型（中）","/pages/2a4d8f/"],["02.CSS/13.元素水平居中.md","1.块级元素.行内元素.行内块元素 水平居中","/pages/cf95ba/"],["02.CSS/14.盒子模型（下）.md","盒子模型（下）","/pages/dd802e/"],["02.CSS/15.圆角边框.md","圆角边框","/pages/cb8da9/"],["02.CSS/16.盒子阴影.md","盒子阴影","/pages/6a0c9e/"],["02.CSS/17.文字阴影.md","文字阴影","/pages/98084a/"],["02.CSS/18.传统网页布局的三种方式（上）.md","传统网页布局的三种方式（上）","/pages/13fdc2/"],["02.CSS/19.传统网页布局的三种方式（下）.md","传统网页布局的三种方式（下）","/pages/740e98/"],["02.CSS/20.元素的显示与隐藏.md","元素的显示与隐藏","/pages/b6bde1/"],["02.CSS/21.精灵图 字体图标.md","精灵图 字体图标","/pages/ccc340/"],["02.CSS/22.三角形.md","三角形","/pages/79ee99/"],["02.CSS/23.界面样式.md","界面样式","/pages/578107/"],["02.CSS/24.元素的垂直对齐方式.md","兄弟关系中，行内元素.行内块元素.文字 的垂直对齐方式","/pages/7d1983/"],["02.CSS/25.溢出的文字，省略号显示.md","溢出的文字，省略号显示","/pages/779512/"],["02.CSS/26.布局技巧.md","布局技巧","/pages/6b9f9b/"],["02.CSS/27.CSS3 新增选择器.md","CSS3 新增选择器","/pages/e65401/"],["02.CSS/28.CSS3 新增 盒子模型.md","CSS3 新增 盒子模型","/pages/fadfcc/"],["02.CSS/29.过渡.md","过渡","/pages/d0c686/"],["02.CSS/30.2D 转换.md","2D 转换","/pages/95b985/"],["02.CSS/31.动画.md","动画","/pages/a5058a/"],["02.CSS/32.3D 转换（未学）.md","3D 转换（未学）","/pages/f28ed0/"],["02.CSS/33.背景颜色渐变.md","背景颜色渐变","/pages/71e5a4/"],["02.CSS/34.图片模糊.md","图片模糊","/pages/8a59ec/"],["02.CSS/35.数值允许使用公式计算.md","数值允许使用公式计算","/pages/fd5bb6/"]]},{title:"JS",collapsable:!0,children:[{title:"内置对象",collapsable:!0,children:[["03.JS/01.内置对象/01.String 对象.md","String 对象","/pages/0540fa/"],["03.JS/01.内置对象/02.Array 对象.md","Array 对象","/pages/0fe8a5/"],["03.JS/01.内置对象/03.Object 对象.md","Object 对象","/pages/c0c5ab/"],["03.JS/01.内置对象/04.Math 对象.md","Math 对象","/pages/d76ef8/"],["03.JS/01.内置对象/05.Date 对象.md","Date 对象","/pages/43f52a/"]]},{title:"ES1~ES4",collapsable:!0,children:[["03.JS/02.ES1~ES4/01.变量.md","变量","/pages/e096ae/"],["03.JS/02.ES1~ES4/02.简单数据类型.md","简单数据类型","/pages/afa7e5/"],["03.JS/02.ES1~ES4/03.运算符.md","运算符","/pages/2e7ca5/"],["03.JS/02.ES1~ES4/04.流程控制-分支语句.md","流程控制.分支语句","/pages/1f470c/"],["03.JS/02.ES1~ES4/05.流程控制-循环语句.md","流程控制.循环语句","/pages/a27b88/"],["03.JS/02.ES1~ES4/06.数组.md","数组","/pages/694e8e/"],["03.JS/02.ES1~ES4/07.函数.md","函数","/pages/0158db/"],["03.JS/02.ES1~ES4/08.作用域.md","作用域","/pages/c5cfa4/"],["03.JS/02.ES1~ES4/09.预解析.md","预解析","/pages/d7e404/"],["03.JS/02.ES1~ES4/10.对象.md","对象","/pages/343cbb/"],["03.JS/02.ES1~ES4/11.内置对象.md","内置对象","/pages/50ebc9/"],["03.JS/02.ES1~ES4/16.基本包装类型.md","基本包装类型","/pages/ae5250/"],["03.JS/02.ES1~ES4/17.值类型-引用类型-堆-栈.md","值类型.引用类型.堆.栈","/pages/1866b2/"],["03.JS/02.ES1~ES4/18.对象合并.md","对象合并","/pages/d3e812/"],["03.JS/02.ES1~ES4/19.扩展.md","扩展","/pages/56958f/"]]},{title:"ES5、ES6",collapsable:!0,children:[["03.JS/03.ES5、ES6/01.编程思想.md","编程思想","/pages/8ac83f/"],["03.JS/03.ES5、ES6/02.类操作.md","类操作","/pages/cf3234/"],["03.JS/03.ES5、ES6/03.类继承.md","类继承","/pages/6d01f9/"],["03.JS/03.ES5、ES6/04.this 指向问题.md","this 指向问题","/pages/69c9b4/"],["03.JS/03.ES5、ES6/05.动态创建元素.md","动态创建元素","/pages/b5e584/"],["03.JS/03.ES5、ES6/06.原型对象 与 对象原型.md","原型对象 与 对象原型","/pages/0ba950/"],["03.JS/03.ES5、ES6/07.ES6前的继承方式.md","ES6前的继承方式","/pages/00734f/"],["03.JS/03.ES5、ES6/08.改变函数内 this 指向的方法.md","改变函数内 this 指向的方法","/pages/503e00/"],["03.JS/03.ES5、ES6/09.严格模式.md","严格模式","/pages/f82327/"],["03.JS/03.ES5、ES6/10.高阶函数.md","高阶函数","/pages/89f470/"],["03.JS/03.ES5、ES6/11.闭包.md","闭包","/pages/1a51f6/"],["03.JS/03.ES5、ES6/12.递归函数.md","递归函数","/pages/f42fc9/"],["03.JS/03.ES5、ES6/13.对象合并.md","对象合并","/pages/dc63c0/"],["03.JS/03.ES5、ES6/14.正则表达式.md","正则表达式","/pages/6eb750/"]]},{title:"ES6",collapsable:!0,children:[["03.JS/04.ES6/00.ES6 标准入门（作用：阮一峰）.md","ES6 标准入门（作用：阮一峰）","/pages/e52e53/"],["03.JS/04.ES6/03.Symbol 数据结构.md","Symbol 数据结构","/pages/5d4860/"],["03.JS/04.ES6/04.Set 数据结构.md","Set 数据结构","/pages/0f905a/"],["03.JS/04.ES6/05.Map 数据结构.md","Map 数据结构","/pages/0490bf/"],["03.JS/04.ES6/06.新增关键字.md","新增关键字","/pages/852835/"],["03.JS/04.ES6/07.解构赋值.md","解构赋值","/pages/42f9bb/"],["03.JS/04.ES6/08.模板字符串.md","模板字符串","/pages/4211fe/"],["03.JS/04.ES6/09.对象的简化写法.md","对象的简化写法","/pages/19fa1b/"],["03.JS/04.ES6/10.箭头函数.md","箭头函数","/pages/03f6ce/"],["03.JS/04.ES6/11.允许给函数形参设置默认值.md","允许给函数形参设置默认值","/pages/21b19d/"],["03.JS/04.ES6/12.rest 参数.md","rest 参数","/pages/09f22c/"],["03.JS/04.ES6/13.扩展运算符.md","扩展运算符","/pages/cce582/"],["03.JS/04.ES6/14.迭代器.md","迭代器","/pages/5d5497/"],["03.JS/04.ES6/15.生成器函数.md","生成器函数","/pages/56c527/"],["03.JS/04.ES6/16.Promise 对象.md","Promise 对象","/pages/ccc78e/"],["03.JS/04.ES6/17.class 类.md","class 类","/pages/9426cc/"],["03.JS/04.ES6/18.模块化开发.md","模块化开发","/pages/4508e1/"]]},{title:"ES7",collapsable:!0,children:[["03.JS/05.ES7/01.指数操作符.md","指数操作符","/pages/38cec0/"]]},{title:"ES8",collapsable:!0,children:[["03.JS/06.ES8/01.async & await 异步函数.md","async & await 异步函数","/pages/491e5c/"]]},{title:"ES9",collapsable:!0,children:[["03.JS/07.ES9/01.剩余参数.md","剩余参数","/pages/103edd/"],["03.JS/07.ES9/02.正则扩展-命名捕获分组.md","正则扩展.命名捕获分组","/pages/72fe75/"],["03.JS/07.ES9/03.正则扩展-正向断言 与 方向断言.md","正则扩展.正向断言 与 方向断言","/pages/a55b0e/"],["03.JS/07.ES9/04.正则扩展-dotAll模式（搞不懂，重新学）.md","正则扩展.dotAll模式（搞不懂，重新学）","/pages/452524/"]]},{title:"ES10",collapsable:!0,children:[["03.JS/08.ES10/01.Symbol 方法.md","Symbol 方法","/pages/ae5e45/"]]},{title:"ES11",collapsable:!0,children:[["03.JS/09.ES11/01.私有属性.md","私有属性","/pages/7d3e07/"],["03.JS/09.ES11/02.Promise-allSettled.md","Promise.allSettled","/pages/c68a1c/"],["03.JS/09.ES11/04.可选链操作符.md","可选链操作符","/pages/3502f2/"],["03.JS/09.ES11/05.动态 inport.md","动态 inport","/pages/71d197/"],["03.JS/09.ES11/06.BigInt （大整数） 数据结构.md","BigInt （大整数） 数据结构","/pages/297c44/"],["03.JS/09.ES11/07.globalThis（全局 this）.md","globalThis（全局 this）","/pages/072adc/"]]}]},{title:"WebAPI",collapsable:!0,children:[["04.WebAPI/01.WebAPI.md","WebAPI","/pages/dbf0ce/"],["04.WebAPI/02.DOM.md","DOM","/pages/a365d4/"],["04.WebAPI/03.获取页面元素.md","获取页面元素","/pages/5a42b6/"],["04.WebAPI/04.元素操作.md","元素操作","/pages/1b21a7/"],["04.WebAPI/05.动态创建元素的三种方法.md","动态创建元素的三种方法","/pages/cfbb1b/"],["04.WebAPI/06.自定义属性.md","自定义属性","/pages/7f30b8/"],["04.WebAPI/07.增删改查.md","增删改查","/pages/1ffde2/"],["04.WebAPI/08.排他思想.md","排他思想","/pages/f62c41/"],["04.WebAPI/09.事件类型（BOM：浏览器对象模型）.md","1.事件类型（BOM：浏览器对象模型）","/pages/ee6818/"],["04.WebAPI/10.事件类型（DOM：文档对象模型）.md","事件类型（DOM：文档对象模型）","/pages/a00402/"],["04.WebAPI/11.事件操作.md","事件操作","/pages/beb383/"],["04.WebAPI/12.事件流.md","事件流","/pages/b5ccb8/"],["04.WebAPI/13.事件对象（BOM：浏览器对象模型）.md","1.事件对象（BOM：浏览器对象模型）","/pages/d90cd6/"],["04.WebAPI/14.事件对象（DOM：文档对象模型）.md","事件对象（DOM：文档对象模型）","/pages/956791/"],["04.WebAPI/15.事件委拖.md","事件委拖","/pages/007db3/"],["04.WebAPI/16.BOM.md","BOM","/pages/174302/"],["04.WebAPI/17.定时器.md","定时器","/pages/5f6ace/"],["04.WebAPI/18.this指向问题.md","this指向问题","/pages/20efbf/"],["04.WebAPI/19.单线程（同步） 与 多线程（异步）.md","单线程（同步） 与 多线程（异步）","/pages/6585fd/"],["04.WebAPI/20.location 对象.md","location 对象","/pages/22590b/"],["04.WebAPI/21.navigator 对象.md","navigator 对象","/pages/366a50/"],["04.WebAPI/22.history 对象(上）.md","history 对象(上）","/pages/b8f8fe/"],["04.WebAPI/23.history 对象(下）.md","history 对象(下）","/pages/626f8b/"],["04.WebAPI/24. offset 系列.md","offset 系列","/pages/bb0314/"],["04.WebAPI/25.client 系列.md","client 系列","/pages/ef677b/"],["04.WebAPI/26.scroll 系列 和 page 系列.md","scroll 系列 和 page 系列","/pages/95b209/"],["04.WebAPI/27.常用开发插件.md","常用开发插件","/pages/78c019/"],["04.WebAPI/28.常用开发框架.md","常用开发框架","/pages/a71be6/"],["04.WebAPI/29.本地存储（上）.md","本地存储（上）","/pages/004d4e/"],["04.WebAPI/30.本地存储（下）.md","本地存储（下）","/pages/4a131d/"],["04.WebAPI/31.服务端存储.md","服务端存储","/pages/a6ca72/"],["04.WebAPI/32.封装 Storage.md","封装 Storage","/pages/42a459/"]]},{title:"移动 web 开发",collapsable:!0,children:[["05.移动 web 开发/01.视口标签.md","视口标签","/pages/063716/"],["05.移动 web 开发/02.二倍图.md","二倍图","/pages/da4b10/"],["05.移动 web 开发/03.移动端 开发方案.md","移动端 开发方案","/pages/870d5c/"],["05.移动 web 开发/04.移动端 技术选型.md","移动端 技术选型","/pages/287bfb/"],["05.移动 web 开发/05.flex 弹性布局（上）.md","flex 弹性布局（上）","/pages/047774/"],["05.移动 web 开发/06.flex 弹性布局（下）.md","flex 弹性布局（下）","/pages/b3bc54/"],["05.移动 web 开发/07.less.md","less","/pages/afc4fa/"],["05.移动 web 开发/08.rem 适配布局 和 媒体查询.md","rem 适配布局 和 媒体查询","/pages/801c60/"],["05.移动 web 开发/09.rem 适配布局（技术方案一）.md","rem 适配布局（技术方案一）","/pages/d7069a/"],["05.移动 web 开发/10.rem 适配布局（技术方案一）案例.md","rem 适配布局（技术方案一）案例","/pages/f6af9f/"],["05.移动 web 开发/11.px 转换 rem 插件（cssrem）.md","px 转换 rem 插件（cssrem）","/pages/0c16c8/"],["05.移动 web 开发/12.rem 适配布局（技术方案二）（推荐）.md","rem 适配布局（技术方案二）（推荐）","/pages/91ff9f/"],["05.移动 web 开发/13.rem 适配布局（技术方案二）案例.md","rem 适配布局（技术方案二）案例","/pages/6ce11c/"],["05.移动 web 开发/14.响应式布局.md","响应式布局","/pages/80324a/"],["05.移动 web 开发/15.响应式布局 案例.md","响应式布局 案例","/pages/01c35d/"],["05.移动 web 开发/16.Bootstrap 框架.md","Bootstrap 框架","/pages/8a06e4/"]]},{title:"原生微信小程序",collapsable:!0,children:[["06.原生微信小程序/01.介绍.md","介绍","/pages/a9419c/"],["06.原生微信小程序/02.环境搭建.md","环境搭建","/pages/25f752/"],["06.原生微信小程序/03.项目初始化.md","项目初始化","/pages/8c1af4/"],["06.原生微信小程序/05.配置文件.md","配置文件","/pages/e97103/"],["06.原生微信小程序/06.tabBar 功能.md","tabBar 功能","/pages/ba1bb6/"],["06.原生微信小程序/07.模板语法.md","模板语法","/pages/501d2d/"],["06.原生微信小程序/08.事件绑定.md","事件绑定","/pages/99fc36/"],["06.原生微信小程序/09.协同工作.md","协同工作","/pages/dd0f12/"],["06.原生微信小程序/10.样式文件（wxss）.md","样式文件（.wxss）","/pages/2726bb/"],["06.原生微信小程序/11.内置组件.md","内置组件","/pages/eaa6ce/"],["06.原生微信小程序/12.自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据.md","自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据","/pages/f5d4e9/"],["06.原生微信小程序/13.应用生命周期.md","应用生命周期","/pages/ca30ce/"],["06.原生微信小程序/14.页面生命周期.md","页面生命周期","/pages/44b3cc/"],["06.原生微信小程序/15.组件生命周期.md","组件生命周期","/pages/2010a7/"],["06.原生微信小程序/16.组件所在页面的生命周期.md","组件所在页面的生命周期","/pages/648c7a/"],["06.原生微信小程序/17.全局共享数据（状态管理）.md","全局共享数据（状态管理）","/pages/342bec/"],["06.原生微信小程序/18.uni-ui.md","uni-ui","/pages/724c77/"],["06.原生微信小程序/19.uni-api.md","uni-api","/pages/f9eeed/"],["06.原生微信小程序/20.内置 API.md","内置 API","/pages/ceab1f/"],["06.原生微信小程序/21.网络数据请求.md","网络数据请求","/pages/ac0a66/"],["06.原生微信小程序/22.封装请求.md","封装请求","/pages/ec1845/"],["06.原生微信小程序/23.页面导航.md","页面导航","/pages/f8bfed/"],["06.原生微信小程序/24.wxs 脚本.md","wxs 脚本","/pages/89dd13/"],["06.原生微信小程序/25.npm.md","npm","/pages/243d96/"],["06.原生微信小程序/26.分包.md","分包","/pages/9376d8/"],["06.原生微信小程序/27.自定义字体.md","自定义字体","/pages/0bb64d/"],["06.原生微信小程序/28.缓存.md","缓存","/pages/f4a219/"],["06.原生微信小程序/29.微信开发者工具使用技巧.md","微信开发者工具使用技巧","/pages/bd9b78/"],["06.原生微信小程序/30.sitemap 配置项.md","sitemap 配置项","/pages/929e62/"]]}],"/《前端》笔记《库》/":[{title:"JQuery",collapsable:!0,children:[["01.JQuery/01.JQuery 介绍.md","JQuery 介绍","/pages/c17dd7/"],["01.JQuery/02.基础.md","基础","/pages/1c8242/"],["01.JQuery/03.选择器.md","选择器","/pages/7574fa/"],["01.JQuery/04.隐式迭代.md","隐式迭代","/pages/7395d0/"],["01.JQuery/05.筛选选择器.md","筛选选择器","/pages/06defd/"],["01.JQuery/06.筛选方法.md","筛选方法","/pages/4d7618/"],["01.JQuery/07.排他思想.md","排他思想","/pages/d8b0cc/"],["01.JQuery/08.样式操作.md","样式操作","/pages/2107dd/"],["01.JQuery/09.类操作.md","类操作","/pages/c3cfb4/"],["01.JQuery/10.动画.md","动画","/pages/e9ff3d/"],["01.JQuery/11.事件切换.md","事件切换","/pages/417a58/"],["01.JQuery/12.停止动画排队.md","停止动画排队","/pages/2c7709/"],["01.JQuery/13.属性操作.md","属性操作","/pages/0e200a/"],["01.JQuery/14.（元素内容、表单值）操作.md","（元素内容、表单值）操作","/pages/4a47f8/"],["01.JQuery/15.遍历元素.md","遍历元素","/pages/3c206b/"],["01.JQuery/16.操作元素.md","操作元素","/pages/30ef11/"],["01.JQuery/17.操作元素尺寸.md","操作元素尺寸","/pages/e5c92d/"],["01.JQuery/18.操作元素位置.md","操作元素位置","/pages/5b6383/"],["01.JQuery/19.事件.md","事件","/pages/d2cbce/"],["01.JQuery/20.事件自动触发.md","事件自动触发","/pages/81b206/"],["01.JQuery/21.事件对象.md","事件对象","/pages/dff061/"],["01.JQuery/22.对象合并.md","对象合并","/pages/341517/"],["01.JQuery/23.多库共存.md","多库共存","/pages/e5f77f/"],["01.JQuery/24.插件.md","插件","/pages/a62464/"]]},{title:"EChart",collapsable:!0,children:[["02.EChart/01.介绍.md","介绍","/pages/960d46/"],["02.EChart/02.使用步骤.md","使用步骤","/pages/c5d318/"],["02.EChart/03.通用配置.md","通用配置","/pages/ee2b65/"],["02.EChart/04.直角坐标系中的通用配置项.md","直角坐标系中的通用配置项","/pages/247f53/"],["02.EChart/05.柱状图.md","柱状图","/pages/265663/"],["02.EChart/06.折线图.md","折线图","/pages/d9763d/"],["02.EChart/07.散点图.md","散点图","/pages/b8894e/"],["02.EChart/08.饼图.md","饼图","/pages/b963e8/"],["02.EChart/09.地图.md","地图","/pages/294d22/"],["02.EChart/10.雷达图.md","雷达图","/pages/e855fb/"],["02.EChart/11.仪表盘.md","仪表盘","/pages/cbcf49/"],["02.EChart/12.主题.md","主题","/pages/23e617/"],["02.EChart/13.调色盘.md","调色盘","/pages/3026e7/"],["02.EChart/14.颜色渐变.md","颜色渐变","/pages/be046a/"],["02.EChart/15.样式.md","样式","/pages/fe0229/"],["02.EChart/16.自适应.md","自适应","/pages/93d13a/"],["02.EChart/17.加载动画.md","加载动画","/pages/22face/"],["02.EChart/18.增量动画.md","增量动画","/pages/288120/"],["02.EChart/19.动画配置项.md","动画配置项","/pages/f93ec3/"],["02.EChart/20.交互API-全局 echarts 对象.md","交互API-全局 echarts 对象","/pages/463c49/"],["02.EChart/21.交互API-echartsInstance 对象.md","交互API-echartsInstance 对象","/pages/60605e/"],["02.EChart/22.koa2.md","koa2","/pages/e17a64/"]]},{title:"Element-ui",collapsable:!0,children:[["03.Element-ui/01.介绍.md","介绍","/pages/cc62b5/"],["03.Element-ui/02.栅格布局.md","栅格布局","/pages/290baf/"],["03.Element-ui/03.组件.md","组件","/pages/3e78f3/"],["03.Element-ui/04.编程式组件.md","编程式组件","/pages/5d424a/"]]}],"/《前端》笔记《框架》/":[{title:"vue2",collapsable:!0,children:[["01.vue2/00.介绍.md","介绍","/pages/9913d3/"],["01.vue2/01.项目初始化.md","项目初始化","/pages/ee7afe/"],["01.vue2/02.使用步骤.md","使用步骤","/pages/7f9266/"],["01.vue2/03.动态添加样式.md","动态添加样式","/pages/5202a1/"],["01.vue2/04.过滤器.md","过滤器","/pages/ae2ef8/"],["01.vue2/05.侦听器.md","侦听器","/pages/ee2297/"],["01.vue2/06.计算属性.md","计算属性","/pages/4e87f6/"],["01.vue2/07.axios 发送请求.md","axios 发送请求","/pages/37b216/"],["01.vue2/08.axios 发送请求 简写.md","axios 发送请求 简写","/pages/c0b227/"],["01.vue2/09.axios 全局配置.md","axios 全局配置","/pages/6d2a87/"],["01.vue2/10.axios 拦截器.md","axios 拦截器","/pages/36b5ae/"],["01.vue2/11.proxy 跨域代理.md","proxy 跨域代理","/pages/8e1497/"],["01.vue2/12.SPA.md","SPA","/pages/dd342d/"],["01.vue2/13.vue-cli（脚手架）.md","vue-cli（脚手架）","/pages/f1a7da/"],["01.vue2/14.组件.md","组件","/pages/7d1bb2/"],["01.vue2/15.自定义事件.md","自定义事件","/pages/bc7b7d/"],["01.vue2/16.组件的生命周期 & 钩子函数.md","组件的生命周期 & 钩子函数","/pages/a01ff5/"],["01.vue2/17.组件之间的数据共享.md","组件之间的数据共享","/pages/0c319a/"],["01.vue2/18.获取 DOM 元素 或 组件.md","获取 DOM 元素 或 组件","/pages/29b80e/"],["01.vue2/19.props 高级用法.md","props 高级用法","/pages/c39f39/"],["01.vue2/20.vuex-上.md","vuex（上）","/pages/65ee94/"],["01.vue2/21.vuex-下.md","vuex（下）","/pages/27c1f4/"],["01.vue2/22.动态组件.md","动态组件","/pages/47f08e/"],["01.vue2/23.组件的名称.md","组件的名称","/pages/6bcf69/"],["01.vue2/24.封装组件.md","封装组件","/pages/c09a2f/"],["01.vue2/25.插槽.md","插槽","/pages/effd84/"],["01.vue2/26.自定义指令.md","自定义指令","/pages/4c6157/"],["01.vue2/27.前端路由.md","前端路由","/pages/71ecc1/"],["01.vue2/28.vue-router 3 版本 第三方库.md","vue.router 3.x版本 第三方库","/pages/871156/"],["01.vue2/29.页面导航.md","页面导航","/pages/5e7df0/"],["01.vue2/30.导航守卫.md","导航守卫","/pages/b55487/"],["01.vue2/31.命名路由.md","命名路由","/pages/450ed8/"],["01.vue2/32.组件库.md","组件库","/pages/74b13b/"],["01.vue2/34.Vant.md","Vant","/pages/953c13/"],["01.vue2/35.事件修饰符.md","事件修饰符","/pages/204695/"],["01.vue2/36.打包上线.md","打包上线","/pages/7482ad/"],["01.vue2/37.事件.md","事件","/pages/fecc7b/"],["01.vue2/38.内容渲染 指令.md","内容渲染 指令","/pages/fab397/"],["01.vue2/39.属性绑定 指令.md","属性绑定 指令","/pages/8a9dd8/"],["01.vue2/40.事件绑定 指令.md","事件绑定 指令","/pages/c1b76b/"],["01.vue2/41.双向绑定 指令.md","双向绑定 指令","/pages/823352/"],["01.vue2/42.条件渲染 指令.md","条件渲染 指令","/pages/3f52b2/"],["01.vue2/43.列表渲染 指令.md","列表渲染 指令","/pages/ff18e3/"],["01.vue2/44.登录.md","登录","/pages/e590af/"],["01.vue2/45.权限控制-进度条.md","权限控制.进度条","/pages/fcfbbb/"]]},{title:"vue3",collapsable:!0,children:[["02.vue3/00.介绍.md","介绍","/pages/48e461/"],["02.vue3/01.项目初始化.md","项目初始化","/pages/10bec1/"],["02.vue3/02.宏任务 & 微任务.md","宏任务 & 微任务","/pages/f91db7/"],["02.vue3/03.vite（脚手架工具）.md","vite（脚手架工具）","/pages/623974/"],["02.vue3/04.API 接口案例.md","API 接口案例","/pages/37b13e/"],["02.vue3/05.过滤器.md","过滤器","/pages/d3846a/"],["02.vue3/06.组件.md","组件","/pages/ad934f/"],["02.vue3/07.深度选择器.md","深度选择器","/pages/2eb382/"],["02.vue3/08.axios 全局配置.md","axios 全局配置","/pages/7d45b6/"],["02.vue3/09.vue-router 4版本 第三方库.md","vue-router 4.x版本 第三方库","/pages/b7275b/"],["02.vue3/10.组合式API.md","组合式API","/pages/6174e6/"],["02.vue3/11.组件的生命周期 & 钩子函数.md","组件的生命周期 & 钩子函数","/pages/8c2d46/"],["02.vue3/12.reactive 函数 & ref 函数.md","reactive 函数 & ref 函数","/pages/c8896f/"],["02.vue3/13.toRef 函数 & toRefs 函数.md","toRef 函数 & toRefs 函数","/pages/1e6c85/"],["02.vue3/14.computed 函数.md","computed 函数","/pages/fd5957/"],["02.vue3/15.watch 函数.md","watch 函数","/pages/bf1d98/"],["02.vue3/16.ref 引用.md","ref 引用","/pages/fce363/"],["02.vue3/17.组件之间的数据共享.md","组件之间的数据共享","/pages/1e42a3/"],["02.vue3/18.v-model 语法糖.md","v-model 语法糖","/pages/6bcbc0/"],["02.vue3/19.混入 (mixin) .md","混入 (mixin)","/pages/d6e9fb/"]]},{title:"vue-element-admin",collapsable:!0,children:[["03.vue-element-admin/00.介绍.md","介绍","/pages/7fd07c/"],["03.vue-element-admin/01.项目初始化.md","项目初始化","/pages/796f85/"],["03.vue-element-admin/02.目录结构.md","目录结构","/pages/39d56d/"],["03.vue-element-admin/03.事件修饰符.md","事件修饰符","/pages/bc059f/"],["03.vue-element-admin/04.静态路由、动态路由.md","静态路由、动态路由","/pages/6503ff/"]]},{title:"uni-app",collapsable:!0,children:[["04.uni-app/00.介绍.md","介绍","/pages/e24c11/"],["04.uni-app/01.自定义组件.md","自定义组件","/pages/ddd057/"],["04.uni-app/02.uni-ui.md","uni-ui","/pages/eb9fff/"],["04.uni-app/03.vuex.md","vuex","/pages/bdf18b/"],["04.uni-app/04.项目初始化.md","项目初始化","/pages/c382fc/"]]}]},blogInfo:{blogCreate:"2022-06-04",indexView:!0,pageView:!0,readingTime:!0,eachFileWords:[{name:"HTML",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/01.基础知识/01.HTML.md",wordsCount:49,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/01.HTML"}},title:"HTML",permalink:"/note/HTML/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-26T15:05:00.000Z"},{name:"CSS",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/01.基础知识/02.CSS.md",wordsCount:49,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/02.CSS"}},title:"CSS",permalink:"/note/CSS/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-26T15:05:00.000Z"},{name:"JS",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/01.基础知识/03.JS.md",wordsCount:49,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/03.JS"}},title:"JS",permalink:"/note/JS/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-26T15:05:00.000Z"},{name:"WebAPI",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/01.基础知识/04.WebAPI.md",wordsCount:49,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/04.WebAPI"}},title:"WebAPI",permalink:"/note/WebAPI/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-26T15:05:00.000Z"},{name:"移动 web 开发 copy",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/01.基础知识/05.移动 web 开发 copy.md",wordsCount:57,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/05.移动 web 开发"}},title:"移动 web 开发",permalink:"/note/mobileWeb/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T14:09:48.000Z"},{name:"原生微信小程序",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/01.基础知识/06.原生微信小程序.md",wordsCount:61,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《基础知识》/06.原生微信小程序"}},title:"原生微信小程序",permalink:"/note/wx/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T13:57:20.000Z"},{name:"vue2",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/02.框架/01.vue2.md",wordsCount:47,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《框架》/01.vue2"}},title:"vue2",permalink:"/note/vue2/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"vue3",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/02.框架/02.vue3.md",wordsCount:47,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《框架》/02.vue3"}},title:"vue3",permalink:"/note/vue3/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:55.000Z"},{name:"vue-element-admin",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/02.框架/03.vue-element-admin.md",wordsCount:53,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《框架》/03.vue-element-admin"}},title:"vue-element-admin",permalink:"/note/vue-element-admin/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:58:06.000Z"},{name:"uni-app",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/02.框架/04.uni-app.md",wordsCount:50,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《框架》/04.uni-app"}},title:"uni-app",date:"2020-02-04T12:16:12.000Z",permalink:"/note/uni-app/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"JQuery",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/03.库/01.JQuery.md",wordsCount:46,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《库》/01.JQuery"}},title:"JQuery",permalink:"/note/JQuery/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"EChart",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/03.库/02.EChart.md",wordsCount:46,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《库》/02.EChart"}},title:"EChart",permalink:"/note/EChart/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:55.000Z"},{name:"Element-ui",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/03.库/03.Element-ui.md",wordsCount:49,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《库》/03.Element-ui"}},title:"Element-ui",permalink:"/note/Element-ui/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:58:06.000Z"},{name:"其它",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/01.其它.md",wordsCount:49,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/01.其它"}},title:"其它",permalink:"/note/other/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"报错分析",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/02.报错分析.md",wordsCount:53,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/02.报错分析"}},title:"报错分析",permalink:"/note/errorAnalysis/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"编码规范",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/03.编码规范.md",wordsCount:53,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/03.编码规范"}},title:"编码规范",permalink:"/note/codingSpecification/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"部署",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/04.部署.md",wordsCount:49,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/04.部署"}},title:"部署",permalink:"/note/deployment/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"远程仓库",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/05.远程仓库.md",wordsCount:53,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/05.远程仓库"}},title:"远程仓库",permalink:"/note/remoteStore/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"api 工厂",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/06.api 工厂.md",wordsCount:51,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/06.api 工厂"}},title:"api 工厂",permalink:"/note/apiFactory/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"SASS",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/07.SASS.md",wordsCount:47,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/07.SASS"}},title:"SASS",permalink:"/note/SASS/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"VuePress",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/08.VuePress.md",wordsCount:47,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/08.VuePress"}},title:"VuePress",permalink:"/note/VuePress/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"webpack",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/00.nav/01.前端/04.其它/09.webpack.md",wordsCount:47,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"《前端》笔记《其它》/09.webpack"}},title:"webpack",permalink:"/note/webpack/",article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},date:"2022-06-27T10:57:45.000Z"},{name:"前端",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/01.目录/01.前端.md",wordsCount:46,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"00.nav/01.前端"}},title:"前端",date:"2020-03-11T21:50:53.000Z",permalink:"/web/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"页面",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/01.目录/02.页面.md",wordsCount:61,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"02.页面",imgUrl:"/img/ui.png",description:"html(5)/css(3)，前端页面相关技术"}},title:"页面",date:"2020-03-11T21:50:54.000Z",permalink:"/ui/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"技术",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/01.目录/03.技术.md",wordsCount:62,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"03.技术",imgUrl:"/img/other.png",description:"技术文档、教程、技巧、总结等文章"}},title:"技术",date:"2020-03-11T21:50:55.000Z",permalink:"/technology/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"更多",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/01.目录/04.更多.md",wordsCount:65,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"04.更多",imgUrl:"/img/more.png",description:"学习、面试、在线工具等更多文章和页面"}},title:"更多",date:"2020-03-11T21:50:56.000Z",permalink:"/more/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"数据处理",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/01.其它/01.数据处理.md",wordsCount:"1.5k",readingTime:"6.8m",title:"数据处理",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/734b1d/",categories:["《前端》笔记《其它》","其它"],tags:[null]},{name:"图片格式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/01.其它/02.图片格式.md",wordsCount:215,readingTime:"1",title:"图片格式",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/efd4a3/",categories:["《前端》笔记《其它》","其它"],tags:[null]},{name:"项目开发流程",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/01.其它/03.项目开发流程.md",wordsCount:381,readingTime:"1.3m",title:"项目开发流程",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/343d6d/",categories:["《前端》笔记《其它》","其它"],tags:[null]},{name:"自定义代码片段",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/01.其它/04.自定义代码片段.md",wordsCount:152,readingTime:"1",title:"自定义代码片段",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/70ac0f/",categories:["《前端》笔记《其它》","其它"],tags:[null]},{name:"Linux 命令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/01.其它/05.Linux 命令.md",wordsCount:393,readingTime:"1.5m",title:"Linux 命令",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/699044/",categories:["《前端》笔记《其它》","其它"],tags:[null]},{name:"Markdown 语法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/01.其它/06.Markdown 语法.md",wordsCount:281,readingTime:"1.1m",title:"Markdown 语法",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/7a7269/",categories:["《前端》笔记《其它》","其它"],tags:[null]},{name:"Mock",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/01.其它/07.Mock.md",wordsCount:976,readingTime:"3.9m",title:"Mock",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/fccd60/",categories:["《前端》笔记《其它》","其它"],tags:[null]},{name:"VSCode 插件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/01.其它/08.VSCode 插件.md",wordsCount:"1.9k",readingTime:"7.7m",title:"VSCode 插件",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/1e908d/",categories:["《前端》笔记《其它》","其它"],tags:[null]},{name:"vue",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/02.报错分析/01.vue.md",wordsCount:526,readingTime:"2.1m",title:"vue",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/a99743/",categories:["《前端》笔记《其它》","报错解决方式"],tags:[null]},{name:"代码风格文档",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/03.编码规范/01.代码风格文档.md",wordsCount:"1.3k",readingTime:"5.4m",title:"代码风格文档",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/28f723/",categories:["《前端》笔记《其它》","编码规范"],tags:[null]},{name:"js",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/03.编码规范/02.js.md",wordsCount:43,readingTime:"1",title:"js",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/29bbaa/",categories:["《前端》笔记《其它》","编码规范"],tags:[null]},{name:"vue",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/03.编码规范/03.vue.md",wordsCount:102,readingTime:"1",title:"vue",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/9dfa81/",categories:["《前端》笔记《其它》","编码规范"],tags:[null]},{name:"部署到本地 nginx 服务器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/04.部署/01.部署到本地 nginx 服务器.md",wordsCount:273,readingTime:"1.1m",title:"部署到本地的 nginx 中",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/48cb8c/",categories:["《前端》笔记《其它》","部署"],tags:[null]},{name:"部署到远程 nginx 服务器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/04.部署/02.部署到远程 nginx 服务器.md",wordsCount:"2k",readingTime:"8.3m",title:"部署到远程服务器的 nginx 中",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/228fd7/",categories:["《前端》笔记《其它》","部署"],tags:[null]},{name:"部署到远程 nginx 服务器（宝塔）（推荐）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/04.部署/03.部署到远程 nginx 服务器（宝塔）（推荐）.md",wordsCount:366,readingTime:"1.3m",title:"部署到远程 nginx 服务器（宝塔）（推荐）",date:"2022-06-28T11:42:38.000Z",permalink:"/pages/c32593/",categories:["《前端》笔记《其它》","部署"],tags:[null]},{name:"Web 应用托管",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/04.部署/04.Web 应用托管.md",wordsCount:41,readingTime:"1",title:"03、Web 应用托管",date:"2022-06-27T22:04:50.000Z",permalink:"/pages/491521/",categories:["《前端》笔记《其它》","部署"],tags:[null]},{name:"一台服务器部署多个项目",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/04.部署/05.一台服务器部署多个项目.md",wordsCount:73,readingTime:"1",title:"一台服务器部署多个项目",date:"2022-06-28T11:42:01.000Z",permalink:"/pages/22d76f/",categories:["《前端》笔记《其它》","部署"],tags:[null]},{name:"《git》Git 介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/05.远程仓库/01.《git》Git 介绍.md",wordsCount:"3.2k",readingTime:"11.4m",title:"《git》Git 介绍",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/17b532/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null]},{name:"《git》Git 命令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/05.远程仓库/02.《git》Git 命令.md",wordsCount:488,readingTime:"2m",title:"《git》Git 命令",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/d735fe/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null]},{name:"《git》BUG",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/05.远程仓库/03.《git》BUG.md",wordsCount:233,readingTime:"1",title:"《git》BUG",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/dd1524/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null]},{name:"GitHub",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/05.远程仓库/04.GitHub.md",wordsCount:"2.1k",readingTime:"7.8m",title:"GitHub",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/f11ff2/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null]},{name:"码云",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/05.远程仓库/05.码云.md",wordsCount:354,readingTime:"1.4m",title:"码云",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/d3f9ee/",categories:["《前端》笔记《其它》","远程仓库"],tags:[null]},{name:"接口使用",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/06.api 工厂/01.接口使用.md",wordsCount:277,readingTime:"1.1m",title:"接口使用",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/cac8fa/",categories:["《前端》笔记《其它》","api 工厂"],tags:[null]},{name:"介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/07.SASS/01.介绍.md",wordsCount:129,readingTime:"1",title:"介绍",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/ed226b/",categories:["《前端》笔记《其它》","SASS"],tags:[null]},{name:"使用方法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/07.SASS/02.使用方法.md",wordsCount:82,readingTime:"1",title:"使用方法",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/b426d7/",categories:["《前端》笔记《其它》","SASS"],tags:[null]},{name:"项目初始化",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/08.VuePress/01.项目初始化.md",wordsCount:730,readingTime:"3.2m",title:"项目初始化",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/88174b/",categories:["《前端》笔记《其它》","VuePress"],tags:[null]},{name:"Markdown 语法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/08.VuePress/02.Markdown 语法.md",wordsCount:266,readingTime:"1.2m",title:"Markdown 语法",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/5f41d6/",categories:["《前端》笔记《其它》","VuePress"],tags:[null]},{name:"插件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/08.VuePress/03.插件.md",wordsCount:210,readingTime:"1",title:"插件",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/cc9d0a/",categories:["《前端》笔记《其它》","VuePress"],tags:[null]},{name:"主题",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/08.VuePress/04.主题.md",wordsCount:336,readingTime:"1.6m",title:"主题",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/6e410e/",categories:["《前端》笔记《其它》","VuePress"],tags:[null]},{name:"前端工程化",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/09.webpack/01.前端工程化.md",wordsCount:208,readingTime:"1",title:"前端工程化",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/8e1824/",categories:["《前端》笔记《其它》","webpack"],tags:[null]},{name:"webpack 介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《其它》/09.webpack/02.webpack 介绍.md",wordsCount:"3k",readingTime:"12m",title:"webpack 介绍",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/208ef4/",categories:["《前端》笔记《其它》","webpack"],tags:[null]},{name:"html 骨架标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/01.html 骨架标签.md",wordsCount:55,readingTime:"1",title:"html 骨架标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/3b8550/",categories:["《HTML》笔记"],tags:["HTML"],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"DOCTYPE 和 lang",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/02.DOCTYPE 和 lang.md",wordsCount:125,readingTime:"1",title:"DOCTYPE 和 lang",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/ed2742/",categories:["《HTML》笔记"],tags:["HTML"],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"字符集",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/03.字符集.md",wordsCount:103,readingTime:"1",title:"字符集",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/e98608/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"常用标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/04.常用标签.md",wordsCount:626,readingTime:"2.7m",title:"常用标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/6b6c85/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"文本格式化标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/05.文本格式化标签.md",wordsCount:113,readingTime:"1",title:"文本格式化标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/122fad/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"布局标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/06.布局标签.md",wordsCount:136,readingTime:"1",title:"布局标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/58d45e/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"路径",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/07.路径.md",wordsCount:103,readingTime:"1",title:"路径",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/d15b04/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"常用特殊字符",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/08.常用特殊字符.md",wordsCount:119,readingTime:"1",title:"常用特殊字符",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/b6757e/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"表格标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/09.表格标签.md",wordsCount:312,readingTime:"1.3m",title:"表格标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/fe5560/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"列表标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/10.列表标签.md",wordsCount:293,readingTime:"1.2m",title:"列表标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/b2ec84/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"表单标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/11.表单标签.md",wordsCount:512,readingTime:"2.3m",title:"表单标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/8ec70b/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"自动对焦标签（label）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/12.自动对焦标签（label）.md",wordsCount:166,readingTime:"1",title:"自动对焦标签（label）",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/c75eb5/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"H5 新增语义化标签 和 布局方式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/13.H5 新增语义化标签 和 布局方式.md",wordsCount:214,readingTime:"1",title:"H5 新增语义化标签 和 布局方式",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/5363f3/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"H5 新增多媒体标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/14.H5 新增多媒体标签.md",wordsCount:225,readingTime:"1",title:"H5 新增多媒体标签",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/75fc79/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"H5 新增 input 类型 和 属性",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/01.HTML/15.H5 新增 input 类型 和 属性.md",wordsCount:256,readingTime:"1.1m",title:"H5 新增 input 类型 和 属性",date:"2022-06-25T11:58:37.000Z",permalink:"/pages/20fdb7/",categories:["HTML"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"基础选择器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/01.基础选择器.md",wordsCount:291,readingTime:"1.1m",title:"基础选择器",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/d8b567/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"字体属性",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/02.字体属性.md",wordsCount:307,readingTime:"1.2m",title:"字体属性",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/260170/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"文本属性",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/03.文本属性.md",wordsCount:223,readingTime:"1",title:"文本属性",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/504a1f/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"CSS的引入方式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/04.CSS的引入方式.md",wordsCount:152,readingTime:"1",title:"CSS的引入方式",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/bbf435/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"Emmet 语法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/05.Emmet 语法.md",wordsCount:308,readingTime:"1.3m",title:"Emmet 语法",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/4537e1/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"复合选择器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/06.复合选择器.md",wordsCount:270,readingTime:"1.1m",title:"复合选择器",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/ece8e0/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"元素显示模式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/07.元素显示模式.md",wordsCount:225,readingTime:"1",title:"元素显示模式",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/50933a/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"行高",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/08.行高.md",wordsCount:94,readingTime:"1",title:"行高",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/e33f57/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"背景",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/09.背景.md",wordsCount:425,readingTime:"1.7m",title:"背景",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/4589aa/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"CSS三大特性",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/10.CSS三大特性.md",wordsCount:306,readingTime:"1.2m",title:"CSS三大特性",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/063aff/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"盒子模型（上）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/11.盒子模型（上）.md",wordsCount:211,readingTime:"1",title:"盒子模型（上）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/eaa2b4/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"盒子模型（中）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/12.盒子模型（中）.md",wordsCount:195,readingTime:"1",title:"盒子模型（中）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/2a4d8f/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"元素水平居中",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/13.元素水平居中.md",wordsCount:119,readingTime:"1",title:"1.块级元素.行内元素.行内块元素 水平居中",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/cf95ba/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"盒子模型（下）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/14.盒子模型（下）.md",wordsCount:338,readingTime:"1.2m",title:"盒子模型（下）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/dd802e/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"圆角边框",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/15.圆角边框.md",wordsCount:140,readingTime:"1",title:"圆角边框",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/cb8da9/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"盒子阴影",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/16.盒子阴影.md",wordsCount:118,readingTime:"1",title:"盒子阴影",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/6a0c9e/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"文字阴影",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/17.文字阴影.md",wordsCount:142,readingTime:"1",title:"文字阴影",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/98084a/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"传统网页布局的三种方式（上）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/18.传统网页布局的三种方式（上）.md",wordsCount:669,readingTime:"2.8m",title:"传统网页布局的三种方式（上）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/13fdc2/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"传统网页布局的三种方式（下）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/19.传统网页布局的三种方式（下）.md",wordsCount:411,readingTime:"1.5m",title:"传统网页布局的三种方式（下）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/740e98/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"元素的显示与隐藏",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/20.元素的显示与隐藏.md",wordsCount:197,readingTime:"1",title:"元素的显示与隐藏",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/b6bde1/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"精灵图 字体图标",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/21.精灵图 字体图标.md",wordsCount:520,readingTime:"2.3m",title:"精灵图 字体图标",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/ccc340/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"三角形",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/22.三角形.md",wordsCount:100,readingTime:"1",title:"三角形",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/79ee99/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"界面样式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/23.界面样式.md",wordsCount:114,readingTime:"1",title:"界面样式",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/578107/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"元素的垂直对齐方式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/24.元素的垂直对齐方式.md",wordsCount:410,readingTime:"1.8m",title:"兄弟关系中，行内元素.行内块元素.文字 的垂直对齐方式",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/7d1983/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"溢出的文字，省略号显示",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/25.溢出的文字，省略号显示.md",wordsCount:335,readingTime:"1.4m",title:"溢出的文字，省略号显示",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/779512/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"布局技巧",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/26.布局技巧.md",wordsCount:542,readingTime:"2.8m",title:"布局技巧",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/6b9f9b/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"CSS3 新增选择器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/27.CSS3 新增选择器.md",wordsCount:432,readingTime:"1.6m",title:"CSS3 新增选择器",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/e65401/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"CSS3 新增 盒子模型",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/28.CSS3 新增 盒子模型.md",wordsCount:199,readingTime:"1",title:"CSS3 新增 盒子模型",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/fadfcc/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"过渡",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/29.过渡.md",wordsCount:179,readingTime:"1",title:"过渡",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/d0c686/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"2D 转换",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/30.2D 转换.md",wordsCount:448,readingTime:"2.1m",title:"2D 转换",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/95b985/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"动画",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/31.动画.md",wordsCount:451,readingTime:"2.2m",title:"动画",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/a5058a/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"3D 转换（未学）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/32.3D 转换（未学）.md",wordsCount:45,readingTime:"1",title:"3D 转换（未学）",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/f28ed0/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"背景颜色渐变",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/33.背景颜色渐变.md",wordsCount:201,readingTime:"1m",title:"背景颜色渐变",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/71e5a4/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"图片模糊",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/34.图片模糊.md",wordsCount:103,readingTime:"1",title:"图片模糊",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/8a59ec/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"数值允许使用公式计算",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/02.CSS/35.数值允许使用公式计算.md",wordsCount:111,readingTime:"1",title:"数值允许使用公式计算",date:"2022-06-25T16:51:30.000Z",permalink:"/pages/fd5bb6/",categories:["02、CSS"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"String 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/01.内置对象/01.String 对象.md",wordsCount:"1.8k",readingTime:"7.1m",title:"String 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/0540fa/",categories:["《前端》笔记","JS","内置对象"],tags:[null]},{name:"Array 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/01.内置对象/02.Array 对象.md",wordsCount:"2.7k",readingTime:"10.6m",title:"Array 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/0fe8a5/",categories:["《前端》笔记","JS","内置对象"],tags:[null]},{name:"Object 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/01.内置对象/03.Object 对象.md",wordsCount:"1.1k",readingTime:"4.6m",title:"Object 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/c0c5ab/",categories:["《前端》笔记","JS","内置对象"],tags:[null]},{name:"Math 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/01.内置对象/04.Math 对象.md",wordsCount:"1.4k",readingTime:"6m",title:"Math 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/d76ef8/",categories:["《前端》笔记","JS","内置对象"],tags:[null]},{name:"Date 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/01.内置对象/05.Date 对象.md",wordsCount:236,readingTime:"1",title:"Date 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/43f52a/",categories:["《前端》笔记","JS","内置对象"],tags:[null]},{name:"变量",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/01.变量.md",wordsCount:88,readingTime:"1",title:"变量",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/e096ae/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"简单数据类型",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/02.简单数据类型.md",wordsCount:385,readingTime:"1.7m",title:"简单数据类型",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/afa7e5/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"运算符",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/03.运算符.md",wordsCount:398,readingTime:"1.7m",title:"运算符",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/2e7ca5/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"流程控制-分支语句",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/04.流程控制-分支语句.md",wordsCount:439,readingTime:"1.8m",title:"流程控制.分支语句",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/1f470c/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"流程控制-循环语句",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/05.流程控制-循环语句.md",wordsCount:446,readingTime:"1.8m",title:"流程控制.循环语句",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/a27b88/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"数组",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/06.数组.md",wordsCount:320,readingTime:"1.3m",title:"数组",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/694e8e/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/07.函数.md",wordsCount:465,readingTime:"1.9m",title:"函数",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/0158db/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"作用域",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/08.作用域.md",wordsCount:298,readingTime:"1m",title:"作用域",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/c5cfa4/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"预解析",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/09.预解析.md",wordsCount:242,readingTime:"1.1m",title:"预解析",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/d7e404/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/10.对象.md",wordsCount:461,readingTime:"1.9m",title:"对象",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/343cbb/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"内置对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/11.内置对象.md",wordsCount:103,readingTime:"1",title:"内置对象",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/50ebc9/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"基本包装类型",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/16.基本包装类型.md",wordsCount:79,readingTime:"1",title:"基本包装类型",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/ae5250/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"值类型-引用类型-堆-栈",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/17.值类型-引用类型-堆-栈.md",wordsCount:268,readingTime:"1",title:"值类型.引用类型.堆.栈",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/1866b2/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"对象合并",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/18.对象合并.md",wordsCount:112,readingTime:"1",title:"对象合并",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/d3e812/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"扩展",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/02.ES1~ES4/19.扩展.md",wordsCount:92,readingTime:"1",title:"扩展",date:"2022-06-25T17:37:08.000Z",permalink:"/pages/56958f/",categories:["04、JavaScript"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"编程思想",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/01.编程思想.md",wordsCount:204,readingTime:"1",title:"编程思想",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/8ac83f/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"类操作",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/02.类操作.md",wordsCount:460,readingTime:"2m",title:"类操作",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/cf3234/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"类继承",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/03.类继承.md",wordsCount:379,readingTime:"1.7m",title:"类继承",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/6d01f9/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"this 指向问题",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/04.this 指向问题.md",wordsCount:181,readingTime:"1",title:"this 指向问题",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/69c9b4/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"动态创建元素",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/05.动态创建元素.md",wordsCount:260,readingTime:"1.2m",title:"动态创建元素",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/b5e584/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"原型对象 与 对象原型",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/06.原型对象 与 对象原型.md",wordsCount:"1.2k",readingTime:"5.1m",title:"原型对象 与 对象原型",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/0ba950/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"ES6前的继承方式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/07.ES6前的继承方式.md",wordsCount:671,readingTime:"2.9m",title:"ES6前的继承方式",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/00734f/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"改变函数内 this 指向的方法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/08.改变函数内 this 指向的方法.md",wordsCount:547,readingTime:"2.5m",title:"改变函数内 this 指向的方法",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/503e00/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"严格模式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/09.严格模式.md",wordsCount:616,readingTime:"2.3m",title:"严格模式",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/f82327/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"高阶函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/10.高阶函数.md",wordsCount:149,readingTime:"1",title:"高阶函数",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/89f470/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"闭包",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/11.闭包.md",wordsCount:432,readingTime:"1.7m",title:"闭包",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/1a51f6/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"递归函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/12.递归函数.md",wordsCount:272,readingTime:"1.1m",title:"递归函数",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/f42fc9/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"对象合并",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/13.对象合并.md",wordsCount:395,readingTime:"1.9m",title:"对象合并",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/dc63c0/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"正则表达式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/03.ES5、ES6/14.正则表达式.md",wordsCount:"1.2k",readingTime:"4.9m",title:"正则表达式",date:"2022-06-26T18:33:08.000Z",permalink:"/pages/6eb750/",categories:["《前端》笔记","JS","ES5、ES6"],tags:[null]},{name:"ES6 标准入门（作用：阮一峰）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/00.ES6 标准入门（作用：阮一峰）.md",wordsCount:44,readingTime:"1",title:"ES6 标准入门（作用：阮一峰）",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/e52e53/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"Symbol 数据结构",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/03.Symbol 数据结构.md",wordsCount:"1k",readingTime:"4.4m",title:"Symbol 数据结构",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/5d4860/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"Set 数据结构",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/04.Set 数据结构.md",wordsCount:789,readingTime:"3.7m",title:"Set 数据结构",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/0f905a/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"Map 数据结构",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/05.Map 数据结构.md",wordsCount:325,readingTime:"1.4m",title:"Map 数据结构",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/0490bf/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"新增关键字",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/06.新增关键字.md",wordsCount:680,readingTime:"3m",title:"新增关键字",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/852835/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"解构赋值",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/07.解构赋值.md",wordsCount:294,readingTime:"1.4m",title:"解构赋值",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/42f9bb/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"模板字符串",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/08.模板字符串.md",wordsCount:181,readingTime:"1",title:"模板字符串",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/4211fe/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"对象的简化写法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/09.对象的简化写法.md",wordsCount:257,readingTime:"1.1m",title:"对象的简化写法",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/19fa1b/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"箭头函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/10.箭头函数.md",wordsCount:924,readingTime:"4.2m",title:"箭头函数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/03f6ce/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"允许给函数形参设置默认值",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/11.允许给函数形参设置默认值.md",wordsCount:391,readingTime:"1.8m",title:"允许给函数形参设置默认值",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/21b19d/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"rest 参数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/12.rest 参数.md",wordsCount:264,readingTime:"1.1m",title:"rest 参数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/09f22c/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"扩展运算符",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/13.扩展运算符.md",wordsCount:436,readingTime:"1.9m",title:"扩展运算符",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/cce582/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"迭代器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/14.迭代器.md",wordsCount:882,readingTime:"3.9m",title:"迭代器",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/5d5497/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"生成器函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/15.生成器函数.md",wordsCount:578,readingTime:"2.7m",title:"生成器函数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/56c527/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"Promise 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/16.Promise 对象.md",wordsCount:33,readingTime:"1",title:"Promise 对象",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/ccc78e/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"class 类",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/17.class 类.md",wordsCount:34,readingTime:"1",title:"class 类",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/9426cc/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"模块化开发",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/04.ES6/18.模块化开发.md",wordsCount:34,readingTime:"1",title:"模块化开发",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/4508e1/",categories:["《前端》笔记","JS","ES6"],tags:[null]},{name:"指数操作符",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/05.ES7/01.指数操作符.md",wordsCount:125,readingTime:"1",title:"指数操作符",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/38cec0/",categories:["《前端》笔记","JS","ES7"],tags:[null]},{name:"async & await 异步函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/06.ES8/01.async & await 异步函数.md",wordsCount:39,readingTime:"1",title:"async & await 异步函数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/491e5c/",categories:["《前端》笔记","JS","ES8"],tags:[null]},{name:"剩余参数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/07.ES9/01.剩余参数.md",wordsCount:361,readingTime:"1.7m",title:"剩余参数",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/103edd/",categories:["《前端》笔记","JS","ES9"],tags:[null]},{name:"正则扩展-命名捕获分组",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/07.ES9/02.正则扩展-命名捕获分组.md",wordsCount:459,readingTime:"2.1m",title:"正则扩展.命名捕获分组",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/72fe75/",categories:["《前端》笔记","JS","ES9"],tags:[null]},{name:"正则扩展-正向断言 与 方向断言",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/07.ES9/03.正则扩展-正向断言 与 方向断言.md",wordsCount:250,readingTime:"1m",title:"正则扩展.正向断言 与 方向断言",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/a55b0e/",categories:["《前端》笔记","JS","ES9"],tags:[null]},{name:"正则扩展-dotAll模式（搞不懂，重新学）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/07.ES9/04.正则扩展-dotAll模式（搞不懂，重新学）.md",wordsCount:287,readingTime:"1.3m",title:"正则扩展.dotAll模式（搞不懂，重新学）",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/452524/",categories:["《前端》笔记","JS","ES9"],tags:[null]},{name:"Symbol 方法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/08.ES10/01.Symbol 方法.md",wordsCount:119,readingTime:"1",title:"Symbol 方法",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/ae5e45/",categories:["《前端》笔记","JS","ES10"],tags:[null]},{name:"私有属性",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/09.ES11/01.私有属性.md",wordsCount:377,readingTime:"1.6m",title:"私有属性",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/7d3e07/",categories:["《前端》笔记","JS","ES11"],tags:[null]},{name:"Promise-allSettled",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/09.ES11/02.Promise-allSettled.md",wordsCount:38,readingTime:"1",title:"Promise.allSettled",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/c68a1c/",categories:["《前端》笔记","JS","ES11"],tags:[null]},{name:"可选链操作符",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/09.ES11/04.可选链操作符.md",wordsCount:347,readingTime:"1.5m",title:"可选链操作符",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/3502f2/",categories:["《前端》笔记","JS","ES11"],tags:[null]},{name:"动态 inport",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/09.ES11/05.动态 inport.md",wordsCount:150,readingTime:"1",title:"动态 inport",date:"2022-06-26T23:30:25.000Z",permalink:"/pages/71d197/",categories:["《前端》笔记《基础知识》","JS","ES11"],tags:[null]},{name:"BigInt （大整数） 数据结构",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/09.ES11/06.BigInt （大整数） 数据结构.md",wordsCount:432,readingTime:"1.8m",title:"BigInt （大整数） 数据结构",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/297c44/",categories:["《前端》笔记","JS","ES11"],tags:[null]},{name:"globalThis（全局 this）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/03.JS/09.ES11/07.globalThis（全局 this）.md",wordsCount:146,readingTime:"1",title:"globalThis（全局 this）",date:"2022-06-26T18:27:05.000Z",permalink:"/pages/072adc/",categories:["《前端》笔记","JS","ES11"],tags:[null]},{name:"WebAPI",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/01.WebAPI.md",wordsCount:116,readingTime:"1",title:"WebAPI",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/dbf0ce/",tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"},categories:["WebAPI"]},{name:"DOM",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/02.DOM.md",wordsCount:153,readingTime:"1",title:"DOM",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/a365d4/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"获取页面元素",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/03.获取页面元素.md",wordsCount:"1k",readingTime:"4.1m",title:"获取页面元素",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/5a42b6/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"元素操作",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/04.元素操作.md",wordsCount:396,readingTime:"1.6m",title:"元素操作",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/1b21a7/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"动态创建元素的三种方法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/05.动态创建元素的三种方法.md",wordsCount:364,readingTime:"1.5m",title:"动态创建元素的三种方法",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/cfbb1b/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"自定义属性",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/06.自定义属性.md",wordsCount:250,readingTime:"1",title:"自定义属性",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/7f30b8/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"增删改查",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/07.增删改查.md",wordsCount:131,readingTime:"1",title:"增删改查",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/1ffde2/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"排他思想",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/08.排他思想.md",wordsCount:256,readingTime:"1m",title:"排他思想",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/f62c41/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"事件类型（BOM：浏览器对象模型）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/09.事件类型（BOM：浏览器对象模型）.md",wordsCount:212,readingTime:"1",title:"1.事件类型（BOM：浏览器对象模型）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/ee6818/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"事件类型（DOM：文档对象模型）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/10.事件类型（DOM：文档对象模型）.md",wordsCount:331,readingTime:"1.2m",title:"事件类型（DOM：文档对象模型）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/a00402/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"事件操作",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/11.事件操作.md",wordsCount:484,readingTime:"2m",title:"事件操作",date:"2022-06-26T23:30:25.000Z",permalink:"/pages/beb383/",categories:["《前端》笔记《基础知识》","WebAPI"],tags:[null]},{name:"事件流",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/12.事件流.md",wordsCount:175,readingTime:"1",title:"事件流",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/b5ccb8/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"事件对象（BOM：浏览器对象模型）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/13.事件对象（BOM：浏览器对象模型）.md",wordsCount:83,readingTime:"1",title:"1.事件对象（BOM：浏览器对象模型）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/d90cd6/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"事件对象（DOM：文档对象模型）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/14.事件对象（DOM：文档对象模型）.md",wordsCount:417,readingTime:"1.8m",title:"事件对象（DOM：文档对象模型）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/956791/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"事件委拖",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/15.事件委拖.md",wordsCount:204,readingTime:"1",title:"事件委拖",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/007db3/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"BOM",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/16.BOM.md",wordsCount:103,readingTime:"1",title:"BOM",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/174302/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"定时器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/17.定时器.md",wordsCount:182,readingTime:"1",title:"定时器",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/5f6ace/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"this指向问题",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/18.this指向问题.md",wordsCount:126,readingTime:"1",title:"this指向问题",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/20efbf/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"单线程（同步） 与 多线程（异步）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/19.单线程（同步） 与 多线程（异步）.md",wordsCount:408,readingTime:"1.5m",title:"单线程（同步） 与 多线程（异步）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/6585fd/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"location 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/20.location 对象.md",wordsCount:369,readingTime:"1.6m",title:"location 对象",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/22590b/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"navigator 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/21.navigator 对象.md",wordsCount:131,readingTime:"1",title:"navigator 对象",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/366a50/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"history 对象(上）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/22.history 对象(上）.md",wordsCount:134,readingTime:"1",title:"history 对象(上）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/b8f8fe/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"history 对象(下）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/23.history 对象(下）.md",wordsCount:96,readingTime:"1",title:"history 对象(下）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/626f8b/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:" offset 系列",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/24. offset 系列.md",wordsCount:426,readingTime:"1.8m",title:"offset 系列",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/bb0314/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"client 系列",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/25.client 系列.md",wordsCount:171,readingTime:"1",title:"client 系列",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/ef677b/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"scroll 系列 和 page 系列",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/26.scroll 系列 和 page 系列.md",wordsCount:397,readingTime:"1.5m",title:"scroll 系列 和 page 系列",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/95b209/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"常用开发插件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/27.常用开发插件.md",wordsCount:302,readingTime:"1.2m",title:"常用开发插件",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/78c019/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"常用开发框架",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/28.常用开发框架.md",wordsCount:142,readingTime:"1",title:"常用开发框架",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/a71be6/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"本地存储（上）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/29.本地存储（上）.md",wordsCount:266,readingTime:"1.2m",title:"本地存储（上）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/004d4e/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"本地存储（下）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/30.本地存储（下）.md",wordsCount:247,readingTime:"1.1m",title:"本地存储（下）",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/4a131d/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"服务端存储",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/31.服务端存储.md",wordsCount:87,readingTime:"1",title:"服务端存储",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/a6ca72/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"封装 Storage",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/04.WebAPI/32.封装 Storage.md",wordsCount:235,readingTime:"1.1m",title:"封装 Storage",date:"2022-06-25T17:45:19.000Z",permalink:"/pages/42a459/",categories:["05、WebAPI"],tags:[null],author:{name:"白开水-先生",link:"https://github.com/白开水-先生"}},{name:"视口标签",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/01.视口标签.md",wordsCount:188,readingTime:"1",title:"视口标签",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/063716/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"二倍图",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/02.二倍图.md",wordsCount:120,readingTime:"1",title:"二倍图",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/da4b10/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"移动端 开发方案",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/03.移动端 开发方案.md",wordsCount:100,readingTime:"1",title:"移动端 开发方案",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/870d5c/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"移动端 技术选型",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/04.移动端 技术选型.md",wordsCount:133,readingTime:"1",title:"移动端 技术选型",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/287bfb/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"flex 弹性布局（上）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/05.flex 弹性布局（上）.md",wordsCount:693,readingTime:"3m",title:"flex 弹性布局（上）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/047774/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"flex 弹性布局（下）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/06.flex 弹性布局（下）.md",wordsCount:363,readingTime:"1.7m",title:"flex 弹性布局（下）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/b3bc54/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"less",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/07.less.md",wordsCount:307,readingTime:"1.2m",title:"less",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/afc4fa/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"rem 适配布局 和 媒体查询",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/08.rem 适配布局 和 媒体查询.md",wordsCount:408,readingTime:"1.6m",title:"rem 适配布局 和 媒体查询",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/801c60/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"rem 适配布局（技术方案一）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/09.rem 适配布局（技术方案一）.md",wordsCount:378,readingTime:"1.8m",title:"rem 适配布局（技术方案一）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/d7069a/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"rem 适配布局（技术方案一）案例",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/10.rem 适配布局（技术方案一）案例.md",wordsCount:379,readingTime:"2.1m",title:"rem 适配布局（技术方案一）案例",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/f6af9f/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"px 转换 rem 插件（cssrem）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/11.px 转换 rem 插件（cssrem）.md",wordsCount:95,readingTime:"1",title:"px 转换 rem 插件（cssrem）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/0c16c8/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"rem 适配布局（技术方案二）（推荐）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/12.rem 适配布局（技术方案二）（推荐）.md",wordsCount:169,readingTime:"1",title:"rem 适配布局（技术方案二）（推荐）",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/91ff9f/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"rem 适配布局（技术方案二）案例",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/13.rem 适配布局（技术方案二）案例.md",wordsCount:152,readingTime:"1",title:"rem 适配布局（技术方案二）案例",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/6ce11c/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"响应式布局",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/14.响应式布局.md",wordsCount:280,readingTime:"1.1m",title:"响应式布局",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/80324a/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"响应式布局 案例",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/15.响应式布局 案例.md",wordsCount:"1.3k",readingTime:"6.3m",title:"响应式布局 案例",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/01c35d/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"Bootstrap 框架",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/05.移动 web 开发/16.Bootstrap 框架.md",wordsCount:"1.4k",readingTime:"6.6m",title:"Bootstrap 框架",date:"2022-06-27T13:42:15.000Z",permalink:"/pages/8a06e4/",categories:["《前端》笔记《其它》","移动 web 开发"],tags:[null]},{name:"介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/01.介绍.md",wordsCount:907,readingTime:"3.2m",title:"介绍",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/a9419c/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"环境搭建",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/02.环境搭建.md",wordsCount:441,readingTime:"1.7m",title:"环境搭建",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/25f752/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"项目初始化",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/03.项目初始化.md",wordsCount:603,readingTime:"2.3m",title:"项目初始化",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/8c1af4/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"配置文件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/05.配置文件.md",wordsCount:731,readingTime:"2.8m",title:"配置文件",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/e97103/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"tabBar 功能",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/06.tabBar 功能.md",wordsCount:359,readingTime:"1.5m",title:"tabBar 功能",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ba1bb6/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"模板语法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/07.模板语法.md",wordsCount:692,readingTime:"3m",title:"模板语法",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/501d2d/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"事件绑定",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/08.事件绑定.md",wordsCount:593,readingTime:"2.4m",title:"事件绑定",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/99fc36/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"协同工作",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/09.协同工作.md",wordsCount:549,readingTime:"1.9m",title:"协同工作",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/dd0f12/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"样式文件（wxss）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/10.样式文件（wxss）.md",wordsCount:482,readingTime:"1.8m",title:"样式文件（.wxss）",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/2726bb/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"内置组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/11.内置组件.md",wordsCount:"2.1k",readingTime:"8.5m",title:"内置组件",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/eaa6ce/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/12.自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据.md",wordsCount:"2.2k",readingTime:"8.9m",title:"自定义组件、父组件（页面）向子组件传递数据、子组件向父组件传递数据",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/f5d4e9/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"应用生命周期",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/13.应用生命周期.md",wordsCount:338,readingTime:"1.4m",title:"应用生命周期",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ca30ce/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"页面生命周期",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/14.页面生命周期.md",wordsCount:401,readingTime:"1.7m",title:"页面生命周期",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/44b3cc/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"组件生命周期",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/15.组件生命周期.md",wordsCount:305,readingTime:"1.1m",title:"组件生命周期",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/2010a7/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"组件所在页面的生命周期",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/16.组件所在页面的生命周期.md",wordsCount:149,readingTime:"1",title:"组件所在页面的生命周期",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/648c7a/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"全局共享数据（状态管理）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/17.全局共享数据（状态管理）.md",wordsCount:616,readingTime:"2.8m",title:"全局共享数据（状态管理）",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/342bec/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"uni-ui",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/18.uni-ui.md",wordsCount:316,readingTime:"1.3m",title:"uni-ui",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/724c77/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"uni-api",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/19.uni-api.md",wordsCount:113,readingTime:"1",title:"uni-api",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/f9eeed/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"内置 API",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/20.内置 API.md",wordsCount:902,readingTime:"3.6m",title:"内置 API",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ceab1f/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"网络数据请求",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/21.网络数据请求.md",wordsCount:512,readingTime:"1.9m",title:"网络数据请求",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ac0a66/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"封装请求",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/22.封装请求.md",wordsCount:683,readingTime:"3.1m",title:"封装请求",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/ec1845/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"页面导航",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/23.页面导航.md",wordsCount:367,readingTime:"1.4m",title:"页面导航",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/f8bfed/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"wxs 脚本",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/24.wxs 脚本.md",wordsCount:417,readingTime:"1.7m",title:"wxs 脚本",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/89dd13/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"npm",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/25.npm.md",wordsCount:458,readingTime:"1.8m",title:"npm",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/243d96/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"分包",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/26.分包.md",wordsCount:782,readingTime:"2.9m",title:"分包",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/9376d8/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"自定义字体",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/27.自定义字体.md",wordsCount:197,readingTime:"1",title:"自定义字体",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/0bb64d/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"缓存",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/28.缓存.md",wordsCount:365,readingTime:"1.4m",title:"缓存",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/f4a219/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"微信开发者工具使用技巧",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/29.微信开发者工具使用技巧.md",wordsCount:96,readingTime:"1",title:"微信开发者工具使用技巧",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/bd9b78/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"sitemap 配置项",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《基础知识》/06.原生微信小程序/30.sitemap 配置项.md",wordsCount:197,readingTime:"1",title:"sitemap 配置项",date:"2022-06-27T14:06:16.000Z",permalink:"/pages/929e62/",categories:["《前端》笔记《基础知识》","原生微信小程序"],tags:[null]},{name:"JQuery 介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/01.JQuery 介绍.md",wordsCount:98,readingTime:"1",title:"JQuery 介绍",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/c17dd7/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"基础",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/02.基础.md",wordsCount:212,readingTime:"1",title:"基础",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/1c8242/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"选择器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/03.选择器.md",wordsCount:84,readingTime:"1",title:"选择器",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/7574fa/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"隐式迭代",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/04.隐式迭代.md",wordsCount:70,readingTime:"1",title:"隐式迭代",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/7395d0/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"筛选选择器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/05.筛选选择器.md",wordsCount:109,readingTime:"1",title:"筛选选择器",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/06defd/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"筛选方法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/06.筛选方法.md",wordsCount:295,readingTime:"1.2m",title:"筛选方法",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/4d7618/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"排他思想",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/07.排他思想.md",wordsCount:95,readingTime:"1",title:"排他思想",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/d8b0cc/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"样式操作",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/08.样式操作.md",wordsCount:121,readingTime:"1",title:"样式操作",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/2107dd/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"类操作",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/09.类操作.md",wordsCount:114,readingTime:"1",title:"类操作",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/c3cfb4/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"动画",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/10.动画.md",wordsCount:971,readingTime:"4.5m",title:"动画",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e9ff3d/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"事件切换",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/11.事件切换.md",wordsCount:403,readingTime:"2.1m",title:"事件切换",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/417a58/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"停止动画排队",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/12.停止动画排队.md",wordsCount:307,readingTime:"1.7m",title:"停止动画排队",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/2c7709/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"属性操作",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/13.属性操作.md",wordsCount:323,readingTime:"1.4m",title:"属性操作",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/0e200a/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"（元素内容、表单值）操作",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/14.（元素内容、表单值）操作.md",wordsCount:267,readingTime:"1.1m",title:"（元素内容、表单值）操作",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/4a47f8/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"遍历元素",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/15.遍历元素.md",wordsCount:367,readingTime:"1.8m",title:"遍历元素",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/3c206b/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"操作元素",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/16.操作元素.md",wordsCount:449,readingTime:"1.9m",title:"操作元素",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/30ef11/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"操作元素尺寸",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/17.操作元素尺寸.md",wordsCount:231,readingTime:"1m",title:"操作元素尺寸",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e5c92d/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"操作元素位置",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/18.操作元素位置.md",wordsCount:386,readingTime:"1.7m",title:"操作元素位置",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/5b6383/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"事件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/19.事件.md",wordsCount:665,readingTime:"3m",title:"事件",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/d2cbce/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"事件自动触发",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/20.事件自动触发.md",wordsCount:211,readingTime:"1",title:"事件自动触发",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/81b206/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"事件对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/21.事件对象.md",wordsCount:158,readingTime:"1",title:"事件对象",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/dff061/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"对象合并",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/22.对象合并.md",wordsCount:317,readingTime:"1.3m",title:"对象合并",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/341517/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"多库共存",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/23.多库共存.md",wordsCount:156,readingTime:"1",title:"多库共存",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e5f77f/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"插件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/01.JQuery/24.插件.md",wordsCount:42,readingTime:"1",title:"插件",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/a62464/",categories:["《前端》笔记《库》","JQuery"],tags:[null]},{name:"介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/01.介绍.md",wordsCount:259,readingTime:"1m",title:"介绍",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/960d46/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"使用步骤",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/02.使用步骤.md",wordsCount:426,readingTime:"2m",title:"使用步骤",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/c5d318/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"通用配置",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/03.通用配置.md",wordsCount:745,readingTime:"3m",title:"通用配置",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/ee2b65/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"直角坐标系中的通用配置项",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/04.直角坐标系中的通用配置项.md",wordsCount:400,readingTime:"1.8m",title:"直角坐标系中的通用配置项",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/247f53/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"柱状图",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/05.柱状图.md",wordsCount:216,readingTime:"1",title:"柱状图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/265663/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"折线图",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/06.折线图.md",wordsCount:292,readingTime:"1.2m",title:"折线图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/d9763d/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"散点图",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/07.散点图.md",wordsCount:"4.4k",readingTime:"26.5m",title:"散点图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/b8894e/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"饼图",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/08.饼图.md",wordsCount:244,readingTime:"1m",title:"饼图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/b963e8/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"地图",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/09.地图.md",wordsCount:"1.1k",readingTime:"4.9m",title:"地图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/294d22/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"雷达图",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/10.雷达图.md",wordsCount:221,readingTime:"1",title:"雷达图",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e855fb/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"仪表盘",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/11.仪表盘.md",wordsCount:235,readingTime:"1.1m",title:"仪表盘",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/cbcf49/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"主题",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/12.主题.md",wordsCount:350,readingTime:"1.6m",title:"主题",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/23e617/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"调色盘",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/13.调色盘.md",wordsCount:150,readingTime:"1",title:"调色盘",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/3026e7/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"颜色渐变",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/14.颜色渐变.md",wordsCount:228,readingTime:"1.2m",title:"颜色渐变",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/be046a/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"样式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/15.样式.md",wordsCount:226,readingTime:"1.1m",title:"样式",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/fe0229/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"自适应",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/16.自适应.md",wordsCount:248,readingTime:"1.2m",title:"自适应",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/93d13a/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"加载动画",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/17.加载动画.md",wordsCount:327,readingTime:"1.7m",title:"加载动画",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/22face/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"增量动画",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/18.增量动画.md",wordsCount:282,readingTime:"1.4m",title:"增量动画",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/288120/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"动画配置项",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/19.动画配置项.md",wordsCount:268,readingTime:"1.3m",title:"动画配置项",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/f93ec3/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"交互API-全局 echarts 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/20.交互API-全局 echarts 对象.md",wordsCount:372,readingTime:"1.8m",title:"交互API-全局 echarts 对象",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/463c49/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"交互API-echartsInstance 对象",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/21.交互API-echartsInstance 对象.md",wordsCount:475,readingTime:"2.3m",title:"交互API-echartsInstance 对象",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/60605e/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"koa2",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/02.EChart/22.koa2.md",wordsCount:536,readingTime:"2.2m",title:"koa2",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/e17a64/",categories:["《前端》笔记《库》","EChart"],tags:[null]},{name:"介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/03.Element-ui/01.介绍.md",wordsCount:794,readingTime:"3.3m",title:"介绍",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/cc62b5/",categories:["《前端》笔记《库》","Element-ui"],tags:[null]},{name:"栅格布局",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/03.Element-ui/02.栅格布局.md",wordsCount:173,readingTime:"1",title:"栅格布局",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/290baf/",categories:["《前端》笔记《库》","Element-ui"],tags:[null]},{name:"组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/03.Element-ui/03.组件.md",wordsCount:"6.7k",readingTime:"30.1m",title:"组件",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/3e78f3/",categories:["《前端》笔记《库》","Element-ui"],tags:[null]},{name:"编程式组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《库》/03.Element-ui/04.编程式组件.md",wordsCount:66,readingTime:"1",title:"编程式组件",date:"2022-06-27T11:32:08.000Z",permalink:"/pages/5d424a/",categories:["《前端》笔记《库》","Element-ui"],tags:[null]},{name:"介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/00.介绍.md",wordsCount:850,readingTime:"3.2m",title:"介绍",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/9913d3/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"项目初始化",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/01.项目初始化.md",wordsCount:"3k",readingTime:"14.6m",title:"项目初始化",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ee7afe/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"使用步骤",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/02.使用步骤.md",wordsCount:216,readingTime:"1m",title:"使用步骤",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7f9266/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"动态添加样式",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/03.动态添加样式.md",wordsCount:247,readingTime:"1.2m",title:"动态添加样式",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/5202a1/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"过滤器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/04.过滤器.md",wordsCount:522,readingTime:"2.3m",title:"过滤器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ae2ef8/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"侦听器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/05.侦听器.md",wordsCount:503,readingTime:"2.3m",title:"侦听器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ee2297/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"计算属性",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/06.计算属性.md",wordsCount:734,readingTime:"3.3m",title:"计算属性",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/4e87f6/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"axios 发送请求",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/07.axios 发送请求.md",wordsCount:384,readingTime:"1.8m",title:"axios 发送请求",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/37b216/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"axios 发送请求 简写",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/08.axios 发送请求 简写.md",wordsCount:949,readingTime:"4.3m",title:"axios 发送请求 简写",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c0b227/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"axios 全局配置",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/09.axios 全局配置.md",wordsCount:174,readingTime:"1",title:"axios 全局配置",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6d2a87/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"axios 拦截器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/10.axios 拦截器.md",wordsCount:729,readingTime:"3.1m",title:"axios 拦截器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/36b5ae/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"proxy 跨域代理",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/11.proxy 跨域代理.md",wordsCount:482,readingTime:"1.9m",title:"proxy 跨域代理",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/8e1497/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"SPA",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/12.SPA.md",wordsCount:346,readingTime:"1.2m",title:"SPA",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/dd342d/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"vue-cli（脚手架）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/13.vue-cli（脚手架）.md",wordsCount:"1.4k",readingTime:"5.5m",title:"vue-cli（脚手架）",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/f1a7da/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/14.组件.md",wordsCount:"1.2k",readingTime:"5.1m",title:"组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7d1bb2/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"自定义事件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/15.自定义事件.md",wordsCount:251,readingTime:"1.1m",title:"自定义事件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/bc7b7d/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"组件的生命周期 & 钩子函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/16.组件的生命周期 & 钩子函数.md",wordsCount:600,readingTime:"2.4m",title:"组件的生命周期 & 钩子函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/a01ff5/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"组件之间的数据共享",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/17.组件之间的数据共享.md",wordsCount:38,readingTime:"1",title:"组件之间的数据共享",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/0c319a/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"获取 DOM 元素 或 组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/18.获取 DOM 元素 或 组件.md",wordsCount:709,readingTime:"3.1m",title:"获取 DOM 元素 或 组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/29b80e/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"props 高级用法",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/19.props 高级用法.md",wordsCount:431,readingTime:"1.7m",title:"props 高级用法",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c39f39/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"vuex-上",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/20.vuex-上.md",wordsCount:"1.3k",readingTime:"6.2m",title:"vuex（上）",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/65ee94/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"vuex-下",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/21.vuex-下.md",wordsCount:299,readingTime:"1.3m",title:"vuex（下）",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/27c1f4/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"动态组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/22.动态组件.md",wordsCount:424,readingTime:"1.6m",title:"动态组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/47f08e/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"组件的名称",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/23.组件的名称.md",wordsCount:93,readingTime:"1",title:"组件的名称",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6bcf69/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"封装组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/24.封装组件.md",wordsCount:245,readingTime:"1.2m",title:"封装组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c09a2f/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"插槽",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/25.插槽.md",wordsCount:804,readingTime:"3.6m",title:"插槽",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/effd84/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"自定义指令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/26.自定义指令.md",wordsCount:687,readingTime:"2.8m",title:"自定义指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/4c6157/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"前端路由",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/27.前端路由.md",wordsCount:334,readingTime:"1.3m",title:"前端路由",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/71ecc1/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"vue-router 3 版本 第三方库",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/28.vue-router 3 版本 第三方库.md",wordsCount:"1.4k",readingTime:"6.1m",title:"vue.router 3.x版本 第三方库",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/871156/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"页面导航",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/29.页面导航.md",wordsCount:217,readingTime:"1",title:"页面导航",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/5e7df0/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"导航守卫",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/30.导航守卫.md",wordsCount:33,readingTime:"1",title:"导航守卫",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/b55487/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"命名路由",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/31.命名路由.md",wordsCount:276,readingTime:"1.1m",title:"命名路由",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/450ed8/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"组件库",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/32.组件库.md",wordsCount:201,readingTime:"1",title:"组件库",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/74b13b/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"Vant",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/34.Vant.md",wordsCount:286,readingTime:"1.3m",title:"Vant",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/953c13/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"事件修饰符",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/35.事件修饰符.md",wordsCount:57,readingTime:"1",title:"事件修饰符",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/204695/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"打包上线",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/36.打包上线.md",wordsCount:"1.1k",readingTime:"4.8m",title:"打包上线",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7482ad/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"事件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/37.事件.md",wordsCount:50,readingTime:"1",title:"事件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fecc7b/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"内容渲染 指令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/38.内容渲染 指令.md",wordsCount:291,readingTime:"1.3m",title:"内容渲染 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fab397/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"属性绑定 指令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/39.属性绑定 指令.md",wordsCount:185,readingTime:"1",title:"属性绑定 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/8a9dd8/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"事件绑定 指令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/40.事件绑定 指令.md",wordsCount:486,readingTime:"2.1m",title:"事件绑定 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c1b76b/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"双向绑定 指令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/41.双向绑定 指令.md",wordsCount:312,readingTime:"1.5m",title:"双向绑定 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/823352/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"条件渲染 指令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/42.条件渲染 指令.md",wordsCount:315,readingTime:"1.4m",title:"条件渲染 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/3f52b2/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"列表渲染 指令",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/43.列表渲染 指令.md",wordsCount:323,readingTime:"1.5m",title:"列表渲染 指令",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ff18e3/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"登录",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/44.登录.md",wordsCount:393,readingTime:"1.7m",title:"登录",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/e590af/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"权限控制-进度条",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/01.vue2/45.权限控制-进度条.md",wordsCount:222,readingTime:"1m",title:"权限控制.进度条",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fcfbbb/",categories:["《前端》笔记《框架》","1.vue2"],tags:[null]},{name:"介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/00.介绍.md",wordsCount:201,readingTime:"1",title:"介绍",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/48e461/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"项目初始化",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/01.项目初始化.md",wordsCount:"3.5k",readingTime:"17.3m",title:"项目初始化",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/10bec1/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"宏任务 & 微任务",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/02.宏任务 & 微任务.md",wordsCount:255,readingTime:"1.1m",title:"宏任务 & 微任务",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/f91db7/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"vite（脚手架工具）",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/03.vite（脚手架工具）.md",wordsCount:460,readingTime:"1.8m",title:"vite（脚手架工具）",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/623974/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"API 接口案例",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/04.API 接口案例.md",wordsCount:576,readingTime:"2.6m",title:"API 接口案例",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/37b13e/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"过滤器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/05.过滤器.md",wordsCount:72,readingTime:"1",title:"过滤器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/d3846a/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/06.组件.md",wordsCount:101,readingTime:"1",title:"组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ad934f/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"深度选择器",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/07.深度选择器.md",wordsCount:43,readingTime:"1",title:"深度选择器",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/2eb382/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"axios 全局配置",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/08.axios 全局配置.md",wordsCount:177,readingTime:"1",title:"axios 全局配置",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7d45b6/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"vue-router 4版本 第三方库",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/09.vue-router 4版本 第三方库.md",wordsCount:339,readingTime:"1.5m",title:"vue-router 4.x版本 第三方库",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/b7275b/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"组合式API",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/10.组合式API.md",wordsCount:470,readingTime:"2.1m",title:"组合式API",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6174e6/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"组件的生命周期 & 钩子函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/11.组件的生命周期 & 钩子函数.md",wordsCount:326,readingTime:"1.3m",title:"组件的生命周期 & 钩子函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/8c2d46/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"reactive 函数 & ref 函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/12.reactive 函数 & ref 函数.md",wordsCount:370,readingTime:"1.6m",title:"reactive 函数 & ref 函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c8896f/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"toRef 函数 & toRefs 函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/13.toRef 函数 & toRefs 函数.md",wordsCount:202,readingTime:"1",title:"toRef 函数 & toRefs 函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/1e6c85/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"computed 函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/14.computed 函数.md",wordsCount:308,readingTime:"1.3m",title:"computed 函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fd5957/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"watch 函数",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/15.watch 函数.md",wordsCount:338,readingTime:"1.5m",title:"watch 函数",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/bf1d98/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"ref 引用",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/16.ref 引用.md",wordsCount:255,readingTime:"1.1m",title:"ref 引用",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/fce363/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"组件之间的数据共享",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/17.组件之间的数据共享.md",wordsCount:"1.2k",readingTime:"5.3m",title:"组件之间的数据共享",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/1e42a3/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"v-model 语法糖",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/18.v-model 语法糖.md",wordsCount:228,readingTime:"1",title:"v-model 语法糖",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6bcbc0/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"混入 (mixin) ",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/02.vue3/19.混入 (mixin) .md",wordsCount:538,readingTime:"2.3m",title:"混入 (mixin)",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/d6e9fb/",categories:["《前端》笔记《框架》","vue3"],tags:[null]},{name:"介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/03.vue-element-admin/00.介绍.md",wordsCount:62,readingTime:"1",title:"介绍",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/7fd07c/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null]},{name:"项目初始化",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/03.vue-element-admin/01.项目初始化.md",wordsCount:"2.9k",readingTime:"14.5m",title:"项目初始化",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/796f85/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null]},{name:"目录结构",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/03.vue-element-admin/02.目录结构.md",wordsCount:270,readingTime:"1.1m",title:"目录结构",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/39d56d/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null]},{name:"事件修饰符",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/03.vue-element-admin/03.事件修饰符.md",wordsCount:253,readingTime:"1m",title:"事件修饰符",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/bc059f/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null]},{name:"静态路由、动态路由",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/03.vue-element-admin/04.静态路由、动态路由.md",wordsCount:115,readingTime:"1",title:"静态路由、动态路由",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/6503ff/",categories:["《前端》笔记《框架》","vue-element-admin"],tags:[null]},{name:"介绍",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/04.uni-app/00.介绍.md",wordsCount:"1.6k",readingTime:"6.4m",title:"介绍",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/e24c11/",categories:["《前端》笔记《框架》","uni-app"],tags:[null]},{name:"自定义组件",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/04.uni-app/01.自定义组件.md",wordsCount:208,readingTime:"1",title:"自定义组件",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/ddd057/",categories:["《前端》笔记《框架》","uni-app"],tags:[null]},{name:"uni-ui",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/04.uni-app/02.uni-ui.md",wordsCount:"1.8k",readingTime:"7.8m",title:"uni-ui",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/eb9fff/",categories:["《前端》笔记《框架》","uni-app"],tags:[null]},{name:"vuex",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/04.uni-app/03.vuex.md",wordsCount:"1.3k",readingTime:"5.4m",title:"vuex",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/bdf18b/",categories:["《前端》笔记《框架》","uni-app"],tags:[null]},{name:"项目初始化",filePath:"/Users/zhengcunrui/Desktop/bks-vuepress/docs/《前端》笔记《框架》/04.uni-app/04.项目初始化.md",wordsCount:621,readingTime:"2.4m",title:"项目初始化",date:"2022-06-27T11:01:39.000Z",permalink:"/pages/c382fc/",categories:["《前端》笔记《框架》","uni-app"],tags:[null]}],mdFileCountType:"archives",totalWords:"archives",moutedEvent:".tags-wrapper",indexIteration:2500,pageIteration:2500},indexImg:{navColor:1,switchNavColor:!1,bgTimeColor:!0,bgTimeColorArray:["transparent","rgba(255, 148, 48, .2)","rgba(0, 0, 0, .3)","rgba(0, 0, 0, .5)"],descFade:!0,desc:["积跬步以至千里，致敬每个爱学习的你 —— 来自 Evan Xu","这一生波澜壮阔或是不惊都没问题 —— 来自 Weibw"],descFontSize:"1.4rem",descFadeInTime:200,descFadeOutTime:100,descNextTime:800,bubble:!1,bubblePosition:0,bubbleNum:200},author:{name:"白开水",link:"https://xingcxb.github.io/"},blogger:{avatar:"https://symbol-node.oss-cn-shanghai.aliyuncs.com/blog/basic/Avatar.png",name:"白开水-先生",slogan:"知行合一"},social:{icons:[{iconClass:"icon-youjian",title:"发邮件",link:"mailto:xingcxb@qq.com"},{iconClass:"icon-github",title:"GitHub",link:"https://github.com/xingcxb"},{iconClass:"icon-erji",title:"听音乐",link:"https://music.163.com/#/playlist?id=503418750"}]},footer:{createYear:2022,copyrightInfo:'白开水 | 白开水-先生<br> <a href="http://beian.miit.gov.cn/" target="_blank"></a> icon by <a target="_blank" href="https://icons8.com">Icons8</a>'}},locales:{"/":{lang:"zh-CN",title:"白开水-先生",description:"无善无恶心之体，有善有恶意之动，知善知恶是良知，为善去恶是格物。",path:"/"}}},Qs=(t(83),t(144)),Xs=(t(398),t(159),t(147),t(225)),Ys=t(226),Ks=(t(250),t(252),t(43));var nl={computed:{$filterPosts:function(){return this.$site.pages.filter((function(n){var e=n.frontmatter,t=e.pageComponent,a=e.article,r=e.home;return!(t||!1===a||!0===r)}))},$sortPosts:function(){return(n=this.$filterPosts).sort((function(n,e){var t=n.frontmatter.sticky,a=e.frontmatter.sticky;return t&&a?t==a?Object(Ks.a)(n,e):t-a:t&&!a?-1:!t&&a?1:Object(Ks.a)(n,e)})),n;var n},$sortPostsByDate:function(){return(n=this.$filterPosts).sort((function(n,e){return Object(Ks.a)(n,e)})),n;var n},$groupPosts:function(){return function(n){for(var e={},t={},a=function(a,r){var i=n[a].frontmatter,o=i.categories,s=i.tags;"array"===Object(Ks.n)(o)&&o.forEach((function(t){t&&(e[t]||(e[t]=[]),e[t].push(n[a]))})),"array"===Object(Ks.n)(s)&&s.forEach((function(e){e&&(t[e]||(t[e]=[]),t[e].push(n[a]))}))},r=0,i=n.length;r<i;r++)a(r);return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags:function(){return function(n){var e=[],t=[];for(var a in n.categories)e.push({key:a,length:n.categories[a].length});for(var r in n.tags)t.push({key:r,length:n.tags[r].length});return{categories:e,tags:t}}(this.$groupPosts)}}};_r.component(Xs.default),_r.component(Ys.default);function el(n){return n.toString().padStart(2,"0")}t(408);_r.component("Aplayer",(function(){return t.e(23).then(t.bind(null,581))})),_r.component("BlockToggle",(function(){return Promise.all([t.e(0),t.e(6)]).then(t.bind(null,582))})),_r.component("Bubble",(function(){return Promise.all([t.e(0),t.e(7)]).then(t.bind(null,583))})),_r.component("Card",(function(){return Promise.all([t.e(0),t.e(20)]).then(t.bind(null,584))})),_r.component("IndexBigImg",(function(){return Promise.all([t.e(0),t.e(4)]).then(t.bind(null,585))})),_r.component("LastReadingPopup",(function(){return Promise.resolve().then(t.bind(null,144))})),_r.component("Fantasy",(function(){return Promise.all([t.e(0),t.e(9)]).then(t.bind(null,586))})),_r.component("GlobalTip",(function(){return Promise.all([t.e(0),t.e(8)]).then(t.bind(null,587))})),_r.component("SidebarReverse",(function(){return t.e(24).then(t.bind(null,588))})),_r.component("WebInfo",(function(){return Promise.all([t.e(0),t.e(3)]).then(t.bind(null,577))})),_r.component("Badge",(function(){return Promise.all([t.e(0),t.e(21)]).then(t.bind(null,953))})),_r.component("CodeGroup",(function(){return Promise.resolve().then(t.bind(null,226))})),_r.component("CodeBlock",(function(){return Promise.resolve().then(t.bind(null,225))}));t(409),t(109),t(234);var tl={name:"ReadingProgress",data:function(){return{readingTop:0,readingHeight:1,progressStyle:null,transform:void 0,running:!1}},watch:{$readingShow:function(){this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)}},mounted:function(){this.transform=this.getTransform(),this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)},beforeDestroy:function(){this.$readingShow&&window.removeEventListener("scroll",this.base)},methods:{base:function(){this.running||(this.running=!0,requestAnimationFrame(this.getReadingBase))},getReadingBase:function(){this.readingHeight=this.getReadingHeight()-this.getScreenHeight(),this.readingTop=this.getReadingTop(),this.progressStyle=this.getProgressStyle(),this.running=!1},getReadingHeight:function(){return Math.max(document.body.scrollHeight,document.body.offsetHeight,0)},getScreenHeight:function(){return Math.max(window.innerHeight,document.documentElement.clientHeight,0)},getReadingTop:function(){return Math.max(window.pageYOffset,document.documentElement.scrollTop,0)},getTransform:function(){var n=document.createElement("div");return["transform","-webkit-transform","-moz-transform","-o-transform","-ms-transform"].find((function(e){return e in n.style}))||void 0},getProgressStyle:function(){var n=this.readingTop/this.readingHeight;switch(this.$readingShow){case"top":case"bottom":return this.transform?"".concat(this.transform,": scaleX(").concat(n,")"):"width: ".concat(100*n,"%");case"left":case"right":return this.transform?"".concat(this.transform,": scaleY(").concat(n,")"):"height: ".concat(100*n,"%");default:return null}}}},al=(t(410),Object(Rs.a)(tl,(function(){var n=this.$createElement,e=this._self._c||n;return e("ClientOnly",[this.$readingShow?e("div",{staticClass:"reading-progress",class:this.$readingShow},[e("div",{staticClass:"progress",style:this.progressStyle})]):this._e()])}),[],!1,null,"3640397f",null).exports),rl={name:"DynamicTitle",data:function(){return{originTitle:"",recoverTimeout:null,config:{showIcon:"https://symbol-node.oss-cn-shanghai.aliyuncs.com/blog/basic/favicon.ico",showText:"ヾ(≧▽≦*)o欢迎回来！",hideIcon:"https://symbol-node.oss-cn-shanghai.aliyuncs.com/blog/basic/favicon.ico",hideText:"ಥ_ಥ不要走呀！",recoverTime:2e3}}},mounted:function(){var n=this;this.originTitle=document.title,""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.addEventListener("visibilitychange",(function(){document.hidden?n.hidden():n.visible()}))},methods:{hidden:function(){""!==this.config.hideIcon&&this.getIconElm().setAttribute("href",this.config.hideIcon),document.title=this.config.hideText,clearTimeout(this.recoverTimeout)},visible:function(){var n=this;""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.title=this.config.showText+this.originTitle,this.recoverTimeout=setTimeout((function(){document.title=n.originTitle}),this.config.recoverTime)},getIconElm:function(){var n=document.querySelector("link[rel=icon]");return null===n&&((n=document.createElement("link")).setAttribute("rel","icon"),document.head.appendChild(n)),n}},watch:{$route:function(n,e){n.path!==e.path&&(this.originTitle=document.title,clearTimeout(this.recoverTimeout))}}},il=Object(Rs.a)(rl,(function(){var n=this.$createElement;return(this._self._c||n)("div")}),[],!1,null,null,null).exports,ol=t(224),sl=t.n(ol),ll=[function(n){var e=n.Vue,t=(n.options,n.router,n.siteData,n.isServer,!1);e.component(Qs.default.name,Qs.default),e.mixin({mounted:function(){t||(window.addEventListener("unload",this.saveLastReading),t=!0)},methods:{saveLastReading:function(){localStorage.setItem("lastReading",JSON.stringify({path:this.$route.path,scrollTop:document.documentElement.scrollTop,timestamp:(new Date).getTime()}))}}})},function(n){var e=n.Vue,t=(n.options,n.router,n.siteData);t.pages.map((function(n){var e=n.frontmatter,a=e.date,r=e.author;"string"==typeof a&&"Z"===a.charAt(a.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return"".concat(n.getUTCFullYear(),"-").concat(el(n.getUTCMonth()+1),"-").concat(el(n.getUTCDate())," ").concat(el(n.getUTCHours()),":").concat(el(n.getUTCMinutes()),":").concat(el(n.getUTCSeconds()))}(a)),r?n.author=r:t.themeConfig.author&&(n.author=t.themeConfig.author)})),e.mixin(nl)},{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},function(n){var e,t,a,r,i,o,s=n.router;"undefined"!=typeof window&&(e=window,t=document,a="script",r="ga",e.GoogleAnalyticsObject=r,e.ga=e.ga||function(){(e.ga.q=e.ga.q||[]).push(arguments)},e.ga.l=1*new Date,i=t.createElement(a),o=t.getElementsByTagName(a)[0],i.async=1,i.src="https://www.google-analytics.com/analytics.js",o.parentNode.insertBefore(i,o),ga("create","UA-98291551-1","auto"),ga("set","anonymizeIp",!0),s.afterEach((function(n){ga("set","page",s.app.$withBase(n.fullPath)),ga("send","pageview")})))},function(n){n.router;"undefined"!=typeof window&&function(){var n=document.createElement("script"),e=window.location.protocol.split(":")[0];n.src="https"===e?"https://zz.bdstatic.com/linksubmit/push.js":"http://push.zhanzhang.baidu.com/push.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)}()},function(n){var e=n.router;"undefined"!=typeof window&&(window._hmt=window._hmt||[],function(){var n=document.createElement("script");n.src="https://hm.baidu.com/hm.js?efdb43e9c4335da1fbabf3840b82c3ed";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)}(),e.afterEach((function(n){_hmt.push(["_trackPageview",n.fullPath])})))},function(n){var e=n.Vue;e.component(al.name,al),e.mixin({computed:{$readingShow:function(){return this.$page.frontmatter.readingShow}}})},function(n){n.Vue.component("DynamicTitle",il)},function(n){return n.Vue.use(sl.a)}],cl=["BlockToggle","GlobalTip","Aplayer","ReadingProgress","DynamicTitle"];t(145),t(64),t(66);t(117),t(217);function dl(n,e){return(dl=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,e){return n.__proto__=e,n})(n,e)}t(219),t(220);function ul(n){return(ul=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function pl(n,e){if(e&&("object"===Object(Co.a)(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function hl(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,a=ul(n);if(e){var r=ul(this).constructor;t=Reflect.construct(a,arguments,r)}else t=a.apply(this,arguments);return pl(this,t)}}var ml=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),e&&dl(n,e)}(t,n);var e=hl(t);function t(){return cs(this,t),e.apply(this,arguments)}return us(t)}(function(){function n(){cs(this,n),this.store=new _r({data:{state:{}}})}return us(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){_r.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(ml.prototype,{getPageAsyncComponent:No,getLayoutAsyncComponent:Ho,getAsyncComponent:Ro,getVueComponent:Vo});var gl={install:function(n){var e=new ml;n.$vuepress=e,n.prototype.$vuepress=e}};function fl(n){n.beforeEach((function(e,t,a){if(vl(n,e.path))a();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var r=e.path.replace(/\/$/,"")+".html";vl(n,r)?a(r):a()}else a();else{var i=e.path+"/",o=e.path+".html";vl(n,o)?a(o):vl(n,i)?a(i):a()}}))}function vl(n,e){return n.options.routes.filter((function(n){return n.path.toLowerCase()===e.toLowerCase()})).length>0}var bl={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return Go("pageKey",e),_r.component(e)||_r.component(e,No(e)),_r.component(e)?n(e):n("")}},El={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,a=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},a()[t.slotKey])}},xl={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},yl=(t(411),t(412),Object(Rs.a)(xl,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function wl(){return(wl=Object(r.a)(Object(a.a)().mark((function n(e){var t,r,i,o;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Gs.routerBase||Gs.base,fl(r=new Bo({base:t,mode:"history",fallback:!1,routes:Ws,scrollBehavior:function(n,e,t){return t||(n.hash?!_r.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),i={},n.prev=4,n.next=7,Promise.all(ll.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:_r,options:i,router:r,siteData:Gs,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return o=new _r(Object.assign(i,{router:r,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},cl.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:o,router:r});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}_r.config.productionTip=!1,_r.use(Bo),_r.use(gl),_r.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:_r;To(e),t.$vuepress.$set("siteData",e);var a=n(t.$vuepress.$get("siteData")),r=new a,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),o={};return Object.keys(i).reduce((function(n,e){return e.startsWith("$")&&(n[e]=i[e].get),n}),o),{computed:o}}((function(n){return function(){function e(){cs(this,e)}return us(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,a=void 0===t?{}:t;for(var r in a)"/"===r?e=a[r]:0===this.$page.path.indexOf(r)&&(n=a[r]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,a=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?a?a+" | "+t:t:a||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var a=n[t];if(a.path.toLowerCase()===e.toLowerCase())return a}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),Gs)),_r.component("Content",bl),_r.component("ContentSlotsDistributor",El),_r.component("OutboundLink",yl),_r.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,a=e.children;if(t._isMounted)return a;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),_r.component("Layout",Ho("Layout")),_r.component("NotFound",Ho("NotFound")),_r.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.8.0",hash:"1204831"},function(n){return wl.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);