(window.webpackJsonp=window.webpackJsonp||[]).push([[254],{817:function(n,t,a){"use strict";a.r(t);var e=a(15),s=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("传参\n特性：无法通过方法中的实参来传参")]),n._v(" "),a("p",[n._v('解决方法：\n（1）传递参数。通过自定义属性\n语法：data-参数名="'+n._s(n.参数)+'"')]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('  例：\n    <button bindtap="handletap" data-operation="'+n._s(1)+'">+</button>\n\n（2）接收参数。获取自定义属性\n  语法：e.currentTarget.dataset.参数名\n\n  例：\n    handleInput(e) { // e：当前事件绑定的元素对象\n      const operation = e.currentTarget.dataset.operation;\n    }\n')])])]),a("p",[n._v("在方法中 获取 data 值\nthis.data.变量名")]),n._v(" "),a("p",[n._v("在方法中 修改 data 值\n特性：无法直接通过 this 来修改 data 值")]),n._v(" "),a("p",[n._v("解决方法：\n（1）通过 this.setData 方法\n语法：this.setData({ 数据名: 值 })")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("  例：\n    this.setData({\n      num: this.data.num + 1\n    })\n")])])]),a("p",[n._v("事件对象\n说明：事件函数触发时会返回一个事件对象")]),n._v(" "),a("p",[n._v("属性：\ntype：事件类型")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('timeStamp：页面打开到触发事件所经过的毫秒数\n\ntarget、currentTarget\n  作用：\n    target：触发该事件的源头组件（常用）\n    currentTarget：当前事件所绑定的组件\n\n  例：\n    点击内部的按钮时，点击事件以冒泡的方式向外扩散，也会触发外层 view 的 tap 事件处理函数。此时，对于外层的 view 来说：\n      - target：内部按钮组件\n      - currentTarget：当前 view 组件\n\n    outerHandler(e) {\n      console.log(e.target)\n      console.log(e.currentTarget)\n    }\n\n    <view bindtap="outerHandler">\n      <button type="primary">按钮</button>\n    </view>\n\ndetail：额外的信息（常用）\n  - value\n    作用：获取文本框最新的值\n\n    例：\n      <input bindinput="inputHandler"></input>\n\n      inputHandler(e) {\n        console.log(e.detail.value)\n      }\n\n\ntouches：触摸事件，当前停留在屏幕中的触摸点信息的数组\n\nchangedTouches：触摸事件，当前变化的触摸点信息的数组\n')])])]),a("p",[n._v("bindinput 事件 / bind:input 事件\n作用：双向数据绑定")]),n._v(" "),a("p",[n._v("触发：input 的值发送变化时触发")]),n._v(" "),a("p",[n._v('使用步骤：\n（1）绑定 bindinput 事件\n<input type="text" bindinput="handleInput />')]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("（2）定义方法\n  handleInput(e) {\n    this.setData({\n      msg: e.detail.value\n    })\n  }\n")])])]),a("p",[n._v("bindtap 事件 / bind:tap 事件\n触发：点击时触发\n特性：取代 click 事件")]),n._v(" "),a("p",[n._v("使用步骤：\n（1）绑定 bindtap 事件\n"),a("button",{attrs:{bindtap:"add"}},[n._v("点我触发")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("（2）定义方法\n  add() {\n    console.log('触发！！！')\n  }\n")])])]),a("p",[n._v("bindchange 事件 / bind:change 事件\n触发：单选框、复选框 状态被改变时触发")]),n._v(" "),a("p",[n._v("应用场景：单选框、复选框")]),n._v(" "),a("p",[n._v("使用步骤：\n（1）导入结构\n"),a("radio-group",{attrs:{bindchange:"handleChange"}},[a("radio",{attrs:{value:"male"}},[n._v("男")]),n._v(" "),a("radio",{attrs:{value:"female"}},[n._v("女")])],1)],1),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('（2）定义 数据、方法\n  Page({\n    data: {\n      gender: ""\n    },\n    handleChange(e) {\n      let gender = e.detail.value;\n      this.setData({\n        gender\n      })\n    }\n  })')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);