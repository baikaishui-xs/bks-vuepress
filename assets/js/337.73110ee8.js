(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{580:function(t,n,e){"use strict";e.r(n);var o={name:"MyCounter",emits:["countChange"],data:function(){return{count:0}},methods:{add:function(){this.count++,this.$emit("countChange",this.count)}}},v=e(15),u=Object(v.a)(o,(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("作用：让组件的使用者可以监听到组件内状态的变化")]),t._v(" "),e("p",[t._v("需求：当 count 的值发送变化时，触发自定义事件，把最新的值发送给组件的使用者")]),t._v(" "),e("p",[t._v("特性：可以通过自定义事件的第二个参数向外 传参")]),t._v(" "),e("p",[t._v("使用步骤：")]),t._v(" "),e("p",[t._v("封装 组件阶段：\n（1）声明 自定义事件\n（2）触发 自定义事件")]),t._v(" "),e("p",[t._v("使用 组件阶段\n（3）监听 自定义事件")]),t._v(" "),e("p",[t._v("-- App.vue")]),t._v(" "),[e("div",[e("h1",[t._v("app 根组件")]),t._v(" "),e("hr"),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('  // （3）监听 自定义事件\n  <my-counter @countChange="getCount"></my-counter>\n\n</div>\n')])])])])],t._v(" "),e("p",[t._v("-- Counter.vue")]),t._v(" "),[e("div",[e("p",[t._v("count 的值是："+t._s(t.count))]),t._v(" "),e("button",{on:{click:t.add}},[t._v("+1")])])]],2)}),[],!1,null,null,null);n.default=u.exports}}]);