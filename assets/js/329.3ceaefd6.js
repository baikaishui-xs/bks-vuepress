(window.webpackJsonp=window.webpackJsonp||[]).push([[329],{892:function(t,n,e){"use strict";e.r(n);var l=e(15),i=Object(l.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v(".thin {\n  font-width: 200;\n}\n.italic {\n  font-style: italic;\n}\n.delete {\n  text-decoration: line-through;\n}\n")])])]),e("p",[t._v("动态添加 class\n（1）三元表达式：\n应用场景：动态添加 两个 样式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('    <h3 class="thin" :class="isItalic ? \'italic\' : \'\'">MyDeep 组件</h3>\n    <button @click="isItalic=!isItalic">Toggle Italic</button>\n\n    data() {\n      return { isItalic: true }\n    }\n\n（2）数组\n  应用场景：动态添加 多个 样式\n  缺点：模板结构臃肿\n  解决方法：使用对象形式\n\n    <h3 class="thin" :class="[isItalic ? \'italic\' : \'\', isDelete ? \'delete\' : \'\']">\n      MyDeep 组件\n    </h3>\n\n    <button @click="isItalic=!isItalic">Toogle Italic</button>\n    <button @click="isDelete=!isDelete">Toogle Delete</button>\n\n    data() {\n      return {\n        isItalic: true,\n        isDelete: false,\n      }\n    }\n\n（3）对象\n  应用场景：动态添加 多个 样式\n\n    <h3 class="thin" :class="classObj">MyDeep 组件</h3>\n\n    <button @click="classObj.italic = !classObj.italic">Toggle Italic</button>\n    <button @click="classObj.delete = !classObj.delete">Toggle Delete</button>\n\n    data() {\n      return {\n        classObj: {\n          italic: true,\n          delete: false,\n        }\n      }\n    }\n')])])]),e("p",[t._v("动态添加 style 内联样式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("<div :style=\"{color: active, fontSize: fsize + 'px', 'background-color': bgcolor}\">黑马程序员</div>\n\n<button @click=\"fsize += 1\">字号 +1</button>\n<button @click=\"fsize -= 1\">字号 -1</button>\n\ndata() {\n  return {\n    active: 'red',\n    fsize: 30,\n    bgcolor: 'pink',\n  }\n}")])])])])}),[],!1,null,null,null);n.default=i.exports}}]);