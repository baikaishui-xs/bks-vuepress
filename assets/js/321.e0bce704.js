(window.webpackJsonp=window.webpackJsonp||[]).push([[321],{884:function(n,e,o){"use strict";o.r(e);var t=o(15),s=Object(t.a)({},(function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[o("p",[n._v("// 知识点：koa2")]),n._v(" "),o("p",[n._v("// \b概念：基于 node.js 平台的 web 开发框架")]),n._v(" "),o("p",[n._v("// 特性：\n//   1、支持 async / await 语法糖\n//   2、支持 洋葱模型中间件（浏览器发送请求，在到服务器前会被中间件拦截，如果设置了三层中间件，请求会先进入到第一层中间件，然后第二层，第三层，然后开始往外走，第二层，第一层，然后将数据响应会浏览器，就像洋葱一样，一层层的）")]),n._v(" "),o("p",[n._v("// 作用：解决 Express 使用回调函数处理异步任务导致回调地狱的问题")]),n._v(" "),o("p",[n._v("// 解决方法：async / await（需要 Node 在 v7.6.0 版本以上）")]),n._v(" "),o("p",[n._v("// 使用步骤：\n// （1）检测 Node 版本是否在 v7.6.0 版本以上\n// （2）npm init -y\n// （3）npm install koa\n// （4）创建 koa 实例对象（ -- app.js）\n// （5）定义中间件\n// （6）监听端口\n// （7）启动服务器（node app.js）")]),n._v(" "),o("p",[n._v("const Koa = require('koa')\nconst app = new Koa()  // （4）创建 koa 实例对象")]),n._v(" "),o("p",[n._v("// ctx：上下文（web 容器）  next：执行下一个中间件\n// ctx.request：获取 请求对象\n// ctx.response：获取 响应对象\n// ctx.response.body：响应数据")]),n._v(" "),o("p",[n._v("// 疑问：为什么会响应两次相同的数据？\n// 解：第一次是输入地址时发起的请求，第二次是请求 ico 图标发起的请求")]),n._v(" "),o("p",[n._v("app.use((ctx, next) => {  // （5）定义中间件\nctx.response.body = 'hello world'\nconsole.log('第一层往里走');\nnext();\nconsole.log('第一层往外走');\n})")]),n._v(" "),o("p",[n._v("app.use( async (ctx, next) => {\nconsole.log('第二层往里走');\nnext();\nconsole.log('第二层往外走');\n})")]),n._v(" "),o("p",[n._v("app.use((ctx, next) => {\nconsole.log('第三层');\n})")]),n._v(" "),o("p",[n._v("// -----------------------------------\n// 特性：使用 return 后会从第一个中间件开始往外走")]),n._v(" "),o("p",[n._v("// app.use((ctx, next) => {  // （5）定义中间件\n//   ctx.response.body = 'hello world'\n//   console.log('第一层往里走');\n//   next();\n//   console.log('第一层往外走');\n// })")]),n._v(" "),o("p",[n._v("// app.use( async (ctx, next) => {\n//   console.log('第二层往里走');\n//   const ret = await next();  // next 方法返回的是一个 promise 对象，使用异步函数就可以拿到返回的值了\n//   next();\n//   console.log('第二层往外走');\n//   console.log(ret);\n// })")]),n._v(" "),o("p",[n._v("// app.use((ctx, next) => {\n//   console.log('第三层');\n//   return 'i love the dog'\n// })")]),n._v(" "),o("p",[n._v("app.listen(3000)  // （6）监听端口")])])}),[],!1,null,null,null);e.default=s.exports}}]);