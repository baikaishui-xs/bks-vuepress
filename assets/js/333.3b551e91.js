(window.webpackJsonp=window.webpackJsonp||[]).push([[333],{896:function(s,e,t){"use strict";t.r(e);var n=t(15),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("vue 项目运行的地址：http://localhost:8080/\nAPI 接口运行的地址：https://www.escook.cn/api/users")]),s._v(" "),t("p",[s._v("以上因为 协议、IP地址、端口号 的不同，当项目请求接口的时候，会存在跨域问题，当 API 接口没有开启 CORS 跨域资源共享，因此默认情况下，这个接口无法请求成功")]),s._v(" "),t("p",[s._v("方法一：开启 CORS 跨域资源共享\n缺点：需要叫后端人员开启跨域资源共享，如果后端人员没时间，则项目无法正常开发")]),s._v(" "),t("p",[s._v("方法二：通过 proxy 代理接口\n特性：\n1、通过 vue-cli 创建的项目在遇到接口跨域问题时，可以通过代理的方式来解决\n2、代理接口不受跨域限制\n3、proxy 代理接口，仅在开发调试阶段生效，项目上线发布时，依旧需要 API 接口服务器开启 CORS 跨域资源共享")]),s._v(" "),t("p",[s._v("原理：\n（1）把 axios 的请求根路径修改为 vue 项目的运行地址（接口请求不再跨域）\n（2）vue 项目发现请求的接口不存在，把请求转交给 proxy 代理\n（3）代理把请求根路径替换为 devServer.proxy 属性的值，发起真正的数据请求\n（4）代理把请求到的数据，转发给 axios")]),s._v(" "),t("p",[s._v("例子：\n-- App.vue")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v('<button type="success" @click="getUsers">获取用户列表</button>\n\nmethods: {\n  async getUsers() {\n    const {data: res} = await this.$http.get(\'/api/users\')\n    console.log(res)\n  }\n}\n')])])]),t("p",[s._v("-- main.js")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("// axios.defaults.baseURL = 'https://www.escook.cn'\naxios.defaults.baseURL = 'http://localhost:8080'  // （1）把 axios 的请求根路径修改为 vue 项目的运行地址（接口请求不再跨域）\n")])])]),t("p",[s._v("-- vue.config.js // （2）在项目根目录下创建 vue-config.js，并添加以下代码")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("module.exports = {\n  devServer: {\n    proxy: 'https://www.escook.cn',  // （3）将没有匹配到静态文件的请求，代理到指定请求地址中\n  }\n}")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);